# compiler: R8
# compiler_version: 1.5.69
# min_api: 18
# pg_map_id: 84b10d8
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    20:21:void <init>() -> <init>
    32:36:android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    93:68:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    101:102:void <init>(android.os.IBinder) -> <init>
    106:106:android.os.IBinder asBinder() -> asBinder
    141:150:void cancel(java.lang.String,int,java.lang.String) -> cancel
    158:165:void cancelAll(java.lang.String) -> cancelAll
    117:133:void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.os.IResultReceiver$Stub:
    15:16:void <init>() -> <init>
    27:31:android.support.v4.os.IResultReceiver asInterface(android.os.IBinder) -> asInterface
    64:59:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.os.IResultReceiver$Stub$Proxy:
    72:73:void <init>(android.os.IBinder) -> <init>
    77:77:android.os.IBinder asBinder() -> asBinder
android.support.v4.os.ResultReceiver -> android.support.v4.os.ResultReceiver:
    144:144:void <clinit>() -> <clinit>
    138:141:void <init>(android.os.Parcel) -> <init>
    130:135:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.os.ResultReceiver$1 -> android.support.v4.os.ResultReceiver$1:
    145:145:void <init>() -> <init>
    145:145:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    148:148:android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> createFromParcel
    145:145:java.lang.Object[] newArray(int) -> newArray
    152:152:android.support.v4.os.ResultReceiver[] newArray(int) -> newArray
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.os.ResultReceiver$MyResultReceiver:
    67:67:void <init>(android.support.v4.os.ResultReceiver) -> <init>
    70:73:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.os.ResultReceiver$MyRunnable:
    56:58:void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
    63:63:void run() -> run
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
    84:88:void <init>() -> <init>
    50:50:void access$001(androidx.activity.ComponentActivity) -> access$001
    241:241:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    297:297:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    303:303:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    257:258:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    286:286:void onBackPressed() -> onBackPressed
    149:153:void onCreate(android.os.Bundle) -> onCreate
    176:195:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    160:165:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$1:
    69:69:void <init>(androidx.activity.ComponentActivity) -> <init>
    72:72:void run() -> run
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$2:
    94:94:void <init>(androidx.activity.ComponentActivity) -> <init>
    98:102:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
    108:108:void <init>(androidx.activity.ComponentActivity) -> <init>
    112:114:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$NonConfigurationInstances:
    56:56:void <init>() -> <init>
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
    45:46:void <init>(android.app.Activity) -> <init>
    101:108:void initializeReflectiveFields() -> initializeReflectiveFields
    51:91:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedCallback -> androidx.activity.OnBackPressedCallback:
    54:55:void <init>(boolean) -> <init>
    103:103:void addCancellable(androidx.activity.Cancellable) -> addCancellable
    82:82:boolean isEnabled() -> isEnabled
    91:92:void remove() -> remove
    107:107:void removeCancellable(androidx.activity.Cancellable) -> removeCancellable
    71:71:void setEnabled(boolean) -> setEnabled
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
    65:65:void <init>() -> <init>
    75:76:void <init>(java.lang.Runnable) -> <init>
    145:150:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback) -> addCallback
    112:114:androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback) -> addCancellableCallback
    184:194:void onBackPressed() -> onBackPressed
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
    220:223:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback) -> <init>
    243:247:void cancel() -> cancel
    229:237:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable:
    200:201:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback) -> <init>
    206:207:void cancel() -> cancel
androidx.activity.R -> androidx.activity.R:
    10:10:void <init>() -> <init>
androidx.activity.R$attr -> androidx.activity.R$attr:
    13:13:void <init>() -> <init>
androidx.activity.R$color -> androidx.activity.R$color:
    29:29:void <init>() -> <init>
androidx.activity.R$dimen -> androidx.activity.R$dimen:
    37:37:void <init>() -> <init>
androidx.activity.R$drawable -> androidx.activity.R$drawable:
    63:63:void <init>() -> <init>
androidx.activity.R$id -> androidx.activity.R$id:
    79:79:void <init>() -> <init>
androidx.activity.R$integer -> androidx.activity.R$integer:
    150:150:void <init>() -> <init>
androidx.activity.R$layout -> androidx.activity.R$layout:
    155:155:void <init>() -> <init>
androidx.activity.R$string -> androidx.activity.R$string:
    166:166:void <init>() -> <init>
androidx.activity.R$style -> androidx.activity.R$style:
    171:171:void <init>() -> <init>
androidx.activity.R$styleable -> androidx.activity.R$styleable:
    184:219:void <clinit>() -> <clinit>
    182:182:void <init>() -> <init>
androidx.annotation.InspectableProperty$ValueType -> androidx.annotation.InspectableProperty$ValueType:
    152:148:void <clinit>() -> <clinit>
    148:148:void <init>(java.lang.String,int) -> <init>
    148:148:androidx.annotation.InspectableProperty$ValueType valueOf(java.lang.String) -> valueOf
    148:148:androidx.annotation.InspectableProperty$ValueType[] values() -> values
androidx.annotation.RestrictTo$Scope -> androidx.annotation.RestrictTo$Scope:
    63:58:void <clinit>() -> <clinit>
    58:58:void <init>(java.lang.String,int) -> <init>
    58:58:androidx.annotation.RestrictTo$Scope valueOf(java.lang.String) -> valueOf
    58:58:androidx.annotation.RestrictTo$Scope[] values() -> values
androidx.appcompat.R -> androidx.appcompat.R:
    10:10:void <init>() -> <init>
androidx.appcompat.R$anim -> androidx.appcompat.R$anim:
    13:13:void <init>() -> <init>
androidx.appcompat.R$attr -> androidx.appcompat.R$attr:
    41:41:void <init>() -> <init>
androidx.appcompat.R$bool -> androidx.appcompat.R$bool:
    323:323:void <init>() -> <init>
androidx.appcompat.R$color -> androidx.appcompat.R$color:
    330:330:void <init>() -> <init>
androidx.appcompat.R$dimen -> androidx.appcompat.R$dimen:
    418:418:void <init>() -> <init>
androidx.appcompat.R$drawable -> androidx.appcompat.R$drawable:
    539:539:void <init>() -> <init>
androidx.appcompat.R$id -> androidx.appcompat.R$id:
    651:651:void <init>() -> <init>
androidx.appcompat.R$integer -> androidx.appcompat.R$integer:
    797:797:void <init>() -> <init>
androidx.appcompat.R$interpolator -> androidx.appcompat.R$interpolator:
    806:806:void <init>() -> <init>
androidx.appcompat.R$layout -> androidx.appcompat.R$layout:
    817:817:void <init>() -> <init>
androidx.appcompat.R$string -> androidx.appcompat.R$string:
    860:860:void <init>() -> <init>
androidx.appcompat.R$style -> androidx.appcompat.R$style:
    893:893:void <init>() -> <init>
androidx.appcompat.R$styleable -> androidx.appcompat.R$styleable:
    1248:1711:void <clinit>() -> <clinit>
    1246:1246:void <init>() -> <init>
androidx.appcompat.app.ActionBar -> androidx.appcompat.app.ActionBar:
    92:92:void <init>() -> <init>
androidx.appcompat.app.ActionBar$LayoutParams -> androidx.appcompat.app.ActionBar$LayoutParams:
    1377:1381:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1385:1386:void <init>(int,int) -> <init>
    1399:1401:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    1405:1374:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.app.ActionBar$Tab -> androidx.appcompat.app.ActionBar$Tab:
    1171:1171:void <init>() -> <init>
androidx.appcompat.app.ActionBarDrawerToggle -> androidx.appcompat.app.ActionBarDrawerToggle:
    444:446:void onDrawerClosed(android.view.View) -> onDrawerClosed
    429:431:void onDrawerOpened(android.view.View) -> onDrawerOpened
    413:416:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    499:499:void setActionBarDescription(int) -> setActionBarDescription
    508:512:void setPosition(float) -> setPosition
    282:287:void toggle() -> toggle
androidx.appcompat.app.ActionBarDrawerToggle$1 -> androidx.appcompat.app.ActionBarDrawerToggle$1:
    201:204:void onClick(android.view.View) -> onClick
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate -> androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate:
    570:576:void setActionBarDescription(int) -> setActionBarDescription
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate -> androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate:
    606:608:void setActionBarDescription(int) -> setActionBarDescription
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb -> androidx.appcompat.app.ActionBarDrawerToggleHoneycomb:
    138:138:void <init>() -> <init>
    71:83:androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarDescription(androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo,android.app.Activity,int) -> setActionBarDescription
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    101:133:void <init>(android.app.Activity) -> <init>
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
    182:205:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window) -> <init>
    209:222:boolean canTextInput(android.view.View) -> canTextInput
    829:832:void centerButton(android.widget.Button) -> centerButton
    398:400:int getIconAttributeResId(int) -> getIconAttributeResId
    404:404:android.widget.ListView getListView() -> getListView
    231:233:void installContent() -> installContent
    750:753:void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> manageScrollIndicators
    422:422:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    427:427:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    443:463:android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> resolvePanel
    237:243:int selectContentView() -> selectContentView
    324:344:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> setButton
    257:257:void setCustomTitle(android.view.View) -> setCustomTitle
    359:367:void setIcon(int) -> setIcon
    378:386:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    261:263:void setMessage(java.lang.CharSequence) -> setMessage
    560:631:void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> setScrollIndicators
    247:249:void setTitle(java.lang.CharSequence) -> setTitle
    271:273:void setView(int) -> setView
    280:282:void setView(android.view.View) -> setView
    290:296:void setView(android.view.View,int,int,int,int) -> setView
    763:824:void setupButtons(android.view.ViewGroup) -> setupButtons
    719:742:void setupContent(android.view.ViewGroup) -> setupContent
    640:668:void setupCustomContent(android.view.ViewGroup) -> setupCustomContent
    673:713:void setupTitle(android.view.ViewGroup) -> setupTitle
    467:552:void setupView() -> setupView
    177:179:boolean shouldCenterSingleButton(android.content.Context) -> shouldCenterSingleButton
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$1:
    126:126:void <init>(androidx.appcompat.app.AlertController) -> <init>
    130:146:void onClick(android.view.View) -> onClick
androidx.appcompat.app.AlertController$2 -> androidx.appcompat.app.AlertController$2:
    591:591:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    596:596:void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int) -> onScrollChange
androidx.appcompat.app.AlertController$3 -> androidx.appcompat.app.AlertController$3:
    600:600:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    603:603:void run() -> run
androidx.appcompat.app.AlertController$4 -> androidx.appcompat.app.AlertController$4:
    608:608:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    615:615:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
androidx.appcompat.app.AlertController$5 -> androidx.appcompat.app.AlertController$5:
    619:619:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    622:622:void run() -> run
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$AlertParams:
    924:927:void <init>(android.content.Context) -> <init>
    931:975:void apply(androidx.appcompat.app.AlertController) -> apply
    988:1097:void createListView(androidx.appcompat.app.AlertController) -> createListView
androidx.appcompat.app.AlertController$AlertParams$1 -> androidx.appcompat.app.AlertController$AlertParams$1:
    995:995:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView) -> <init>
    998:1002:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.app.AlertController$AlertParams$2 -> androidx.appcompat.app.AlertController$AlertParams$2:
    1009:1016:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1021:1024:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    1030:1030:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.appcompat.app.AlertController$AlertParams$3 -> androidx.appcompat.app.AlertController$AlertParams$3:
    1065:1065:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController) -> <init>
    1068:1070:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$4 -> androidx.appcompat.app.AlertController$AlertParams$4:
    1075:1075:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1078:1081:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$ButtonHandler:
    156:157:void <init>(android.content.DialogInterface) -> <init>
    162:167:void handleMessage(android.os.Message) -> handleMessage
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$CheckedItemAdapter:
    1104:1104:void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
    840:840:void <init>(android.content.Context) -> <init>
    844:850:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    856:860:void setHasDecor(boolean,boolean) -> setHasDecor
androidx.appcompat.app.AlertDialog -> androidx.appcompat.app.AlertDialog:
    98:99:void <init>(android.content.Context,int) -> <init>
    140:140:android.widget.ListView getListView() -> getListView
    278:279:void onCreate(android.os.Bundle) -> onCreate
    284:287:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    292:295:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    114:116:int resolveDialogTheme(android.content.Context,int) -> resolveDialogTheme
    145:146:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.app.AlertDialog$Builder -> androidx.appcompat.app.AlertDialog$Builder:
    313:313:void <init>(android.content.Context) -> <init>
    342:345:void <init>(android.content.Context,int) -> <init>
    983:992:androidx.appcompat.app.AlertDialog create() -> create
    358:358:android.content.Context getContext() -> getContext
    659:660:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    398:398:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    445:445:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    620:620:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    853:856:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    377:377:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.app.AppCompatActivity -> androidx.appcompat.app.AppCompatActivity:
    77:77:void <init>() -> <init>
    176:176:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    97:98:void attachBaseContext(android.content.Context) -> attachBaseContext
    609:612:void closeOptionsMenu() -> closeOptionsMenu
    552:558:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    214:214:android.view.View findViewById(int) -> findViewById
    542:545:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    156:156:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    563:566:android.content.res.Resources getResources() -> getResources
    130:130:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    454:454:android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    268:268:void invalidateOptionsMenu() -> invalidateOptionsMenu
    181:190:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    493:493:void onContentChanged() -> onContentChanged
    103:106:void onCreate(android.os.Bundle) -> onCreate
    371:371:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onCreateSupportNavigateUpTaskStack
    233:234:void onDestroy() -> onDestroy
    592:595:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    219:226:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    517:517:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    528:528:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    117:118:void onPostCreate(android.os.Bundle) -> onPostCreate
    195:196:void onPostResume() -> onPostResume
    533:534:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    201:202:void onStart() -> onStart
    207:208:void onStop() -> onStop
    416:435:boolean onSupportNavigateUp() -> onSupportNavigateUp
    239:240:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    600:603:void openOptionsMenu() -> openOptionsMenu
    575:582:boolean performMenuItemShortcut(int,android.view.KeyEvent) -> performMenuItemShortcut
    161:161:void setContentView(int) -> setContentView
    166:166:void setContentView(android.view.View) -> setContentView
    171:171:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    111:112:void setTheme(int) -> setTheme
    263:263:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    487:487:void supportNavigateUpTo(android.content.Intent) -> supportNavigateUpTo
    471:471:boolean supportShouldUpRecreateTask(android.content.Intent) -> supportShouldUpRecreateTask
androidx.appcompat.app.AppCompatDelegate -> androidx.appcompat.app.AppCompatDelegate:
    165:167:void <clinit>() -> <clinit>
    262:262:void <init>() -> <init>
    221:221:androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> create
    232:232:androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> create
    571:571:int getDefaultNightMode() -> getDefaultNightMode
    622:628:void markStarted(androidx.appcompat.app.AppCompatDelegate) -> markStarted
    632:635:void markStopped(androidx.appcompat.app.AppCompatDelegate) -> markStopped
    639:649:void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate) -> removeDelegateFromActives
androidx.appcompat.app.AppCompatDelegateImpl -> androidx.appcompat.app.AppCompatDelegateImpl:
    130:183:void <clinit>() -> <clinit>
    278:278:void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    282:282:void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> <init>
    294:328:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object) -> <init>
    570:573:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    2159:2159:boolean applyDayNight() -> applyDayNight
    2163:2182:boolean applyDayNight(boolean) -> applyDayNight
    873:906:void applyFixedSizeWindow() -> applyFixedSizeWindow
    334:335:void attachBaseContext(android.content.Context) -> attachBaseContext
    631:632:void attachToWindow(android.view.Window) -> attachToWindow
    2232:2232:int calculateNightMode() -> calculateNightMode
    1918:1937:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu) -> callOnPanelClosed
    1800:1810:void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder) -> checkCloseActionMenu
    606:610:void cleanupAutoManagers() -> cleanupAutoManagers
    1814:1814:void closePanel(int) -> closePanel
    1818:1845:void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> closePanel
    692:696:android.view.ViewGroup createSubDecor() -> createSubDecor
    1375:1407:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    2133:2153:void dismissPopups() -> dismissPopups
    1307:1325:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2005:2026:void doInvalidatePanelMenu(int) -> doInvalidatePanelMenu
    1246:1247:void endOnGoingFadeAnimation() -> endOnGoingFadeAnimation
    658:686:void ensureSubDecor() -> ensureSubDecor
    622:626:void ensureWindow() -> ensureWindow
    1942:1946:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> findMenuPanel
    479:480:android.view.View findViewById(int) -> findViewById
    453:459:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    2398:2401:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager() -> getAutoBatteryNightModeManager
    2390:2394:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager() -> getAutoTimeNightModeManager
    2198:2198:int getLocalNightMode() -> getLocalNightMode
    467:472:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1955:1965:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> getPanelState
    383:384:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    992:996:java.lang.CharSequence getTitle() -> getTitle
    392:392:android.view.Window$Callback getWindowCallback() -> getWindowCallback
    396:408:void initWindowDecorActionBar() -> initWindowDecorActionBar
    1675:1692:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelContent
    1581:1583:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelDecor
    1632:1669:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelMenu
    1441:1446:void installViewFactory() -> installViewFactory
    1071:1074:void invalidateOptionsMenu() -> invalidateOptionsMenu
    1996:2000:void invalidatePanelMenu(int) -> invalidatePanelMenu
    2405:2427:boolean isActivityManifestHandlingUiMode() -> isActivityManifestHandlingUiMode
    1242:1242:boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    2220:2218:int mapNightMode(int) -> mapNightMode
    1253:1260:boolean onBackPressed() -> onBackPressed
    487:501:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    342:370:void onCreate(android.os.Bundle) -> onCreate
    1457:1457:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1465:1465:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    587:601:void onDestroy() -> onDestroy
    1358:1366:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1850:1853:boolean onKeyDownPanel(int,android.view.KeyEvent) -> onKeyDownPanel
    1270:1296:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1331:1347:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1861:1907:boolean onKeyUpPanel(int,android.view.KeyEvent) -> onKeyUpPanel
    1026:1030:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1038:1038:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1017:1019:void onMenuOpened(int) -> onMenuOpened
    1001:1010:void onPanelClosed(int) -> onPanelClosed
    376:376:void onPostCreate(android.os.Bundle) -> onPostCreate
    535:537:void onPostResume() -> onPostResume
    578:580:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    506:512:void onStart() -> onStart
    517:529:void onStop() -> onStop
    1486:1577:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> openPanel
    388:388:androidx.appcompat.app.ActionBar peekSupportActionBar() -> peekSupportActionBar
    1972:1988:boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> performPanelShortcut
    1696:1794:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> preparePanel
    1588:1628:void reopenMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> reopenMenu
    911:944:boolean requestWindowFeature(int) -> requestWindowFeature
    2116:2120:int sanitizeWindowFeatureId(int) -> sanitizeWindowFeatureId
    543:547:void setContentView(android.view.View) -> setContentView
    552:556:void setContentView(int) -> setContentView
    561:565:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    616:616:void setTheme(int) -> setTheme
    979:986:void setTitle(java.lang.CharSequence) -> setTitle
    1232:1232:boolean shouldAnimateActionModeView() -> shouldAnimateActionModeView
    1419:1435:boolean shouldInheritContext(android.view.ViewParent) -> shouldInheritContext
    1047:1044:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    1078:1226:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    2108:2109:void throwFeatureRequestIfSubDecorInstalled() -> throwFeatureRequestIfSubDecorInstalled
    1470:1476:androidx.appcompat.app.AppCompatActivity tryUnwrapContext() -> tryUnwrapContext
    2247:2331:boolean updateForNightMode(int,boolean) -> updateForNightMode
    2341:2378:void updateResourcesConfigurationForNightMode(int,boolean) -> updateResourcesConfigurationForNightMode
    2040:2101:int updateStatusGuard(int) -> updateStatusGuard
androidx.appcompat.app.AppCompatDelegateImpl$1 -> androidx.appcompat.app.AppCompatDelegateImpl$1:
    158:158:void <init>(java.lang.Thread$UncaughtExceptionHandler) -> <init>
    174:177:boolean shouldWrapException(java.lang.Throwable) -> shouldWrapException
    161:169:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
androidx.appcompat.app.AppCompatDelegateImpl$2 -> androidx.appcompat.app.AppCompatDelegateImpl$2:
    256:256:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    259:266:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$3 -> androidx.appcompat.app.AppCompatDelegateImpl$3:
    780:780:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    784:796:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.appcompat.app.AppCompatDelegateImpl$4 -> androidx.appcompat.app.AppCompatDelegateImpl$4:
    802:802:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    805:805:void onFitSystemWindows(android.graphics.Rect) -> onFitSystemWindows
androidx.appcompat.app.AppCompatDelegateImpl$5 -> androidx.appcompat.app.AppCompatDelegateImpl$5:
    857:857:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    863:863:void onDetachedFromWindow() -> onDetachedFromWindow
androidx.appcompat.app.AppCompatDelegateImpl$6 -> androidx.appcompat.app.AppCompatDelegateImpl$6:
    1133:1133:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1136:1159:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> androidx.appcompat.app.AppCompatDelegateImpl$6$1:
    1144:1144:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$6) -> <init>
    1152:1154:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1147:1147:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$7 -> androidx.appcompat.app.AppCompatDelegateImpl$7:
    1187:1187:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1200:1202:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1190:1194:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl -> androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl:
    3099:3101:void setActionBarDescription(int) -> setActionBarDescription
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback:
    2521:2521:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2535:2535:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2526:2528:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9:
    2436:2437:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback) -> <init>
    2452:2452:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    2442:2442:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    2457:2483:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    2447:2447:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1:
    2465:2465:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9) -> <init>
    2468:2476:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback:
    2807:2808:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback) -> <init>
    2813:2814:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2819:2820:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    2825:2830:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    2868:2869:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    2875:2876:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    2841:2860:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    2934:2941:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    2882:2891:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    2919:2927:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    2901:2910:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> startAsSupportActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager:
    3030:3031:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3050:3052:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3037:3038:int getApplyableNightMode() -> getApplyableNightMode
    3045:3045:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager:
    2951:2951:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2983:2990:void cleanup() -> cleanup
    2960:2976:void setup() -> setup
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1:
    2969:2969:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager) -> <init>
    2972:2972:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager:
    3002:3003:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager) -> <init>
    3019:3022:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3009:3009:int getApplyableNightMode() -> getApplyableNightMode
    3014:3014:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView:
    2771:2772:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    2777:2778:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2801:2801:boolean isOutOfBounds(int,int) -> isOutOfBounds
    2783:2792:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    2797:2797:void setBackgroundResource(int) -> setBackgroundResource
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    2604:2607:void <init>(int) -> <init>
    2672:2681:androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback) -> getListMenuView
    2611:2614:boolean hasPanelItems() -> hasPanelItems
    2660:2667:void setMenu(androidx.appcompat.view.menu.MenuBuilder) -> setMenu
    2628:2656:void setStyle(android.content.Context) -> setStyle
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState:
    2751:2751:void <clinit>() -> <clinit>
    2721:2721:void <init>() -> <init>
    2740:2745:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState readFromParcel(android.os.Parcel,java.lang.ClassLoader) -> readFromParcel
    2731:2735:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1 -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1:
    2751:2751:void <init>() -> <init>
    2751:2751:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2751:2751:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2754:2754:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2759:2759:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2751:2751:java.lang.Object[] newArray(int) -> newArray
    2764:2764:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState[] newArray(int) -> newArray
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback:
    2488:2488:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2493:2503:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2510:2513:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDialog -> androidx.appcompat.app.AppCompatDialog:
    57:67:void <init>(android.content.Context,int) -> <init>
    129:129:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    206:207:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    112:112:android.view.View findViewById(int) -> findViewById
    169:172:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    178:180:int getThemeResId(android.content.Context,int) -> getThemeResId
    162:162:void invalidateOptionsMenu() -> invalidateOptionsMenu
    77:79:void onCreate(android.os.Bundle) -> onCreate
    134:135:void onStop() -> onStop
    95:95:void setContentView(int) -> setContentView
    100:100:void setContentView(android.view.View) -> setContentView
    105:105:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    117:118:void setTitle(java.lang.CharSequence) -> setTitle
    123:124:void setTitle(int) -> setTitle
    201:201:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
    153:153:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
androidx.appcompat.app.AppCompatDialog$1 -> androidx.appcompat.app.AppCompatDialog$1:
    45:45:void <init>(androidx.appcompat.app.AppCompatDialog) -> <init>
    48:48:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.appcompat.app.AppCompatDialogFragment -> androidx.appcompat.app.AppCompatDialogFragment:
    38:38:void <init>() -> <init>
    43:43:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    50:65:void setupDialog(android.app.Dialog,int) -> setupDialog
androidx.appcompat.app.AppCompatViewInflater -> androidx.appcompat.app.AppCompatViewInflater:
    63:75:void <clinit>() -> <clinit>
    61:78:void <init>() -> <init>
    301:316:void checkOnClickListener(android.view.View,android.util.AttributeSet) -> checkOnClickListener
    228:228:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    192:192:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    212:212:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    222:222:androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet) -> createCheckedTextView
    197:197:androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet) -> createEditText
    207:207:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet) -> createImageButton
    187:187:androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet) -> createImageView
    234:234:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createMultiAutoCompleteTextView
    217:217:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    239:239:androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet) -> createRatingBar
    244:244:androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet) -> createSeekBar
    202:202:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet) -> createSpinner
    182:182:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    249:249:androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet) -> createToggleButton
    88:174:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> createView
    321:335:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> createViewByPrefix
    265:291:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    348:369:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
    254:254:void verifyNotNull(android.view.View,java.lang.String) -> verifyNotNull
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener:
    385:387:void <init>(android.view.View,java.lang.String) -> <init>
    392:399:void onClick(android.view.View) -> onClick
    411:436:void resolveMethod(android.content.Context,java.lang.String) -> resolveMethod
androidx.appcompat.app.NavItemSelectedListener -> androidx.appcompat.app.NavItemSelectedListener:
    36:37:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
androidx.appcompat.app.ResourcesFlusher -> androidx.appcompat.app.ResourcesFlusher:
    209:209:void <init>() -> <init>
    46:54:void flush(android.content.res.Resources) -> flush
    60:77:void flushLollipops(android.content.res.Resources) -> flushLollipops
    84:108:void flushMarshmallows(android.content.res.Resources) -> flushMarshmallows
    113:160:void flushNougats(android.content.res.Resources) -> flushNougats
    166:205:void flushThemedResourcesCache(java.lang.Object) -> flushThemedResourcesCache
androidx.appcompat.app.ToolbarActionBar -> androidx.appcompat.app.ToolbarActionBar:
    428:428:boolean closeOptionsMenu() -> closeOptionsMenu
    440:441:boolean collapseActionView() -> collapseActionView
    504:511:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    323:323:int getDisplayOptions() -> getDisplayOptions
    543:548:android.view.Menu getMenu() -> getMenu
    146:146:android.content.Context getThemedContext() -> getThemedContext
    433:434:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    186:186:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    489:489:void onDestroy() -> onDestroy
    476:481:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    468:469:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    423:423:boolean openOptionsMenu() -> openOptionsMenu
    448:463:void populateOptionsMenu() -> populateOptionsMenu
    176:176:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    228:228:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
androidx.appcompat.app.ToolbarActionBar$1 -> androidx.appcompat.app.ToolbarActionBar$1:
    56:56:void run() -> run
androidx.appcompat.app.ToolbarActionBar$2 -> androidx.appcompat.app.ToolbarActionBar$2:
    64:64:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback -> androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback:
    554:554:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    568:577:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    559:560:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback -> androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback:
    583:583:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    593:598:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper -> androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper:
    536:538:android.view.View onCreatePanelView(int) -> onCreatePanelView
    522:525:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
androidx.appcompat.app.TwilightCalculator -> androidx.appcompat.app.TwilightCalculator:
    26:26:void <init>() -> <init>
    95:136:void calculateTwilight(long,double,double) -> calculateTwilight
    31:34:androidx.appcompat.app.TwilightCalculator getInstance() -> getInstance
androidx.appcompat.app.TwilightManager -> androidx.appcompat.app.TwilightManager:
    69:71:void <init>(android.content.Context,android.location.LocationManager) -> <init>
    50:55:androidx.appcompat.app.TwilightManager getInstance(android.content.Context) -> getInstance
    110:124:android.location.Location getLastKnownLocation() -> getLastKnownLocation
    134:138:android.location.Location getLastKnownLocationForProvider(java.lang.String) -> getLastKnownLocationForProvider
    80:101:boolean isNight() -> isNight
    144:144:boolean isStateValid() -> isStateValid
    148:191:void updateState(android.location.Location) -> updateState
androidx.appcompat.app.TwilightManager$TwilightState -> androidx.appcompat.app.TwilightManager$TwilightState:
    205:205:void <init>() -> <init>
androidx.appcompat.app.WindowDecorActionBar -> androidx.appcompat.app.WindowDecorActionBar:
    84:85:void <clinit>() -> <clinit>
    169:175:void <init>(android.app.Activity,boolean) -> <init>
    179:181:void <init>(android.app.Dialog) -> <init>
    876:907:void animateToMode(boolean) -> animateToMode
    975:976:boolean collapseActionView() -> collapseActionView
    312:315:void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    351:358:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    837:863:void doHide(boolean) -> doHide
    788:832:void doShow(boolean) -> doShow
    674:674:void enableContentAnimations(boolean) -> enableContentAnimations
    237:243:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    518:518:int getDisplayOptions() -> getDisplayOptions
    513:513:int getNavigationMode() -> getNavigationMode
    921:933:android.content.Context getThemedContext() -> getThemedContext
    712:717:void hideForActionMode() -> hideForActionMode
    723:725:void hideForSystem() -> hideForSystem
    195:206:void init(android.view.View) -> init
    259:259:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    963:965:void onContentScrollStarted() -> onContentScrollStarted
    1402:1410:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    321:321:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    627:658:void selectTab(androidx.appcompat.app.ActionBar$Tab) -> selectTab
    1395:1396:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    380:380:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    474:478:void setDisplayOptions(int,int) -> setDisplayOptions
    249:249:void setElevation(float) -> setElevation
    263:284:void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    731:736:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    958:958:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    395:395:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    333:335:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    446:446:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    916:916:boolean shouldAnimateContextView() -> shouldAnimateContextView
    686:691:void showForActionMode() -> showForActionMode
    697:699:void showForSystem() -> showForSystem
    523:537:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
    771:782:void updateVisibility(boolean) -> updateVisibility
androidx.appcompat.app.WindowDecorActionBar$1 -> androidx.appcompat.app.WindowDecorActionBar$1:
    135:135:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    138:147:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$2 -> androidx.appcompat.app.WindowDecorActionBar$2:
    152:152:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    155:156:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$3 -> androidx.appcompat.app.WindowDecorActionBar$3:
    161:161:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    164:165:void onAnimationUpdate(android.view.View) -> onAnimationUpdate
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    993:998:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback) -> <init>
    1060:1065:boolean dispatchOnCreate() -> dispatchOnCreate
    1013:1039:void finish() -> finish
    1117:1117:android.view.View getCustomView() -> getCustomView
    1008:1008:android.view.Menu getMenu() -> getMenu
    1003:1003:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1101:1101:java.lang.CharSequence getSubtitle() -> getSubtitle
    1096:1096:java.lang.CharSequence getTitle() -> getTitle
    1044:1056:void invalidate() -> invalidate
    1112:1112:boolean isTitleOptional() -> isTitleOptional
    1122:1123:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1150:1154:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1070:1071:void setCustomView(android.view.View) -> setCustomView
    1076:1076:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    1091:1091:void setSubtitle(int) -> setSubtitle
    1081:1081:void setTitle(java.lang.CharSequence) -> setTitle
    1086:1086:void setTitle(int) -> setTitle
    1106:1107:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.app.WindowDecorActionBar$TabImpl -> androidx.appcompat.app.WindowDecorActionBar$TabImpl:
    1183:1183:androidx.appcompat.app.ActionBar$TabListener getCallback() -> getCallback
    1280:1280:java.lang.CharSequence getContentDescription() -> getContentDescription
    1194:1194:android.view.View getCustomView() -> getCustomView
    1214:1214:android.graphics.drawable.Drawable getIcon() -> getIcon
    1219:1219:int getPosition() -> getPosition
    1228:1228:java.lang.CharSequence getText() -> getText
    1261:1261:void select() -> select
androidx.appcompat.content.res.AppCompatResources -> androidx.appcompat.content.res.AppCompatResources:
    50:55:void <clinit>() -> <clinit>
    57:57:void <init>() -> <init>
    150:158:void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addColorStateListToCache
    130:144:android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int) -> getCachedColorStateList
    67:86:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    104:104:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    173:176:android.util.TypedValue getTypedValue() -> getTypedValue
    112:122:android.content.res.ColorStateList inflateColorStateList(android.content.Context,int) -> inflateColorStateList
    162:167:boolean isColorInt(android.content.Context,int) -> isColorInt
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry -> androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry:
    186:188:void <init>(android.content.res.ColorStateList,android.content.res.Configuration) -> <init>
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
    92:92:void <clinit>() -> <clinit>
    111:111:void <init>() -> <init>
    116:121:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources) -> <init>
    89:89:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    89:89:boolean canApplyTheme() -> canApplyTheme
    89:89:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    89:89:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> cloneConstantState
    614:614:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState() -> cloneConstantState
    171:174:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    89:89:void draw(android.graphics.Canvas) -> draw
    89:89:int getAlpha() -> getAlpha
    89:89:int getChangingConfigurations() -> getChangingConfigurations
    89:89:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    89:89:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    89:89:int getIntrinsicHeight() -> getIntrinsicHeight
    89:89:int getIntrinsicWidth() -> getIntrinsicWidth
    89:89:int getMinimumHeight() -> getMinimumHeight
    89:89:int getMinimumWidth() -> getMinimumWidth
    89:89:int getOpacity() -> getOpacity
    89:89:void getOutline(android.graphics.Outline) -> getOutline
    89:89:boolean getPadding(android.graphics.Rect) -> getPadding
    201:209:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    483:497:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    472:472:void init() -> init
    89:89:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    89:89:boolean isAutoMirrored() -> isAutoMirrored
    264:270:void jumpToCurrentState() -> jumpToCurrentState
    605:607:android.graphics.drawable.Drawable mutate() -> mutate
    89:89:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    278:286:boolean onStateChange(int[]) -> onStateChange
    564:598:int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseItem
    510:548:int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseTransition
    89:89:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    293:349:boolean selectTransition(int) -> selectTransition
    89:89:void setAlpha(int) -> setAlpha
    89:89:void setAutoMirrored(boolean) -> setAutoMirrored
    89:89:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    718:720:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    89:89:void setDither(boolean) -> setDither
    89:89:void setHotspot(float,float) -> setHotspot
    89:89:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    89:89:void setTintList(android.content.res.ColorStateList) -> setTintList
    89:89:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    214:220:boolean setVisible(boolean,boolean) -> setVisible
    89:89:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    449:467:void updateStateFromTypedArray(android.content.res.TypedArray) -> updateStateFromTypedArray
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition:
    370:371:void <init>(android.graphics.drawable.Animatable) -> <init>
    376:376:void start() -> start
    381:381:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState:
    634:641:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources) -> <init>
    667:668:int addStateSet(int[],android.graphics.drawable.Drawable,int) -> addStateSet
    652:661:int addTransition(int,int,android.graphics.drawable.Drawable,boolean) -> addTransition
    681:681:int getKeyframeIdAt(int) -> getKeyframeIdAt
    673:677:int indexOfKeyframe(int[]) -> indexOfKeyframe
    685:686:int indexOfTransition(int,int) -> indexOfTransition
    690:691:boolean isTransitionReversed(int,int) -> isTransitionReversed
    647:648:void mutate() -> mutate
    702:702:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    708:708:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    695:696:boolean transitionHasReversibleFlag(int,int) -> transitionHasReversibleFlag
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition:
    433:434:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    439:439:void start() -> start
    444:444:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition:
    392:406:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean) -> <init>
    411:411:boolean canReverse() -> canReverse
    421:421:void reverse() -> reverse
    416:416:void start() -> start
    426:426:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator:
    732:733:void <init>(android.graphics.drawable.AnimationDrawable,boolean) -> <init>
    759:772:float getInterpolation(float) -> getInterpolation
    754:754:int getTotalDuration() -> getTotalDuration
    737:749:int updateFrames(android.graphics.drawable.AnimationDrawable,boolean) -> updateFrames
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition:
    353:353:void <init>() -> <init>
    353:353:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1) -> <init>
androidx.appcompat.graphics.drawable.DrawableContainer -> androidx.appcompat.graphics.drawable.DrawableContainer:
    53:74:void <init>() -> <init>
    535:571:void animate(boolean) -> animate
    595:595:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    601:601:boolean canApplyTheme() -> canApplyTheme
    632:632:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    87:91:void draw(android.graphics.Canvas) -> draw
    154:154:int getAlpha() -> getAlpha
    97:98:int getChangingConfigurations() -> getChangingConfigurations
    606:608:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    578:578:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    414:414:int getCurrentIndex() -> getCurrentIndex
    296:299:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    342:345:int getIntrinsicHeight() -> getIntrinsicHeight
    334:337:int getIntrinsicWidth() -> getIntrinsicWidth
    358:361:int getMinimumHeight() -> getMinimumHeight
    350:353:int getMinimumWidth() -> getMinimumWidth
    405:406:int getOpacity() -> getOpacity
    132:133:void getOutline(android.graphics.Outline) -> getOutline
    108:124:boolean getPadding(android.graphics.Rect) -> getPadding
    491:531:void initializeDrawableForDisplay(android.graphics.drawable.Drawable) -> initializeDrawableForDisplay
    369:373:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    244:244:boolean isAutoMirrored() -> isAutoMirrored
    228:228:boolean isStateful() -> isStateful
    250:271:void jumpToCurrentState() -> jumpToCurrentState
    616:620:android.graphics.drawable.Drawable mutate() -> mutate
    102:103:boolean needsMirroring() -> needsMirroring
    218:222:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    329:329:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    316:320:boolean onLevelChange(int) -> onLevelChange
    305:309:boolean onStateChange(int[]) -> onStateChange
    1204:1204:int resolveDensity(android.content.res.Resources,int) -> resolveDensity
    379:380:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    427:481:boolean selectDrawable(int) -> selectDrawable
    139:146:void setAlpha(int) -> setAlpha
    233:236:void setAutoMirrored(boolean) -> setAutoMirrored
    169:173:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    1152:1163:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    159:162:void setDither(boolean) -> setDither
    277:278:void setHotspot(float,float) -> setHotspot
    284:290:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    180:183:void setTintList(android.content.res.ColorStateList) -> setTintList
    189:192:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    393:398:boolean setVisible(boolean,boolean) -> setVisible
    386:387:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    589:589:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableContainer$1 -> androidx.appcompat.graphics.drawable.DrawableContainer$1:
    468:468:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer) -> <init>
    471:472:void run() -> run
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback -> androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback:
    1169:1169:void <init>() -> <init>
    1190:1191:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1197:1198:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1178:1179:android.graphics.drawable.Drawable$Callback unwrap() -> unwrap
    1173:1173:androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback) -> wrap
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState -> androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState:
    684:755:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources) -> <init>
    771:785:int addChild(android.graphics.drawable.Drawable) -> addChild
    896:906:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    913:923:boolean canApplyTheme() -> canApplyTheme
    1133:1147:boolean canConstantState() -> canConstantState
    1044:1059:void computeConstantSize() -> computeConstantSize
    802:809:void createAllFutures() -> createAllFutures
    798:798:int getCapacity() -> getCapacity
    761:761:int getChangingConfigurations() -> getChangingConfigurations
    830:843:android.graphics.drawable.Drawable getChild(int) -> getChild
    823:823:int getChildCount() -> getChildCount
    1017:1020:int getConstantHeight() -> getConstantHeight
    1037:1040:int getConstantMinimumHeight() -> getConstantMinimumHeight
    1027:1030:int getConstantMinimumWidth() -> getConstantMinimumWidth
    968:972:android.graphics.Rect getConstantPadding() -> getConstantPadding
    1007:1010:int getConstantWidth() -> getConstantWidth
    1083:1094:int getOpacity() -> getOpacity
    1124:1126:void growArray(int,int) -> growArray
    793:794:void invalidateCache() -> invalidateCache
    1000:1000:boolean isConstantSize() -> isConstantSize
    1102:1116:boolean isStateful() -> isStateful
    934:941:void mutate() -> mutate
    814:818:android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable) -> prepareDrawable
    993:993:void setConstantSize(boolean) -> setConstantSize
    1064:1064:void setEnterFadeDuration(int) -> setEnterFadeDuration
    1072:1072:void setExitFadeDuration(int) -> setExitFadeDuration
    855:868:boolean setLayoutDirection(int,int) -> setLayoutDirection
    961:961:void setVariablePadding(boolean) -> setVariablePadding
    880:888:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableWrapper -> androidx.appcompat.graphics.drawable.DrawableWrapper:
    46:47:void <init>(android.graphics.drawable.Drawable) -> <init>
    52:52:void draw(android.graphics.Canvas) -> draw
    67:67:int getChangingConfigurations() -> getChangingConfigurations
    112:112:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    137:137:int getIntrinsicHeight() -> getIntrinsicHeight
    132:132:int getIntrinsicWidth() -> getIntrinsicWidth
    147:147:int getMinimumHeight() -> getMinimumHeight
    142:142:int getMinimumWidth() -> getMinimumWidth
    122:122:int getOpacity() -> getOpacity
    152:152:boolean getPadding(android.graphics.Rect) -> getPadding
    102:102:int[] getState() -> getState
    127:127:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    220:220:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    160:160:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    191:191:boolean isAutoMirrored() -> isAutoMirrored
    92:92:boolean isStateful() -> isStateful
    107:107:void jumpToCurrentState() -> jumpToCurrentState
    57:57:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    181:181:boolean onLevelChange(int) -> onLevelChange
    168:168:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    82:82:void setAlpha(int) -> setAlpha
    186:186:void setAutoMirrored(boolean) -> setAutoMirrored
    62:62:void setChangingConfigurations(int) -> setChangingConfigurations
    87:87:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    72:72:void setDither(boolean) -> setDither
    77:77:void setFilterBitmap(boolean) -> setFilterBitmap
    211:211:void setHotspot(float,float) -> setHotspot
    216:216:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    97:97:boolean setState(int[]) -> setState
    196:196:void setTint(int) -> setTint
    201:201:void setTintList(android.content.res.ColorStateList) -> setTintList
    206:206:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    117:117:boolean setVisible(boolean,boolean) -> setVisible
    224:231:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    176:176:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawerArrowDrawable -> androidx.appcompat.graphics.drawable.DrawerArrowDrawable:
    100:100:void <clinit>() -> <clinit>
    326:400:void draw(android.graphics.Canvas) -> draw
    419:419:int getIntrinsicHeight() -> getIntrinsicHeight
    424:424:int getIntrinsicWidth() -> getIntrinsicWidth
    405:407:void setAlpha(int) -> setAlpha
    413:414:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    448:450:void setProgress(float) -> setProgress
    318:320:void setVerticalMirror(boolean) -> setVerticalMirror
androidx.appcompat.graphics.drawable.StateListDrawable -> androidx.appcompat.graphics.drawable.StateListDrawable:
    88:88:void <init>() -> <init>
    403:407:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources) -> <init>
    414:416:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState) -> <init>
    391:392:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    79:79:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    319:319:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> cloneConstantState
    235:252:int[] extractStateSet(android.util.AttributeSet) -> extractStateSet
    310:312:android.graphics.drawable.Drawable mutate() -> mutate
    113:122:boolean onStateChange(int[]) -> onStateChange
    397:399:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState -> androidx.appcompat.graphics.drawable.StateListDrawable$StateListState:
    332:337:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources) -> <init>
    351:352:int addStateSet(int[],android.graphics.drawable.Drawable) -> addStateSet
    381:384:void growArray(int,int) -> growArray
    357:360:int indexOfStateSet(int[]) -> indexOfStateSet
    343:347:void mutate() -> mutate
    370:370:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    376:376:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.appcompat.resources.R -> androidx.appcompat.resources.R:
    10:10:void <init>() -> <init>
androidx.appcompat.resources.R$attr -> androidx.appcompat.resources.R$attr:
    13:13:void <init>() -> <init>
androidx.appcompat.resources.R$color -> androidx.appcompat.resources.R$color:
    29:29:void <init>() -> <init>
androidx.appcompat.resources.R$dimen -> androidx.appcompat.resources.R$dimen:
    37:37:void <init>() -> <init>
androidx.appcompat.resources.R$drawable -> androidx.appcompat.resources.R$drawable:
    63:63:void <init>() -> <init>
androidx.appcompat.resources.R$id -> androidx.appcompat.resources.R$id:
    80:80:void <init>() -> <init>
androidx.appcompat.resources.R$integer -> androidx.appcompat.resources.R$integer:
    151:151:void <init>() -> <init>
androidx.appcompat.resources.R$layout -> androidx.appcompat.resources.R$layout:
    156:156:void <init>() -> <init>
androidx.appcompat.resources.R$string -> androidx.appcompat.resources.R$string:
    167:167:void <init>() -> <init>
androidx.appcompat.resources.R$style -> androidx.appcompat.resources.R$style:
    172:172:void <init>() -> <init>
androidx.appcompat.resources.R$styleable -> androidx.appcompat.resources.R$styleable:
    185:245:void <clinit>() -> <clinit>
    183:183:void <init>() -> <init>
androidx.appcompat.text.AllCapsTransformationMethod -> androidx.appcompat.text.AllCapsTransformationMethod:
    37:38:void <init>(android.content.Context) -> <init>
    43:43:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
androidx.appcompat.view.ActionBarPolicy -> androidx.appcompat.view.ActionBarPolicy:
    46:47:void <init>(android.content.Context) -> <init>
    110:110:boolean enableHomeButtonByDefault() -> enableHomeButtonByDefault
    43:43:androidx.appcompat.view.ActionBarPolicy get(android.content.Context) -> get
    86:86:int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    56:59:int getMaxActionButtons() -> getMaxActionButtons
    115:115:int getStackedTabMaxWidth() -> getStackedTabMaxWidth
    94:103:int getTabContainerHeight() -> getTabContainerHeight
    90:90:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    78:81:boolean showsOverflowMenuButton() -> showsOverflowMenuButton
androidx.appcompat.view.ActionMode -> androidx.appcompat.view.ActionMode:
    41:41:void <init>() -> <init>
    71:71:java.lang.Object getTag() -> getTag
    145:145:boolean getTitleOptionalHint() -> getTitleOptionalHint
    57:57:void setTag(java.lang.Object) -> setTag
    134:134:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.ContextThemeWrapper -> androidx.appcompat.view.ContextThemeWrapper:
    48:48:void <init>() -> <init>
    63:64:void <init>(android.content.Context,int) -> <init>
    77:78:void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    83:83:void attachBaseContext(android.content.Context) -> attachBaseContext
    195:195:android.content.res.AssetManager getAssets() -> getAssets
    109:109:android.content.res.Resources getResources() -> getResources
    113:121:android.content.res.Resources getResourcesInternal() -> getResourcesInternal
    156:162:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    142:151:android.content.res.Resources$Theme getTheme() -> getTheme
    137:137:int getThemeResId() -> getThemeResId
    181:189:void initializeTheme() -> initializeTheme
    177:177:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    126:128:void setTheme(int) -> setTheme
androidx.appcompat.view.StandaloneActionMode -> androidx.appcompat.view.StandaloneActionMode:
    50:57:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean) -> <init>
    105:111:void finish() -> finish
    131:131:android.view.View getCustomView() -> getCustomView
    116:116:android.view.Menu getMenu() -> getMenu
    136:136:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    126:126:java.lang.CharSequence getSubtitle() -> getSubtitle
    121:121:java.lang.CharSequence getTitle() -> getTitle
    100:100:void invalidate() -> invalidate
    89:89:boolean isTitleOptional() -> isTitleOptional
    141:141:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    161:162:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    94:95:void setCustomView(android.view.View) -> setCustomView
    68:68:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    78:78:void setSubtitle(int) -> setSubtitle
    63:63:void setTitle(java.lang.CharSequence) -> setTitle
    73:73:void setTitle(int) -> setTitle
    83:84:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper -> androidx.appcompat.view.SupportActionModeWrapper:
    49:51:void <init>(android.content.Context,androidx.appcompat.view.ActionMode) -> <init>
    81:81:void finish() -> finish
    111:111:android.view.View getCustomView() -> getCustomView
    86:86:android.view.Menu getMenu() -> getMenu
    121:121:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    101:101:java.lang.CharSequence getSubtitle() -> getSubtitle
    56:56:java.lang.Object getTag() -> getTag
    91:91:java.lang.CharSequence getTitle() -> getTitle
    126:126:boolean getTitleOptionalHint() -> getTitleOptionalHint
    76:76:void invalidate() -> invalidate
    136:136:boolean isTitleOptional() -> isTitleOptional
    116:116:void setCustomView(android.view.View) -> setCustomView
    71:71:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    106:106:void setSubtitle(int) -> setSubtitle
    61:61:void setTag(java.lang.Object) -> setTag
    66:66:void setTitle(java.lang.CharSequence) -> setTitle
    96:96:void setTitle(int) -> setTitle
    131:131:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper:
    150:154:void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    192:203:android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode) -> getActionModeWrapper
    182:185:android.view.Menu getMenuWrapper(android.view.Menu) -> getMenuWrapper
    172:172:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    159:159:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    178:178:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    165:165:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.view.SupportMenuInflater -> androidx.appcompat.view.SupportMenuInflater:
    83:85:void <clinit>() -> <clinit>
    101:104:void <init>(android.content.Context) -> <init>
    231:235:java.lang.Object findRealOwner(java.lang.Object) -> findRealOwner
    224:227:java.lang.Object getRealOwner() -> getRealOwner
    119:136:void inflate(int,android.view.Menu) -> inflate
    145:216:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> parseMenu
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
    242:242:void <clinit>() -> <clinit>
    247:257:void <init>(java.lang.Object,java.lang.String) -> <init>
    264:271:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.SupportMenuInflater$MenuState -> androidx.appcompat.view.SupportMenuInflater$MenuState:
    349:352:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu) -> <init>
    531:532:void addItem() -> addItem
    536:538:android.view.SubMenu addSubMenuItem() -> addSubMenuItem
    462:462:char getShortcut(java.lang.String) -> getShortcut
    543:543:boolean hasAddedItem() -> hasAddedItem
    550:555:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    368:379:void readGroup(android.util.AttributeSet) -> readGroup
    386:455:void readItem(android.util.AttributeSet) -> readItem
    356:361:void resetGroup() -> resetGroup
    467:526:void setItem(android.view.MenuItem) -> setItem
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet:
    48:49:void <init>() -> <init>
    90:96:void cancel() -> cancel
    86:86:void onAnimationsEnded() -> onAnimationsEnded
    53:54:androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat) -> play
    61:63:androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat) -> playSequentially
    100:101:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long) -> setDuration
    107:108:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    114:115:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    68:82:void start() -> start
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1:
    121:123:void <init>(androidx.appcompat.view.ViewPropertyAnimatorCompatSet) -> <init>
    144:148:void onAnimationEnd(android.view.View) -> onAnimationEnd
    127:132:void onAnimationStart(android.view.View) -> onAnimationStart
    137:139:void onEnd() -> onEnd
androidx.appcompat.view.WindowCallbackWrapper -> androidx.appcompat.view.WindowCallbackWrapper:
    50:52:void <init>(android.view.Window$Callback) -> <init>
    79:79:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    59:59:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    64:64:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    84:84:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    69:69:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    74:74:boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    188:188:android.view.Window$Callback getWrapped() -> getWrapped
    171:171:void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    166:166:void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    129:129:void onAttachedToWindow() -> onAttachedToWindow
    119:119:void onContentChanged() -> onContentChanged
    94:94:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    89:89:android.view.View onCreatePanelView(int) -> onCreatePanelView
    134:134:void onDetachedFromWindow() -> onDetachedFromWindow
    109:109:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    104:104:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    139:139:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    184:184:void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
    99:99:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    178:178:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    145:145:boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    150:150:boolean onSearchRequested() -> onSearchRequested
    114:114:void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    124:124:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    155:155:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    161:161:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.menu.ActionMenuItem -> androidx.appcompat.view.menu.ActionMenuItem:
    83:89:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    444:453:void applyIconTint() -> applyIconTint
    347:347:android.view.ActionProvider getActionProvider() -> getActionProvider
    99:99:int getAlphabeticModifiers() -> getAlphabeticModifiers
    94:94:char getAlphabeticShortcut() -> getAlphabeticShortcut
    399:399:java.lang.CharSequence getContentDescription() -> getContentDescription
    104:104:int getGroupId() -> getGroupId
    109:109:android.graphics.drawable.Drawable getIcon() -> getIcon
    425:425:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    440:440:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    114:114:android.content.Intent getIntent() -> getIntent
    119:119:int getItemId() -> getItemId
    134:134:int getNumericModifiers() -> getNumericModifiers
    129:129:char getNumericShortcut() -> getNumericShortcut
    139:139:int getOrder() -> getOrder
    149:149:java.lang.CharSequence getTitle() -> getTitle
    154:154:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    410:410:java.lang.CharSequence getTooltipText() -> getTooltipText
    164:164:boolean isCheckable() -> isCheckable
    169:169:boolean isChecked() -> isChecked
    174:174:boolean isEnabled() -> isEnabled
    179:179:boolean isVisible() -> isVisible
    342:342:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    42:42:android.view.MenuItem setActionView(int) -> setActionView
    42:42:android.view.MenuItem setActionView(android.view.View) -> setActionView
    332:332:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    352:352:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    184:184:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    190:191:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    197:197:android.view.MenuItem setCheckable(boolean) -> setCheckable
    208:208:android.view.MenuItem setChecked(boolean) -> setChecked
    42:42:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    393:393:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    214:214:android.view.MenuItem setEnabled(boolean) -> setEnabled
    220:223:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    230:232:android.view.MenuItem setIcon(int) -> setIcon
    415:418:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    430:433:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    238:238:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    244:244:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    250:251:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    388:388:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    263:264:android.view.MenuItem setShortcut(char,char) -> setShortcut
    271:274:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    42:42:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    367:367:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    362:362:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    280:280:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    286:286:android.view.MenuItem setTitle(int) -> setTitle
    292:292:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    42:42:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    404:404:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    298:298:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
    64:64:void <init>(android.content.Context) -> <init>
    68:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    119:119:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    237:237:boolean hasText() -> hasText
    124:134:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    264:264:boolean needsDividerAfter() -> needsDividerAfter
    259:259:boolean needsDividerBefore() -> needsDividerBefore
    150:151:void onClick(android.view.View) -> onClick
    92:95:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:294:void onMeasure(int,int) -> onMeasure
    333:333:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    141:145:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    179:182:void setExpandedFormat(boolean) -> setExpandedFormat
    215:233:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    156:156:void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    113:114:void setPadding(int,int,int,int) -> setPadding
    160:160:void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    247:249:void setTitle(java.lang.CharSequence) -> setTitle
    103:107:boolean shouldAllowTextWithIcon() -> shouldAllowTextWithIcon
    188:209:void updateTextButtonVisibility() -> updateTextButtonVisibility
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener:
    299:300:void <init>(androidx.appcompat.view.menu.ActionMenuItemView) -> <init>
    305:306:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    314:316:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback:
    336:336:void <init>() -> <init>
androidx.appcompat.view.menu.BaseMenuPresenter -> androidx.appcompat.view.menu.BaseMenuPresenter:
    61:65:void <init>(android.content.Context,int,int) -> <init>
    134:138:void addItemView(android.view.View,int) -> addItemView
    167:167:androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    148:148:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    158:158:androidx.appcompat.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    183:189:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    77:83:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    70:72:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    213:214:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    220:221:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    154:154:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    91:121:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.BaseMenuWrapper -> androidx.appcompat.view.menu.BaseMenuWrapper:
    37:38:void <init>(android.content.Context) -> <init>
    42:56:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> getMenuItemWrapper
    65:77:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> getSubMenuWrapper
    86:90:void internalClear() -> internalClear
    95:105:void internalRemoveGroup(int) -> internalRemoveGroup
    111:121:void internalRemoveItem(int) -> internalRemoveItem
androidx.appcompat.view.menu.CascadingMenuPopup -> androidx.appcompat.view.menu.CascadingMenuPopup:
    66:66:void <clinit>() -> <clinit>
    222:236:void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    354:359:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    245:253:androidx.appcompat.widget.MenuPopupWindow createPopupWindow() -> createPopupWindow
    287:294:void dismiss() -> dismiss
    655:657:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder) -> findIndexOfAddedMenu
    516:518:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder) -> findMenuItemForSubmenu
    537:580:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder) -> findParentViewForSubmenu
    315:315:int getInitialMenuPosition() -> getInitialMenuPosition
    765:767:android.widget.ListView getListView() -> getListView
    329:344:int getNextMenuPosition(int) -> getNextMenuPosition
    588:588:boolean isShowing() -> isShowing
    667:720:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    599:610:void onDismiss() -> onDismiss
    302:303:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    629:641:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    749:753:void setAnchorView(android.view.View) -> setAnchorView
    623:623:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    241:241:void setForceShowIcon(boolean) -> setForceShowIcon
    740:742:void setGravity(int) -> setGravity
    772:773:void setHorizontalOffset(int) -> setHorizontalOffset
    760:760:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    784:784:void setShowTitle(boolean) -> setShowTitle
    778:779:void setVerticalOffset(int) -> setVerticalOffset
    259:277:void show() -> show
    369:501:void showMenu(androidx.appcompat.view.menu.MenuBuilder) -> showMenu
    616:617:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$1:
    98:98:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    104:108:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> androidx.appcompat.view.menu.CascadingMenuPopup$2:
    120:120:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    127:133:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> androidx.appcompat.view.menu.CascadingMenuPopup$3:
    137:137:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    150:193:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    143:143:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$3$1:
    173:173:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    178:188:void run() -> run
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo:
    800:803:void <init>(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int) -> <init>
    807:807:android.widget.ListView getListView() -> getListView
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
    42:42:void <clinit>() -> <clinit>
    53:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    97:97:int getWindowAnimations() -> getWindowAnimations
    73:73:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    86:86:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    78:81:void onDetachedFromWindow() -> onDetachedFromWindow
    92:92:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
    76:76:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    80:99:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    141:141:void addContentView(android.view.View) -> addContentView
    145:148:void addContentView(android.view.View,int) -> addContentView
    350:356:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    330:333:android.view.LayoutInflater getInflater() -> getInflater
    169:169:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    126:137:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    312:316:void insertCheckBox() -> insertCheckBox
    297:300:void insertIconView() -> insertIconView
    304:308:void insertRadioButton() -> insertRadioButton
    104:121:void onFinishInflate() -> onFinishInflate
    285:293:void onMeasure(int,int) -> onMeasure
    174:213:void setCheckable(boolean) -> setCheckable
    222:234:void setChecked(boolean) -> setChecked
    153:153:void setForceShowIcon(boolean) -> setForceShowIcon
    342:343:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    259:276:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    245:253:void setShortcut(boolean,char) -> setShortcut
    238:239:void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    159:163:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.view.menu.ListMenuPresenter -> androidx.appcompat.view.menu.ListMenuPresenter:
    71:73:void <init>(android.content.Context,int) -> <init>
    81:83:void <init>(int,int) -> <init>
    125:128:android.widget.ListAdapter getAdapter() -> getAdapter
    105:114:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    88:99:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    155:156:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    173:173:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    143:148:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    138:138:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    133:133:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter:
    234:235:void <init>(androidx.appcompat.view.menu.ListMenuPresenter) -> <init>
    277:289:void findExpandedIndex() -> findExpandedIndex
    240:242:int getCount() -> getCount
    231:231:java.lang.Object getItem(int) -> getItem
    250:255:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    268:272:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    294:295:void notifyDataSetChanged() -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuAdapter -> androidx.appcompat.view.menu.MenuAdapter:
    44:49:void <init>(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int) -> <init>
    114:126:void findExpandedIndex() -> findExpandedIndex
    71:71:androidx.appcompat.view.menu.MenuBuilder getAdapterMenu() -> getAdapterMenu
    62:67:int getCount() -> getCount
    32:32:java.lang.Object getItem(int) -> getItem
    76:81:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    94:109:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    131:132:void notifyDataSetChanged() -> notifyDataSetChanged
    57:57:void setForceShowIcon(boolean) -> setForceShowIcon
androidx.appcompat.view.menu.MenuBuilder -> androidx.appcompat.view.menu.MenuBuilder:
    68:68:void <clinit>() -> <clinit>
    229:241:void <init>(android.content.Context) -> <init>
    472:472:android.view.MenuItem add(java.lang.CharSequence) -> add
    477:477:android.view.MenuItem add(int) -> add
    482:482:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    487:487:android.view.MenuItem add(int,int,int,int) -> add
    526:546:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    447:458:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    256:256:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> addMenuPresenter
    269:271:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    492:492:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    497:497:android.view.SubMenu addSubMenu(int) -> addSubMenu
    502:504:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    511:511:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    847:848:void changeMenuMode() -> changeMenuMode
    610:615:void clear() -> clear
    1219:1223:void clearHeader() -> clearHeader
    1036:1047:void close(boolean) -> close
    1052:1052:void close() -> close
    1379:1395:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    466:466:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    840:840:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    290:301:void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    306:320:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    1357:1373:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    730:730:int findGroupIndex(int) -> findGroupIndex
    734:743:int findGroupIndex(int,int) -> findGroupIndex
    853:855:int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    699:705:android.view.MenuItem findItem(int) -> findItem
    717:721:int findItemIndex(int) -> findItemIndex
    936:962:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    888:917:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    1169:1205:void flagActionItems() -> flagActionItems
    1209:1210:java.util.ArrayList getActionItems() -> getActionItems
    836:836:android.content.Context getContext() -> getContext
    1401:1401:androidx.appcompat.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    1322:1322:android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    1318:1318:java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    1326:1326:android.view.View getHeaderView() -> getHeaderView
    758:758:android.view.MenuItem getItem(int) -> getItem
    1214:1215:java.util.ArrayList getNonActionItems() -> getNonActionItems
    1353:1353:boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    787:788:int getOrdering(int) -> getOrdering
    832:832:android.content.res.Resources getResources() -> getResources
    1124:1139:java.util.ArrayList getVisibleItems() -> getVisibleItems
    681:689:boolean hasVisibleItems() -> hasVisibleItems
    520:520:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    798:798:boolean isQwertyMode() -> isQwertyMode
    763:763:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    828:828:boolean isShortcutsVisible() -> isShortcutsVisible
    1118:1119:void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    1107:1108:void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemVisibleChanged
    1063:1073:void onItemsChanged(boolean) -> onItemsChanged
    977:977:boolean performIdentifierAction(int,int) -> performIdentifierAction
    981:981:boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    985:1016:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int) -> performItemAction
    865:874:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    560:571:void removeGroup(int) -> removeGroup
    555:555:void removeItem(int) -> removeItem
    586:590:void removeItemAtInt(int,boolean) -> removeItemAtInt
    281:284:void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> removeMenuPresenter
    411:430:void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    381:401:void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    440:440:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    245:245:androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    619:633:void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    638:644:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    516:516:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    669:674:void setGroupEnabled(int,boolean) -> setGroupEnabled
    651:664:void setGroupVisible(int,boolean) -> setGroupVisible
    1289:1289:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    1301:1301:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    1228:1254:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    1265:1265:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    1277:1277:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    1313:1313:androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    1410:1410:void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
    768:770:void setQwertyMode(boolean) -> setQwertyMode
    818:820:void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    753:753:int size() -> size
    1092:1096:void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    1084:1087:void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
androidx.appcompat.view.menu.MenuDialogHelper -> androidx.appcompat.view.menu.MenuDialogHelper:
    42:43:void <init>(androidx.appcompat.view.menu.MenuBuilder) -> <init>
    139:140:void dismiss() -> dismiss
    169:169:void onClick(android.content.DialogInterface,int) -> onClick
    151:155:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    146:146:void onDismiss(android.content.DialogInterface) -> onDismiss
    95:125:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    161:162:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
    53:89:void show(android.os.IBinder) -> show
androidx.appcompat.view.menu.MenuItemImpl -> androidx.appcompat.view.menu.MenuItemImpl:
    137:145:void <init>(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    691:691:void actionFormatChanged() -> actionFormatChanged
    403:403:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> appendModifier
    570:582:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> applyIconTintIfNecessary
    838:848:boolean collapseActionView() -> collapseActionView
    824:830:boolean expandActionView() -> expandActionView
    788:788:android.view.ActionProvider getActionProvider() -> getActionProvider
    770:774:android.view.View getActionView() -> getActionView
    275:275:int getAlphabeticModifiers() -> getAlphabeticModifiers
    243:243:char getAlphabeticShortcut() -> getAlphabeticShortcut
    891:891:java.lang.CharSequence getContentDescription() -> getContentDescription
    203:203:int getGroupId() -> getGroupId
    500:508:android.graphics.drawable.Drawable getIcon() -> getIcon
    550:550:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    566:566:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    223:223:android.content.Intent getIntent() -> getIntent
    209:209:int getItemId() -> getItemId
    687:687:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    285:285:int getNumericModifiers() -> getNumericModifiers
    280:280:char getNumericShortcut() -> getNumericShortcut
    214:214:int getOrder() -> getOrder
    218:218:int getOrdering() -> getOrdering
    342:342:char getShortcut() -> getShortcut
    352:398:java.lang.String getShortcutLabel() -> getShortcutLabel
    419:419:android.view.SubMenu getSubMenu() -> getSubMenu
    794:794:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    436:436:java.lang.CharSequence getTitle() -> getTitle
    471:477:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    446:448:java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView) -> getTitleForItemView
    905:905:java.lang.CharSequence getTooltipText() -> getTooltipText
    855:859:boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    424:424:boolean hasSubMenu() -> hasSubMenu
    154:176:boolean invoke() -> invoke
    702:702:boolean isActionButton() -> isActionButton
    871:871:boolean isActionViewExpanded() -> isActionViewExpanded
    590:590:boolean isCheckable() -> isCheckable
    614:614:boolean isChecked() -> isChecked
    185:185:boolean isEnabled() -> isEnabled
    609:609:boolean isExclusiveCheckable() -> isExclusiveCheckable
    640:643:boolean isVisible() -> isVisible
    706:706:boolean requestsActionButton() -> requestsActionButton
    711:711:boolean requiresActionButton() -> requiresActionButton
    782:782:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    51:51:android.view.MenuItem setActionView(int) -> setActionView
    51:51:android.view.MenuItem setActionView(android.view.View) -> setActionView
    751:756:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    762:764:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    865:866:void setActionViewExpanded(boolean) -> setActionViewExpanded
    248:254:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    261:269:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    595:598:android.view.MenuItem setCheckable(boolean) -> setCheckable
    619:624:android.view.MenuItem setChecked(boolean) -> setChecked
    631:634:void setCheckedInt(boolean) -> setCheckedInt
    51:51:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    882:884:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    191:196:android.view.MenuItem setEnabled(boolean) -> setEnabled
    605:605:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    516:519:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    526:531:android.view.MenuItem setIcon(int) -> setIcon
    539:543:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    555:559:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    228:228:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    721:723:void setIsActionButton(boolean) -> setIsActionButton
    682:682:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    290:296:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    303:310:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    876:876:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    672:672:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    317:320:android.view.MenuItem setShortcut(char,char) -> setShortcut
    328:333:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    742:746:void setShowAsAction(int) -> setShowAsAction
    51:51:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    818:818:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    428:430:void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> setSubMenu
    799:806:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    453:458:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    466:466:android.view.MenuItem setTitle(int) -> setTitle
    486:493:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    51:51:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    896:898:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    665:665:android.view.MenuItem setVisible(boolean) -> setVisible
    655:657:boolean setVisibleInt(boolean) -> setVisibleInt
    698:698:boolean shouldShowIcon() -> shouldShowIcon
    414:414:boolean shouldShowShortcut() -> shouldShowShortcut
    728:728:boolean showsTextAsAction() -> showsTextAsAction
    678:678:java.lang.String toString() -> toString
androidx.appcompat.view.menu.MenuItemImpl$1 -> androidx.appcompat.view.menu.MenuItemImpl$1:
    806:806:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    809:809:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS -> androidx.appcompat.view.menu.MenuItemWrapperICS:
    56:58:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> <init>
    326:326:boolean collapseActionView() -> collapseActionView
    321:321:boolean expandActionView() -> expandActionView
    312:314:android.view.ActionProvider getActionProvider() -> getActionProvider
    291:293:android.view.View getActionView() -> getActionView
    188:188:int getAlphabeticModifiers() -> getAlphabeticModifiers
    183:183:char getAlphabeticShortcut() -> getAlphabeticShortcut
    349:349:java.lang.CharSequence getContentDescription() -> getContentDescription
    70:70:int getGroupId() -> getGroupId
    120:120:android.graphics.drawable.Drawable getIcon() -> getIcon
    371:371:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    382:382:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    131:131:android.content.Intent getIntent() -> getIntent
    65:65:int getItemId() -> getItemId
    253:253:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    166:166:int getNumericModifiers() -> getNumericModifiers
    161:161:char getNumericShortcut() -> getNumericShortcut
    75:75:int getOrder() -> getOrder
    241:241:android.view.SubMenu getSubMenu() -> getSubMenu
    92:92:java.lang.CharSequence getTitle() -> getTitle
    103:103:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    360:360:java.lang.CharSequence getTooltipText() -> getTooltipText
    236:236:boolean hasSubMenu() -> hasSubMenu
    331:331:boolean isActionViewExpanded() -> isActionViewExpanded
    199:199:boolean isCheckable() -> isCheckable
    210:210:boolean isChecked() -> isChecked
    231:231:boolean isEnabled() -> isEnabled
    220:220:boolean isVisible() -> isVisible
    301:306:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    269:272:android.view.MenuItem setActionView(android.view.View) -> setActionView
    279:284:android.view.MenuItem setActionView(int) -> setActionView
    171:171:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    177:177:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    193:193:android.view.MenuItem setCheckable(boolean) -> setCheckable
    204:204:android.view.MenuItem setChecked(boolean) -> setChecked
    343:343:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    225:225:android.view.MenuItem setEnabled(boolean) -> setEnabled
    387:393:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    108:108:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    114:114:android.view.MenuItem setIcon(int) -> setIcon
    365:365:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    376:376:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    125:125:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    149:149:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    155:155:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    336:336:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    246:246:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    136:136:android.view.MenuItem setShortcut(char,char) -> setShortcut
    143:143:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    258:258:void setShowAsAction(int) -> setShowAsAction
    263:263:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    80:80:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    86:86:android.view.MenuItem setTitle(int) -> setTitle
    97:97:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    354:354:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    215:215:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    432:434:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    449:449:boolean hasSubMenu() -> hasSubMenu
    439:439:android.view.View onCreateActionView() -> onCreateActionView
    444:444:boolean onPerformDefaultAction() -> onPerformDefaultAction
    454:454:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB:
    464:464:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    479:479:boolean isVisible() -> isVisible
    495:496:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
    469:469:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    474:474:boolean overridesItemVisibility() -> overridesItemVisibility
    489:490:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    512:514:void <init>(android.view.View) -> <init>
    528:528:android.view.View getWrappedView() -> getWrappedView
    524:524:void onActionViewCollapsed() -> onActionViewCollapsed
    519:519:void onActionViewExpanded() -> onActionViewExpanded
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
    414:415:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    425:425:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    420:420:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
    401:402:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    407:407:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.menu.MenuPopup -> androidx.appcompat.view.menu.MenuPopup:
    39:39:void <init>() -> <init>
    78:78:android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    147:164:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> measureIndividualMenuWidth
    123:128:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    71:71:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    203:207:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder) -> shouldPreserveIconSpacing
    184:187:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> toMenuAdapter
androidx.appcompat.view.menu.MenuPopupHelper -> androidx.appcompat.view.menu.MenuPopupHelper:
    79:79:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    84:90:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    224:257:androidx.appcompat.view.menu.MenuPopup createPopup() -> createPopup
    298:299:void dismiss() -> dismiss
    156:159:androidx.appcompat.view.menu.MenuPopup getPopup() -> getPopup
    320:320:boolean isShowing() -> isShowing
    312:315:void onDismiss() -> onDismiss
    105:105:void setAnchorView(android.view.View) -> setAnchorView
    118:120:void setForceShowIcon(boolean) -> setForceShowIcon
    132:132:void setGravity(int) -> setGravity
    94:94:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    325:327:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    143:144:void show() -> show
    263:290:void showPopup(int,int,boolean,boolean) -> showPopup
    169:177:boolean tryShow() -> tryShow
    205:213:boolean tryShow(int,int) -> tryShow
androidx.appcompat.view.menu.MenuPopupHelper$1 -> androidx.appcompat.view.menu.MenuPopupHelper$1:
    334:334:void <init>(androidx.appcompat.view.menu.MenuPopupHelper) -> <init>
    337:337:void onDismiss() -> onDismiss
androidx.appcompat.view.menu.MenuWrapperICS -> androidx.appcompat.view.menu.MenuWrapperICS:
    41:43:void <init>(android.content.Context,androidx.core.internal.view.SupportMenu) -> <init>
    50:50:android.view.MenuItem add(java.lang.CharSequence) -> add
    55:55:android.view.MenuItem add(int) -> add
    60:60:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    65:65:android.view.MenuItem add(int,int,int,int) -> add
    94:102:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    70:70:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    75:75:android.view.SubMenu addSubMenu(int) -> addSubMenu
    80:80:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    85:85:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    123:124:void clear() -> clear
    164:164:void close() -> close
    149:149:android.view.MenuItem findItem(int) -> findItem
    159:159:android.view.MenuItem getItem(int) -> getItem
    144:144:boolean hasVisibleItems() -> hasVisibleItems
    174:174:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    179:179:boolean performIdentifierAction(int,int) -> performIdentifierAction
    169:169:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    117:118:void removeGroup(int) -> removeGroup
    111:112:void removeItem(int) -> removeItem
    129:129:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    139:139:void setGroupEnabled(int,boolean) -> setGroupEnabled
    134:134:void setGroupVisible(int,boolean) -> setGroupVisible
    184:184:void setQwertyMode(boolean) -> setQwertyMode
    154:154:int size() -> size
androidx.appcompat.view.menu.StandardMenuPopup -> androidx.appcompat.view.menu.StandardMenuPopup:
    46:46:void <clinit>() -> <clinit>
    117:135:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    215:216:void dismiss() -> dismiss
    344:344:android.widget.ListView getListView() -> getListView
    227:227:boolean isShowing() -> isShowing
    301:305:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    232:243:void onDismiss() -> onDismiss
    330:331:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    263:290:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    325:325:void setAnchorView(android.view.View) -> setAnchorView
    258:258:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    140:140:void setForceShowIcon(boolean) -> setForceShowIcon
    145:145:void setGravity(int) -> setGravity
    350:350:void setHorizontalOffset(int) -> setHorizontalOffset
    339:339:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    360:360:void setShowTitle(boolean) -> setShowTitle
    355:355:void setVerticalOffset(int) -> setVerticalOffset
    208:209:void show() -> show
    149:201:boolean tryShow() -> tryShow
    249:252:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.StandardMenuPopup$1 -> androidx.appcompat.view.menu.StandardMenuPopup$1:
    61:61:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    67:70:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.StandardMenuPopup$2 -> androidx.appcompat.view.menu.StandardMenuPopup$2:
    80:80:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    87:91:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.SubMenuBuilder -> androidx.appcompat.view.menu.SubMenuBuilder:
    42:45:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    137:137:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    89:90:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    132:132:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    142:146:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    74:74:android.view.MenuItem getItem() -> getItem
    69:69:android.view.Menu getParentMenu() -> getParentMenu
    84:84:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    156:156:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    55:55:boolean isQwertyMode() -> isQwertyMode
    65:65:boolean isShortcutsVisible() -> isShortcutsVisible
    79:79:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    151:151:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    107:107:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    112:112:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    117:117:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    122:122:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    127:127:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    95:95:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    101:101:android.view.SubMenu setIcon(int) -> setIcon
    50:50:void setQwertyMode(boolean) -> setQwertyMode
androidx.appcompat.view.menu.SubMenuWrapperICS -> androidx.appcompat.view.menu.SubMenuWrapperICS:
    39:40:void <init>(android.content.Context,androidx.core.internal.view.SupportSubMenu) -> <init>
    75:75:void clearHeader() -> clearHeader
    92:92:android.view.MenuItem getItem() -> getItem
    57:57:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    63:63:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    45:45:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    51:51:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    69:69:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    80:80:android.view.SubMenu setIcon(int) -> setIcon
    86:86:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
androidx.appcompat.widget.AbsActionBarView -> androidx.appcompat.widget.AbsActionBarView:
    52:52:void <init>(android.content.Context) -> <init>
    56:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    60:67:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    34:34:void access$001(androidx.appcompat.widget.AbsActionBarView,int) -> access$001
    34:34:void access$101(androidx.appcompat.widget.AbsActionBarView,int) -> access$101
    151:154:int getAnimatedVisibility() -> getAnimatedVisibility
    144:144:int getContentHeight() -> getContentHeight
    246:252:int measureChildView(android.view.View,int,int,int) -> measureChildView
    73:83:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    118:132:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    94:107:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    260:267:int positionChild(android.view.View,int,int,int,boolean) -> positionChild
    139:140:void setContentHeight(int) -> setContentHeight
    185:189:void setVisibility(int) -> setVisibility
    158:173:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    194:195:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.AbsActionBarView$1 -> androidx.appcompat.widget.AbsActionBarView$1:
    204:204:void run() -> run
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
    273:274:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    300:300:void onAnimationCancel(android.view.View) -> onAnimationCancel
    292:295:void onAnimationEnd(android.view.View) -> onAnimationEnd
    286:287:void onAnimationStart(android.view.View) -> onAnimationStart
    279:280:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
androidx.appcompat.widget.ActionBarBackgroundDrawable -> androidx.appcompat.widget.ActionBarBackgroundDrawable:
    32:33:void <init>(androidx.appcompat.widget.ActionBarContainer) -> <init>
    38:47:void draw(android.graphics.Canvas) -> draw
    68:75:void getOutline(android.graphics.Outline) -> getOutline
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
    55:55:void <init>(android.content.Context) -> <init>
    59:78:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    168:176:void drawableStateChanged() -> drawableStateChanged
    267:268:int getMeasuredHeightWithMargins(android.view.View) -> getMeasuredHeightWithMargins
    243:243:android.view.View getTabContainer() -> getTabContainer
    263:263:boolean isCollapsed(android.view.View) -> isCollapsed
    182:190:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    84:86:void onFinishInflate() -> onFinishInflate
    222:222:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    209:209:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    303:345:void onLayout(boolean,int,int,int,int) -> onLayout
    273:295:void onMeasure(int,int) -> onMeasure
    214:214:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    90:106:void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    132:147:void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    111:127:void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    229:238:void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView) -> setTabContainer
    202:203:void setTransitioning(boolean) -> setTransitioning
    153:157:void setVisibility(int) -> setVisibility
    257:257:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    162:163:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
    58:58:void <init>(android.content.Context) -> <init>
    62:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:83:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    193:194:void closeMode() -> closeMode
    233:233:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    238:238:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    40:40:int getAnimatedVisibility() -> getAnimatedVisibility
    40:40:int getContentHeight() -> getContentHeight
    130:130:java.lang.CharSequence getSubtitle() -> getSubtitle
    126:126:java.lang.CharSequence getTitle() -> getTitle
    161:189:void initForMode(androidx.appcompat.view.ActionMode) -> initForMode
    134:156:void initTitle() -> initTitle
    378:378:boolean isTitleOptional() -> isTitleOptional
    200:202:void killMode() -> killMode
    88:91:void onDetachedFromWindow() -> onDetachedFromWindow
    40:40:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    359:366:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    323:348:void onLayout(boolean,int,int,int,int) -> onLayout
    243:245:void onMeasure(int,int) -> onMeasure
    40:40:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    97:97:void setContentHeight(int) -> setContentHeight
    101:112:void setCustomView(android.view.View) -> setCustomView
    121:122:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    116:117:void setTitle(java.lang.CharSequence) -> setTitle
    371:374:void setTitleOptional(boolean) -> setTitleOptional
    40:40:void setVisibility(int) -> setVisibility
    40:40:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    207:208:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$1:
    170:170:void <init>(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode) -> <init>
    173:173:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
    131:131:void <clinit>() -> <clinit>
    139:139:void <init>(android.content.Context) -> <init>
    143:146:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    651:652:void addActionBarHideOffset() -> addActionBarHideOffset
    267:282:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> applyInsets
    732:733:boolean canShowOverflowMenu() -> canShowOverflowMenu
    337:337:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    786:787:void dismissPopups() -> dismissPopups
    453:460:void draw(android.graphics.Canvas) -> draw
    289:310:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    56:56:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    322:322:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    56:56:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    327:327:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    332:332:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    617:617:int getActionBarHideOffset() -> getActionBarHideOffset
    592:598:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    580:580:int getNestedScrollAxes() -> getNestedScrollAxes
    675:676:java.lang.CharSequence getTitle() -> getTitle
    628:631:void haltActionBarHideOffsetAnimations() -> haltActionBarHideOffsetAnimations
    756:757:boolean hideOverflowMenu() -> hideOverflowMenu
    150:159:void init(android.content.Context) -> init
    681:684:void initFeature(int) -> initFeature
    195:195:boolean isInOverlayMode() -> isInOverlayMode
    744:745:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    738:739:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    225:227:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    164:165:void onDetachedFromWindow() -> onDetachedFromWindow
    427:446:void onLayout(boolean,int,int,int,int) -> onLayout
    342:419:void onMeasure(int,int) -> onMeasure
    556:564:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    509:509:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    474:474:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    502:502:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    536:537:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    487:487:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    525:529:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    481:481:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    517:520:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    494:494:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    542:550:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    232:250:void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    257:260:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    641:642:void postAddActionBarHideOffset() -> postAddActionBarHideOffset
    636:637:void postRemoveActionBarHideOffset() -> postRemoveActionBarHideOffset
    584:587:void pullChildren() -> pullChildren
    646:647:void removeActionBarHideOffset() -> removeActionBarHideOffset
    621:624:void setActionBarHideOffset(int) -> setActionBarHideOffset
    169:177:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    199:199:void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    603:607:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    714:715:void setIcon(int) -> setIcon
    720:721:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    726:727:void setLogo(int) -> setLogo
    768:769:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    762:763:void setMenuPrepared() -> setMenuPrepared
    183:190:void setOverlayMode(boolean) -> setOverlayMode
    663:664:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    669:670:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    656:658:boolean shouldHideActionBarOnFling(float,float) -> shouldHideActionBarOnFling
    750:751:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$1:
    98:98:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    107:108:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    101:102:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$2:
    112:112:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    115:117:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$3:
    121:121:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    124:127:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams:
    792:792:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    796:796:void <init>(int,int) -> <init>
    800:800:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ActionMenuPresenter -> androidx.appcompat.widget.ActionMenuPresenter:
    87:83:void <init>(android.content.Context) -> <init>
    54:54:androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter) -> access$000
    54:54:androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter) -> access$100
    54:54:androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter) -> access$200
    54:54:androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter) -> access$300
    54:54:androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter) -> access$400
    54:54:androidx.appcompat.view.menu.MenuView access$500(androidx.appcompat.widget.ActionMenuPresenter) -> access$500
    207:216:void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> bindItemView
    377:378:boolean dismissPopupMenus() -> dismissPopupMenus
    275:276:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    317:324:android.view.View findViewForItem(android.view.MenuItem) -> findViewForItem
    417:544:boolean flagActionItems() -> flagActionItems
    191:200:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    181:184:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    171:174:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    358:366:boolean hideOverflowMenu() -> hideOverflowMenu
    388:389:boolean hideSubMenus() -> hideSubMenus
    92:129:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    403:403:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    399:399:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    552:553:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    133:137:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    281:312:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    583:585:void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
    158:158:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    590:591:void setMenuView(androidx.appcompat.widget.ActionMenuView) -> setMenuView
    162:166:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    148:149:void setReserveOverflow(boolean) -> setReserveOverflow
    221:221:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> shouldIncludeItem
    336:345:boolean showOverflowMenu() -> showOverflowMenu
    226:270:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu:
    738:747:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View) -> <init>
    752:755:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    805:805:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    810:810:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable:
    787:788:void <init>(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    793:800:void run() -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton:
    633:643:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context) -> <init>
    676:681:boolean performClick() -> performClick
    697:710:boolean setFrame(int,int,int,int) -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1:
    643:643:void <init>(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    646:650:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    655:655:boolean onForwardingStarted() -> onForwardingStarted
    664:668:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup:
    720:723:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    728:733:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback:
    760:760:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    774:779:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    767:769:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuPresenter$SavedState -> androidx.appcompat.widget.ActionMenuPresenter$SavedState:
    615:615:void <clinit>() -> <clinit>
    598:598:void <init>() -> <init>
    601:602:void <init>(android.os.Parcel) -> <init>
    612:612:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1 -> androidx.appcompat.widget.ActionMenuPresenter$SavedState$1:
    616:616:void <init>() -> <init>
    616:616:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    619:619:androidx.appcompat.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    616:616:java.lang.Object[] newArray(int) -> newArray
    624:624:androidx.appcompat.widget.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
    76:76:void <init>(android.content.Context) -> <init>
    80:86:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    610:610:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:724:void dismissPopupMenus() -> dismissPopupMenus
    48:48:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    583:585:androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    591:591:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    597:605:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    616:617:androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    651:663:android.view.Menu getMenu() -> getMenu
    565:566:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    113:113:int getPopupTheme() -> getPopupTheme
    736:743:boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    700:700:boolean hideOverflowMenu() -> hideOverflowMenu
    639:639:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    625:625:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    716:716:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    710:710:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    572:572:boolean isOverflowReserved() -> isOverflowReserved
    404:432:int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    128:135:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    544:545:void onDetachedFromWindow() -> onDetachedFromWindow
    439:537:void onLayout(boolean,int,int,int,int) -> onLayout
    147:172:void onMeasure(int,int) -> onMeasure
    178:386:void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    682:682:androidx.appcompat.view.menu.MenuBuilder peekMenu() -> peekMenu
    756:756:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    672:673:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    141:141:void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    554:555:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    578:578:void setOverflowReserved(boolean) -> setOverflowReserved
    97:102:void setPopupTheme(int) -> setPopupTheme
    122:123:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter) -> setPresenter
    691:691:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback:
    793:793:void <init>() -> <init>
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$LayoutParams:
    833:833:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    837:837:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    841:842:void <init>(androidx.appcompat.widget.ActionMenuView$LayoutParams) -> <init>
    846:847:void <init>(int,int) -> <init>
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback:
    775:775:void <init>(androidx.appcompat.widget.ActionMenuView) -> <init>
    780:781:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    786:787:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.ActivityChooserModel -> androidx.appcompat.widget.ActivityChooserModel:
    157:223:void <clinit>() -> <clinit>
    346:352:void <init>(android.content.Context,java.lang.String) -> <init>
    727:733:boolean addHistoricalRecord(androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord) -> addHistoricalRecord
    457:488:android.content.Intent chooseActivity(int) -> chooseActivity
    654:659:void ensureConsistentState() -> ensureConsistentState
    330:337:androidx.appcompat.widget.ActivityChooserModel get(android.content.Context,java.lang.String) -> get
    410:413:android.content.pm.ResolveInfo getActivity(int) -> getActivity
    395:398:int getActivityCount() -> getActivityCount
    424:435:int getActivityIndex(android.content.pm.ResolveInfo) -> getActivityIndex
    512:517:android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    641:644:int getHistorySize() -> getHistorySize
    687:695:boolean loadActivitiesIfNeeded() -> loadActivitiesIfNeeded
    566:567:void persistHistoricalDataIfNeeded() -> persistHistoricalDataIfNeeded
    742:748:void pruneExcessiveHistoricalRecordsIfNeeded() -> pruneExcessiveHistoricalRecordsIfNeeded
    710:714:boolean readHistoricalDataIfNeeded() -> readHistoricalDataIfNeeded
    966:1031:void readHistoricalDataImpl() -> readHistoricalDataImpl
    532:553:void setDefaultActivity(int) -> setDefaultActivity
    671:673:boolean sortActivitiesIfNeeded() -> sortActivitiesIfNeeded
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo -> androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo:
    869:870:void <init>(android.content.pm.ResolveInfo) -> <init>
    852:852:int compareTo(java.lang.Object) -> compareTo
    898:898:int compareTo(androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo) -> compareTo
    886:890:boolean equals(java.lang.Object) -> equals
    875:875:int hashCode() -> hashCode
    903:908:java.lang.String toString() -> toString
androidx.appcompat.widget.ActivityChooserModel$DefaultSorter -> androidx.appcompat.widget.ActivityChooserModel$DefaultSorter:
    921:918:void <init>() -> <init>
    927:953:void sort(android.content.Intent,java.util.List,java.util.List) -> sort
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord -> androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord:
    783:783:void <init>(java.lang.String,long,float) -> <init>
    793:796:void <init>(android.content.ComponentName,long,float) -> <init>
    817:831:boolean equals(java.lang.Object) -> equals
    803:805:int hashCode() -> hashCode
    839:845:java.lang.String toString() -> toString
androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask -> androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask:
    1039:1039:void <init>(androidx.appcompat.widget.ActivityChooserModel) -> <init>
    1037:1037:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    1045:1053:java.lang.Void doInBackground(java.lang.Object[]) -> doInBackground
androidx.appcompat.widget.ActivityChooserView -> androidx.appcompat.widget.ActivityChooserView:
    201:201:void <init>(android.content.Context) -> <init>
    211:211:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    222:295:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    415:419:boolean dismissPopup() -> dismissPopup
    484:484:androidx.appcompat.widget.ActivityChooserModel getDataModel() -> getDataModel
    528:536:androidx.appcompat.widget.ListPopupWindow getListPopupWindow() -> getListPopupWindow
    431:431:boolean isShowingPopup() -> isShowingPopup
    436:441:void onAttachedToWindow() -> onAttachedToWindow
    446:458:void onDetachedFromWindow() -> onDetachedFromWindow
    477:479:void onLayout(boolean,int,int,int,int) -> onLayout
    463:472:void onMeasure(int,int) -> onMeasure
    304:307:void setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel) -> setActivityChooserModel
    519:519:void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    337:338:void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    323:323:void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    505:505:void setInitialActivityCount(int) -> setInitialActivityCount
    493:493:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    347:347:void setProvider(androidx.core.view.ActionProvider) -> setProvider
    356:360:boolean showPopup() -> showPopup
    370:371:void showPopupUnchecked(int) -> showPopupUnchecked
    544:570:void updateAppearance() -> updateAppearance
androidx.appcompat.widget.ActivityChooserView$1 -> androidx.appcompat.widget.ActivityChooserView$1:
    135:135:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    139:140:void onChanged() -> onChanged
    144:145:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ActivityChooserView$2 -> androidx.appcompat.widget.ActivityChooserView$2:
    149:149:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    152:158:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.ActivityChooserView$3 -> androidx.appcompat.widget.ActivityChooserView$3:
    255:255:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    258:259:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
androidx.appcompat.widget.ActivityChooserView$4 -> androidx.appcompat.widget.ActivityChooserView$4:
    262:262:void <init>(androidx.appcompat.widget.ActivityChooserView,android.view.View) -> <init>
    265:265:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    270:270:boolean onForwardingStarted() -> onForwardingStarted
    276:276:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActivityChooserView$5 -> androidx.appcompat.widget.ActivityChooserView$5:
    286:286:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    289:290:void onChanged() -> onChanged
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter -> androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter:
    690:682:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    836:836:int getActivityCount() -> getActivityCount
    722:727:int getCount() -> getCount
    844:844:androidx.appcompat.widget.ActivityChooserModel getDataModel() -> getDataModel
    825:825:android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    840:840:int getHistorySize() -> getHistorySize
    735:743:java.lang.Object getItem(int) -> getItem
    707:707:int getItemViewType(int) -> getItemViewType
    858:858:boolean getShowDefaultActivity() -> getShowDefaultActivity
    756:785:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    796:812:int measureContentWidth() -> measureContentWidth
    694:702:void setDataModel(androidx.appcompat.widget.ActivityChooserModel) -> setDataModel
    818:820:void setMaxActivityCount(int) -> setMaxActivityCount
    849:853:void setShowDefaultActivity(boolean,boolean) -> setShowDefaultActivity
    829:831:void setShowFooterView(boolean) -> setShowFooterView
androidx.appcompat.widget.ActivityChooserView$Callbacks -> androidx.appcompat.widget.ActivityChooserView$Callbacks:
    580:580:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    659:660:void notifyOnDismissListener() -> notifyOnDismissListener
    618:631:void onClick(android.view.View) -> onClick
    652:654:void onDismiss() -> onDismiss
    586:606:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    638:644:boolean onLongClick(android.view.View) -> onLongClick
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
    869:869:void <clinit>() -> <clinit>
    874:877:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
    55:55:void <init>(android.content.Context) -> <init>
    59:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    218:232:void forceUniformWidth(int,int) -> forceUniformWidth
    265:342:void onLayout(boolean,int,int,int,int) -> onLayout
    64:66:void onMeasure(int,int) -> onMeasure
    248:256:int resolveMinimumHeight(android.view.View) -> resolveMinimumHeight
    348:348:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    75:203:boolean tryOnMeasure(int,int) -> tryOnMeasure
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> androidx.appcompat.widget.AppCompatAutoCompleteTextView:
    58:58:void <clinit>() -> <clinit>
    66:66:void <init>(android.content.Context) -> <init>
    70:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    170:175:void drawableStateChanged() -> drawableStateChanged
    136:137:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    164:165:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    189:189:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    106:108:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    98:100:void setBackgroundResource(int) -> setBackgroundResource
    200:199:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    93:93:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    121:122:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    149:150:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    181:183:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatBackgroundHelper -> androidx.appcompat.widget.AppCompatBackgroundHelper:
    41:43:void <init>(android.view.View) -> <init>
    173:191:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    118:131:void applySupportBackgroundTint() -> applySupportBackgroundTint
    100:100:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    114:114:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    47:71:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    84:87:void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> onSetBackgroundDrawable
    75:80:void onSetBackgroundResource(int) -> onSetBackgroundResource
    139:147:void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
    91:96:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    104:110:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    151:155:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatButton -> androidx.appcompat.widget.AppCompatButton:
    68:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    156:161:void drawableStateChanged() -> drawableStateChanged
    324:328:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    308:312:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    292:296:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    340:344:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    274:280:int getAutoSizeTextType() -> getAutoSizeTextType
    122:123:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    150:151:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    175:176:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    181:182:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    187:189:void onLayout(boolean,int,int,int,int) -> onLayout
    206:208:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    238:243:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    256:260:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    219:223:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    92:94:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    84:86:void setBackgroundResource(int) -> setBackgroundResource
    372:371:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    360:361:void setSupportAllCaps(boolean) -> setSupportAllCaps
    107:108:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    135:136:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    167:169:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    195:199:void setTextSize(int,float) -> setTextSize
androidx.appcompat.widget.AppCompatCheckBox -> androidx.appcompat.widget.AppCompatCheckBox:
    61:61:void <init>(android.content.Context) -> <init>
    65:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:77:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    224:229:void drawableStateChanged() -> drawableStateChanged
    95:97:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    174:175:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    202:203:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    121:122:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    146:147:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    208:210:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    216:218:void setBackgroundResource(int) -> setBackgroundResource
    82:84:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    90:90:void setButtonDrawable(int) -> setButtonDrawable
    159:160:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    187:188:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    108:109:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    133:134:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatCheckedTextView -> androidx.appcompat.widget.AppCompatCheckedTextView:
    40:40:void <clinit>() -> <clinit>
    51:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:64:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    82:84:void drawableStateChanged() -> drawableStateChanged
    90:90:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    69:69:void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    101:100:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    74:76:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> androidx.appcompat.widget.AppCompatCompoundButtonHelper:
    52:53:void <init>(android.widget.CompoundButton) -> <init>
    130:146:void applyButtonTint() -> applyButtonTint
    151:156:int getCompoundPaddingLeft(int) -> getCompoundPaddingLeft
    105:105:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    116:116:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    57:94:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    120:126:void onSetButtonDrawable() -> onSetButtonDrawable
    98:101:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    109:112:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatDrawableManager -> androidx.appcompat.widget.AppCompatDrawableManager:
    49:49:void <clinit>() -> <clinit>
    46:46:void <init>() -> <init>
    46:46:android.graphics.PorterDuff$Mode access$000() -> access$000
    397:400:androidx.appcompat.widget.AppCompatDrawableManager get() -> get
    406:406:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    411:411:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    438:438:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    429:429:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    415:416:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    54:391:void preload() -> preload
    433:433:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
androidx.appcompat.widget.AppCompatDrawableManager$1 -> androidx.appcompat.widget.AppCompatDrawableManager$1:
    57:126:void <init>() -> <init>
    291:291:boolean arrayContains(int[],int) -> arrayContains
    141:141:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> createBorderlessButtonColorStateList
    156:179:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> createButtonColorStateList
    146:146:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> createColoredButtonColorStateList
    134:134:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> createDefaultButtonColorStateList
    232:236:android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> createDrawableFor
    187:226:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> createSwitchThumbColorStateList
    303:317:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int) -> getTintListForDrawableRes
    383:384:android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int) -> getTintModeForDrawableRes
    244:247:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> setPorterDuffColorFilter
    254:281:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawable
    333:366:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.AppCompatEditText -> androidx.appcompat.widget.AppCompatEditText:
    69:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:82:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    173:178:void drawableStateChanged() -> drawableStateChanged
    139:140:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    167:168:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    58:58:java.lang.CharSequence getText() -> getText
    91:96:android.text.Editable getText() -> getText
    230:231:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    192:192:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    109:111:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    101:103:void setBackgroundResource(int) -> setBackgroundResource
    203:202:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    124:125:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    152:153:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    184:186:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    212:213:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatHintHelper -> androidx.appcompat.widget.AppCompatHintHelper:
    43:43:void <init>() -> <init>
    28:37:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> onCreateInputConnection
androidx.appcompat.widget.AppCompatImageButton -> androidx.appcompat.widget.AppCompatImageButton:
    69:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    241:246:void drawableStateChanged() -> drawableStateChanged
    152:153:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    180:181:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    207:208:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    235:236:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    252:252:boolean hasOverlappingRendering() -> hasOverlappingRendering
    122:124:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    114:116:void setBackgroundResource(int) -> setBackgroundResource
    98:100:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    90:92:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    85:85:void setImageResource(int) -> setImageResource
    106:108:void setImageURI(android.net.Uri) -> setImageURI
    137:138:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    165:166:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    192:193:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    220:221:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatImageHelper -> androidx.appcompat.widget.AppCompatImageHelper:
    45:46:void <init>(android.widget.ImageView) -> <init>
    196:214:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    137:154:void applySupportImageTint() -> applySupportImageTint
    119:119:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    133:133:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    99:100:boolean hasOverlappingRendering() -> hasOverlappingRendering
    50:81:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    86:95:void setImageResource(int) -> setImageResource
    110:115:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    123:129:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    174:178:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatImageView -> androidx.appcompat.widget.AppCompatImageView:
    64:64:void <init>(android.content.Context) -> <init>
    68:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:78:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    252:257:void drawableStateChanged() -> drawableStateChanged
    162:163:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    190:191:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    218:219:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    246:247:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    263:263:boolean hasOverlappingRendering() -> hasOverlappingRendering
    132:134:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    124:126:void setBackgroundResource(int) -> setBackgroundResource
    108:110:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    100:102:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    92:94:void setImageResource(int) -> setImageResource
    116:118:void setImageURI(android.net.Uri) -> setImageURI
    147:148:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    175:176:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    203:204:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    231:232:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    55:55:void <clinit>() -> <clinit>
    67:67:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:85:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    167:172:void drawableStateChanged() -> drawableStateChanged
    133:134:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    161:162:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    186:186:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    103:105:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    95:97:void setBackgroundResource(int) -> setBackgroundResource
    90:90:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    118:119:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    146:147:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    178:180:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatPopupWindow -> androidx.appcompat.widget.AppCompatPopupWindow:
    34:34:void <clinit>() -> <clinit>
    46:47:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:59:void init(android.content.Context,android.util.AttributeSet,int,int) -> init
    90:93:void setSupportOverlapAnchor(boolean) -> setSupportOverlapAnchor
    64:68:void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    73:77:void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    82:86:void update(android.view.View,int,int,int,int) -> update
androidx.appcompat.widget.AppCompatProgressBarHelper -> androidx.appcompat.widget.AppCompatProgressBarHelper:
    38:38:void <clinit>() -> <clinit>
    47:48:void <init>(android.widget.ProgressBar) -> <init>
    140:141:android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    145:145:android.graphics.Bitmap getSampleTile() -> getSampleTile
    52:65:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    73:109:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    122:133:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
androidx.appcompat.widget.AppCompatRadioButton -> androidx.appcompat.widget.AppCompatRadioButton:
    65:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:77:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    225:230:void drawableStateChanged() -> drawableStateChanged
    95:97:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    175:176:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    203:204:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    121:122:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    146:147:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    209:211:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    217:219:void setBackgroundResource(int) -> setBackgroundResource
    82:84:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    90:90:void setButtonDrawable(int) -> setButtonDrawable
    160:161:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    188:189:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    108:109:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    133:134:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatRatingBar -> androidx.appcompat.widget.AppCompatRatingBar:
    44:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:51:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:64:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.AppCompatSeekBar -> androidx.appcompat.widget.AppCompatSeekBar:
    43:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:50:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    61:62:void drawableStateChanged() -> drawableStateChanged
    67:68:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    55:57:void onDraw(android.graphics.Canvas) -> onDraw
androidx.appcompat.widget.AppCompatSeekBarHelper -> androidx.appcompat.widget.AppCompatSeekBarHelper:
    42:43:void <init>(android.widget.SeekBar) -> <init>
    125:139:void applyTickMarkTint() -> applyTickMarkTint
    162:179:void drawTickMarks(android.graphics.Canvas) -> drawTickMarks
    151:154:void drawableStateChanged() -> drawableStateChanged
    145:146:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    48:73:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    77:92:void setTickMark(android.graphics.drawable.Drawable) -> setTickMark
androidx.appcompat.widget.AppCompatSpinner -> androidx.appcompat.widget.AppCompatSpinner:
    78:78:void <clinit>() -> <clinit>
    129:129:void <init>(android.content.Context,int) -> <init>
    140:140:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    155:155:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    174:174:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    203:293:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    558:587:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> compatMeasureContentWidth
    543:545:void drawableStateChanged() -> drawableStateChanged
    365:368:int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    339:342:int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    384:387:int getDropDownWidth() -> getDropDownWidth
    595:595:androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup() -> getInternalPopup
    320:323:android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    301:301:android.content.Context getPopupContext() -> getPopupContext
    464:464:java.lang.CharSequence getPrompt() -> getPrompt
    508:509:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    537:538:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    411:414:void onDetachedFromWindow() -> onDetachedFromWindow
    428:432:void onMeasure(int,int) -> onMeasure
    617:640:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    609:611:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    420:423:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    441:450:boolean performClick() -> performClick
    76:76:void setAdapter(android.widget.Adapter) -> setAdapter
    396:405:void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    477:479:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    469:471:void setBackgroundResource(int) -> setBackgroundResource
    349:353:void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    330:333:void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    375:378:void setDropDownWidth(int) -> setDropDownWidth
    306:309:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    315:315:void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    455:458:void setPrompt(java.lang.CharSequence) -> setPrompt
    493:494:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    522:523:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    599:602:void showPopup() -> showPopup
androidx.appcompat.widget.AppCompatSpinner$1 -> androidx.appcompat.widget.AppCompatSpinner$1:
    256:256:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    259:259:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    265:266:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.widget.AppCompatSpinner$2 -> androidx.appcompat.widget.AppCompatSpinner$2:
    624:624:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    627:635:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DialogPopup -> androidx.appcompat.widget.AppCompatSpinner$DialogPopup:
    848:848:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    856:858:void dismiss() -> dismiss
    879:879:java.lang.CharSequence getHintText() -> getHintText
    864:864:boolean isShowing() -> isShowing
    903:907:void onClick(android.content.DialogInterface,int) -> onClick
    869:869:void setAdapter(android.widget.ListAdapter) -> setAdapter
    912:912:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    922:922:void setHorizontalOffset(int) -> setHorizontalOffset
    942:942:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    874:874:void setPromptText(java.lang.CharSequence) -> setPromptText
    917:917:void setVerticalOffset(int) -> setVerticalOffset
    884:898:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter:
    693:711:void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    768:770:boolean areAllItemsEnabled() -> areAllItemsEnabled
    719:719:int getCount() -> getCount
    739:740:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    724:724:java.lang.Object getItem(int) -> getItem
    729:729:long getItemId(int) -> getItemId
    734:734:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    745:745:boolean hasStableIds() -> hasStableIds
    802:802:boolean isEmpty() -> isEmpty
    782:784:boolean isEnabled(int) -> isEnabled
    750:751:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    757:758:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup:
    958:965:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    952:952:void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> access$001
    996:1030:void computeContentWidth() -> computeContentWidth
    986:986:java.lang.CharSequence getHintText() -> getHintText
    1102:1102:int getHorizontalOriginalOffset() -> getHorizontalOriginalOffset
    1092:1092:boolean isVisibleToUser(android.view.View) -> isVisibleToUser
    980:981:void setAdapter(android.widget.ListAdapter) -> setAdapter
    1097:1097:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    992:992:void setPromptText(java.lang.CharSequence) -> setPromptText
    1035:1076:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1:
    965:965:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner) -> <init>
    968:973:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2:
    1061:1061:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    1064:1071:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3:
    1076:1076:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    1079:1081:void onDismiss() -> onDismiss
androidx.appcompat.widget.AppCompatSpinner$SavedState -> androidx.appcompat.widget.AppCompatSpinner$SavedState:
    663:663:void <clinit>() -> <clinit>
    649:649:void <init>(android.os.Parcelable) -> <init>
    653:654:void <init>(android.os.Parcel) -> <init>
    659:660:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.AppCompatSpinner$SavedState$1 -> androidx.appcompat.widget.AppCompatSpinner$SavedState$1:
    664:664:void <init>() -> <init>
    664:664:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    666:666:androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    664:664:java.lang.Object[] newArray(int) -> newArray
    670:670:androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.AppCompatTextClassifierHelper -> androidx.appcompat.widget.AppCompatTextClassifierHelper:
    42:43:void <init>(android.widget.TextView) -> <init>
    62:68:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    51:51:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatTextHelper -> androidx.appcompat.widget.AppCompatTextHelper:
    74:76:void <init>(android.widget.TextView) -> <init>
    555:555:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo) -> applyCompoundDrawableTint
    536:548:void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
    592:592:void autoSizeText() -> autoSizeText
    561:565:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int) -> createTintInfo
    637:637:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    633:633:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    629:629:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    641:641:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    625:625:int getAutoSizeTextType() -> getAutoSizeTextType
    646:646:android.content.res.ColorStateList getCompoundDrawableTintList() -> getCompoundDrawableTintList
    660:660:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode() -> getCompoundDrawableTintMode
    598:598:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    81:329:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    574:575:void onLayout(boolean,int,int,int,int) -> onLayout
    532:532:void onSetCompoundDrawables() -> onSetCompoundDrawables
    485:523:void onSetTextAppearance(android.content.Context,int) -> onSetTextAppearance
    347:347:void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    528:528:void setAllCaps(boolean) -> setAllCaps
    614:614:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    620:620:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    606:606:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    650:655:void setCompoundDrawableTintList(android.content.res.ColorStateList) -> setCompoundDrawableTintList
    664:669:void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    685:710:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    673:678:void setCompoundTints() -> setCompoundTints
    582:584:void setTextSize(int,float) -> setTextSize
    602:602:void setTextSizeInternal(int,float) -> setTextSizeInternal
    337:339:void setTypefaceByCallback(android.graphics.Typeface) -> setTypefaceByCallback
    407:457:void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray) -> updateTypefaceAndStyle
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback -> androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback:
    379:382:void <init>(androidx.appcompat.widget.AppCompatTextHelper,int,int) -> <init>
    387:397:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback -> androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback:
    359:361:void <init>(androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback,java.lang.ref.WeakReference,android.graphics.Typeface) -> <init>
    366:370:void run() -> run
androidx.appcompat.widget.AppCompatTextView -> androidx.appcompat.widget.AppCompatTextView:
    91:91:void <init>(android.content.Context) -> <init>
    95:95:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    99:108:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    482:486:void consumeTextFutureAndSetBlocking() -> consumeTextFutureAndSetBlocking
    193:198:void drawableStateChanged() -> drawableStateChanged
    365:369:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    346:350:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    327:331:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    384:388:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    306:312:int getAutoSizeTextType() -> getAutoSizeTextType
    422:422:int getFirstBaselineToTopHeight() -> getFirstBaselineToTopHeight
    427:427:int getLastBaselineToBottomHeight() -> getLastBaselineToBottomHeight
    151:152:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    179:180:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    634:634:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    677:677:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    495:496:java.lang.CharSequence getText() -> getText
    523:524:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    454:454:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat() -> getTextMetricsParamsCompat
    396:396:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    204:206:void onLayout(boolean,int,int,int,int) -> onLayout
    550:551:void onMeasure(int,int) -> onMeasure
    223:225:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    263:268:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    285:289:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    240:244:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    121:123:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    113:115:void setBackgroundResource(int) -> setBackgroundResource
    557:559:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    567:569:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    599:601:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    609:616:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    576:578:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    584:591:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    442:441:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    402:405:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    412:415:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    432:432:void setLineHeight(int) -> setLineHeight
    478:478:void setPrecomputedText(androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    136:137:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    164:165:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    657:658:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    697:698:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    185:187:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    505:506:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
    542:544:void setTextFuture(java.util.concurrent.Future) -> setTextFuture
    465:465:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParamsCompat
    212:216:void setTextSize(int,float) -> setTextSize
    705:708:void setTypeface(android.graphics.Typeface,int) -> setTypeface
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
    63:76:void <clinit>() -> <clinit>
    105:107:void <init>(android.widget.TextView) -> <init>
    811:818:java.lang.Object accessAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> accessAndReturnWithDefault
    546:581:void autoSizeText() -> autoSizeText
    453:475:int[] cleanupAutoSizePresetSizes(int[]) -> cleanupAutoSizePresetSizes
    585:590:void clearAutoSizeConfiguration() -> clearAutoSizeConfiguration
    679:684:android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createLayout
    725:748:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createStaticLayoutForMeasuring
    771:778:android.text.StaticLayout createStaticLayoutForMeasuringPre16(java.lang.CharSequence,android.text.Layout$Alignment,int) -> createStaticLayoutForMeasuringPre16
    754:760:android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int) -> createStaticLayoutForMeasuringPre23
    642:644:int findLargestTextSizeWhichFits(android.graphics.RectF) -> findLargestTextSizeWhichFits
    410:410:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    394:394:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    378:378:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    423:423:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    364:364:int getAutoSizeTextType() -> getAutoSizeTextType
    846:857:java.lang.reflect.Field getTextViewField(java.lang.String) -> getTextViewField
    826:838:java.lang.reflect.Method getTextViewMethod(java.lang.String) -> getTextViewMethod
    667:673:void initTempTextPaint(int) -> initTempTextPaint
    793:802:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> invokeAndReturnWithDefault
    870:870:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    115:184:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    271:284:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    314:341:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    204:207:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    604:632:void setRawTextSize(float) -> setRawTextSize
    596:600:void setTextSizeInternal(int,float) -> setTextSizeInternal
    516:536:boolean setupAutoSizeText() -> setupAutoSizeText
    427:435:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> setupAutoSizeUniformPresetSizes
    440:448:boolean setupAutoSizeUniformPresetSizesConfiguration() -> setupAutoSizeUniformPresetSizesConfiguration
    689:713:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> suggestedSizeFitsInSpace
    879:879:boolean supportsAutoSizeText() -> supportsAutoSizeText
    508:492:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> validateAndSetAutoSizeTextTypeUniformConfiguration
androidx.appcompat.widget.AppCompatToggleButton -> androidx.appcompat.widget.AppCompatToggleButton:
    42:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:49:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
    51:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    154:154:int getMinimumHeight() -> getMinimumHeight
    144:145:int getNextVisibleChildIndex(int) -> getNextVisibleChildIndex
    175:175:boolean isStacked() -> isStacked
    72:139:void onMeasure(int,int) -> onMeasure
    61:66:void setAllowStacking(boolean) -> setAllowStacking
    158:170:void setStacked(boolean) -> setStacked
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
    59:59:void <init>(android.content.Context) -> <init>
    63:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    76:76:void dispatchFitSystemWindows(android.graphics.Rect) -> dispatchFitSystemWindows
    195:196:android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    200:201:android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    185:186:android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    190:191:android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    175:176:android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    180:181:android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    206:208:void onAttachedToWindow() -> onAttachedToWindow
    214:216:void onDetachedFromWindow() -> onDetachedFromWindow
    99:170:void onMeasure(int,int) -> onMeasure
    80:80:void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
    91:93:void setDecorPadding(int,int,int,int) -> setDecorPadding
androidx.appcompat.widget.DialogTitle -> androidx.appcompat.widget.DialogTitle:
    40:40:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:48:void <init>(android.content.Context) -> <init>
    53:76:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.DrawableUtils -> androidx.appcompat.widget.DrawableUtils:
    45:59:void <clinit>() -> <clinit>
    66:66:void <init>() -> <init>
    142:173:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> canSafelyMutateDrawable
    131:133:void fixDrawable(android.graphics.drawable.Drawable) -> fixDrawable
    184:193:void fixVectorDrawableTinting(android.graphics.drawable.Drawable) -> fixVectorDrawableTinting
    73:122:android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> getOpticalBounds
    206:201:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
androidx.appcompat.widget.DropDownListView -> androidx.appcompat.widget.DropDownListView:
    118:126:void <init>(android.content.Context,boolean) -> <init>
    629:641:void clearPressedItem() -> clearPressedItem
    542:543:void clickPressedItem(android.view.View,int) -> clickPressedItem
    200:203:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    565:569:void drawSelectorCompat(android.graphics.Canvas) -> drawSelectorCompat
    186:193:void drawableStateChanged() -> drawableStateChanged
    164:164:boolean hasFocus() -> hasFocus
    144:144:boolean hasWindowFocus() -> hasWindowFocus
    154:154:boolean isFocused() -> isFocused
    134:134:boolean isInTouchMode() -> isInTouchMode
    290:349:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    471:472:void onDetachedFromWindow() -> onDetachedFromWindow
    485:531:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    430:458:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    208:217:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    604:624:void positionSelectorCompat(int,android.view.View) -> positionSelectorCompat
    586:599:void positionSelectorLikeFocusCompat(int,android.view.View) -> positionSelectorLikeFocusCompat
    575:579:void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> positionSelectorLikeTouchCompat
    554:554:void setListSelectionHidden(boolean) -> setListSelectionHidden
    646:689:void setPressedItem(android.view.View,int,float,float) -> setPressedItem
    169:180:void setSelector(android.graphics.drawable.Drawable) -> setSelector
    373:374:void setSelectorEnabled(boolean) -> setSelectorEnabled
    693:693:boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    558:560:void updateSelectorStateCompat() -> updateSelectorStateCompat
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> androidx.appcompat.widget.DropDownListView$GateKeeperDrawable:
    382:383:void <init>(android.graphics.drawable.Drawable) -> <init>
    400:401:void draw(android.graphics.Canvas) -> draw
    387:387:void setEnabled(boolean) -> setEnabled
    407:408:void setHotspot(float,float) -> setHotspot
    414:415:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    392:393:boolean setState(int[]) -> setState
    421:422:boolean setVisible(boolean,boolean) -> setVisible
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable:
    700:700:void <init>(androidx.appcompat.widget.DropDownListView) -> <init>
    711:712:void cancel() -> cancel
    716:716:void post() -> post
    706:707:void run() -> run
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
    37:37:void <init>(android.content.Context) -> <init>
    41:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:46:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
    37:37:void <init>(android.content.Context) -> <init>
    41:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:46:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.ForwardingListener -> androidx.appcompat.widget.ForwardingListener:
    68:77:void <init>(android.view.View) -> <init>
    216:221:void clearCallbacks() -> clearCallbacks
    139:141:boolean onForwardingStarted() -> onForwardingStarted
    156:158:boolean onForwardingStopped() -> onForwardingStopped
    226:248:void onLongPress() -> onLongPress
    94:111:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    259:280:boolean onTouchForwarded(android.view.MotionEvent) -> onTouchForwarded
    170:188:boolean onTouchObserved(android.view.MotionEvent) -> onTouchObserved
    121:125:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    289:290:boolean pointInView(android.view.View,float,float,float) -> pointInView
    309:311:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> toGlobalMotionEvent
    298:300:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> toLocalMotionEvent
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> androidx.appcompat.widget.ForwardingListener$DisallowIntercept:
    316:316:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    321:323:void run() -> run
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> androidx.appcompat.widget.ForwardingListener$TriggerLongPress:
    329:329:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    334:334:void run() -> run
androidx.appcompat.widget.LinearLayoutCompat -> androidx.appcompat.widget.LinearLayoutCompat:
    149:149:void <init>(android.content.Context) -> <init>
    153:153:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    157:188:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1755:1755:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    326:362:void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    299:321:void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    367:369:void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    373:375:void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    1321:1336:void forceUniformHeight(int,int) -> forceUniformHeight
    899:914:void forceUniformWidth(int,int) -> forceUniformWidth
    57:57:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1738:1741:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1725:1725:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1748:1748:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    427:432:int getBaseline() -> getBaseline
    484:484:int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    225:225:android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    272:272:int getDividerPadding() -> getDividerPadding
    282:282:int getDividerWidth() -> getDividerWidth
    1704:1704:int getGravity() -> getGravity
    1671:1671:int getOrientation() -> getOrientation
    216:216:int getShowDividers() -> getShowDividers
    509:509:android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    522:522:int getVirtualChildCount() -> getVirtualChildCount
    533:533:float getWeightSum() -> getWeightSum
    571:577:boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    1525:1643:void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    1430:1507:void layoutVertical(int,int,int,int) -> layoutVertical
    1381:1381:void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    932:1313:void measureHorizontal(int,int) -> measureHorizontal
    599:893:void measureVertical(int,int) -> measureVertical
    287:294:void onDraw(android.graphics.Canvas) -> onDraw
    1760:1761:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1766:1767:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1410:1413:void onLayout(boolean,int,int,int,int) -> onLayout
    554:557:void onMeasure(int,int) -> onMeasure
    396:396:void setBaselineAligned(boolean) -> setBaselineAligned
    492:494:void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    1649:1649:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    236:248:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    261:261:void setDividerPadding(int) -> setDividerPadding
    1683:1693:void setGravity(int) -> setGravity
    1709:1711:void setHorizontalGravity(int) -> setHorizontalGravity
    422:422:void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    1658:1660:void setOrientation(int) -> setOrientation
    199:202:void setShowDividers(int) -> setShowDividers
    1717:1719:void setVerticalGravity(int) -> setVerticalGravity
    549:549:void setWeightSum(float) -> setWeightSum
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> androidx.appcompat.widget.LinearLayoutCompat$LayoutParams:
    1793:1800:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1807:1808:void <init>(int,int) -> <init>
    1830:1787:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ListPopupWindow -> androidx.appcompat.widget.ListPopupWindow:
    84:105:void <clinit>() -> <clinit>
    225:225:void <init>(android.content.Context) -> <init>
    249:249:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    262:278:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1159:1326:int buildDropDown() -> buildDropDown
    847:852:void clearListSelection() -> clearListSelection
    951:951:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    773:777:void dismiss() -> dismiss
    461:461:android.view.View getAnchorView() -> getAnchorView
    424:424:android.graphics.drawable.Drawable getBackground() -> getBackground
    478:478:int getHorizontalOffset() -> getHorizontalOffset
    947:947:android.widget.ListView getListView() -> getListView
    1446:1458:int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    494:497:int getVerticalOffset() -> getVerticalOffset
    546:546:int getWidth() -> getWidth
    869:869:boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    346:346:boolean isModal() -> isModal
    861:861:boolean isShowing() -> isShowing
    790:794:void removePromptView() -> removePromptView
    288:299:void setAdapter(android.widget.ListAdapter) -> setAdapter
    471:471:void setAnchorView(android.view.View) -> setAnchorView
    442:442:void setAnimationStyle(int) -> setAnimationStyle
    433:433:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    566:571:void setContentWidth(int) -> setContentWidth
    539:539:void setDropDownGravity(int) -> setDropDownGravity
    518:518:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    487:487:void setHorizontalOffset(int) -> setHorizontalOffset
    812:812:void setInputMethodMode(int) -> setInputMethodMode
    336:337:void setModal(boolean) -> setModal
    786:786:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    620:620:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    1339:1340:void setOverlapAnchor(boolean) -> setOverlapAnchor
    1432:1441:void setPopupClipToScreenEnabled(boolean) -> setPopupClipToScreenEnabled
    313:313:void setPromptPosition(int) -> setPromptPosition
    831:837:void setSelection(int) -> setSelection
    506:507:void setVerticalOffset(int) -> setVerticalOffset
    556:556:void setWidth(int) -> setWidth
    664:763:void show() -> show
androidx.appcompat.widget.ListPopupWindow$1 -> androidx.appcompat.widget.ListPopupWindow$1:
    1141:1141:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    1144:1144:androidx.appcompat.widget.ListPopupWindow getPopup() -> getPopup
androidx.appcompat.widget.ListPopupWindow$2 -> androidx.appcompat.widget.ListPopupWindow$2:
    1168:1168:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1172:1174:void run() -> run
androidx.appcompat.widget.ListPopupWindow$3 -> androidx.appcompat.widget.ListPopupWindow$3:
    1187:1187:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1193:1196:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> androidx.appcompat.widget.ListPopupWindow$ListSelectorHider:
    1362:1362:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1367:1367:void run() -> run
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver:
    1344:1344:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1349:1351:void onChanged() -> onChanged
    1357:1357:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> androidx.appcompat.widget.ListPopupWindow$PopupScrollListener:
    1408:1408:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1419:1422:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor:
    1387:1387:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1392:1401:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable:
    1372:1372:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1377:1381:void run() -> run
androidx.appcompat.widget.MenuPopupWindow -> androidx.appcompat.widget.MenuPopupWindow:
    60:65:void <clinit>() -> <clinit>
    72:72:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    77:78:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    119:120:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    127:128:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    83:84:void setEnterTransition(java.lang.Object) -> setEnterTransition
    89:90:void setExitTransition(java.lang.Object) -> setExitTransition
    95:95:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    103:112:void setTouchModal(boolean) -> setTouchModal
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
    144:154:void <init>(android.content.Context,boolean) -> <init>
    135:135:boolean hasFocus() -> hasFocus
    135:135:boolean hasWindowFocus() -> hasWindowFocus
    135:135:boolean isFocused() -> isFocused
    135:135:boolean isInTouchMode() -> isInTouchMode
    135:135:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    135:135:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    190:231:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    168:184:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    135:135:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    159:159:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    135:135:void setSelector(android.graphics.drawable.Drawable) -> setSelector
androidx.appcompat.widget.PopupMenu -> androidx.appcompat.widget.PopupMenu:
    247:247:void dismiss() -> dismiss
    238:238:void show() -> show
androidx.appcompat.widget.PopupMenu$1 -> androidx.appcompat.widget.PopupMenu$1:
    112:113:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
androidx.appcompat.widget.PopupMenu$2 -> androidx.appcompat.widget.PopupMenu$2:
    128:129:void onDismiss() -> onDismiss
androidx.appcompat.widget.PopupMenu$3 -> androidx.appcompat.widget.PopupMenu$3:
    191:191:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    178:178:boolean onForwardingStarted() -> onForwardingStarted
    184:184:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ResourceManagerInternal -> androidx.appcompat.widget.ResourceManagerInternal:
    83:112:void <clinit>() -> <clinit>
    62:118:void <init>() -> <init>
    367:370:void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate) -> addDelegate
    336:346:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> addDrawableToCache
    417:425:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addTintListToCache
    497:507:void checkVectorDrawableSetup(android.content.Context) -> checkVectorDrawableSetup
    167:167:long createCacheKey(android.util.TypedValue) -> createCacheKey
    172:192:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> createDrawableIfNeeded
    478:479:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> createTintFilter
    94:98:androidx.appcompat.widget.ResourceManagerInternal get() -> get
    315:331:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> getCachedDrawable
    132:132:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    137:155:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    485:493:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    394:404:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    408:410:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> getTintListFromCache
    389:389:android.graphics.PorterDuff$Mode getTintMode(int) -> getTintMode
    105:108:void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal) -> installDefaultInflateDelegates
    513:514:boolean isVectorDrawable(android.graphics.drawable.Drawable) -> isVectorDrawable
    229:305:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> loadDrawableFromDelegates
    159:164:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    351:358:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    128:129:void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks) -> setHooks
    200:218:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> tintDrawable
    451:469:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
    363:363:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate:
    552:552:void <init>() -> <init>
    558:560:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate:
    535:535:void <init>() -> <init>
    543:545:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache -> androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache:
    431:431:void <init>(int) -> <init>
    445:445:int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> generateCacheKey
    435:435:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> get
    439:439:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> put
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate:
    518:518:void <init>() -> <init>
    526:528:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourcesWrapper -> androidx.appcompat.widget.ResourcesWrapper:
    48:49:void <init>(android.content.res.Resources) -> <init>
    183:183:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    168:168:boolean getBoolean(int) -> getBoolean
    158:158:int getColor(int) -> getColor
    163:163:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    245:245:android.content.res.Configuration getConfiguration() -> getConfiguration
    110:110:float getDimension(int) -> getDimension
    115:115:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    120:120:int getDimensionPixelSize(int) -> getDimensionPixelSize
    240:240:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    130:130:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    136:136:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    142:142:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    148:148:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    125:125:float getFraction(int,int,int) -> getFraction
    250:250:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    100:100:int[] getIntArray(int) -> getIntArray
    173:173:int getInteger(int) -> getInteger
    178:178:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    153:153:android.graphics.Movie getMovie(int) -> getMovie
    75:75:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    80:80:java.lang.String getQuantityString(int,int) -> getQuantityString
    59:59:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    270:270:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    255:255:java.lang.String getResourceName(int) -> getResourceName
    260:260:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    265:265:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    64:64:java.lang.String getString(int) -> getString
    69:69:java.lang.String getString(int,java.lang.Object[]) -> getString
    95:95:java.lang.String[] getStringArray(int) -> getStringArray
    54:54:java.lang.CharSequence getText(int) -> getText
    85:85:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    90:90:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    209:209:void getValue(int,android.util.TypedValue,boolean) -> getValue
    222:222:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    216:216:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    188:188:android.content.res.XmlResourceParser getXml(int) -> getXml
    227:227:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    105:105:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    193:193:java.io.InputStream openRawResource(int) -> openRawResource
    198:198:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    203:203:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    282:282:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    276:276:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    232:234:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.RtlSpacingHelper -> androidx.appcompat.widget.RtlSpacingHelper:
    25:36:void <init>() -> <init>
    51:51:int getEnd() -> getEnd
    39:39:int getLeft() -> getLeft
    43:43:int getRight() -> getRight
    47:47:int getStart() -> getStart
    68:70:void setAbsolute(int,int) -> setAbsolute
    74:88:void setDirection(boolean) -> setDirection
    55:63:void setRelative(int,int) -> setRelative
androidx.appcompat.widget.ScrollingTabContainerView -> androidx.appcompat.widget.ScrollingTabContainerView:
    77:77:void <clinit>() -> <clinit>
    260:272:void animateToTab(int) -> animateToTab
    214:219:android.widget.Spinner createSpinner() -> createSpinner
    293:304:androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean) -> createTabView
    146:146:boolean isCollapsed() -> isCollapsed
    277:280:void onAttachedToWindow() -> onAttachedToWindow
    225:231:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    286:288:void onDetachedFromWindow() -> onDetachedFromWindow
    371:372:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    97:136:void onMeasure(int,int) -> onMeasure
    154:169:void performCollapse() -> performCollapse
    173:178:boolean performExpand() -> performExpand
    150:150:void setAllowCollapse(boolean) -> setAllowCollapse
    199:200:void setContentHeight(int) -> setContentHeight
    183:194:void setTabSelected(int) -> setTabSelected
androidx.appcompat.widget.ScrollingTabContainerView$1 -> androidx.appcompat.widget.ScrollingTabContainerView$1:
    264:264:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.view.View) -> <init>
    267:269:void run() -> run
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter -> androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter:
    526:526:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    531:531:int getCount() -> getCount
    536:536:java.lang.Object getItem(int) -> getItem
    547:549:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener -> androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener:
    556:556:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    561:566:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ScrollingTabContainerView$TabView -> androidx.appcompat.widget.ScrollingTabContainerView$TabView:
    394:409:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean) -> <init>
    413:414:void bindTab(androidx.appcompat.app.ActionBar$Tab) -> bindTab
    521:521:androidx.appcompat.app.ActionBar$Tab getTab() -> getTab
    428:430:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    435:438:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    443:447:void onMeasure(int,int) -> onMeasure
    419:422:void setSelected(boolean) -> setSelected
    453:516:void update() -> update
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener -> androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener:
    598:598:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    590:593:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    584:585:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
    176:176:void <clinit>() -> <clinit>
    267:267:void <init>(android.content.Context) -> <init>
    271:271:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    275:386:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1364:1383:void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    497:501:void clearFocus() -> clearFocus
    1537:1559:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    1656:1690:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    1582:1635:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    1567:1569:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    1202:1202:void dismissSuggestions() -> dismissSuggestions
    1697:1701:void forceSuggestionQuery() -> forceSuggestionQuery
    851:855:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> getChildBoundsWithinSearchView
    1088:1097:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    452:452:int getImeOptions() -> getImeOptions
    474:474:int getInputType() -> getInputType
    777:777:int getMaxWidth() -> getMaxWidth
    864:865:int getPreferredHeight() -> getPreferredHeight
    859:860:int getPreferredWidth() -> getPreferredWidth
    559:559:java.lang.CharSequence getQuery() -> getQuery
    619:624:java.lang.CharSequence getQueryHint() -> getQueryHint
    394:394:int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    390:390:int getSuggestionRowLayout() -> getSuggestionRowLayout
    755:755:androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    893:901:boolean hasVoiceSearch() -> hasVoiceSearch
    683:683:boolean isIconified() -> isIconified
    1706:1706:boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    910:910:boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    1500:1502:void launchIntent(android.content.Intent) -> launchIntent
    1517:1518:void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    1477:1483:boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    1279:1283:void onActionViewCollapsed() -> onActionViewCollapsed
    1291:1297:void onActionViewExpanded() -> onActionViewExpanded
    1206:1220:void onCloseClicked() -> onCloseClicked
    964:966:void onDetachedFromWindow() -> onDetachedFromWindow
    1388:1392:boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    1399:1401:boolean onItemSelected(int) -> onItemSelected
    832:845:void onLayout(boolean,int,int,int,int) -> onLayout
    783:826:void onMeasure(int,int) -> onMeasure
    973:973:void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    1353:1360:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1345:1347:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1226:1230:void onSearchClicked() -> onSearchClicked
    1188:1196:void onSubmitQuery() -> onSubmitQuery
    1043:1055:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    1174:1184:void onTextChanged(java.lang.CharSequence) -> onTextChanged
    1258:1263:void onTextFocusChanged() -> onTextFocusChanged
    1236:1253:void onVoiceClicked() -> onVoiceClicked
    1269:1271:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    945:945:void postUpdateFocusedState() -> postUpdateFocusedState
    480:491:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    1444:1462:void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    429:429:void setAppSearchData(android.os.Bundle) -> setAppSearchData
    670:672:void setIconified(boolean) -> setIconified
    642:645:void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    441:441:void setImeOptions(int) -> setImeOptions
    464:464:void setInputType(int) -> setInputType
    764:766:void setMaxWidth(int) -> setMaxWidth
    520:520:void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener) -> setOnCloseListener
    529:529:void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    511:511:void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    550:550:void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    538:538:void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    571:579:void setQuery(java.lang.CharSequence,boolean) -> setQuery
    1510:1512:void setQuery(java.lang.CharSequence) -> setQuery
    594:595:void setQueryHint(java.lang.CharSequence) -> setQueryHint
    723:725:void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    406:419:void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    695:696:void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    745:747:void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter) -> setSuggestionsAdapter
    933:940:void updateCloseButton() -> updateCloseButton
    949:959:void updateFocusedState() -> updateFocusedState
    1102:1103:void updateQueryHint() -> updateQueryHint
    1110:1140:void updateSearchAutoComplete() -> updateSearchAutoComplete
    924:929:void updateSubmitArea() -> updateSubmitArea
    915:919:void updateSubmitButton(boolean) -> updateSubmitButton
    869:889:void updateViewsVisibility(boolean) -> updateViewsVisibility
    1154:1158:void updateVoiceButton(boolean) -> updateVoiceButton
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$1:
    178:178:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    181:181:void run() -> run
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$10:
    1713:1713:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1720:1720:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$2:
    185:185:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    188:189:void run() -> run
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$3:
    331:331:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    334:335:void onFocusChange(android.view.View,boolean) -> onFocusChange
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$4:
    376:376:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    380:380:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$5:
    976:976:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    979:988:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$6:
    998:998:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1002:1026:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$7:
    1161:1161:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1168:1168:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$8:
    1407:1407:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1415:1415:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$9:
    1419:1419:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1427:1427:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector -> androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector:
    2029:2047:void <init>() -> <init>
    2063:2065:void doAfterTextChanged(android.widget.AutoCompleteTextView) -> doAfterTextChanged
    2054:2056:void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> doBeforeTextChanged
    2072:2074:void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> ensureImeVisible
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$SavedState:
    1325:1325:void <clinit>() -> <clinit>
    1304:1304:void <init>(android.os.Parcelable) -> <init>
    1308:1309:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1320:1321:java.lang.String toString() -> toString
    1314:1315:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$SavedState$1:
    1325:1325:void <init>() -> <init>
    1325:1325:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1325:1325:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1328:1328:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1333:1333:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1325:1325:java.lang.Object[] newArray(int) -> newArray
    1338:1338:androidx.appcompat.widget.SearchView$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
    1842:1842:void <init>(android.content.Context) -> <init>
    1846:1846:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1850:1851:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1931:1931:boolean enoughToFilter() -> enoughToFilter
    1964:1968:int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    1876:1876:boolean isEmpty() -> isEmpty
    1983:1986:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1856:1858:void onFinishInflate() -> onFinishInflate
    1921:1922:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1939:1957:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1903:1914:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    2002:2021:void setImeVisibility(boolean) -> setImeVisibility
    1863:1863:void setSearchView(androidx.appcompat.widget.SearchView) -> setSearchView
    1868:1869:void setThreshold(int) -> setThreshold
    1992:1996:void showSoftInputIfNecessary() -> showSoftInputIfNecessary
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$1:
    1834:1834:void <init>(androidx.appcompat.widget.SearchView$SearchAutoComplete) -> <init>
    1837:1837:void run() -> run
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$UpdatableTouchDelegate:
    1760:1766:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    1778:1817:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1770:1773:void setBounds(android.graphics.Rect,android.graphics.Rect) -> setBounds
androidx.appcompat.widget.ShareActionProvider -> androidx.appcompat.widget.ShareActionProvider:
    222:238:android.view.View onCreateActionView() -> onCreateActionView
    258:283:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    411:417:void updateIntent(android.content.Intent) -> updateIntent
androidx.appcompat.widget.ShareActionProvider$ShareActivityChooserModelPolicy -> androidx.appcompat.widget.ShareActionProvider$ShareActivityChooserModelPolicy:
    402:403:boolean onChooseActivity(androidx.appcompat.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener -> androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener:
    362:372:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.SuggestionsAdapter -> androidx.appcompat.widget.SuggestionsAdapter:
    96:106:void <init>(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap) -> <init>
    276:322:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    218:236:void changeCursor(android.database.Cursor) -> changeCursor
    584:589:android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    420:433:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    337:345:java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    648:653:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    626:636:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    677:678:java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    607:613:android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> getDefaultIcon1
    551:576:android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    700:703:android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> getDrawableFromResourceUri
    508:535:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    474:482:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    363:371:android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    375:379:android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    742:779:android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> getSearchManagerSuggestions
    686:688:java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
    451:459:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    245:250:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    182:184:void notifyDataSetChanged() -> notifyDataSetChanged
    190:192:void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    330:332:void onClick(android.view.View) -> onClick
    147:166:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    119:119:void setQueryRefinement(int) -> setQueryRefinement
    389:402:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    353:358:void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    594:594:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    196:205:void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache -> androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache:
    265:270:void <init>(android.view.View) -> <init>
androidx.appcompat.widget.SwitchCompat -> androidx.appcompat.widget.SwitchCompat:
    101:184:void <clinit>() -> <clinit>
    194:194:void <init>(android.content.Context) -> <init>
    205:205:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    219:294:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1029:1034:void animateThumbToCheckedState(boolean) -> animateThumbToCheckedState
    698:712:void applyThumbTint() -> applyThumbTint
    575:589:void applyTrackTint() -> applyTrackTint
    1038:1039:void cancelPositionAnimator() -> cancelPositionAnimator
    988:991:void cancelSuperTouch(android.view.MotionEvent) -> cancelSuperTouch
    1137:1197:void draw(android.graphics.Canvas) -> draw
    1357:1366:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    1335:1351:void drawableStateChanged() -> drawableStateChanged
    1267:1272:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    1279:1284:int getCompoundPaddingRight() -> getCompoundPaddingRight
    796:796:boolean getShowText() -> getShowText
    737:737:boolean getSplitTrack() -> getSplitTrack
    450:450:int getSwitchMinWidth() -> getSwitchMinWidth
    425:425:int getSwitchPadding() -> getSwitchPadding
    1044:1044:boolean getTargetCheckedState() -> getTargetCheckedState
    765:765:java.lang.CharSequence getTextOff() -> getTextOff
    746:746:java.lang.CharSequence getTextOn() -> getTextOn
    634:634:android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    1297:1302:int getThumbOffset() -> getThumbOffset
    1306:1317:int getThumbScrollRange() -> getThumbScrollRange
    473:473:int getThumbTextPadding() -> getThumbTextPadding
    665:665:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    694:694:android.graphics.PorterDuff$Mode getThumbTintMode() -> getThumbTintMode
    513:513:android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    543:543:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    571:571:android.graphics.PorterDuff$Mode getTrackTintMode() -> getTrackTintMode
    892:904:boolean hitThumb(float,float) -> hitThumb
    1377:1389:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    878:884:android.text.Layout makeLayout(java.lang.CharSequence) -> makeLayout
    1326:1328:int[] onCreateDrawableState(int) -> onCreateDrawableState
    1202:1262:void onDraw(android.graphics.Canvas) -> onDraw
    1395:1396:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1401:1411:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1081:1132:void onLayout(boolean,int,int,int,int) -> onLayout
    801:863:void onMeasure(int,int) -> onMeasure
    869:873:void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    910:984:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1064:1075:void setChecked(boolean) -> setChecked
    1423:1422:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    785:787:void setShowText(boolean) -> setShowText
    727:728:void setSplitTrack(boolean) -> setSplitTrack
    437:438:void setSwitchMinWidth(int) -> setSwitchMinWidth
    413:414:void setSwitchPadding(int) -> setSwitchPadding
    304:339:void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    370:384:void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    396:401:void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    354:358:void setSwitchTypefaceByIndex(int,int) -> setSwitchTypefaceByIndex
    774:775:void setTextOff(java.lang.CharSequence) -> setTextOff
    755:756:void setTextOn(java.lang.CharSequence) -> setTextOn
    603:610:void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    1053:1054:void setThumbPosition(float) -> setThumbPosition
    622:622:void setThumbResource(int) -> setThumbResource
    461:462:void setThumbTextPadding(int) -> setThumbTextPadding
    652:655:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    680:683:void setThumbTintMode(android.graphics.PorterDuff$Mode) -> setThumbTintMode
    484:491:void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    502:502:void setTrackResource(int) -> setTrackResource
    530:533:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    557:560:void setTrackTintMode(android.graphics.PorterDuff$Mode) -> setTrackTintMode
    1000:1024:void stopDrag(android.view.MotionEvent) -> stopDrag
    1059:1059:void toggle() -> toggle
    1372:1372:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.SwitchCompat$1 -> androidx.appcompat.widget.SwitchCompat$1:
    102:102:void <init>(java.lang.Class,java.lang.String) -> <init>
    102:102:java.lang.Object get(java.lang.Object) -> get
    105:105:java.lang.Float get(androidx.appcompat.widget.SwitchCompat) -> get
    102:102:void set(java.lang.Object,java.lang.Object) -> set
    110:110:void set(androidx.appcompat.widget.SwitchCompat,java.lang.Float) -> set
androidx.appcompat.widget.ThemeUtils -> androidx.appcompat.widget.ThemeUtils:
    28:40:void <clinit>() -> <clinit>
    114:114:void <init>() -> <init>
    83:95:int getDisabledThemeAttrColor(android.content.Context,int) -> getDisabledThemeAttrColor
    63:69:int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    109:111:int getThemeAttrColor(android.content.Context,int,float) -> getThemeAttrColor
    73:79:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    100:103:android.util.TypedValue getTypedValue() -> getTypedValue
androidx.appcompat.widget.TintContextWrapper -> androidx.appcompat.widget.TintContextWrapper:
    42:42:void <clinit>() -> <clinit>
    92:102:void <init>(android.content.Context) -> <init>
    128:128:android.content.res.AssetManager getAssets() -> getAssets
    122:122:android.content.res.Resources getResources() -> getResources
    108:108:android.content.res.Resources$Theme getTheme() -> getTheme
    113:116:void setTheme(int) -> setTheme
    78:85:boolean shouldWrap(android.content.Context) -> shouldWrap
    46:72:android.content.Context wrap(android.content.Context) -> wrap
androidx.appcompat.widget.TintInfo -> androidx.appcompat.widget.TintInfo:
    28:28:void <init>() -> <init>
    35:38:void clear() -> clear
androidx.appcompat.widget.TintResources -> androidx.appcompat.widget.TintResources:
    35:36:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    46:49:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
androidx.appcompat.widget.TintTypedArray -> androidx.appcompat.widget.TintTypedArray:
    67:69:void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    151:151:boolean getBoolean(int,boolean) -> getBoolean
    163:163:int getColor(int,int) -> getColor
    167:177:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    189:189:int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    193:193:int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    73:79:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    83:86:android.graphics.drawable.Drawable getDrawableIfKnown(int) -> getDrawableIfKnown
    159:159:float getFloat(int,float) -> getFloat
    112:119:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    155:155:int getInt(int,int) -> getInt
    181:181:int getInteger(int,int) -> getInteger
    201:201:int getLayoutDimension(int,int) -> getLayoutDimension
    209:209:int getResourceId(int,int) -> getResourceId
    143:143:java.lang.String getString(int) -> getString
    139:139:java.lang.CharSequence getText(int) -> getText
    213:213:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    233:233:boolean hasValue(int) -> hasValue
    54:54:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    59:60:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    64:64:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> obtainStyledAttributes
    245:245:void recycle() -> recycle
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
    228:228:void <init>(android.content.Context) -> <init>
    232:232:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    236:350:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2251:2256:void addChildrenForExpandedActionView() -> addChildrenForExpandedActionView
    2139:2161:void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    1510:1525:void addSystemView(android.view.View,boolean) -> addSystemView
    515:515:boolean canShowOverflowMenu() -> canShowOverflowMenu
    2221:2221:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:726:void collapseActionView() -> collapseActionView
    593:594:void dismissPopupMenus() -> dismissPopupMenus
    1491:1500:void ensureCollapseButtonView() -> ensureCollapseButtonView
    2288:2289:void ensureContentInsets() -> ensureContentInsets
    693:694:void ensureLogoView() -> ensureLogoView
    1152:1160:void ensureMenu() -> ensureMenu
    1165:1173:void ensureMenuView() -> ensureMenuView
    1481:1486:void ensureNavButtonView() -> ensureNavButtonView
    145:145:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2216:2216:androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    145:145:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    145:145:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2198:2198:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2203:2210:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2168:2169:int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    2088:2093:int getChildTop(android.view.View,int) -> getChildTop
    2127:2127:int getChildVerticalGravity(int) -> getChildVerticalGravity
    1035:1035:java.lang.CharSequence getCollapseContentDescription() -> getCollapseContentDescription
    1080:1080:android.graphics.drawable.Drawable getCollapseIcon() -> getCollapseIcon
    1266:1266:int getContentInsetEnd() -> getContentInsetEnd
    1388:1390:int getContentInsetEndWithActions() -> getContentInsetEndWithActions
    1309:1309:int getContentInsetLeft() -> getContentInsetLeft
    1329:1329:int getContentInsetRight() -> getContentInsetRight
    1246:1246:int getContentInsetStart() -> getContentInsetStart
    1345:1347:int getContentInsetStartWithNavigation() -> getContentInsetStartWithNavigation
    1441:1447:int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    1460:1462:int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    1475:1477:int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    1426:1428:int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    2186:2188:int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    651:651:android.graphics.drawable.Drawable getLogo() -> getLogo
    689:689:java.lang.CharSequence getLogoDescription() -> getLogoDescription
    1126:1127:android.view.Menu getMenu() -> getMenu
    1178:1178:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    915:915:java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    1007:1007:android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    2315:2315:androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter() -> getOuterActionMenuPresenter
    1147:1148:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    2319:2319:android.content.Context getPopupContext() -> getPopupContext
    377:377:int getPopupTheme() -> getPopupTheme
    792:792:java.lang.CharSequence getSubtitle() -> getSubtitle
    2308:2308:android.widget.TextView getSubtitleTextView() -> getSubtitleTextView
    736:736:java.lang.CharSequence getTitle() -> getTitle
    474:474:int getTitleMarginBottom() -> getTitleMarginBottom
    452:452:int getTitleMarginEnd() -> getTitleMarginEnd
    408:408:int getTitleMarginStart() -> getTitleMarginStart
    430:430:int getTitleMarginTop() -> getTitleMarginTop
    2299:2299:android.widget.TextView getTitleTextView() -> getTitleTextView
    2192:2193:int getVerticalMargins(android.view.View) -> getVerticalMargins
    2043:2056:int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    2231:2234:androidx.appcompat.widget.DecorToolbar getWrapper() -> getWrapper
    709:709:boolean hasExpandedActionView() -> hasExpandedActionView
    549:549:boolean hideOverflowMenu() -> hideOverflowMenu
    1191:1191:void inflateMenu(int) -> inflateMenu
    2260:2260:boolean isChildOrHidden(android.view.View) -> isChildOrHidden
    531:531:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    525:525:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    2063:2070:int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    2076:2083:int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    1652:1669:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    1627:1643:void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    1571:1572:void onDetachedFromWindow() -> onDetachedFromWindow
    1606:1619:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1825:2039:void onLayout(boolean,int,int,int,int) -> onLayout
    1695:1820:void onMeasure(int,int) -> onMeasure
    1543:1560:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    491:496:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    1531:1537:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1582:1595:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1565:1566:void postShowOverflowMenu() -> postShowOverflowMenu
    2238:2245:void removeChildrenForExpandedActionView() -> removeChildrenForExpandedActionView
    1049:1049:void setCollapseContentDescription(int) -> setCollapseContentDescription
    1063:1067:void setCollapseContentDescription(java.lang.CharSequence) -> setCollapseContentDescription
    1094:1094:void setCollapseIcon(int) -> setCollapseIcon
    1109:1112:void setCollapseIcon(android.graphics.drawable.Drawable) -> setCollapseIcon
    2270:2271:void setCollapsible(boolean) -> setCollapsible
    1409:1412:void setContentInsetEndWithActions(int) -> setContentInsetEndWithActions
    1367:1370:void setContentInsetStartWithNavigation(int) -> setContentInsetStartWithNavigation
    1225:1226:void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    509:509:void setLogo(int) -> setLogo
    630:639:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    663:663:void setLogoDescription(int) -> setLogoDescription
    675:679:void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    555:586:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter) -> setMenu
    2280:2283:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    929:929:void setNavigationContentDescription(int) -> setNavigationContentDescription
    943:947:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    966:966:void setNavigationIcon(int) -> setNavigationIcon
    985:994:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    1020:1021:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    1203:1203:void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    1136:1137:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    361:366:void setPopupTheme(int) -> setPopupTheme
    803:803:void setSubtitle(int) -> setSubtitle
    814:837:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    856:858:void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    889:889:void setSubtitleTextColor(int) -> setSubtitleTextColor
    898:900:void setSubtitleTextColor(android.content.res.ColorStateList) -> setSubtitleTextColor
    748:748:void setTitle(int) -> setTitle
    760:783:void setTitle(java.lang.CharSequence) -> setTitle
    485:486:void setTitleMarginBottom(int) -> setTitleMarginBottom
    463:465:void setTitleMarginEnd(int) -> setTitleMarginEnd
    419:421:void setTitleMarginStart(int) -> setTitleMarginStart
    441:443:void setTitleMarginTop(int) -> setTitleMarginTop
    845:847:void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    868:868:void setTitleTextColor(int) -> setTitleTextColor
    877:879:void setTitleTextColor(android.content.res.ColorStateList) -> setTitleTextColor
    1676:1682:boolean shouldCollapse() -> shouldCollapse
    2182:2182:boolean shouldLayout(android.view.View) -> shouldLayout
    540:540:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$1:
    203:203:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    206:207:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$2:
    221:221:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    223:223:void run() -> run
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$3:
    1500:1500:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    1503:1503:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter:
    2447:2447:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    2545:2556:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    2508:2535:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    2453:2456:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    2467:2483:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$LayoutParams:
    2354:2351:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2358:2359:void <init>(int,int) -> <init>
    2372:2374:void <init>(androidx.appcompat.widget.Toolbar$LayoutParams) -> <init>
    2378:2351:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    2382:2385:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2389:2351:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2393:2396:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> copyMarginsFromCompat
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$SavedState:
    2425:2425:void <clinit>() -> <clinit>
    2409:2411:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2415:2415:void <init>(android.os.Parcelable) -> <init>
    2420:2422:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$SavedState$1:
    2425:2425:void <init>() -> <init>
    2425:2425:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2425:2425:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2428:2428:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2433:2433:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2425:2425:java.lang.Object[] newArray(int) -> newArray
    2438:2438:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ToolbarWidgetWrapper -> androidx.appcompat.widget.ToolbarWidgetWrapper:
    96:96:void <init>(androidx.appcompat.widget.Toolbar,boolean) -> <init>
    101:182:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int) -> <init>
    335:335:boolean canShowOverflowMenu() -> canShowOverflowMenu
    232:232:void collapseActionView() -> collapseActionView
    208:210:int detectDisplayOptions() -> detectDisplayOptions
    375:375:void dismissPopupMenus() -> dismissPopupMenus
    222:222:android.content.Context getContext() -> getContext
    380:380:int getDisplayOptions() -> getDisplayOptions
    677:677:android.view.Menu getMenu() -> getMenu
    458:458:int getNavigationMode() -> getNavigationMode
    250:250:java.lang.CharSequence getTitle() -> getTitle
    217:217:android.view.ViewGroup getViewGroup() -> getViewGroup
    227:227:boolean hasExpandedActionView() -> hasExpandedActionView
    355:355:boolean hideOverflowMenu() -> hideOverflowMenu
    286:286:void initIndeterminateProgress() -> initIndeterminateProgress
    281:281:void initProgress() -> initProgress
    345:345:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    340:340:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    448:448:void setCollapsible(boolean) -> setCollapsible
    540:545:void setCustomView(android.view.View) -> setCustomView
    196:201:void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    385:414:void setDisplayOptions(int) -> setDisplayOptions
    422:432:void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    301:301:void setIcon(int) -> setIcon
    306:307:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    312:312:void setLogo(int) -> setLogo
    317:318:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    365:370:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    672:672:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    360:360:void setMenuPrepared() -> setMenuPrepared
    620:621:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    626:626:void setNavigationContentDescription(int) -> setNavigationContentDescription
    593:594:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    273:275:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    255:256:void setTitle(java.lang.CharSequence) -> setTitle
    260:262:void setTitleInt(java.lang.CharSequence) -> setTitleInt
    661:661:void setVisibility(int) -> setVisibility
    237:237:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    243:244:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    566:569:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    350:350:boolean showOverflowMenu() -> showOverflowMenu
    630:634:void updateHomeAccessibility() -> updateHomeAccessibility
    611:614:void updateNavigationIcon() -> updateNavigationIcon
    323:330:void updateToolbarLogo() -> updateToolbarLogo
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> androidx.appcompat.widget.ToolbarWidgetWrapper$1:
    182:183:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper) -> <init>
    187:188:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> androidx.appcompat.widget.ToolbarWidgetWrapper$2:
    569:570:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper,int) -> <init>
    586:586:void onAnimationCancel(android.view.View) -> onAnimationCancel
    579:580:void onAnimationEnd(android.view.View) -> onAnimationEnd
    574:574:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.widget.TooltipCompat -> androidx.appcompat.widget.TooltipCompat:
    48:48:void <init>() -> <init>
    41:44:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.appcompat.widget.TooltipCompatHandler -> androidx.appcompat.widget.TooltipCompatHandler:
    108:116:void <init>(android.view.View,java.lang.CharSequence) -> <init>
    224:224:void cancelPendingShow() -> cancelPendingShow
    250:251:void clearAnchorPos() -> clearAnchorPos
    192:206:void hide() -> hide
    129:140:boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    121:123:boolean onLongClick(android.view.View) -> onLongClick
    159:159:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    220:220:void scheduleShow() -> scheduleShow
    210:215:void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler) -> setPendingHandler
    93:104:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    163:188:void show(boolean) -> show
    235:242:boolean updateAnchorPos(android.view.MotionEvent) -> updateAnchorPos
androidx.appcompat.widget.TooltipCompatHandler$1 -> androidx.appcompat.widget.TooltipCompatHandler$1:
    54:54:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    57:57:void run() -> run
androidx.appcompat.widget.TooltipCompatHandler$2 -> androidx.appcompat.widget.TooltipCompatHandler$2:
    60:60:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    63:63:void run() -> run
androidx.appcompat.widget.TooltipPopup -> androidx.appcompat.widget.TooltipPopup:
    58:71:void <init>(android.content.Context) -> <init>
    104:181:void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams) -> computePosition
    187:202:android.view.View getAppRootView(android.view.View) -> getAppRootView
    90:95:void hide() -> hide
    99:99:boolean isShowing() -> isShowing
    77:86:void show(android.view.View,int,int,boolean,java.lang.CharSequence) -> show
androidx.appcompat.widget.VectorEnabledTintResources -> androidx.appcompat.widget.VectorEnabledTintResources:
    55:56:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    66:70:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    93:93:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    42:42:boolean shouldBeUsed() -> shouldBeUsed
    75:75:android.graphics.drawable.Drawable superGetDrawable(int) -> superGetDrawable
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
    53:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    83:83:int getInflatedId() -> getInflatedId
    144:144:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    113:113:int getLayoutResource() -> getLayoutResource
    196:235:android.view.View inflate() -> inflate
    149:149:void onMeasure(int,int) -> onMeasure
    97:97:void setInflatedId(int) -> setInflatedId
    137:137:void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    129:129:void setLayoutResource(int) -> setLayoutResource
    248:248:void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
    173:183:void setVisibility(int) -> setVisibility
androidx.appcompat.widget.ViewUtils -> androidx.appcompat.widget.ViewUtils:
    42:50:void <clinit>() -> <clinit>
    55:55:void <init>() -> <init>
    66:70:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    58:58:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    80:90:void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
androidx.arch.core.R -> androidx.arch.core.R:
    10:10:void <init>() -> <init>
androidx.arch.core.executor.ArchTaskExecutor -> androidx.arch.core.executor.ArchTaskExecutor:
    42:50:void <clinit>() -> <clinit>
    57:59:void <init>() -> <init>
    96:96:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    111:111:java.util.concurrent.Executor getIOThreadExecutor() -> getIOThreadExecutor
    69:76:androidx.arch.core.executor.ArchTaskExecutor getInstance() -> getInstance
    116:116:boolean isMainThread() -> isMainThread
    101:101:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.ArchTaskExecutor$1 -> androidx.arch.core.executor.ArchTaskExecutor$1:
    42:42:void <init>() -> <init>
    45:45:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.ArchTaskExecutor$2 -> androidx.arch.core.executor.ArchTaskExecutor$2:
    50:50:void <init>() -> <init>
    53:53:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.DefaultTaskExecutor -> androidx.arch.core.executor.DefaultTaskExecutor:
    34:38:void <init>() -> <init>
    56:56:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    74:74:boolean isMainThread() -> isMainThread
    61:69:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.DefaultTaskExecutor$1 -> androidx.arch.core.executor.DefaultTaskExecutor$1:
    38:41:void <init>(androidx.arch.core.executor.DefaultTaskExecutor) -> <init>
    45:46:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.arch.core.executor.TaskExecutor -> androidx.arch.core.executor.TaskExecutor:
    31:31:void <init>() -> <init>
androidx.arch.core.internal.FastSafeIterableMap -> androidx.arch.core.internal.FastSafeIterableMap:
    35:37:void <init>() -> <init>
    75:76:java.util.Map$Entry ceil(java.lang.Object) -> ceil
    66:66:boolean contains(java.lang.Object) -> contains
    41:41:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    46:50:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    56:57:java.lang.Object remove(java.lang.Object) -> remove
androidx.arch.core.internal.SafeIterableMap -> androidx.arch.core.internal.SafeIterableMap:
    35:43:void <init>() -> <init>
    150:151:java.util.Iterator descendingIterator() -> descendingIterator
    169:169:java.util.Map$Entry eldest() -> eldest
    184:201:boolean equals(java.lang.Object) -> equals
    46:51:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    207:209:int hashCode() -> hashCode
    140:141:java.util.Iterator iterator() -> iterator
    160:161:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> iteratorWithAdditions
    176:176:java.util.Map$Entry newest() -> newest
    75:85:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> put
    66:70:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    98:123:java.lang.Object remove(java.lang.Object) -> remove
    130:130:int size() -> size
    216:226:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> androidx.arch.core.internal.SafeIterableMap$AscendingIterator:
    283:283:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    293:293:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    288:288:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> androidx.arch.core.internal.SafeIterableMap$DescendingIterator:
    300:300:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    310:310:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    305:305:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$Entry -> androidx.arch.core.internal.SafeIterableMap$Entry:
    362:364:void <init>(java.lang.Object,java.lang.Object) -> <init>
    395:399:boolean equals(java.lang.Object) -> equals
    370:370:java.lang.Object getKey() -> getKey
    376:376:java.lang.Object getValue() -> getValue
    404:404:int hashCode() -> hashCode
    381:381:java.lang.Object setValue(java.lang.Object) -> setValue
    386:386:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
    318:316:void <init>(androidx.arch.core.internal.SafeIterableMap) -> <init>
    332:335:boolean hasNext() -> hasNext
    314:314:java.lang.Object next() -> next
    340:346:java.util.Map$Entry next() -> next
    324:326:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$ListIterator -> androidx.arch.core.internal.SafeIterableMap$ListIterator:
    234:236:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    241:241:boolean hasNext() -> hasNext
    229:229:java.lang.Object next() -> next
    271:272:java.util.Map$Entry next() -> next
    263:266:androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> nextNode
    247:257:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.collection.ArrayMap -> androidx.collection.ArrayMap:
    57:57:void <init>() -> <init>
    64:64:void <init>(int) -> <init>
    182:182:java.util.Set entrySet() -> entrySet
    75:123:androidx.collection.MapCollections getCollection() -> getCollection
    194:194:java.util.Set keySet() -> keySet
    142:144:void putAll(java.util.Map) -> putAll
    164:164:boolean retainAll(java.util.Collection) -> retainAll
    206:206:java.util.Collection values() -> values
androidx.collection.ArrayMap$1 -> androidx.collection.ArrayMap$1:
    76:76:void <init>(androidx.collection.ArrayMap) -> <init>
    119:119:void colClear() -> colClear
    84:84:java.lang.Object colGetEntry(int,int) -> colGetEntry
    99:99:java.util.Map colGetMap() -> colGetMap
    79:79:int colGetSize() -> colGetSize
    89:89:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    94:94:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    104:104:void colPut(java.lang.Object,java.lang.Object) -> colPut
    114:114:void colRemoveAt(int) -> colRemoveAt
    109:109:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ArraySet -> androidx.collection.ArraySet:
    50:51:void <clinit>() -> <clinit>
    240:240:void <init>() -> <init>
    247:254:void <init>(int) -> <init>
    361:401:boolean add(java.lang.Object) -> add
    719:722:boolean addAll(java.util.Collection) -> addAll
    161:195:void allocArrays(int) -> allocArrays
    282:286:void clear() -> clear
    315:315:boolean contains(java.lang.Object) -> contains
    705:706:boolean containsAll(java.util.Collection) -> containsAll
    295:303:void ensureCapacity(int) -> ensureCapacity
    562:571:boolean equals(java.lang.Object) -> equals
    200:231:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    634:682:androidx.collection.MapCollections getCollection() -> getCollection
    590:593:int hashCode() -> hashCode
    83:110:int indexOf(java.lang.Object,int) -> indexOf
    325:325:int indexOf(java.lang.Object) -> indexOf
    121:148:int indexOfNull() -> indexOfNull
    343:343:boolean isEmpty() -> isEmpty
    694:694:java.util.Iterator iterator() -> iterator
    433:435:boolean remove(java.lang.Object) -> remove
    735:736:boolean removeAll(java.util.Collection) -> removeAll
    447:491:java.lang.Object removeAt(int) -> removeAt
    750:752:boolean retainAll(java.util.Collection) -> retainAll
    522:522:int size() -> size
    528:529:java.lang.Object[] toArray() -> toArray
    536:543:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    607:625:java.lang.String toString() -> toString
    335:335:java.lang.Object valueAt(int) -> valueAt
androidx.collection.ArraySet$1 -> androidx.collection.ArraySet$1:
    635:635:void <init>(androidx.collection.ArraySet) -> <init>
    678:678:void colClear() -> colClear
    643:643:java.lang.Object colGetEntry(int,int) -> colGetEntry
    658:658:java.util.Map colGetMap() -> colGetMap
    638:638:int colGetSize() -> colGetSize
    648:648:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    653:653:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    663:663:void colPut(java.lang.Object,java.lang.Object) -> colPut
    673:673:void colRemoveAt(int) -> colRemoveAt
    668:668:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.CircularArray -> androidx.collection.CircularArray:
    49:49:void <init>() -> <init>
    58:60:void <init>(int) -> <init>
androidx.collection.CircularIntArray -> androidx.collection.CircularIntArray:
    50:50:void <init>() -> <init>
    59:61:void <init>(int) -> <init>
androidx.collection.ContainerHelpers -> androidx.collection.ContainerHelpers:
    20:22:void <clinit>() -> <clinit>
    83:83:void <init>() -> <init>
    51:51:int binarySearch(int[],int,int) -> binarySearch
    70:70:int binarySearch(long[],int,long) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    25:25:int idealIntArraySize(int) -> idealIntArraySize
    29:29:int idealLongArraySize(int) -> idealLongArraySize
androidx.collection.LongSparseArray -> androidx.collection.LongSparseArray:
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    72:79:void <init>(int) -> <init>
    456:482:void append(long,java.lang.Object) -> append
    440:448:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.LongSparseArray clone() -> clone
    132:132:void delete(long) -> delete
    217:237:void gc() -> gc
    109:109:java.lang.Object get(long) -> get
    118:123:java.lang.Object get(long,java.lang.Object) -> get
    353:357:long keyAt(int) -> keyAt
    248:290:void put(long,java.lang.Object) -> put
    139:144:void remove(long) -> remove
    327:331:int size() -> size
    494:515:java.lang.String toString() -> toString
    373:377:java.lang.Object valueAt(int) -> valueAt
androidx.collection.LruCache -> androidx.collection.LruCache:
    51:53:void <init>(int) -> <init>
    88:84:java.lang.Object get(java.lang.Object) -> get
    143:139:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    259:261:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    348:350:java.lang.String toString() -> toString
    171:187:void trimToSize(int) -> trimToSize
androidx.collection.MapCollections -> androidx.collection.MapCollections:
    32:32:void <init>() -> <init>
    459:461:boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    518:522:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    533:536:java.util.Set getEntrySet() -> getEntrySet
    540:543:java.util.Set getKeySet() -> getKeySet
    547:550:java.util.Collection getValues() -> getValues
    469:474:boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    478:485:boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    490:493:java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    499:509:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
androidx.collection.MapCollections$ArrayIterator -> androidx.collection.MapCollections$ArrayIterator:
    43:45:void <init>(androidx.collection.MapCollections,int) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:55:java.lang.Object next() -> next
    64:65:void remove() -> remove
androidx.collection.MapCollections$EntrySet -> androidx.collection.MapCollections$EntrySet:
    167:167:void <init>(androidx.collection.MapCollections) -> <init>
    167:167:boolean add(java.lang.Object) -> add
    170:170:boolean add(java.util.Map$Entry) -> add
    175:179:boolean addAll(java.util.Collection) -> addAll
    184:184:void clear() -> clear
    189:197:boolean contains(java.lang.Object) -> contains
    202:204:boolean containsAll(java.util.Collection) -> containsAll
    253:253:boolean equals(java.lang.Object) -> equals
    259:263:int hashCode() -> hashCode
    213:213:boolean isEmpty() -> isEmpty
    218:218:java.util.Iterator iterator() -> iterator
    223:223:boolean remove(java.lang.Object) -> remove
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:int size() -> size
    243:243:java.lang.Object[] toArray() -> toArray
    248:248:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$KeySet -> androidx.collection.MapCollections$KeySet:
    269:269:void <init>(androidx.collection.MapCollections) -> <init>
    273:273:boolean add(java.lang.Object) -> add
    278:278:boolean addAll(java.util.Collection) -> addAll
    283:283:void clear() -> clear
    288:288:boolean contains(java.lang.Object) -> contains
    293:293:boolean containsAll(java.util.Collection) -> containsAll
    343:343:boolean equals(java.lang.Object) -> equals
    349:351:int hashCode() -> hashCode
    298:298:boolean isEmpty() -> isEmpty
    303:303:java.util.Iterator iterator() -> iterator
    308:310:boolean remove(java.lang.Object) -> remove
    318:318:boolean removeAll(java.util.Collection) -> removeAll
    323:323:boolean retainAll(java.util.Collection) -> retainAll
    328:328:int size() -> size
    333:333:java.lang.Object[] toArray() -> toArray
    338:338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$MapIterator -> androidx.collection.MapCollections$MapIterator:
    79:81:void <init>(androidx.collection.MapCollections) -> <init>
    137:138:boolean equals(java.lang.Object) -> equals
    110:111:java.lang.Object getKey() -> getKey
    119:120:java.lang.Object getValue() -> getValue
    86:86:boolean hasNext() -> hasNext
    151:152:int hashCode() -> hashCode
    74:74:java.lang.Object next() -> next
    91:91:java.util.Map$Entry next() -> next
    99:100:void remove() -> remove
    128:129:java.lang.Object setValue(java.lang.Object) -> setValue
    163:163:java.lang.String toString() -> toString
androidx.collection.MapCollections$ValuesCollection -> androidx.collection.MapCollections$ValuesCollection:
    357:357:void <init>(androidx.collection.MapCollections) -> <init>
    361:361:boolean add(java.lang.Object) -> add
    366:366:boolean addAll(java.util.Collection) -> addAll
    371:371:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    381:383:boolean containsAll(java.util.Collection) -> containsAll
    392:392:boolean isEmpty() -> isEmpty
    397:397:java.util.Iterator iterator() -> iterator
    402:404:boolean remove(java.lang.Object) -> remove
    412:417:boolean removeAll(java.util.Collection) -> removeAll
    428:433:boolean retainAll(java.util.Collection) -> retainAll
    444:444:int size() -> size
    449:449:java.lang.Object[] toArray() -> toArray
    454:454:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.SimpleArrayMap -> androidx.collection.SimpleArrayMap:
    236:239:void <init>() -> <init>
    246:253:void <init>(int) -> <init>
    165:196:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:280:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:301:void ensureCapacity(int) -> ensureCapacity
    684:724:boolean equals(java.lang.Object) -> equals
    201:228:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    369:369:java.lang.Object get(java.lang.Object) -> get
    380:381:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    743:748:int hashCode() -> hashCode
    88:115:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:153:int indexOfNull() -> indexOfNull
    326:336:int indexOfValue(java.lang.Object) -> indexOfValue
    419:419:boolean isEmpty() -> isEmpty
    390:390:java.lang.Object keyAt(int) -> keyAt
    432:482:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    523:525:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    538:540:java.lang.Object remove(java.lang.Object) -> remove
    553:557:boolean remove(java.lang.Object,java.lang.Object) -> remove
    570:623:java.lang.Object removeAt(int) -> removeAt
    637:639:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    653:657:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    410:411:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    668:668:int size() -> size
    762:787:java.lang.String toString() -> toString
    399:399:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SparseArrayCompat -> androidx.collection.SparseArrayCompat:
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    72:79:void <init>(int) -> <init>
    460:486:void append(int,java.lang.Object) -> append
    444:452:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.SparseArrayCompat clone() -> clone
    230:250:void gc() -> gc
    109:109:java.lang.Object get(int) -> get
    118:123:java.lang.Object get(int,java.lang.Object) -> get
    401:405:int indexOfKey(int) -> indexOfKey
    361:365:int keyAt(int) -> keyAt
    261:303:void put(int,java.lang.Object) -> put
    139:144:void remove(int) -> remove
    340:344:int size() -> size
    498:519:java.lang.String toString() -> toString
    375:379:java.lang.Object valueAt(int) -> valueAt
androidx.core.R -> androidx.core.R:
    10:10:void <init>() -> <init>
androidx.core.R$attr -> androidx.core.R$attr:
    13:13:void <init>() -> <init>
androidx.core.R$color -> androidx.core.R$color:
    29:29:void <init>() -> <init>
androidx.core.R$dimen -> androidx.core.R$dimen:
    37:37:void <init>() -> <init>
androidx.core.R$drawable -> androidx.core.R$drawable:
    63:63:void <init>() -> <init>
androidx.core.R$id -> androidx.core.R$id:
    79:79:void <init>() -> <init>
androidx.core.R$integer -> androidx.core.R$integer:
    150:150:void <init>() -> <init>
androidx.core.R$layout -> androidx.core.R$layout:
    155:155:void <init>() -> <init>
androidx.core.R$string -> androidx.core.R$string:
    166:166:void <init>() -> <init>
androidx.core.R$style -> androidx.core.R$style:
    171:171:void <init>() -> <init>
androidx.core.R$styleable -> androidx.core.R$styleable:
    184:219:void <clinit>() -> <clinit>
    182:182:void <init>() -> <init>
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat -> androidx.core.accessibilityservice.AccessibilityServiceInfoCompat:
    181:181:void <init>() -> <init>
androidx.core.app.ActivityCompat -> androidx.core.app.ActivityCompat:
    149:149:void <init>() -> <init>
    287:290:void finishAffinity(android.app.Activity) -> finishAffinity
    169:169:androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate() -> getPermissionCompatDelegate
    577:582:void recreate(android.app.Activity) -> recreate
    491:505:void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    548:549:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
androidx.core.app.ActivityCompat$1 -> androidx.core.app.ActivityCompat$1:
    505:505:void <init>(java.lang.String[],android.app.Activity,int) -> <init>
    508:519:void run() -> run
androidx.core.app.ActivityCompat$SharedElementCallback21Impl -> androidx.core.app.ActivityCompat$SharedElementCallback21Impl:
    622:622:android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    628:628:android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    616:616:void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    611:611:void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    605:605:void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    598:598:void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    635:635:void onSharedElementsArrived(java.util.List,java.util.List,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> onSharedElementsArrived
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1 -> androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1:
    636:636:void <init>(androidx.core.app.ActivityCompat$SharedElementCallback21Impl,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> <init>
    639:639:void onSharedElementsReady() -> onSharedElementsReady
androidx.core.app.ActivityManagerCompat -> androidx.core.app.ActivityManagerCompat:
    30:30:void <init>() -> <init>
androidx.core.app.ActivityOptionsCompat -> androidx.core.app.ActivityOptionsCompat:
    299:299:void <init>() -> <init>
androidx.core.app.ActivityRecreator -> androidx.core.app.ActivityRecreator:
    90:98:void <clinit>() -> <clinit>
    72:72:void <init>() -> <init>
    361:361:java.lang.Class getActivityThreadClass() -> getActivityThreadClass
    341:342:java.lang.reflect.Field getMainThreadField() -> getMainThreadField
    303:305:java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class) -> getPerformStopActivity2Params
    289:291:java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class) -> getPerformStopActivity3Params
    317:332:java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class) -> getRequestRelaunchActivityMethod
    351:352:java.lang.reflect.Field getTokenField() -> getTokenField
    313:313:boolean needsRelaunchCall() -> needsRelaunchCall
    244:279:boolean queueOnStopIfNecessary(java.lang.Object,android.app.Activity) -> queueOnStopIfNecessary
    108:158:boolean recreate(android.app.Activity) -> recreate
androidx.core.app.ActivityRecreator$1 -> androidx.core.app.ActivityRecreator$1:
    142:142:void <init>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object) -> <init>
    145:145:void run() -> run
androidx.core.app.ActivityRecreator$2 -> androidx.core.app.ActivityRecreator$2:
    158:158:void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks) -> <init>
    165:165:void run() -> run
androidx.core.app.ActivityRecreator$3 -> androidx.core.app.ActivityRecreator$3:
    252:252:void <init>(java.lang.Object,java.lang.Object) -> <init>
    256:268:void run() -> run
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks -> androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks:
    182:183:void <init>(android.app.Activity) -> <init>
    228:233:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    206:213:void onActivityPaused(android.app.Activity) -> onActivityPaused
    195:196:void onActivityStarted(android.app.Activity) -> onActivityStarted
androidx.core.app.AlarmManagerCompat -> androidx.core.app.AlarmManagerCompat:
    229:229:void <init>() -> <init>
androidx.core.app.AppComponentFactory -> androidx.core.app.AppComponentFactory:
    40:40:void <init>() -> <init>
    48:48:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    128:131:android.app.Activity instantiateActivityCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivityCompat
    57:57:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    104:107:android.app.Application instantiateApplicationCompat(java.lang.ClassLoader,java.lang.String) -> instantiateApplicationCompat
    76:76:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    195:198:android.content.ContentProvider instantiateProviderCompat(java.lang.ClassLoader,java.lang.String) -> instantiateProviderCompat
    67:67:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    148:151:android.content.BroadcastReceiver instantiateReceiverCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiverCompat
    85:85:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
    172:175:android.app.Service instantiateServiceCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateServiceCompat
androidx.core.app.AppLaunchChecker -> androidx.core.app.AppLaunchChecker:
    87:87:void <init>() -> <init>
androidx.core.app.AppOpsManagerCompat -> androidx.core.app.AppOpsManagerCompat:
    60:60:void <init>() -> <init>
    175:177:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    75:76:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
androidx.core.app.BundleCompat -> androidx.core.app.BundleCompat:
    94:94:void <init>() -> <init>
androidx.core.app.BundleCompat$BundleCompatBaseImpl -> androidx.core.app.BundleCompat$BundleCompatBaseImpl:
    44:44:void <init>() -> <init>
androidx.core.app.ComponentActivity -> androidx.core.app.ComponentActivity:
    48:62:void <init>() -> <init>
    129:133:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    120:124:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    106:106:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    81:82:void onCreate(android.os.Bundle) -> onCreate
    88:89:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    115:115:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.core.app.ComponentActivity$ExtraData -> androidx.core.app.ComponentActivity$ExtraData:
    140:140:void <init>() -> <init>
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    37:37:void <init>() -> <init>
    70:71:java.lang.Object checkCompatWrapper(java.lang.Object) -> checkCompatWrapper
    41:41:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    47:47:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    60:60:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    54:54:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    66:66:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.DialogCompat -> androidx.core.app.DialogCompat:
    32:32:void <init>() -> <init>
androidx.core.app.FrameMetricsAggregator -> androidx.core.app.FrameMetricsAggregator:
    199:199:void <init>() -> <init>
    212:216:void <init>(int) -> <init>
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl -> androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl:
    344:345:void <init>(int) -> <init>
    400:404:void addDurationItem(android.util.SparseIntArray,long) -> addDurationItem
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1 -> androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1:
    349:349:void <init>(androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl) -> <init>
    353:391:void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int) -> onFrameMetricsAvailable
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl -> androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl:
    309:309:void <init>() -> <init>
androidx.core.app.JobIntentService -> androidx.core.app.JobIntentService:
    106:106:void <clinit>() -> <clinit>
    416:420:void <init>() -> <init>
    639:648:androidx.core.app.JobIntentService$GenericWorkItem dequeueWork() -> dequeueWork
    599:603:boolean doStopCurrentWork() -> doStopCurrentWork
    607:613:void ensureProcessorRunningLocked(boolean) -> ensureProcessorRunningLocked
    529:539:androidx.core.app.JobIntentService$WorkEnqueuer getWorkEnqueuer(android.content.Context,android.content.ComponentName,boolean,int) -> getWorkEnqueuer
    465:466:android.os.IBinder onBind(android.content.Intent) -> onBind
    426:434:void onCreate() -> onCreate
    476:481:void onDestroy() -> onDestroy
    444:451:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    618:634:void processorFinished() -> processorFinished
androidx.core.app.JobIntentService$CommandProcessor -> androidx.core.app.JobIntentService$CommandProcessor:
    383:383:void <init>(androidx.core.app.JobIntentService) -> <init>
    383:383:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    390:394:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    383:383:void onCancelled(java.lang.Object) -> onCancelled
    404:404:void onCancelled(java.lang.Void) -> onCancelled
    383:383:void onPostExecute(java.lang.Object) -> onPostExecute
    409:409:void onPostExecute(java.lang.Void) -> onPostExecute
androidx.core.app.JobIntentService$CompatWorkEnqueuer -> androidx.core.app.JobIntentService$CompatWorkEnqueuer:
    163:174:void <init>(android.content.Context,android.content.ComponentName) -> <init>
    224:234:void serviceProcessingFinished() -> serviceProcessingFinished
    210:219:void serviceProcessingStarted() -> serviceProcessingStarted
    201:205:void serviceStartReceived() -> serviceStartReceived
androidx.core.app.JobIntentService$CompatWorkItem -> androidx.core.app.JobIntentService$CompatWorkItem:
    363:365:void <init>(androidx.core.app.JobIntentService,android.content.Intent,int) -> <init>
    376:376:void complete() -> complete
    370:370:android.content.Intent getIntent() -> getIntent
androidx.core.app.JobIntentService$JobServiceEngineImpl -> androidx.core.app.JobIntentService$JobServiceEngineImpl:
    275:276:void <init>(androidx.core.app.JobIntentService) -> <init>
    281:281:android.os.IBinder compatGetBinder() -> compatGetBinder
    311:316:androidx.core.app.JobIntentService$GenericWorkItem dequeueWork() -> dequeueWork
    287:289:boolean onStartJob(android.app.job.JobParameters) -> onStartJob
    296:301:boolean onStopJob(android.app.job.JobParameters) -> onStopJob
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem -> androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem:
    255:256:void <init>(androidx.core.app.JobIntentService$JobServiceEngineImpl,android.app.job.JobWorkItem) -> <init>
    266:270:void complete() -> complete
    261:261:android.content.Intent getIntent() -> getIntent
androidx.core.app.JobIntentService$JobWorkEnqueuer -> androidx.core.app.JobIntentService$JobWorkEnqueuer:
    332:336:void <init>(android.content.Context,android.content.ComponentName,int) -> <init>
androidx.core.app.JobIntentService$WorkEnqueuer -> androidx.core.app.JobIntentService$WorkEnqueuer:
    118:119:void <init>(android.content.ComponentName) -> <init>
    123:127:void ensureJobId(int) -> ensureJobId
androidx.core.app.NavUtils -> androidx.core.app.NavUtils:
    270:270:void <init>() -> <init>
    129:148:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    195:204:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    220:223:java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    240:264:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
    108:113:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    60:64:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
androidx.core.app.NotificationCompat -> androidx.core.app.NotificationCompat:
    5403:5403:void <init>() -> <init>
androidx.core.app.NotificationCompat$Action$WearableExtender -> androidx.core.app.NotificationCompat$Action$WearableExtender:
    3467:3457:void <init>() -> <init>
    3439:3439:java.lang.Object clone() -> clone
    3513:3517:androidx.core.app.NotificationCompat$Action$WearableExtender clone() -> clone
androidx.core.app.NotificationCompat$BigPictureStyle -> androidx.core.app.NotificationCompat$BigPictureStyle:
    1994:1994:void <init>() -> <init>
androidx.core.app.NotificationCompat$BigTextStyle -> androidx.core.app.NotificationCompat$BigTextStyle:
    2081:2081:void <init>() -> <init>
androidx.core.app.NotificationCompat$CarExtender -> androidx.core.app.NotificationCompat$CarExtender:
    4731:4731:void <init>() -> <init>
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle -> androidx.core.app.NotificationCompat$DecoratedCustomViewStyle:
    2940:2940:void <init>() -> <init>
androidx.core.app.NotificationCompat$InboxStyle -> androidx.core.app.NotificationCompat$InboxStyle:
    2855:2853:void <init>() -> <init>
androidx.core.app.NotificationCompat$MessagingStyle -> androidx.core.app.NotificationCompat$MessagingStyle:
    2179:2173:void <init>() -> <init>
androidx.core.app.NotificationCompat$Style -> androidx.core.app.NotificationCompat$Style:
    1663:1663:void <init>() -> <init>
androidx.core.app.NotificationCompat$WearableExtender -> androidx.core.app.NotificationCompat$WearableExtender:
    3906:3897:void <init>() -> <init>
    3762:3762:java.lang.Object clone() -> clone
    4055:4069:androidx.core.app.NotificationCompat$WearableExtender clone() -> clone
androidx.core.app.NotificationCompatExtras -> androidx.core.app.NotificationCompatExtras:
    66:66:void <init>() -> <init>
androidx.core.app.NotificationCompatJellybean -> androidx.core.app.NotificationCompatJellybean:
    341:341:void <init>() -> <init>
androidx.core.app.NotificationCompatSideChannelService -> androidx.core.app.NotificationCompatSideChannelService:
    45:45:void <init>() -> <init>
    114:119:void checkPermission(int,java.lang.String) -> checkPermission
    48:54:android.os.IBinder onBind(android.content.Intent) -> onBind
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub:
    75:75:void <init>(androidx.core.app.NotificationCompatSideChannelService) -> <init>
    92:97:void cancel(java.lang.String,int,java.lang.String) -> cancel
    103:108:void cancelAll(java.lang.String) -> cancelAll
    81:86:void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
androidx.core.app.NotificationManagerCompat -> androidx.core.app.NotificationManagerCompat:
    100:104:void <clinit>() -> <clinit>
    421:439:java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
androidx.core.app.NotificationManagerCompat$CancelTask -> androidx.core.app.NotificationManagerCompat$CancelTask:
    798:801:void send(android.support.v4.app.INotificationSideChannel) -> send
    807:813:java.lang.String toString() -> toString
androidx.core.app.NotificationManagerCompat$NotifyTask -> androidx.core.app.NotificationManagerCompat$NotifyTask:
    762:762:void send(android.support.v4.app.INotificationSideChannel) -> send
    767:772:java.lang.String toString() -> toString
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent -> androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent:
    737:739:void <init>(android.content.ComponentName,android.os.IBinder) -> <init>
androidx.core.app.NotificationManagerCompat$SideChannelManager -> androidx.core.app.NotificationManagerCompat$SideChannelManager:
    619:631:boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceBound
    638:642:void ensureServiceUnbound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceUnbound
    496:498:boolean handleMessage(android.os.Message) -> handleMessage
    515:518:void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task) -> handleQueueTask
    539:541:void handleRetryListenerQueue(android.content.ComponentName) -> handleRetryListenerQueue
    523:527:void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> handleServiceConnected
    532:534:void handleServiceDisconnected(android.content.ComponentName) -> handleServiceDisconnected
    547:552:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    557:560:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    674:683:void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> processListenerQueue
    651:666:void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> scheduleListenerRetry
    568:609:void updateListenerMap() -> updateListenerMap
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    726:727:void <init>(android.content.ComponentName) -> <init>
androidx.core.app.Person$Builder -> androidx.core.app.Person$Builder:
    253:253:void <init>() -> <init>
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    94:94:void <init>() -> <init>
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    14:20:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    26:32:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.app.ServiceCompat -> androidx.core.app.ServiceCompat:
    37:37:void <init>() -> <init>
androidx.core.app.ShareCompat -> androidx.core.app.ShareCompat:
    109:109:void <init>() -> <init>
androidx.core.app.SharedElementCallback -> androidx.core.app.SharedElementCallback:
    42:42:void <init>() -> <init>
    214:235:android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable) -> createDrawableBitmap
    168:205:android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    258:278:android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    301:301:void onSharedElementsArrived(java.util.List,java.util.List,androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener) -> onSharedElementsArrived
androidx.core.app.TaskStackBuilder -> androidx.core.app.TaskStackBuilder:
    82:83:void <init>(android.content.Context) -> <init>
    121:121:androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    160:175:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    201:210:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    95:95:androidx.core.app.TaskStackBuilder create(android.content.Context) -> create
    256:256:java.util.Iterator iterator() -> iterator
    268:268:void startActivities() -> startActivities
    283:284:void startActivities(android.os.Bundle) -> startActivities
androidx.core.content.ContentResolverCompat -> androidx.core.content.ContentResolverCompat:
    33:33:void <init>() -> <init>
    74:99:android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,androidx.core.os.CancellationSignal) -> query
androidx.core.content.ContextCompat -> androidx.core.content.ContextCompat:
    153:153:void <clinit>() -> <clinit>
    161:161:void <init>() -> <init>
    513:516:int getColor(android.content.Context,int) -> getColor
    491:494:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    453:469:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    433:436:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    380:383:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    223:226:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
androidx.core.content.ContextCompat$LegacyServiceMapHolder -> androidx.core.content.ContextCompat$LegacyServiceMapHolder:
    740:805:void <clinit>() -> <clinit>
    739:739:void <init>() -> <init>
androidx.core.content.ContextCompat$MainHandlerExecutor -> androidx.core.content.ContextCompat$MainHandlerExecutor:
    675:676:void execute(java.lang.Runnable) -> execute
androidx.core.content.FileProvider -> androidx.core.content.FileProvider:
    340:360:void <clinit>() -> <clinit>
    339:339:void <init>() -> <init>
    382:386:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    820:822:java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    829:830:java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    835:836:java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    541:542:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    575:589:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    493:498:java.lang.String getType(android.net.Uri) -> getType
    513:513:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    795:813:int modeToMode(java.lang.String) -> modeToMode
    564:566:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    601:606:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    454:477:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    523:523:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.core.content.FileProvider$SimplePathStrategy -> androidx.core.content.FileProvider$SimplePathStrategy:
    700:698:void <init>(java.lang.String) -> <init>
    709:710:void addRoot(java.lang.String,java.io.File) -> addRoot
    764:772:java.io.File getFileForUri(android.net.Uri) -> getFileForUri
androidx.core.content.IntentCompat -> androidx.core.content.IntentCompat:
    28:28:void <init>() -> <init>
androidx.core.content.MimeTypeFilter -> androidx.core.content.MimeTypeFilter:
    43:43:void <init>() -> <init>
androidx.core.content.PermissionChecker -> androidx.core.content.PermissionChecker:
    77:77:void <init>() -> <init>
    97:114:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    134:134:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
androidx.core.content.SharedPreferencesCompat -> androidx.core.content.SharedPreferencesCompat:
    84:84:void <init>() -> <init>
androidx.core.content.SharedPreferencesCompat$EditorCompat -> androidx.core.content.SharedPreferencesCompat$EditorCompat:
    57:58:void <init>() -> <init>
androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper -> androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper:
    40:40:void <init>() -> <init>
androidx.core.content.pm.ActivityInfoCompat -> androidx.core.content.pm.ActivityInfoCompat:
    27:27:void <init>() -> <init>
androidx.core.content.pm.PackageInfoCompat -> androidx.core.content.pm.PackageInfoCompat:
    41:41:void <init>() -> <init>
androidx.core.content.pm.PermissionInfoCompat -> androidx.core.content.pm.PermissionInfoCompat:
    34:34:void <init>() -> <init>
androidx.core.content.pm.ShortcutInfoCompat -> androidx.core.content.pm.ShortcutInfoCompat:
    69:69:void <init>() -> <init>
androidx.core.content.pm.ShortcutInfoCompatSaver -> androidx.core.content.pm.ShortcutInfoCompatSaver:
    36:36:void <init>() -> <init>
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl -> androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl:
    57:57:void <init>() -> <init>
androidx.core.content.pm.ShortcutManagerCompat -> androidx.core.content.pm.ShortcutManagerCompat:
    67:67:void <init>() -> <init>
androidx.core.content.pm.ShortcutManagerCompat$1 -> androidx.core.content.pm.ShortcutManagerCompat$1:
    134:134:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.core.content.res.ColorStateListInflaterCompat -> androidx.core.content.res.ColorStateListInflaterCompat:
    49:49:void <init>() -> <init>
    86:95:android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    113:116:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    65:68:android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    128:186:android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    198:198:int modulateColorAlpha(int,float) -> modulateColorAlpha
    191:192:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
androidx.core.content.res.ComplexColorCompat -> androidx.core.content.res.ComplexColorCompat:
    61:64:void <init>(android.graphics.Shader,android.content.res.ColorStateList,int) -> <init>
    152:160:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme) -> createFromXml
    68:68:androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader) -> from
    72:72:androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList) -> from
    76:76:androidx.core.content.res.ComplexColorCompat from(int) -> from
    86:86:int getColor() -> getColor
    81:81:android.graphics.Shader getShader() -> getShader
    140:142:androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    94:94:boolean isGradient() -> isGradient
    98:98:boolean isStateful() -> isStateful
    109:114:boolean onStateChanged(int[]) -> onStateChanged
    90:90:void setColor(int) -> setColor
    124:124:boolean willDraw() -> willDraw
androidx.core.content.res.ConfigurationHelper -> androidx.core.content.res.ConfigurationHelper:
    31:31:void <init>() -> <init>
androidx.core.content.res.FontResourcesParserCompat -> androidx.core.content.res.FontResourcesParserCompat:
    331:331:void <init>() -> <init>
    230:235:int getType(android.content.res.TypedArray,int) -> getType
    168:174:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> parse
    247:270:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    181:186:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamilies
    193:225:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamily
    285:313:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFont
    320:320:void skip(org.xmlpull.v1.XmlPullParser) -> skip
    276:278:java.util.List toByteArrayList(java.lang.String[]) -> toByteArrayList
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    153:154:void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    158:158:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> getEntries
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    113:119:void <init>(java.lang.String,int,boolean,java.lang.String,int,int) -> <init>
    123:123:java.lang.String getFileName() -> getFileName
    143:143:int getResourceId() -> getResourceId
    139:139:int getTtcIndex() -> getTtcIndex
    135:135:java.lang.String getVariationSettings() -> getVariationSettings
    127:127:int getWeight() -> getWeight
    131:131:boolean isItalic() -> isItalic
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    82:85:void <init>(androidx.core.provider.FontRequest,int,int) -> <init>
    93:93:int getFetchStrategy() -> getFetchStrategy
    89:89:androidx.core.provider.FontRequest getRequest() -> getRequest
    97:97:int getTimeout() -> getTimeout
androidx.core.content.res.GradientColorInflaterCompat -> androidx.core.content.res.GradientColorInflaterCompat:
    66:66:void <init>() -> <init>
    195:197:androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int) -> checkColors
    90:93:android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    150:185:androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    209:204:android.graphics.Shader$TileMode parseTileMode(int) -> parseTileMode
androidx.core.content.res.GradientColorInflaterCompat$ColorStops -> androidx.core.content.res.GradientColorInflaterCompat$ColorStops:
    217:223:void <init>(java.util.List,java.util.List) -> <init>
    227:229:void <init>(int,int) -> <init>
    232:234:void <init>(int,int,int) -> <init>
androidx.core.content.res.GrowingArrayUtils -> androidx.core.content.res.GrowingArrayUtils:
    193:193:void <init>() -> <init>
    43:49:java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> append
    59:64:int[] append(int[],int,int) -> append
androidx.core.content.res.ResourcesCompat -> androidx.core.content.res.ResourcesCompat:
    441:441:void <init>() -> <init>
    82:85:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    336:339:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    359:365:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> loadFont
    379:381:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> loadFont
androidx.core.content.res.ResourcesCompat$FontCallback -> androidx.core.content.res.ResourcesCompat$FontCallback:
    237:237:void <init>() -> <init>
    287:289:void callbackFailAsync(int,android.os.Handler) -> callbackFailAsync
    268:270:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> callbackSuccessAsync
androidx.core.content.res.ResourcesCompat$FontCallback$1 -> androidx.core.content.res.ResourcesCompat$FontCallback$1:
    270:270:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> <init>
    273:273:void run() -> run
androidx.core.content.res.ResourcesCompat$FontCallback$2 -> androidx.core.content.res.ResourcesCompat$FontCallback$2:
    289:289:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> <init>
    292:292:void run() -> run
androidx.core.content.res.TypedArrayUtils -> androidx.core.content.res.TypedArrayUtils:
    362:362:void <init>() -> <init>
    87:91:boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean) -> getNamedBoolean
    122:126:int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedColor
    168:172:android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int) -> getNamedColorStateList
    190:190:android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue) -> getNamedColorStateListFromInt
    140:154:androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int) -> getNamedComplexColor
    70:74:float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float) -> getNamedFloat
    104:108:int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedInt
    203:207:int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedResourceId
    221:225:java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> getNamedString
    58:58:boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> hasAttribute
    253:255:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
    237:241:android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> peekNamedValue
androidx.core.database.CursorWindowCompat -> androidx.core.database.CursorWindowCompat:
    30:30:void <init>() -> <init>
androidx.core.database.DatabaseUtilsCompat -> androidx.core.database.DatabaseUtilsCompat:
    29:29:void <init>() -> <init>
androidx.core.database.sqlite.SQLiteCursorCompat -> androidx.core.database.sqlite.SQLiteCursorCompat:
    29:29:void <init>() -> <init>
androidx.core.graphics.BitmapCompat -> androidx.core.graphics.BitmapCompat:
    54:54:void <init>() -> <init>
androidx.core.graphics.ColorUtils -> androidx.core.graphics.ColorUtils:
    45:45:void <clinit>() -> <clinit>
    47:47:void <init>() -> <init>
    131:131:int compositeAlpha(int,int) -> compositeAlpha
    53:64:int compositeColors(int,int) -> compositeColors
    136:136:int compositeComponent(int,int,int,int,int) -> compositeComponent
    366:366:int setAlphaComponent(int,int) -> setAlphaComponent
androidx.core.graphics.PaintCompat -> androidx.core.graphics.PaintCompat:
    34:34:void <clinit>() -> <clinit>
    119:119:void <init>() -> <init>
androidx.core.graphics.PathParser -> androidx.core.graphics.PathParser:
    795:795:void <init>() -> <init>
    190:190:void addNode(java.util.ArrayList,char,float[]) -> addNode
    141:146:boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> canMorph
    57:55:float[] copyOfRange(float[],int,int) -> copyOfRange
    97:112:androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String) -> createNodesFromPathData
    73:79:android.graphics.Path createPathFromPathData(java.lang.String) -> createPathFromPathData
    123:125:androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[]) -> deepCopyNodes
    260:299:void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult) -> extract
    211:244:float[] getFloats(java.lang.String) -> getFloats
    174:175:int nextStart(java.lang.String,int) -> nextStart
    163:166:void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> updateNodes
androidx.core.graphics.PathParser$ExtractFloatResult -> androidx.core.graphics.PathParser$ExtractFloatResult:
    199:199:void <init>() -> <init>
androidx.core.graphics.PathParser$PathDataNode -> androidx.core.graphics.PathParser$PathDataNode:
    352:354:void <init>(char,float[]) -> <init>
    357:359:void <init>(androidx.core.graphics.PathParser$PathDataNode) -> <init>
    399:642:void addCommand(android.graphics.Path,float[],char,char,float[]) -> addCommand
    750:780:void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double) -> arcToBezier
    657:719:void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean) -> drawArc
    388:390:void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float) -> interpolatePathDataNode
    371:373:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path) -> nodesToPath
androidx.core.graphics.PathSegment -> androidx.core.graphics.PathSegment:
    73:78:boolean equals(java.lang.Object) -> equals
    83:86:int hashCode() -> hashCode
    92:92:java.lang.String toString() -> toString
androidx.core.graphics.PathUtils -> androidx.core.graphics.PathUtils:
    82:82:void <init>() -> <init>
androidx.core.graphics.TypefaceCompat -> androidx.core.graphics.TypefaceCompat:
    46:63:void <clinit>() -> <clinit>
    65:65:void <init>() -> <init>
    195:191:android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int) -> create
    160:160:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    105:129:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> createFromResourcesFamilyXml
    143:147:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    88:88:java.lang.String createResourceUid(android.content.res.Resources,int,int) -> createResourceUid
    76:76:android.graphics.Typeface findFromCache(android.content.res.Resources,int,int) -> findFromCache
    169:174:android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int) -> getBestFontFromFamily
androidx.core.graphics.TypefaceCompatApi21Impl -> androidx.core.graphics.TypefaceCompatApi21Impl:
    54:54:void <init>() -> <init>
    136:142:boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean) -> addFontWeightStyle
    123:130:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    176:199:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    149:168:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    101:104:java.io.File getFile(android.os.ParcelFileDescriptor) -> getFile
    68:96:void init() -> init
    114:118:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi24Impl -> androidx.core.graphics.TypefaceCompatApi24Impl:
    69:87:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    112:114:boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> addFontWeightStyle
    122:124:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    167:181:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    135:160:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    94:98:boolean isUsable() -> isUsable
    103:103:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi26Impl -> androidx.core.graphics.TypefaceCompatApi26Impl:
    74:107:void <init>() -> <init>
    194:194:void abortCreation(java.lang.Object) -> abortCreation
    140:140:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> addFontFromAssetManager
    155:155:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> addFontFromBuffer
    169:171:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    204:222:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    230:282:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    292:308:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    183:183:boolean freeze(java.lang.Object) -> freeze
    114:118:boolean isFontFamilyPrivateAPIAvailable() -> isFontFamilyPrivateAPIAvailable
    127:127:java.lang.Object newFamily() -> newFamily
    342:342:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) -> obtainAbortCreationMethod
    326:326:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> obtainAddFontFromAssetManagerMethod
    332:332:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> obtainAddFontFromBufferMethod
    347:350:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
    317:317:java.lang.Class obtainFontFamily() -> obtainFontFamily
    321:321:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) -> obtainFontFamilyCtor
    338:338:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) -> obtainFreezeMethod
androidx.core.graphics.TypefaceCompatApi28Impl -> androidx.core.graphics.TypefaceCompatApi28Impl:
    36:36:void <init>() -> <init>
    49:54:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    61:64:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
androidx.core.graphics.TypefaceCompatBaseImpl -> androidx.core.graphics.TypefaceCompatBaseImpl:
    45:52:void <init>() -> <init>
    219:221:void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry) -> addFontFamily
    169:176:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    137:148:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    114:129:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    187:202:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    153:153:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int) -> findBestEntry
    67:69:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    99:99:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
    211:215:androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface) -> getFontFamily
    85:90:long getUniqueKey(android.graphics.Typeface) -> getUniqueKey
androidx.core.graphics.TypefaceCompatBaseImpl$1 -> androidx.core.graphics.TypefaceCompatBaseImpl$1:
    99:99:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    99:99:int getWeight(java.lang.Object) -> getWeight
    102:102:int getWeight(androidx.core.provider.FontsContractCompat$FontInfo) -> getWeight
    99:99:boolean isItalic(java.lang.Object) -> isItalic
    107:107:boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo) -> isItalic
androidx.core.graphics.TypefaceCompatBaseImpl$2 -> androidx.core.graphics.TypefaceCompatBaseImpl$2:
    153:153:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    153:153:int getWeight(java.lang.Object) -> getWeight
    156:156:int getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> getWeight
    153:153:boolean isItalic(java.lang.Object) -> isItalic
    161:161:boolean isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> isItalic
androidx.core.graphics.TypefaceCompatUtil -> androidx.core.graphics.TypefaceCompatUtil:
    52:52:void <init>() -> <init>
    177:177:void closeQuietly(java.io.Closeable) -> closeQuietly
    124:134:java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> copyToDirectBuffer
    143:157:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    167:170:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
    63:72:java.io.File getTempFile(android.content.Context) -> getTempFile
    88:92:java.nio.ByteBuffer mmap(java.io.File) -> mmap
    103:113:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
androidx.core.graphics.drawable.DrawableCompat -> androidx.core.graphics.drawable.DrawableCompat:
    419:419:void <init>() -> <init>
    188:189:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    197:198:boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    177:178:int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    210:211:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    391:410:int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    268:271:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    95:96:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    62:62:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    78:79:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    110:111:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    123:124:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    354:374:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    135:138:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    149:152:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    163:166:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    334:335:android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    307:316:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    177:177:void <clinit>() -> <clinit>
    308:183:void <init>() -> <init>
    357:361:int getResId() -> getResId
    973:979:int getResId(android.graphics.drawable.Icon) -> getResId
    339:343:java.lang.String getResPackage() -> getResPackage
    944:950:java.lang.String getResPackage(android.graphics.drawable.Icon) -> getResPackage
    785:791:void onPostParceling() -> onPostParceling
    749:754:void onPreParceling(boolean) -> onPreParceling
    708:744:java.lang.String toString() -> toString
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    14:22:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    28:49:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.graphics.drawable.RoundedBitmapDrawable -> androidx.core.graphics.drawable.RoundedBitmapDrawable:
    260:269:void draw(android.graphics.Canvas) -> draw
    284:284:int getAlpha() -> getAlpha
    295:295:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    356:356:float getCornerRadius() -> getCornerRadius
    366:366:int getIntrinsicHeight() -> getIntrinsicHeight
    361:361:int getIntrinsicWidth() -> getIntrinsicWidth
    371:378:int getOpacity() -> getOpacity
    223:223:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
    345:349:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    275:278:void setAlpha(int) -> setAlpha
    289:290:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    217:218:void setDither(boolean) -> setDither
    211:212:void setFilterBitmap(boolean) -> setFilterBitmap
    315:316:void updateCircularCornerRadius() -> updateCircularCornerRadius
    227:254:void updateDstRect() -> updateDstRect
androidx.core.graphics.drawable.RoundedBitmapDrawable21 -> androidx.core.graphics.drawable.RoundedBitmapDrawable21:
    36:37:void getOutline(android.graphics.Outline) -> getOutline
    56:56:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory -> androidx.core.graphics.drawable.RoundedBitmapDrawableFactory:
    104:104:void <init>() -> <init>
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable -> androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable:
    62:62:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
androidx.core.graphics.drawable.WrappedDrawableApi14 -> androidx.core.graphics.drawable.WrappedDrawableApi14:
    41:41:void <clinit>() -> <clinit>
    52:54:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    62:65:void <init>(android.graphics.drawable.Drawable) -> <init>
    86:86:void draw(android.graphics.Canvas) -> draw
    103:105:int getChangingConfigurations() -> getChangingConfigurations
    210:212:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    152:152:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    177:177:int getIntrinsicHeight() -> getIntrinsicHeight
    172:172:int getIntrinsicWidth() -> getIntrinsicWidth
    187:187:int getMinimumHeight() -> getMinimumHeight
    182:182:int getMinimumWidth() -> getMinimumWidth
    162:162:int getOpacity() -> getOpacity
    192:192:boolean getPadding(android.graphics.Rect) -> getPadding
    146:146:int[] getState() -> getState
    167:167:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    322:322:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    251:251:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    204:204:boolean isAutoMirrored() -> isAutoMirrored
    130:133:boolean isStateful() -> isStateful
    81:81:void jumpToCurrentState() -> jumpToCurrentState
    220:228:android.graphics.drawable.Drawable mutate() -> mutate
    243:243:androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState() -> mutateConstantState
    91:92:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    272:272:boolean onLevelChange(int) -> onLevelChange
    259:259:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    120:120:void setAlpha(int) -> setAlpha
    198:198:void setAutoMirrored(boolean) -> setAutoMirrored
    98:98:void setChangingConfigurations(int) -> setChangingConfigurations
    125:125:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    110:110:void setDither(boolean) -> setDither
    115:115:void setFilterBitmap(boolean) -> setFilterBitmap
    138:139:boolean setState(int[]) -> setState
    277:277:void setTint(int) -> setTint
    282:283:void setTintList(android.content.res.ColorStateList) -> setTintList
    288:289:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    157:157:boolean setVisible(boolean,boolean) -> setVisible
    330:348:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    267:267:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    74:75:void updateLocalState(android.content.res.Resources) -> updateLocalState
    293:312:boolean updateTint(int[]) -> updateTint
androidx.core.graphics.drawable.WrappedDrawableApi21 -> androidx.core.graphics.drawable.WrappedDrawableApi21:
    43:44:void <init>(android.graphics.drawable.Drawable) -> <init>
    48:49:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    140:144:void findAndCacheIsProjectedDrawableMethod() -> findAndCacheIsProjectedDrawableMethod
    70:70:android.graphics.Rect getDirtyBounds() -> getDirtyBounds
    64:64:void getOutline(android.graphics.Outline) -> getOutline
    113:115:boolean isCompatTintEnabled() -> isCompatTintEnabled
    128:132:boolean isProjected() -> isProjected
    54:54:void setHotspot(float,float) -> setHotspot
    59:59:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    102:105:boolean setState(int[]) -> setState
    84:87:void setTint(int) -> setTint
    75:78:void setTintList(android.content.res.ColorStateList) -> setTintList
    93:96:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
androidx.core.graphics.drawable.WrappedDrawableState -> androidx.core.graphics.drawable.WrappedDrawableState:
    35:40:void <init>(androidx.core.graphics.drawable.WrappedDrawableState) -> <init>
    66:66:boolean canConstantState() -> canConstantState
    61:62:int getChangingConfigurations() -> getChangingConfigurations
    47:47:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    53:56:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.core.hardware.display.DisplayManagerCompat -> androidx.core.hardware.display.DisplayManagerCompat:
    34:34:void <clinit>() -> <clinit>
androidx.core.hardware.fingerprint.FingerprintManagerCompat -> androidx.core.hardware.fingerprint.FingerprintManagerCompat:
    155:160:androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject) -> unwrapCryptoObject
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1 -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$1:
    172:172:void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    188:188:void onAuthenticationFailed() -> onAuthenticationFailed
    177:177:void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    182:182:void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult) -> onAuthenticationSucceeded
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback:
    270:270:void <init>() -> <init>
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult:
    251:251:void <init>(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject) -> <init>
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject:
    203:203:void <init>(java.security.Signature) -> <init>
    210:210:void <init>(javax.crypto.Cipher) -> <init>
    216:216:void <init>(javax.crypto.Mac) -> <init>
androidx.core.location.LocationManagerCompat -> androidx.core.location.LocationManagerCompat:
    50:50:void <init>() -> <init>
androidx.core.math.MathUtils -> androidx.core.math.MathUtils:
    24:24:void <init>() -> <init>
androidx.core.net.ConnectivityManagerCompat -> androidx.core.net.ConnectivityManagerCompat:
    164:164:void <init>() -> <init>
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper -> androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper:
    47:47:void accept(java.net.SocketImpl) -> accept
    52:52:int available() -> available
    57:57:void bind(java.net.InetAddress,int) -> bind
    62:62:void close() -> close
    67:67:void connect(java.lang.String,int) -> connect
    72:72:void connect(java.net.InetAddress,int) -> connect
    97:97:void connect(java.net.SocketAddress,int) -> connect
    77:77:void create(boolean) -> create
    82:82:java.io.InputStream getInputStream() -> getInputStream
    107:107:java.lang.Object getOption(int) -> getOption
    87:87:java.io.OutputStream getOutputStream() -> getOutputStream
    92:92:void listen(int) -> listen
    102:102:void sendUrgentData(int) -> sendUrgentData
    112:112:void setOption(int,java.lang.Object) -> setOption
androidx.core.net.TrafficStatsCompat -> androidx.core.net.TrafficStatsCompat:
    167:167:void <init>() -> <init>
androidx.core.os.BuildCompat -> androidx.core.os.BuildCompat:
    26:26:void <init>() -> <init>
androidx.core.os.CancellationSignal -> androidx.core.os.CancellationSignal:
    37:37:void <init>() -> <init>
    69:77:void cancel() -> cancel
    138:149:java.lang.Object getCancellationSignalObject() -> getCancellationSignalObject
    46:48:boolean isCanceled() -> isCanceled
    57:58:void throwIfCanceled() -> throwIfCanceled
androidx.core.os.ConfigurationCompat -> androidx.core.os.ConfigurationCompat:
    30:30:void <init>() -> <init>
androidx.core.os.EnvironmentCompat -> androidx.core.os.EnvironmentCompat:
    76:76:void <init>() -> <init>
androidx.core.os.HandlerCompat -> androidx.core.os.HandlerCompat:
    153:153:void <init>() -> <init>
androidx.core.os.LocaleListCompat -> androidx.core.os.LocaleListCompat:
    34:34:void <clinit>() -> <clinit>
    38:39:void <init>(androidx.core.os.LocaleListInterface) -> <init>
    73:76:androidx.core.os.LocaleListCompat create(java.util.Locale[]) -> create
    234:234:boolean equals(java.lang.Object) -> equals
    174:193:java.util.Locale forLanguageTagCompat(java.lang.String) -> forLanguageTagCompat
    239:239:int hashCode() -> hashCode
    244:244:java.lang.String toString() -> toString
    55:55:androidx.core.os.LocaleListCompat wrap(android.os.LocaleList) -> wrap
androidx.core.os.LocaleListCompatWrapper -> androidx.core.os.LocaleListCompatWrapper:
    39:217:void <clinit>() -> <clinit>
    120:145:void <init>(java.util.Locale[]) -> <init>
    77:85:boolean equals(java.lang.Object) -> equals
    95:96:int hashCode() -> hashCode
    151:155:void toLanguageTag(java.lang.StringBuilder,java.util.Locale) -> toLanguageTag
    103:112:java.lang.String toString() -> toString
androidx.core.os.LocaleListPlatformWrapper -> androidx.core.os.LocaleListPlatformWrapper:
    31:32:void <init>(android.os.LocaleList) -> <init>
    62:62:boolean equals(java.lang.Object) -> equals
    37:37:java.lang.Object getLocaleList() -> getLocaleList
    67:67:int hashCode() -> hashCode
    72:72:java.lang.String toString() -> toString
androidx.core.os.MessageCompat -> androidx.core.os.MessageCompat:
    112:112:void <init>() -> <init>
androidx.core.os.OperationCanceledException -> androidx.core.os.OperationCanceledException:
    27:27:void <init>() -> <init>
    31:31:void <init>(java.lang.String) -> <init>
androidx.core.os.ParcelCompat -> androidx.core.os.ParcelCompat:
    46:46:void <init>() -> <init>
androidx.core.os.ParcelableCompat -> androidx.core.os.ParcelableCompat:
    68:68:void <init>() -> <init>
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2 -> androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2:
    54:54:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    59:59:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    64:64:java.lang.Object[] newArray(int) -> newArray
androidx.core.os.TraceCompat -> androidx.core.os.TraceCompat:
    64:64:void <init>() -> <init>
    46:47:void beginSection(java.lang.String) -> beginSection
    59:60:void endSection() -> endSection
androidx.core.os.UserManagerCompat -> androidx.core.os.UserManagerCompat:
    31:31:void <init>() -> <init>
androidx.core.provider.FontRequest -> androidx.core.provider.FontRequest:
    56:63:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    125:125:java.util.List getCertificates() -> getCertificates
    137:137:int getCertificatesArrayResId() -> getCertificatesArrayResId
    143:143:java.lang.String getIdentifier() -> getIdentifier
    95:95:java.lang.String getProviderAuthority() -> getProviderAuthority
    104:104:java.lang.String getProviderPackage() -> getProviderPackage
    113:113:java.lang.String getQuery() -> getQuery
    148:167:java.lang.String toString() -> toString
androidx.core.provider.FontsContractCompat -> androidx.core.provider.FontsContractCompat:
    172:784:void <clinit>() -> <clinit>
    73:73:void <init>() -> <init>
    670:670:android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[]) -> buildTypeface
    813:815:java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> convertToByteArrayList
    801:805:boolean equalsByteArrayList(java.util.List,java.util.List) -> equalsByteArrayList
    728:735:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest) -> fetchFonts
    777:781:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources) -> getCertificates
    824:878:androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> getFontFromProvider
    184:186:androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int) -> getFontInternal
    232:302:android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int) -> getFontSync
    744:747:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> getProvider
    689:704:java.util.Map prepareFontData(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> prepareFontData
androidx.core.provider.FontsContractCompat$1 -> androidx.core.provider.FontsContractCompat$1:
    254:254:void <init>(android.content.Context,androidx.core.provider.FontRequest,int,java.lang.String) -> <init>
    254:254:java.lang.Object call() -> call
    257:259:androidx.core.provider.FontsContractCompat$TypefaceResult call() -> call
androidx.core.provider.FontsContractCompat$2 -> androidx.core.provider.FontsContractCompat$2:
    273:273:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> <init>
    273:273:void onReply(java.lang.Object) -> onReply
    277:282:void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult) -> onReply
androidx.core.provider.FontsContractCompat$3 -> androidx.core.provider.FontsContractCompat$3:
    303:303:void <init>(java.lang.String) -> <init>
    303:303:void onReply(java.lang.Object) -> onReply
    307:313:void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult) -> onReply
androidx.core.provider.FontsContractCompat$4 -> androidx.core.provider.FontsContractCompat$4:
    547:549:void run() -> run
androidx.core.provider.FontsContractCompat$4$1 -> androidx.core.provider.FontsContractCompat$4$1:
    549:549:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    552:552:void run() -> run
androidx.core.provider.FontsContractCompat$4$2 -> androidx.core.provider.FontsContractCompat$4$2:
    562:562:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    565:565:void run() -> run
androidx.core.provider.FontsContractCompat$4$3 -> androidx.core.provider.FontsContractCompat$4$3:
    571:571:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    574:574:void run() -> run
androidx.core.provider.FontsContractCompat$4$4 -> androidx.core.provider.FontsContractCompat$4$4:
    581:581:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    584:584:void run() -> run
androidx.core.provider.FontsContractCompat$4$5 -> androidx.core.provider.FontsContractCompat$4$5:
    594:594:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    597:597:void run() -> run
androidx.core.provider.FontsContractCompat$4$6 -> androidx.core.provider.FontsContractCompat$4$6:
    611:611:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    614:614:void run() -> run
androidx.core.provider.FontsContractCompat$4$7 -> androidx.core.provider.FontsContractCompat$4$7:
    619:619:void <init>(androidx.core.provider.FontsContractCompat$4,int) -> <init>
    622:622:void run() -> run
androidx.core.provider.FontsContractCompat$4$8 -> androidx.core.provider.FontsContractCompat$4$8:
    635:635:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    638:638:void run() -> run
androidx.core.provider.FontsContractCompat$4$9 -> androidx.core.provider.FontsContractCompat$4$9:
    645:645:void <init>(androidx.core.provider.FontsContractCompat$4,android.graphics.Typeface) -> <init>
    648:648:void run() -> run
androidx.core.provider.FontsContractCompat$5 -> androidx.core.provider.FontsContractCompat$5:
    784:784:void <init>() -> <init>
    784:784:int compare(java.lang.Object,java.lang.Object) -> compare
    787:792:int compare(byte[],byte[]) -> compare
androidx.core.provider.FontsContractCompat$Columns -> androidx.core.provider.FontsContractCompat$Columns:
    82:82:void <init>() -> <init>
androidx.core.provider.FontsContractCompat$FontFamilyResult -> androidx.core.provider.FontsContractCompat$FontFamilyResult:
    427:429:void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> <init>
    437:437:androidx.core.provider.FontsContractCompat$FontInfo[] getFonts() -> getFonts
    433:433:int getStatusCode() -> getStatusCode
androidx.core.provider.FontsContractCompat$FontInfo -> androidx.core.provider.FontsContractCompat$FontInfo:
    346:351:void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    388:388:int getResultCode() -> getResultCode
    365:365:int getTtcIndex() -> getTtcIndex
    358:358:android.net.Uri getUri() -> getUri
    372:372:int getWeight() -> getWeight
    379:379:boolean isItalic() -> isItalic
androidx.core.provider.FontsContractCompat$FontRequestCallback -> androidx.core.provider.FontsContractCompat$FontRequestCallback:
    493:493:void <init>() -> <init>
androidx.core.provider.FontsContractCompat$TypefaceResult -> androidx.core.provider.FontsContractCompat$TypefaceResult:
    211:213:void <init>(android.graphics.Typeface,int) -> <init>
androidx.core.provider.SelfDestructiveThread -> androidx.core.provider.SelfDestructiveThread:
    79:83:void <init>(java.lang.String,int,int) -> <init>
    223:232:void onDestruction() -> onDestruction
    214:219:void onInvokeRunnable(java.lang.Runnable) -> onInvokeRunnable
    107:116:void post(java.lang.Runnable) -> post
    136:137:void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> postAndReply
    166:209:java.lang.Object postAndWait(java.util.concurrent.Callable,int) -> postAndWait
androidx.core.provider.SelfDestructiveThread$1 -> androidx.core.provider.SelfDestructiveThread$1:
    58:58:void <init>(androidx.core.provider.SelfDestructiveThread) -> <init>
    61:66:boolean handleMessage(android.os.Message) -> handleMessage
androidx.core.provider.SelfDestructiveThread$2 -> androidx.core.provider.SelfDestructiveThread$2:
    137:137:void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.Callable,android.os.Handler,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> <init>
    142:147:void run() -> run
androidx.core.provider.SelfDestructiveThread$2$1 -> androidx.core.provider.SelfDestructiveThread$2$1:
    147:147:void <init>(androidx.core.provider.SelfDestructiveThread$2,java.lang.Object) -> <init>
    150:150:void run() -> run
androidx.core.provider.SelfDestructiveThread$3 -> androidx.core.provider.SelfDestructiveThread$3:
    171:171:void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Callable,java.util.concurrent.locks.ReentrantLock,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.locks.Condition) -> <init>
    175:184:void run() -> run
androidx.core.telephony.mbms.MbmsHelper -> androidx.core.telephony.mbms.MbmsHelper:
    36:36:void <init>() -> <init>
androidx.core.text.BidiFormatter -> androidx.core.text.BidiFormatter:
    85:222:void <clinit>() -> <clinit>
    262:262:void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat) -> <init>
    516:516:boolean isRtlLocale(java.util.Locale) -> isRtlLocale
androidx.core.text.BidiFormatter$Builder -> androidx.core.text.BidiFormatter$Builder:
    139:140:void <init>() -> <init>
    168:168:void initialize(boolean) -> initialize
androidx.core.text.BidiFormatter$DirectionalityEstimator -> androidx.core.text.BidiFormatter$DirectionalityEstimator:
    584:586:void <clinit>() -> <clinit>
androidx.core.text.HtmlCompat -> androidx.core.text.HtmlCompat:
    181:181:void <init>() -> <init>
androidx.core.text.ICUCompat -> androidx.core.text.ICUCompat:
    36:59:void <clinit>() -> <clinit>
    146:146:void <init>() -> <init>
    129:137:java.lang.String addLikelySubtags(java.util.Locale) -> addLikelySubtags
    114:120:java.lang.String getScript(java.lang.String) -> getScript
    89:105:java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
androidx.core.text.PrecomputedTextCompat -> androidx.core.text.PrecomputedTextCompat:
    479:481:void <init>(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,int[]) -> <init>
    712:712:char charAt(int) -> charAt
    426:473:androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params) -> create
    512:512:androidx.core.text.PrecomputedTextCompat$Params getParams() -> getParams
    687:687:int getSpanEnd(java.lang.Object) -> getSpanEnd
    692:692:int getSpanFlags(java.lang.Object) -> getSpanFlags
    682:682:int getSpanStart(java.lang.Object) -> getSpanStart
    677:677:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    707:707:int length() -> length
    697:697:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    663:664:void removeSpan(java.lang.Object) -> removeSpan
    651:652:void setSpan(java.lang.Object,int,int,int) -> setSpan
    717:717:java.lang.CharSequence subSequence(int,int) -> subSequence
    722:722:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params -> androidx.core.text.PrecomputedTextCompat$Params:
    195:200:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int) -> <init>
    204:209:void <init>(android.text.PrecomputedText$Params) -> <init>
    330:338:boolean equals(java.lang.Object) -> equals
    266:313:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params) -> equalsWithoutTextDirection
    243:243:int getBreakStrategy() -> getBreakStrategy
    255:255:int getHyphenationFrequency() -> getHyphenationFrequency
    231:231:android.text.TextDirectionHeuristic getTextDirection() -> getTextDirection
    218:218:android.text.TextPaint getTextPaint() -> getTextPaint
    347:366:int hashCode() -> hashCode
    374:395:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params$Builder -> androidx.core.text.PrecomputedTextCompat$Params$Builder:
    115:126:void <init>(android.text.TextPaint) -> <init>
    190:190:androidx.core.text.PrecomputedTextCompat$Params build() -> build
    144:144:androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int) -> setBreakStrategy
    162:162:androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int) -> setHyphenationFrequency
    180:180:androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> setTextDirection
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback -> androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback:
    542:542:java.lang.Object call() -> call
    554:554:androidx.core.text.PrecomputedTextCompat call() -> call
androidx.core.text.TextDirectionHeuristicsCompat -> androidx.core.text.TextDirectionHeuristicsCompat:
    33:68:void <clinit>() -> <clinit>
    257:257:void <init>() -> <init>
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong -> androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong:
    235:235:void <clinit>() -> <clinit>
    231:231:void <init>(boolean) -> <init>
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong -> androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong:
    193:193:void <clinit>() -> <clinit>
    190:190:void <init>() -> <init>
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    114:114:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm) -> <init>
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    156:156:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean) -> <init>
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    253:253:void <clinit>() -> <clinit>
    244:244:void <init>() -> <init>
androidx.core.text.TextUtilsCompat -> androidx.core.text.TextUtilsCompat:
    33:33:void <clinit>() -> <clinit>
    130:130:void <init>() -> <init>
    119:119:int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
    90:100:int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
androidx.core.text.util.FindAddress -> androidx.core.text.util.FindAddress:
    72:268:void <clinit>() -> <clinit>
    517:517:void <init>() -> <init>
androidx.core.text.util.FindAddress$ZipRange -> androidx.core.text.util.FindAddress$ZipRange:
    43:43:void <init>(int,int,int,int) -> <init>
androidx.core.text.util.LinkifyCompat -> androidx.core.text.util.LinkifyCompat:
    59:59:void <clinit>() -> <clinit>
    542:542:void <init>() -> <init>
androidx.core.text.util.LinkifyCompat$1 -> androidx.core.text.util.LinkifyCompat$1:
    59:59:void <init>() -> <init>
    59:59:int compare(java.lang.Object,java.lang.Object) -> compare
    62:70:int compare(androidx.core.text.util.LinkifyCompat$LinkSpec,androidx.core.text.util.LinkifyCompat$LinkSpec) -> compare
androidx.core.text.util.LinkifyCompat$LinkSpec -> androidx.core.text.util.LinkifyCompat$LinkSpec:
    550:550:void <init>() -> <init>
androidx.core.util.DebugUtils -> androidx.core.util.DebugUtils:
    49:49:void <init>() -> <init>
    33:45:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
androidx.core.util.LogWriter -> androidx.core.util.LogWriter:
    43:44:void <init>(java.lang.String) -> <init>
    48:48:void close() -> close
    52:52:void flush() -> flush
    68:70:void flushBuilder() -> flushBuilder
    57:62:void write(char[],int,int) -> write
androidx.core.util.ObjectsCompat -> androidx.core.util.ObjectsCompat:
    29:29:void <init>() -> <init>
    50:53:boolean equals(java.lang.Object,java.lang.Object) -> equals
    92:95:int hash(java.lang.Object[]) -> hash
androidx.core.util.Pair -> androidx.core.util.Pair:
    52:56:boolean equals(java.lang.Object) -> equals
    66:66:int hashCode() -> hashCode
    71:71:java.lang.String toString() -> toString
androidx.core.util.PatternsCompat -> androidx.core.util.PatternsCompat:
    154:338:void <clinit>() -> <clinit>
    351:351:void <init>() -> <init>
androidx.core.util.Pools -> androidx.core.util.Pools:
    73:73:void <init>() -> <init>
androidx.core.util.Pools$SimplePool -> androidx.core.util.Pools$SimplePool:
    94:96:void <init>(int) -> <init>
    104:108:java.lang.Object acquire() -> acquire
    128:129:boolean isInPool(java.lang.Object) -> isInPool
    116:117:boolean release(java.lang.Object) -> release
androidx.core.util.Pools$SynchronizedPool -> androidx.core.util.Pools$SynchronizedPool:
    153:143:void <init>(int) -> <init>
    158:160:java.lang.Object acquire() -> acquire
    165:167:boolean release(java.lang.Object) -> release
androidx.core.util.Preconditions -> androidx.core.util.Preconditions:
    171:171:void <init>() -> <init>
    138:138:int checkArgumentNonnegative(int) -> checkArgumentNonnegative
    64:64:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    81:81:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
androidx.core.util.TimeUtils -> androidx.core.util.TimeUtils:
    40:41:void <clinit>() -> <clinit>
    185:185:void <init>() -> <init>
    163:166:void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    172:172:void formatDuration(long,java.io.PrintWriter) -> formatDuration
    179:182:void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
    81:147:int formatDurationLocked(long,int) -> formatDurationLocked
    61:74:int printField(char[],int,char,int,boolean,int) -> printField
androidx.core.view.AccessibilityDelegateCompat -> androidx.core.view.AccessibilityDelegateCompat:
    130:130:void <clinit>() -> <clinit>
    139:139:void <init>() -> <init>
    146:148:void <init>(android.view.View$AccessibilityDelegate) -> <init>
    216:216:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    318:321:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    394:396:java.util.List getActionList(android.view.View) -> getActionList
    155:155:android.view.View$AccessibilityDelegate getBridge() -> getBridge
    382:385:boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View) -> isSpanStillValid
    256:256:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    275:275:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    236:236:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    300:300:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    345:357:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    364:372:boolean performClickableSpanAction(int,android.view.View) -> performClickableSpanAction
    173:173:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    195:195:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter:
    64:65:void <init>(androidx.core.view.AccessibilityDelegateCompat) -> <init>
    71:71:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    118:121:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    76:76:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    82:90:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    96:96:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    102:102:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    126:126:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    107:107:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    112:112:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.ActionProvider -> androidx.core.view.ActionProvider:
    139:139:void <init>(android.content.Context) -> <init>
    170:170:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    312:313:void reset() -> reset
    289:289:void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    299:304:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
    279:280:void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
androidx.core.view.DisplayCutoutCompat -> androidx.core.view.DisplayCutoutCompat:
    111:116:boolean equals(java.lang.Object) -> equals
    121:121:int hashCode() -> hashCode
    126:126:java.lang.String toString() -> toString
androidx.core.view.DragStartHelper -> androidx.core.view.DragStartHelper:
    170:170:boolean onLongClick(android.view.View) -> onLongClick
    129:134:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.core.view.DragStartHelper$1 -> androidx.core.view.DragStartHelper$1:
    184:184:boolean onLongClick(android.view.View) -> onLongClick
androidx.core.view.DragStartHelper$2 -> androidx.core.view.DragStartHelper$2:
    191:191:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    62:64:void <clinit>() -> <clinit>
    458:461:void dispatchLongPress() -> dispatchLongPress
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    113:115:void handleMessage(android.os.Message) -> handleMessage
androidx.core.view.GravityCompat -> androidx.core.view.GravityCompat:
    153:153:void <init>() -> <init>
    64:67:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    145:146:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
androidx.core.view.InputDeviceCompat -> androidx.core.view.InputDeviceCompat:
    220:220:void <init>() -> <init>
androidx.core.view.KeyEventDispatcher -> androidx.core.view.KeyEventDispatcher:
    51:51:void <init>() -> <init>
    96:106:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent) -> actionBarOnMenuKeyEventPre28
    115:137:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent) -> activitySuperDispatchKeyEventPre28
    161:173:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent) -> dialogSuperDispatchKeyEventPre28
    63:63:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchBeforeHierarchy
    83:92:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent) -> dispatchKeyEvent
    142:153:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog) -> getDialogKeyListenerPre28
androidx.core.view.LayoutInflaterCompat -> androidx.core.view.LayoutInflaterCompat:
    95:95:void <init>() -> <init>
    71:86:void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> forceSetFactory2
    139:149:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper -> androidx.core.view.LayoutInflaterCompat$Factory2Wrapper:
    49:49:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    55:55:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    60:60:java.lang.String toString() -> toString
androidx.core.view.MarginLayoutParamsCompat -> androidx.core.view.MarginLayoutParamsCompat:
    166:166:void <init>() -> <init>
    61:64:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    42:45:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
androidx.core.view.MenuCompat -> androidx.core.view.MenuCompat:
    55:55:void <init>() -> <init>
androidx.core.view.MenuItemCompat -> androidx.core.view.MenuItemCompat:
    557:557:void <init>() -> <init>
    207:211:android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider) -> setActionProvider
    463:466:void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    322:325:void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    503:506:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    534:537:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    418:421:void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    351:354:void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
androidx.core.view.MenuItemCompat$1 -> androidx.core.view.MenuItemCompat$1:
    310:310:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    305:305:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.core.view.MotionEventCompat -> androidx.core.view.MotionEventCompat:
    602:602:void <init>() -> <init>
    553:553:boolean isFromSource(android.view.MotionEvent,int) -> isFromSource
androidx.core.view.NestedScrollingChildHelper -> androidx.core.view.NestedScrollingChildHelper:
    56:57:void <init>(android.view.View) -> <init>
    348:351:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    368:371:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    288:288:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    302:329:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    204:204:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    231:231:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    238:265:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]) -> dispatchNestedScrollInternal
    408:406:android.view.ViewParent getNestedScrollingParentForType(int) -> getNestedScrollingParentForType
    425:428:int[] getTempNestedScrollConsumed() -> getTempNestedScrollConsumed
    100:100:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    114:114:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    86:86:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    70:73:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    419:416:void setNestedScrollingParentForType(int,android.view.ViewParent) -> setNestedScrollingParentForType
    129:129:boolean startNestedScroll(int) -> startNestedScroll
    145:161:boolean startNestedScroll(int,int) -> startNestedScroll
    175:175:void stopNestedScroll() -> stopNestedScroll
    186:189:void stopNestedScroll(int) -> stopNestedScroll
androidx.core.view.NestedScrollingParentHelper -> androidx.core.view.NestedScrollingParentHelper:
    50:50:void <init>(android.view.ViewGroup) -> <init>
    92:92:int getNestedScrollAxes() -> getNestedScrollAxes
    63:63:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    77:79:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    103:103:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    115:117:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
androidx.core.view.OneShotPreDrawListener -> androidx.core.view.OneShotPreDrawListener:
    43:46:void <init>(android.view.View,java.lang.Runnable) -> <init>
    62:59:androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    70:71:boolean onPreDraw() -> onPreDraw
    90:90:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    95:95:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    80:85:void removeListener() -> removeListener
androidx.core.view.ScaleGestureDetectorCompat -> androidx.core.view.ScaleGestureDetectorCompat:
    26:26:void <init>() -> <init>
androidx.core.view.VelocityTrackerCompat -> androidx.core.view.VelocityTrackerCompat:
    52:52:void <init>() -> <init>
androidx.core.view.ViewCompat -> androidx.core.view.ViewCompat:
    458:4051:void <clinit>() -> <clinit>
    3730:3730:void <init>() -> <init>
    3935:3935:androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty() -> accessibilityHeadingProperty
    1972:1978:androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    3255:3261:void compatOffsetLeftAndRight(android.view.View,int) -> compatOffsetLeftAndRight
    3207:3213:void compatOffsetTopAndBottom(android.view.View,int) -> compatOffsetTopAndBottom
    2477:2483:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    3758:3761:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeCallback
    3750:3753:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeHierarchy
    907:927:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View) -> getAccessibilityDelegateInternal
    1693:1694:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    3874:3874:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    2573:2577:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    2618:2622:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    2256:2257:float getElevation(android.view.View) -> getElevation
    479:487:android.graphics.Rect getEmptyTempRect() -> getEmptyTempRect
    2382:2383:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    1054:1055:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    1515:1516:int getLayoutDirection(android.view.View) -> getLayoutDirection
    1938:1954:int getMinimumHeight(android.view.View) -> getMinimumHeight
    1760:1763:int getPaddingEnd(android.view.View) -> getPaddingEnd
    1744:1747:int getPaddingStart(android.view.View) -> getPaddingStart
    1553:1556:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    2313:2319:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    2326:2327:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    870:870:boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    3321:3322:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    3914:3915:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    3309:3312:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    3115:3118:boolean isLaidOut(android.view.View) -> isLaidOut
    2697:2701:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    3801:3802:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    4027:4040:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int) -> notifyViewAccessibilityStateChangedIfNeeded
    3224:3250:void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    3176:3202:void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    2452:2458:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    656:656:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    3878:3878:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty() -> paneTitleProperty
    1154:1155:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    970:973:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    1010:1013:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    1032:1035:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    2337:2340:void requestApplyInsets(android.view.View) -> requestApplyInsets
    3806:3806:androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty() -> screenReaderFocusableProperty
    687:690:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    1729:1730:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    2559:2562:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    2589:2606:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    2636:2653:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    2245:2246:void setElevation(android.view.View,float) -> setElevation
    1081:1091:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    2674:2678:void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    2421:2427:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    3373:3374:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    2291:2297:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    2738:2741:void stopNestedScroll(android.view.View) -> stopNestedScroll
    3267:3269:void tickleInvalidationFlag(android.view.View) -> tickleInvalidationFlag
androidx.core.view.ViewCompat$1 -> androidx.core.view.ViewCompat$1:
    2427:2427:void <init>(androidx.core.view.OnApplyWindowInsetsListener) -> <init>
    2430:2432:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.ViewCompat$2 -> androidx.core.view.ViewCompat$2:
    3675:3675:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
androidx.core.view.ViewCompat$3 -> androidx.core.view.ViewCompat$3:
    3807:3807:void <init>(int,java.lang.Class,int) -> <init>
    3807:3807:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    3812:3812:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
androidx.core.view.ViewCompat$4 -> androidx.core.view.ViewCompat$4:
    3879:3879:void <init>(int,java.lang.Class,int,int) -> <init>
    3879:3879:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    3884:3884:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
androidx.core.view.ViewCompat$5 -> androidx.core.view.ViewCompat$5:
    3936:3936:void <init>(int,java.lang.Class,int) -> <init>
    3936:3936:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    3941:3941:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager:
    4054:4056:void <init>() -> <init>
    4096:4102:void checkPaneVisibility(android.view.View,boolean) -> checkPaneVisibility
    4061:4062:void onGlobalLayout() -> onGlobalLayout
    4070:4070:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    4108:4108:void registerForLayoutCallback(android.view.View) -> registerForLayoutCallback
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.view.ViewCompat$AccessibilityViewProperty:
    3965:3965:void <init>(int,java.lang.Class,int) -> <init>
    3970:3974:void <init>(int,java.lang.Class,int,int) -> <init>
    4007:4007:boolean extrasAvailable() -> extrasAvailable
    4003:4003:boolean frameworkAvailable() -> frameworkAvailable
    3992:3996:java.lang.Object get(android.view.View) -> get
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    4121:4121:void <clinit>() -> <clinit>
    4117:4136:void <init>() -> <init>
    4146:4150:androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> at
    4156:4167:boolean dispatch(android.view.View,android.view.KeyEvent) -> dispatch
    4175:4189:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> dispatchInOrder
    4139:4142:android.util.SparseArray getCapturedKeys() -> getCapturedKeys
    4234:4239:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
    4201:4224:boolean preDispatch(android.view.KeyEvent) -> preDispatch
    4274:4298:void recalcViewsWithUnhandled() -> recalcViewsWithUnhandled
androidx.core.view.ViewConfigurationCompat -> androidx.core.view.ViewConfigurationCompat:
    39:44:void <clinit>() -> <clinit>
    150:150:void <init>() -> <init>
    128:131:int getScaledHoverSlop(android.view.ViewConfiguration) -> getScaledHoverSlop
    141:147:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> shouldShowMenuShortcutsWhenKeyboardPresent
androidx.core.view.ViewGroupCompat -> androidx.core.view.ViewGroupCompat:
    52:52:void <init>() -> <init>
    157:163:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
androidx.core.view.ViewParentCompat -> androidx.core.view.ViewParentCompat:
    41:41:void <init>() -> <init>
    424:432:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    461:469:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    384:397:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> onNestedPreScroll
    329:353:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    248:262:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    207:221:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    282:295:void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> onStopNestedScroll
    66:66:boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
androidx.core.view.ViewPropertyAnimatorCompat -> androidx.core.view.ViewPropertyAnimatorCompat:
    36:37:void <init>(android.view.View) -> <init>
    136:137:androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    462:463:void cancel() -> cancel
    235:236:long getDuration() -> getDuration
    121:122:androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    252:253:androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    726:731:androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    739:756:void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> setListenerInternal
    284:285:androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    773:784:androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    642:643:void start() -> start
    181:182:androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
androidx.core.view.ViewPropertyAnimatorCompat$1 -> androidx.core.view.ViewPropertyAnimatorCompat$1:
    739:739:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    742:742:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    747:747:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    752:752:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorCompat$2 -> androidx.core.view.ViewPropertyAnimatorCompat$2:
    777:777:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    780:780:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14 -> androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14:
    44:45:void <init>(androidx.core.view.ViewPropertyAnimatorCompat) -> <init>
    99:105:void onAnimationCancel(android.view.View) -> onAnimationCancel
    73:93:void onAnimationEnd(android.view.View) -> onAnimationEnd
    51:67:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> androidx.core.view.ViewPropertyAnimatorListenerAdapter:
    27:27:void <init>() -> <init>
androidx.core.view.WindowCompat -> androidx.core.view.WindowCompat:
    65:65:void <init>() -> <init>
androidx.core.view.WindowInsetsCompat -> androidx.core.view.WindowInsetsCompat:
    35:36:void <init>(java.lang.Object) -> <init>
    380:384:boolean equals(java.lang.Object) -> equals
    113:114:int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    62:63:int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    96:97:int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    79:80:int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    389:389:int hashCode() -> hashCode
    164:165:boolean isConsumed() -> isConsumed
    213:215:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    397:397:java.lang.Object unwrap(androidx.core.view.WindowInsetsCompat) -> unwrap
    393:393:androidx.core.view.WindowInsetsCompat wrap(java.lang.Object) -> wrap
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> androidx.core.view.accessibility.AccessibilityClickableSpanCompat:
    54:57:void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int) -> <init>
    68:70:void onClick(android.view.View) -> onClick
androidx.core.view.accessibility.AccessibilityEventCompat -> androidx.core.view.accessibility.AccessibilityEventCompat:
    215:215:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityManagerCompat -> androidx.core.view.accessibility.AccessibilityManagerCompat:
    274:274:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    236:236:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper -> androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper:
    92:97:boolean equals(java.lang.Object) -> equals
    84:84:int hashCode() -> hashCode
    102:102:void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper -> androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper:
    215:220:boolean equals(java.lang.Object) -> equals
    207:207:int hashCode() -> hashCode
    225:225:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    1481:1482:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    1778:1778:void addAction(int) -> addAction
    1824:1825:void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    1690:1690:void addChild(android.view.View) -> addChild
    1708:1709:void addChild(android.view.View,int) -> addChild
    2553:2556:void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int) -> addSpanLocationToExtras
    2483:2494:void addSpansToExtras(java.lang.CharSequence,android.view.View) -> addSpansToExtras
    2544:2548:void clearExtrasSpans() -> clearExtrasSpans
    3775:3789:boolean equals(java.lang.Object) -> equals
    1795:1802:java.util.List extrasIntList(java.lang.String) -> extrasIntList
    1763:1763:int getActions() -> getActions
    2014:2014:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    2038:2038:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    1658:1658:int getChildCount() -> getChildCount
    2421:2421:java.lang.CharSequence getClassName() -> getClassName
    2519:2521:android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence) -> getClickableSpans
    2580:2580:java.lang.CharSequence getContentDescription() -> getContentDescription
    3148:3151:android.os.Bundle getExtras() -> getExtras
    2501:2504:android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View) -> getOrCreateSpansFromViewTags
    2397:2397:java.lang.CharSequence getPackageName() -> getPackageName
    2510:2510:android.util.SparseArray getSpansFromViewTags(android.view.View) -> getSpansFromViewTags
    2445:2459:java.lang.CharSequence getText() -> getText
    2639:2640:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    2540:2540:boolean hasSpans() -> hasSpans
    3764:3764:int hashCode() -> hashCode
    2529:2536:int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray) -> idForClickableSpan
    2189:2190:boolean isAccessibilityFocused() -> isAccessibilityFocused
    2062:2062:boolean isCheckable() -> isCheckable
    2086:2086:boolean isChecked() -> isChecked
    2244:2244:boolean isClickable() -> isClickable
    2292:2292:boolean isEnabled() -> isEnabled
    2110:2110:boolean isFocusable() -> isFocusable
    2134:2134:boolean isFocused() -> isFocused
    2268:2268:boolean isLongClickable() -> isLongClickable
    2316:2316:boolean isPassword() -> isPassword
    2340:2340:boolean isScrollable() -> isScrollable
    2220:2220:boolean isSelected() -> isSelected
    2158:2159:boolean isVisibleToUser() -> isVisibleToUser
    1520:1520:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    1548:1548:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    1559:1559:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    1886:1887:boolean performAction(int,android.os.Bundle) -> performAction
    2606:2606:void recycle() -> recycle
    1849:1850:boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> removeAction
    2560:2569:void removeCollectedSpans(android.view.View) -> removeCollectedSpans
    2209:2210:void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    3840:3845:void setBooleanProperty(int,boolean) -> setBooleanProperty
    2029:2029:void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    2053:2053:void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    3094:3095:void setCanOpenPopup(boolean) -> setCanOpenPopup
    2077:2077:void setCheckable(boolean) -> setCheckable
    2101:2101:void setChecked(boolean) -> setChecked
    2436:2436:void setClassName(java.lang.CharSequence) -> setClassName
    2259:2259:void setClickable(boolean) -> setClickable
    2752:2753:void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    2595:2595:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    2307:2307:void setEnabled(boolean) -> setEnabled
    2125:2125:void setFocusable(boolean) -> setFocusable
    2149:2149:void setFocused(boolean) -> setFocused
    3671:3674:void setHeading(boolean) -> setHeading
    2283:2283:void setLongClickable(boolean) -> setLongClickable
    2412:2412:void setPackageName(java.lang.CharSequence) -> setPackageName
    3548:3551:void setPaneTitle(java.lang.CharSequence) -> setPaneTitle
    1974:1976:void setParent(android.view.View) -> setParent
    2001:2004:void setParent(android.view.View,int) -> setParent
    2801:2802:void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat) -> setRangeInfo
    3757:3758:void setRoleDescription(java.lang.CharSequence) -> setRoleDescription
    3600:3603:void setScreenReaderFocusable(boolean) -> setScreenReaderFocusable
    2355:2355:void setScrollable(boolean) -> setScrollable
    2235:2235:void setSelected(boolean) -> setSelected
    1568:1570:void setSource(android.view.View) -> setSource
    1595:1598:void setSource(android.view.View,int) -> setSource
    2475:2475:void setText(java.lang.CharSequence) -> setText
    2178:2179:void setVisibleToUser(boolean) -> setVisibleToUser
    3797:3836:java.lang.String toString() -> toString
    1499:1499:android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    1492:1492:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    99:502:void <clinit>() -> <clinit>
    525:525:void <init>(int,java.lang.CharSequence) -> <init>
    548:548:void <init>(int,java.lang.CharSequence,java.lang.Class) -> <init>
    553:562:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class) -> <init>
    571:572:int getId() -> getId
    601:615:boolean perform(android.view.View,android.os.Bundle) -> perform
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    825:826:void <init>(java.lang.Object) -> <init>
    817:821:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat:
    942:943:void <init>(java.lang.Object) -> <init>
    932:936:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat obtain(int,float,float,float) -> obtain
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    104:110:void <init>() -> <init>
    120:121:void <init>(java.lang.Object) -> <init>
    128:128:java.lang.Object getProvider() -> getProvider
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16:
    38:39:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    44:49:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    56:65:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    73:73:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19:
    80:80:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    85:89:android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
androidx.core.view.accessibility.AccessibilityRecordCompat -> androidx.core.view.accessibility.AccessibilityRecordCompat:
    767:775:boolean equals(java.lang.Object) -> equals
    752:752:int hashCode() -> hashCode
    506:507:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    556:557:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
    137:138:void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> setSource
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments:
    49:49:void <clinit>() -> <clinit>
    46:46:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments:
    66:66:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments:
    100:100:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments:
    185:185:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments:
    150:150:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments:
    171:171:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments:
    115:115:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments:
    135:135:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityWindowInfoCompat -> androidx.core.view.accessibility.AccessibilityWindowInfoCompat:
    82:83:void <init>(java.lang.Object) -> <init>
    325:333:boolean equals(java.lang.Object) -> equals
    164:165:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    216:217:int getChildCount() -> getChildCount
    151:152:int getId() -> getId
    111:112:int getLayer() -> getLayer
    138:139:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getParent() -> getParent
    97:98:int getType() -> getType
    314:314:int hashCode() -> hashCode
    177:178:boolean isActive() -> isActive
    190:191:boolean isFocused() -> isFocused
    341:354:java.lang.String toString() -> toString
    77:77:androidx.core.view.accessibility.AccessibilityWindowInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
androidx.core.view.animation.PathInterpolatorApi14 -> androidx.core.view.animation.PathInterpolatorApi14:
    74:93:float getInterpolation(float) -> getInterpolation
androidx.core.view.animation.PathInterpolatorCompat -> androidx.core.view.animation.PathInterpolatorCompat:
    31:31:void <init>() -> <init>
androidx.core.view.inputmethod.EditorInfoCompat -> androidx.core.view.inputmethod.EditorInfoCompat:
    182:182:void <init>() -> <init>
androidx.core.view.inputmethod.InputConnectionCompat -> androidx.core.view.inputmethod.InputConnectionCompat:
    303:303:void <init>() -> <init>
    77:112:boolean handlePerformPrivateCommand(java.lang.String,android.os.Bundle,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> handlePerformPrivateCommand
androidx.core.view.inputmethod.InputConnectionCompat$1 -> androidx.core.view.inputmethod.InputConnectionCompat$1:
    275:279:boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle) -> commitContent
androidx.core.view.inputmethod.InputConnectionCompat$2 -> androidx.core.view.inputmethod.InputConnectionCompat$2:
    291:294:boolean performPrivateCommand(java.lang.String,android.os.Bundle) -> performPrivateCommand
androidx.core.view.inputmethod.InputContentInfoCompat -> androidx.core.view.inputmethod.InputContentInfoCompat:
    169:173:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    177:177:void <init>(androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl) -> <init>
    222:225:androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object) -> wrap
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl:
    109:110:void <init>(java.lang.Object) -> <init>
    114:115:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl:
    62:62:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
androidx.core.widget.AutoScrollHelper -> androidx.core.widget.AutoScrollHelper:
    195:195:void <clinit>() -> <clinit>
    210:225:void <init>(android.view.View) -> <init>
    687:691:void cancelTargetTouch() -> cancelTargetTouch
    549:568:float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    638:645:float constrainEdgeValue(float,float) -> constrainEdgeValue
    617:630:float getEdgeValue(float,float,float,float) -> getEdgeValue
    466:495:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    538:543:void requestStop() -> requestStop
    420:420:androidx.core.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    359:359:androidx.core.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    236:240:androidx.core.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    402:403:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    296:297:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    315:316:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    452:452:androidx.core.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    436:436:androidx.core.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    379:380:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    337:338:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    502:507:boolean shouldAnimate() -> shouldAnimate
    514:529:void startAnimating() -> startAnimating
androidx.core.widget.AutoScrollHelper$ClampedScroller -> androidx.core.widget.AutoScrollHelper$ClampedScroller:
    756:761:void <init>() -> <init>
    831:832:void computeScrollDelta() -> computeScrollDelta
    869:869:int getDeltaX() -> getDeltaX
    877:877:int getDeltaY() -> getDeltaY
    857:857:int getHorizontalDirection() -> getHorizontalDirection
    800:804:float getValueAt(long) -> getValueAt
    861:861:int getVerticalDirection() -> getVerticalDirection
    795:796:boolean isFinished() -> isFinished
    788:791:void requestStop() -> requestStop
    769:769:void setRampDownDuration(int) -> setRampDownDuration
    765:765:void setRampUpDuration(int) -> setRampUpDuration
    852:853:void setTargetVelocity(float,float) -> setTargetVelocity
    776:781:void start() -> start
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable:
    695:695:void <init>(androidx.core.widget.AutoScrollHelper) -> <init>
    700:711:void run() -> run
androidx.core.widget.AutoSizeableTextView -> androidx.core.widget.AutoSizeableTextView:
    39:39:void <clinit>() -> <clinit>
androidx.core.widget.CompoundButtonCompat -> androidx.core.widget.CompoundButtonCompat:
    41:41:void <init>() -> <init>
    123:142:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    57:60:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    93:96:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
androidx.core.widget.ContentLoadingProgressBar -> androidx.core.widget.ContentLoadingProgressBar:
    77:78:void onAttachedToWindow() -> onAttachedToWindow
    83:84:void onDetachedFromWindow() -> onDetachedFromWindow
    88:89:void removeCallbacks() -> removeCallbacks
androidx.core.widget.ContentLoadingProgressBar$1 -> androidx.core.widget.ContentLoadingProgressBar$1:
    49:51:void run() -> run
androidx.core.widget.ContentLoadingProgressBar$2 -> androidx.core.widget.ContentLoadingProgressBar$2:
    59:62:void run() -> run
androidx.core.widget.EdgeEffectCompat -> androidx.core.widget.EdgeEffectCompat:
    152:155:void onPull(android.widget.EdgeEffect,float,float) -> onPull
androidx.core.widget.ImageViewCompat -> androidx.core.widget.ImageViewCompat:
    107:107:void <init>() -> <init>
    37:41:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    74:78:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    50:65:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    88:103:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
androidx.core.widget.ListPopupWindowCompat -> androidx.core.widget.ListPopupWindowCompat:
    31:31:void <init>() -> <init>
androidx.core.widget.ListViewAutoScrollHelper -> androidx.core.widget.ListViewAutoScrollHelper:
    33:35:void <init>(android.widget.ListView) -> <init>
    51:73:boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    40:40:void scrollTargetBy(int,int) -> scrollTargetBy
androidx.core.widget.ListViewCompat -> androidx.core.widget.ListViewCompat:
    90:90:void <init>() -> <init>
    67:85:boolean canScrollList(android.widget.ListView,int) -> canScrollList
    37:53:void scrollListBy(android.widget.ListView,int) -> scrollListBy
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
    175:177:void <clinit>() -> <clinit>
    189:189:void <init>(android.content.Context) -> <init>
    193:193:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    198:214:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1606:1607:void abortAnimatedScroll() -> abortAnimatedScroll
    468:469:void addView(android.view.View) -> addView
    477:478:void addView(android.view.View,int) -> addView
    486:487:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    495:496:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1319:1363:boolean arrowScroll(int) -> arrowScroll
    519:523:boolean canScroll() -> canScroll
    1504:1504:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1497:1497:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    1490:1490:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    1540:1591:void computeScroll() -> computeScroll
    1658:1717:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    1483:1483:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    1476:1476:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    1452:1462:int computeVerticalScrollRange() -> computeVerticalScrollRange
    617:617:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    297:297:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    302:302:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    253:253:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    292:292:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    222:222:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    286:286:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1395:1398:void doScrollY(int) -> doScrollY
    1931:1975:void draw(android.graphics.Canvas) -> draw
    1882:1889:void endDrag() -> endDrag
    1917:1925:void ensureGlows() -> ensureGlows
    629:651:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    1140:1173:android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    1870:1877:void fling(int) -> fling
    1256:1271:boolean fullScroll(int) -> fullScroll
    431:439:float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    452:452:int getMaxScrollAmount() -> getMaxScrollAmount
    404:404:int getNestedScrollAxes() -> getNestedScrollAxes
    1113:1118:int getScrollRange() -> getScrollRange
    416:421:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    1033:1044:float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    240:240:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    280:280:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    671:677:boolean inChild(int,int) -> inChild
    683:686:void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    456:463:void initScrollView() -> initScrollView
    691:692:void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    265:265:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1373:1373:boolean isOffScreen(android.view.View) -> isOffScreen
    1858:1859:boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    1381:1385:boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    1510:1520:void measureChild(android.view.View,int,int) -> measureChild
    1526:1534:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    1825:1827:void onAttachedToWindow() -> onAttachedToWindow
    1005:1021:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    724:819:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1787:1820:void onLayout(boolean,int,int,int,int) -> onLayout
    581:609:void onMeasure(int,int) -> onMeasure
    390:391:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    399:399:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    356:356:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    384:384:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    310:310:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    350:350:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    379:379:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    337:338:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    368:368:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    314:323:void onNestedScrollInternal(int,int,int[]) -> onNestedScrollInternal
    1050:1050:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    1754:1766:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2012:2020:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2025:2027:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    572:575:void onScrollChanged(int,int,int,int) -> onScrollChanged
    988:998:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1832:1846:void onSizeChanged(int,int,int,int) -> onSizeChanged
    363:363:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    343:344:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    373:373:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    824:982:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1058:1106:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    1218:1239:boolean pageScroll(int) -> pageScroll
    697:699:void recycleVelocityTracker() -> recycleVelocityTracker
    1724:1730:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    1773:1776:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    706:708:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1781:1782:void requestLayout() -> requestLayout
    1597:1602:void runAnimatedScroll(boolean) -> runAnimatedScroll
    1289:1306:boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    1901:1911:void scrollTo(int,int) -> scrollTo
    1616:1624:void scrollToChild(android.view.View) -> scrollToChild
    1637:1643:boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    549:551:void setFillViewport(boolean) -> setFillViewport
    260:260:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    512:512:void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    567:567:void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    1410:1431:void smoothScrollBy(int,int) -> smoothScrollBy
    1441:1441:void smoothScrollTo(int,int) -> smoothScrollTo
    230:230:boolean startNestedScroll(int,int) -> startNestedScroll
    270:270:boolean startNestedScroll(int) -> startNestedScroll
    235:235:void stopNestedScroll(int) -> stopNestedScroll
    275:275:void stopNestedScroll() -> stopNestedScroll
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$AccessibilityDelegate:
    2070:2070:void <init>() -> <init>
    2127:2135:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2108:2119:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2073:2087:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$SavedState:
    2056:2056:void <clinit>() -> <clinit>
    2035:2035:void <init>(android.os.Parcelable) -> <init>
    2039:2040:void <init>(android.os.Parcel) -> <init>
    2051:2052:java.lang.String toString() -> toString
    2045:2046:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$SavedState$1:
    2057:2057:void <init>() -> <init>
    2057:2057:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2060:2060:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2057:2057:java.lang.Object[] newArray(int) -> newArray
    2065:2065:androidx.core.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
androidx.core.widget.PopupMenuCompat -> androidx.core.widget.PopupMenuCompat:
    30:30:void <init>() -> <init>
androidx.core.widget.PopupWindowCompat -> androidx.core.widget.PopupWindowCompat:
    46:46:void <init>() -> <init>
    90:106:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    153:170:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    68:79:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.TextViewCompat -> androidx.core.widget.TextViewCompat:
    111:111:void <init>() -> <init>
    768:768:int getFirstBaselineToTopHeight(android.widget.TextView) -> getFirstBaselineToTopHeight
    778:778:int getLastBaselineToBottomHeight(android.widget.TextView) -> getLastBaselineToBottomHeight
    957:971:int getTextDirection(android.text.TextDirectionHeuristic) -> getTextDirection
    901:935:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView) -> getTextDirectionHeuristic
    815:827:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    987:991:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList) -> setCompoundDrawableTintList
    1021:1025:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    693:715:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
    738:756:void setLastBaselineToBottomHeight(android.widget.TextView,int) -> setLastBaselineToBottomHeight
    796:802:void setLineHeight(android.widget.TextView,int) -> setLineHeight
    884:886:void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    842:867:void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParams
    519:529:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> wrapCustomSelectionActionModeCallback
androidx.core.widget.TextViewCompat$OreoCallback -> androidx.core.widget.TextViewCompat$OreoCallback:
    549:552:void <init>(android.view.ActionMode$Callback,android.widget.TextView) -> <init>
    671:671:android.content.Intent createProcessTextIntent() -> createProcessTextIntent
    659:661:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView) -> createProcessTextIntentForResolveInfo
    630:639:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager) -> getSupportedActivities
    665:667:boolean isEditable(android.widget.TextView) -> isEditable
    646:653:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context) -> isSupportedActivity
    568:568:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    557:557:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    573:573:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    562:563:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    577:624:void recomputeProcessTextMenuItems(android.view.Menu) -> recomputeProcessTextMenuItems
androidx.cursoradapter.R -> androidx.cursoradapter.R:
    10:10:void <init>() -> <init>
androidx.cursoradapter.widget.CursorAdapter -> androidx.cursoradapter.widget.CursorAdapter:
    150:151:void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    334:336:void changeCursor(android.database.Cursor) -> changeCursor
    387:387:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    216:217:int getCount() -> getCount
    208:208:android.database.Cursor getCursor() -> getCursor
    280:288:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    426:429:android.widget.Filter getFilter() -> getFilter
    228:230:java.lang.Object getItem(int) -> getItem
    241:243:long getItemId(int) -> getItemId
    262:263:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    179:198:void init(android.content.Context,android.database.Cursor,int) -> init
    314:314:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    469:471:void onContentChanged() -> onContentChanged
    417:421:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    351:371:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver -> androidx.cursoradapter.widget.CursorAdapter$ChangeObserver:
    476:477:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    487:487:void onChange(boolean) -> onChange
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver -> androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver:
    492:492:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    497:498:void onChanged() -> onChanged
    503:504:void onInvalidated() -> onInvalidated
androidx.cursoradapter.widget.CursorFilter -> androidx.cursoradapter.widget.CursorFilter:
    39:40:void <init>(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient) -> <init>
    45:45:java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    50:58:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    65:68:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
androidx.cursoradapter.widget.ResourceCursorAdapter -> androidx.cursoradapter.widget.ResourceCursorAdapter:
    82:84:void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    117:117:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    112:112:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.cursoradapter.widget.SimpleCursorAdapter -> androidx.cursoradapter.widget.SimpleCursorAdapter:
    126:150:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    299:305:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    318:326:void findColumns(android.database.Cursor,java.lang.String[]) -> findColumns
    200:202:void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    218:218:void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    335:336:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
androidx.customview.R -> androidx.customview.R:
    10:10:void <init>() -> <init>
androidx.customview.R$attr -> androidx.customview.R$attr:
    13:13:void <init>() -> <init>
androidx.customview.R$color -> androidx.customview.R$color:
    29:29:void <init>() -> <init>
androidx.customview.R$dimen -> androidx.customview.R$dimen:
    37:37:void <init>() -> <init>
androidx.customview.R$drawable -> androidx.customview.R$drawable:
    63:63:void <init>() -> <init>
androidx.customview.R$id -> androidx.customview.R$id:
    79:79:void <init>() -> <init>
androidx.customview.R$integer -> androidx.customview.R$integer:
    111:111:void <init>() -> <init>
androidx.customview.R$layout -> androidx.customview.R$layout:
    116:116:void <init>() -> <init>
androidx.customview.R$string -> androidx.customview.R$string:
    126:126:void <init>() -> <init>
androidx.customview.R$style -> androidx.customview.R$style:
    131:131:void <init>() -> <init>
androidx.customview.R$styleable -> androidx.customview.R$styleable:
    144:179:void <clinit>() -> <clinit>
    142:142:void <init>() -> <init>
androidx.customview.view.AbsSavedState -> androidx.customview.view.AbsSavedState:
    30:88:void <clinit>() -> <clinit>
    29:29:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    37:38:void <init>() -> <init>
    46:48:void <init>(android.os.Parcelable) -> <init>
    68:70:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    75:75:android.os.Parcelable getSuperState() -> getSuperState
    85:85:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> androidx.customview.view.AbsSavedState$1:
    30:30:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> androidx.customview.view.AbsSavedState$2:
    88:88:void <init>() -> <init>
    88:88:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    91:93:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    100:100:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object[] newArray(int) -> newArray
    105:105:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.customview.widget.ExploreByTouchHelper -> androidx.customview.widget.ExploreByTouchHelper:
    100:347:void <clinit>() -> <clinit>
    998:1001:boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    1046:1054:boolean clearKeyboardFocusForVirtualView(int) -> clearKeyboardFocusForVirtualView
    641:639:android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    677:700:android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    653:654:android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    791:812:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    734:747:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    157:160:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    932:948:boolean isVisibleToUser(android.graphics.Rect) -> isVisibleToUser
    720:723:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int) -> obtainAccessibilityNodeInfo
    660:663:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    755:758:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    899:897:boolean performAction(int,int,android.os.Bundle) -> performAction
    918:914:boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    904:904:boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    968:983:boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    1016:1033:boolean requestKeyboardFocusForVirtualView(int) -> requestKeyboardFocusForVirtualView
    505:515:boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
androidx.customview.widget.ExploreByTouchHelper$1 -> androidx.customview.widget.ExploreByTouchHelper$1:
    336:336:void <init>() -> <init>
    336:336:void obtainBounds(java.lang.Object,android.graphics.Rect) -> obtainBounds
    339:339:void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect) -> obtainBounds
androidx.customview.widget.ExploreByTouchHelper$2 -> androidx.customview.widget.ExploreByTouchHelper$2:
    349:349:void <init>() -> <init>
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider -> androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider:
    1238:1238:void <init>(androidx.customview.widget.ExploreByTouchHelper) -> <init>
    1245:1247:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    1257:1262:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1252:1252:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.customview.widget.FocusStrategy -> androidx.customview.widget.FocusStrategy:
    454:454:void <init>() -> <init>
androidx.customview.widget.FocusStrategy$SequentialComparator -> androidx.customview.widget.FocusStrategy$SequentialComparator:
    108:129:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.customview.widget.ViewDragHelper -> androidx.customview.widget.ViewDragHelper:
    332:332:void <clinit>() -> <clinit>
    383:385:void <init>(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> <init>
    511:516:void cancel() -> cancel
    471:472:void captureChildView(android.view.View,int) -> captureChildView
    1276:1289:boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    1306:1314:boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    1334:1336:boolean checkTouchSlop(int) -> checkTouchSlop
    1359:1374:boolean checkTouchSlop(int,int) -> checkTouchSlop
    670:670:int clampMag(int,int,int) -> clampMag
    687:687:float clampMag(float,float,float) -> clampMag
    790:800:void clearMotionHistory() -> clearMotionHistory
    804:814:void clearMotionHistory(int) -> clearMotionHistory
    642:656:int computeAxisDuration(int,int,int) -> computeAxisDuration
    617:632:int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    735:769:boolean continueSettling(boolean) -> continueSettling
    355:355:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> create
    369:370:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback) -> create
    779:785:void dispatchViewReleased(float,float) -> dispatchViewReleased
    696:696:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    1426:1440:void dragTo(int,int,int,int) -> dragTo
    818:843:void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    1487:1491:android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    597:612:boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    487:487:android.view.View getCapturedView() -> getCapturedView
    459:459:int getEdgeSize() -> getEdgeSize
    1501:1504:int getEdgesTouched(int,int) -> getEdgesTouched
    503:503:int getTouchSlop() -> getTouchSlop
    431:431:int getViewDragState() -> getViewDragState
    1455:1455:boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    884:884:boolean isPointerDown(int) -> isPointerDown
    1510:1511:boolean isValidPointerForActionMove(int) -> isValidPointerForActionMove
    1471:1474:boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    1097:1127:void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    1413:1420:void releaseViewForPointerUp() -> releaseViewForPointerUp
    1256:1271:void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    848:852:void saveInitialMotion(float,float,int) -> saveInitialMotion
    856:866:void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    888:893:void setDragState(int) -> setDragState
    447:447:void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    411:411:void setMinVelocity(float) -> setMinVelocity
    577:578:boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    963:1087:boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    552:559:boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    908:914:boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
androidx.customview.widget.ViewDragHelper$1 -> androidx.customview.widget.ViewDragHelper$1:
    332:332:void <init>() -> <init>
androidx.customview.widget.ViewDragHelper$2 -> androidx.customview.widget.ViewDragHelper$2:
    340:340:void <init>(androidx.customview.widget.ViewDragHelper) -> <init>
    343:343:void run() -> run
androidx.customview.widget.ViewDragHelper$Callback -> androidx.customview.widget.ViewDragHelper$Callback:
    152:152:void <init>() -> <init>
androidx.drawerlayout.R -> androidx.drawerlayout.R:
    10:10:void <init>() -> <init>
androidx.drawerlayout.R$attr -> androidx.drawerlayout.R$attr:
    13:13:void <init>() -> <init>
androidx.drawerlayout.R$color -> androidx.drawerlayout.R$color:
    29:29:void <init>() -> <init>
androidx.drawerlayout.R$dimen -> androidx.drawerlayout.R$dimen:
    37:37:void <init>() -> <init>
androidx.drawerlayout.R$drawable -> androidx.drawerlayout.R$drawable:
    63:63:void <init>() -> <init>
androidx.drawerlayout.R$id -> androidx.drawerlayout.R$id:
    79:79:void <init>() -> <init>
androidx.drawerlayout.R$integer -> androidx.drawerlayout.R$integer:
    111:111:void <init>() -> <init>
androidx.drawerlayout.R$layout -> androidx.drawerlayout.R$layout:
    116:116:void <init>() -> <init>
androidx.drawerlayout.R$string -> androidx.drawerlayout.R$string:
    126:126:void <init>() -> <init>
androidx.drawerlayout.R$style -> androidx.drawerlayout.R$style:
    131:131:void <init>() -> <init>
androidx.drawerlayout.R$styleable -> androidx.drawerlayout.R$styleable:
    144:179:void <clinit>() -> <clinit>
    142:142:void <init>() -> <init>
androidx.drawerlayout.widget.DrawerLayout -> androidx.drawerlayout.widget.DrawerLayout:
    104:192:void <clinit>() -> <clinit>
    306:306:void <init>(android.content.Context) -> <init>
    310:310:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    314:366:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    514:517:void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> addDrawerListener
    1911:1941:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    2057:2075:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1961:1970:void cancelChildViewTouch() -> cancelChildViewTouch
    950:950:boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    1901:1901:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1747:1747:void closeDrawer(android.view.View) -> closeDrawer
    1757:1758:void closeDrawer(android.view.View,boolean) -> closeDrawer
    1789:1789:void closeDrawer(int) -> closeDrawer
    1800:1803:void closeDrawer(int,boolean) -> closeDrawer
    1637:1637:void closeDrawers() -> closeDrawers
    1642:1668:void closeDrawers(boolean) -> closeDrawers
    1309:1320:void computeScroll() -> computeScroll
    1536:1539:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    850:871:void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    878:894:void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    916:921:void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    774:784:boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View) -> dispatchTransformedGenericPointerEvent
    1401:1458:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    986:990:android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    955:959:android.view.View findOpenDrawer() -> findOpenDrawer
    1949:1952:android.view.View findVisibleDrawer() -> findVisibleDrawer
    1887:1887:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1892:1892:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1906:1906:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    393:394:float getDrawerElevation() -> getDrawerElevation
    652:659:int getDrawerLockMode(int) -> getDrawerLockMode
    709:710:int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    747:751:java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    945:946:int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    937:937:float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    1350:1350:android.graphics.drawable.Drawable getStatusBarBackgroundDrawable() -> getStatusBarBackgroundDrawable
    794:804:android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent,android.view.View) -> getTransformedMotionEvent
    1011:1011:java.lang.String gravityToString(int) -> gravityToString
    1325:1327:boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    1875:1878:boolean hasPeekingDrawer() -> hasPeekingDrawer
    1945:1945:boolean hasVisibleDrawer() -> hasVisibleDrawer
    2085:2087:boolean includeChildForAccessibility(android.view.View) -> includeChildForAccessibility
    1464:1464:boolean isContentView(android.view.View) -> isContentView
    1819:1820:boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    1468:1469:boolean isDrawerView(android.view.View) -> isDrawerView
    1852:1853:boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    1867:1869:boolean isDrawerVisible(int) -> isDrawerVisible
    761:765:boolean isInBoundsOfChild(float,float,android.view.View) -> isInBoundsOfChild
    1208:1212:boolean mirror(android.graphics.drawable.Drawable,int) -> mirror
    967:975:void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    1022:1023:void onAttachedToWindow() -> onAttachedToWindow
    1016:1017:void onDetachedFromWindow() -> onDetachedFromWindow
    1383:1394:void onDraw(android.graphics.Canvas) -> onDraw
    1485:1527:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1976:1980:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1986:1992:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1218:1297:void onLayout(boolean,int,int,int,int) -> onLayout
    1029:1053:void onMeasure(int,int) -> onMeasure
    1997:2022:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1378:1378:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2028:2050:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1569:1582:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1678:1678:void openDrawer(android.view.View) -> openDrawer
    1688:1689:void openDrawer(android.view.View,boolean) -> openDrawer
    1722:1722:void openDrawer(int) -> openDrawer
    1733:1736:void openDrawer(int,boolean) -> openDrawer
    531:535:void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> removeDrawerListener
    1625:1629:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1302:1303:void requestLayout() -> requestLayout
    1166:1181:android.graphics.drawable.Drawable resolveLeftShadow() -> resolveLeftShadow
    1185:1199:android.graphics.drawable.Drawable resolveRightShadow() -> resolveRightShadow
    1158:1162:void resolveShadowDrawables() -> resolveShadowDrawables
    405:408:void setChildInsets(java.lang.Object,boolean) -> setChildInsets
    376:380:void setDrawerElevation(float) -> setDrawerElevation
    493:501:void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    552:553:void setDrawerLockMode(int) -> setDrawerLockMode
    577:609:void setDrawerLockMode(int,int) -> setDrawerLockMode
    927:933:void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    474:475:void setScrimColor(int) -> setScrimColor
    1339:1340:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    1360:1361:void setStatusBarBackground(int) -> setStatusBarBackground
    1372:1373:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    900:909:void updateChildrenImportantForAccessibility(android.view.View,boolean) -> updateChildrenImportantForAccessibility
    814:843:void updateDrawerState(int,int,android.view.View) -> updateDrawerState
androidx.drawerlayout.widget.DrawerLayout$1 -> androidx.drawerlayout.widget.DrawerLayout$1:
    343:343:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    346:348:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate:
    2349:2350:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    2426:2430:void addChildrenForAccessibility(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    2442:2463:void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
    2399:2413:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2387:2389:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2354:2382:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2419:2420:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate:
    2467:2467:void <init>() -> <init>
    2471:2477:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
androidx.drawerlayout.widget.DrawerLayout$LayoutParams -> androidx.drawerlayout.widget.DrawerLayout$LayoutParams:
    2319:2323:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2327:2313:void <init>(int,int) -> <init>
    2336:2337:void <init>(androidx.drawerlayout.widget.DrawerLayout$LayoutParams) -> <init>
    2341:2313:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2345:2313:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
androidx.drawerlayout.widget.DrawerLayout$SavedState -> androidx.drawerlayout.widget.DrawerLayout$SavedState:
    2124:2124:void <clinit>() -> <clinit>
    2102:2107:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2111:2095:void <init>(android.os.Parcelable) -> <init>
    2116:2121:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.drawerlayout.widget.DrawerLayout$SavedState$1 -> androidx.drawerlayout.widget.DrawerLayout$SavedState$1:
    2124:2124:void <init>() -> <init>
    2124:2124:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2124:2124:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2127:2127:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2132:2132:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2124:2124:java.lang.Object[] newArray(int) -> newArray
    2137:2137:androidx.drawerlayout.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener -> androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener:
    287:287:void <init>() -> <init>
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback -> androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback:
    2152:2153:void <init>(androidx.drawerlayout.widget.DrawerLayout,int) -> <init>
    2294:2298:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    2304:2304:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    2203:2206:void closeOtherDrawer() -> closeOtherDrawer
    2289:2289:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    2277:2283:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    2231:2231:void onEdgeTouched(int,int) -> onEdgeTouched
    2196:2199:void onViewCaptured(android.view.View,int) -> onViewCaptured
    2174:2174:void onViewDragStateChanged(int) -> onViewDragStateChanged
    2180:2191:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    2214:2226:void onViewReleased(android.view.View,float,float) -> onViewReleased
    2237:2257:void peekDrawer() -> peekDrawer
    2161:2161:void removeCallbacks() -> removeCallbacks
    2157:2157:void setDragger(androidx.customview.widget.ViewDragHelper) -> setDragger
    2168:2169:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1 -> androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1:
    2146:2146:void <init>(androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) -> <init>
    2148:2148:void run() -> run
androidx.fragment.R -> androidx.fragment.R:
    10:10:void <init>() -> <init>
androidx.fragment.R$attr -> androidx.fragment.R$attr:
    13:13:void <init>() -> <init>
androidx.fragment.R$color -> androidx.fragment.R$color:
    29:29:void <init>() -> <init>
androidx.fragment.R$dimen -> androidx.fragment.R$dimen:
    37:37:void <init>() -> <init>
androidx.fragment.R$drawable -> androidx.fragment.R$drawable:
    63:63:void <init>() -> <init>
androidx.fragment.R$id -> androidx.fragment.R$id:
    79:79:void <init>() -> <init>
androidx.fragment.R$integer -> androidx.fragment.R$integer:
    150:150:void <init>() -> <init>
androidx.fragment.R$layout -> androidx.fragment.R$layout:
    155:155:void <init>() -> <init>
androidx.fragment.R$string -> androidx.fragment.R$string:
    166:166:void <init>() -> <init>
androidx.fragment.R$style -> androidx.fragment.R$style:
    171:171:void <init>() -> <init>
androidx.fragment.R$styleable -> androidx.fragment.R$styleable:
    184:219:void <clinit>() -> <clinit>
    182:182:void <init>() -> <init>
androidx.fragment.app.BackStackRecord -> androidx.fragment.app.BackStackRecord:
    140:141:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    255:265:void bumpBackStackNesting(int) -> bumpBackStackNesting
    282:282:int commit() -> commit
    287:287:int commitAllowingStateLoss() -> commitAllowingStateLoss
    303:303:int commitInternal(boolean) -> commitInternal
    298:299:void commitNowAllowingStateLoss() -> commitNowAllowingStateLoss
    219:224:androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment) -> detach
    179:180:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    59:59:void dump(java.lang.String,java.io.PrintWriter) -> dump
    64:133:void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    389:439:void executeOps() -> executeOps
    451:500:void executePopOps(boolean) -> executePopOps
    528:533:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment) -> expandOps
    332:339:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    660:660:java.lang.String getName() -> getName
    345:348:boolean interactsWith(int) -> interactsWith
    360:372:boolean interactsWith(java.util.ArrayList,int,int) -> interactsWith
    665:665:boolean isEmpty() -> isEmpty
    652:654:boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op) -> isFragmentPostponed
    633:635:boolean isPostponed() -> isPostponed
    186:191:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    272:276:void runOnCommitRunnables() -> runOnCommitRunnables
    243:244:androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    643:646:void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartPostponedListener
    43:55:java.lang.String toString() -> toString
    607:612:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment) -> trackAddedFragmentsInPop
androidx.fragment.app.BackStackState -> androidx.fragment.app.BackStackState:
    170:170:void <clinit>() -> <clinit>
    47:52:void <init>(androidx.fragment.app.BackStackRecord) -> <init>
    83:98:void <init>(android.os.Parcel) -> <init>
    102:142:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManagerImpl) -> instantiate
    153:167:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackState$1 -> androidx.fragment.app.BackStackState$1:
    171:171:void <init>() -> <init>
    171:171:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    174:174:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    171:171:java.lang.Object[] newArray(int) -> newArray
    179:179:androidx.fragment.app.BackStackState[] newArray(int) -> newArray
androidx.fragment.app.DialogFragment -> androidx.fragment.app.DialogFragment:
    112:105:void <init>() -> <init>
    202:202:void dismiss() -> dismiss
    216:250:void dismissInternal(boolean,boolean) -> dismissInternal
    283:283:int getTheme() -> getTheme
    451:475:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    337:341:void onAttach(android.content.Context) -> onAttach
    358:369:void onCreate(android.os.Bundle) -> onCreate
    431:431:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    529:545:void onDestroyView() -> onDestroyView
    347:352:void onDetach() -> onDetach
    440:445:void onDismiss(android.content.DialogInterface) -> onDismiss
    376:388:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    492:512:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    482:486:void onStart() -> onStart
    518:520:void onStop() -> onStop
    296:297:void setCancelable(boolean) -> setCancelable
    397:403:void setupDialog(android.app.Dialog,int) -> setupDialog
    151:155:void show(androidx.fragment.app.FragmentManager,java.lang.String) -> show
androidx.fragment.app.DialogFragment$1 -> androidx.fragment.app.DialogFragment$1:
    93:93:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    96:97:void run() -> run
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
    98:98:void <clinit>() -> <clinit>
    450:451:void <init>() -> <init>
    2451:2459:void callStartTransitionListener() -> callStartTransitionListener
    2474:2546:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2873:2876:androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    570:570:boolean equals(java.lang.Object) -> equals
    2551:2554:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    788:788:androidx.fragment.app.FragmentActivity getActivity() -> getActivity
    2315:2316:boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    2340:2341:boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    2931:2934:android.view.View getAnimatingAway() -> getAnimatingAway
    2946:2949:android.animation.Animator getAnimator() -> getAnimator
    636:636:android.os.Bundle getArguments() -> getArguments
    922:923:androidx.fragment.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    761:761:android.content.Context getContext() -> getContext
    2098:2101:java.lang.Object getEnterTransition() -> getEnterTransition
    2917:2920:androidx.core.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    2177:2180:java.lang.Object getExitTransition() -> getExitTransition
    2924:2927:androidx.core.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    890:890:androidx.fragment.app.FragmentManager getFragmentManager() -> getFragmentManager
    815:815:java.lang.Object getHost() -> getHost
    1430:1431:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    283:283:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    2880:2883:int getNextAnim() -> getNextAnim
    2894:2897:int getNextTransition() -> getNextTransition
    2910:2913:int getNextTransitionStyle() -> getNextTransitionStyle
    934:934:androidx.fragment.app.Fragment getParentFragment() -> getParentFragment
    2215:2218:java.lang.Object getReenterTransition() -> getReenterTransition
    838:838:android.content.res.Resources getResources() -> getResources
    1073:1073:boolean getRetainInstance() -> getRetainInstance
    2137:2140:java.lang.Object getReturnTransition() -> getReturnTransition
    370:370:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    2248:2251:java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    2286:2290:java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    2953:2956:int getStateAfterAnimating() -> getStateAfterAnimating
    736:742:androidx.fragment.app.Fragment getTargetFragment() -> getTargetFragment
    1686:1686:android.view.View getView() -> getView
    361:362:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    577:577:int hashCode() -> hashCode
    468:471:void initLifecycle() -> initLifecycle
    1877:1892:void initState() -> initState
    522:530:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    964:964:boolean isAdded() -> isAdded
    973:973:boolean isDetached() -> isDetached
    1022:1022:boolean isHidden() -> isHidden
    2971:2974:boolean isHideReplaced() -> isHideReplaced
    563:563:boolean isInBackStack() -> isInBackStack
    2964:2967:boolean isPostponed() -> isPostponed
    1001:1001:boolean isResumed() -> isResumed
    663:666:boolean isStateSaved() -> isStateSaved
    2663:2663:void noteStateNotSaved() -> noteStateNotSaved
    1720:1720:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1523:1527:void onAttach(android.content.Context) -> onAttach
    1540:1540:void onAttach(android.app.Activity) -> onAttach
    1804:1804:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1603:1606:void onCreate(android.os.Bundle) -> onCreate
    1999:1999:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1659:1660:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    1867:1867:void onDestroy() -> onDestroy
    1858:1858:void onDestroyView() -> onDestroyView
    1901:1901:void onDetach() -> onDetach
    1380:1380:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    1484:1488:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1502:1502:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1844:1844:void onLowMemory() -> onLowMemory
    1828:1828:void onPause() -> onPause
    1757:1757:void onResume() -> onResume
    1746:1746:void onStart() -> onStart
    1838:1838:void onStop() -> onStop
    1736:1736:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    2616:2621:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    2558:2576:void performAttach() -> performAttach
    2688:2689:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    2745:2749:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    2582:2589:void performCreate(android.os.Bundle) -> performCreate
    2708:2713:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    2597:2608:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    2825:2832:void performDestroy() -> performDestroy
    2805:2813:void performDestroyView() -> performDestroyView
    2838:2842:void performDetach() -> performDetach
    1412:1414:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    2693:2694:void performLowMemory() -> performLowMemory
    2678:2679:void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    2731:2737:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    2757:2761:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    2775:2784:void performPause() -> performPause
    2683:2684:void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    2720:2725:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    2667:2673:void performPrimaryNavigationFragmentChanged() -> performPrimaryNavigationFragmentChanged
    2645:2651:void performResume() -> performResume
    2766:2770:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    2628:2634:void performStart() -> performStart
    2790:2799:void performStop() -> performStop
    1314:1315:void requestPermissions(java.lang.String[],int) -> requestPermissions
    800:802:androidx.fragment.app.FragmentActivity requireActivity() -> requireActivity
    772:774:android.content.Context requireContext() -> requireContext
    908:910:androidx.fragment.app.FragmentManager requireFragmentManager() -> requireFragmentManager
    1697:1699:android.view.View requireView() -> requireView
    1624:1628:void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    547:554:void restoreViewState(android.os.Bundle) -> restoreViewState
    2938:2938:void setAnimatingAway(android.view.View) -> setAnimatingAway
    2942:2942:void setAnimator(android.animation.Animator) -> setAnimator
    624:627:void setArguments(android.os.Bundle) -> setArguments
    2978:2978:void setHideReplaced(boolean) -> setHideReplaced
    678:679:void setInitialSavedState(androidx.fragment.app.Fragment$SavedState) -> setInitialSavedState
    1102:1105:void setMenuVisibility(boolean) -> setMenuVisibility
    2887:2890:void setNextAnim(int) -> setNextAnim
    2901:2906:void setNextTransition(int,int) -> setNextTransition
    2856:2868:void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartEnterTransitionListener
    2960:2960:void setStateAfterAnimating(int) -> setStateAfterAnimating
    1131:1140:void setUserVisibleHint(boolean) -> setUserVisibleHint
    1363:1364:boolean shouldShowRequestPermissionRationale(java.lang.String) -> shouldShowRequestPermissionRationale
    2431:2432:void startPostponedEnterTransition() -> startPostponedEnterTransition
    582:596:java.lang.String toString() -> toString
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$1:
    230:230:void <init>(androidx.fragment.app.Fragment) -> <init>
    233:233:void run() -> run
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$2:
    471:471:void <init>(androidx.fragment.app.Fragment) -> <init>
    475:477:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$3:
    2434:2434:void <init>(androidx.fragment.app.Fragment) -> <init>
    2437:2437:void run() -> run
androidx.fragment.app.Fragment$4 -> androidx.fragment.app.Fragment$4:
    2558:2558:void <init>(androidx.fragment.app.Fragment) -> <init>
    2562:2563:android.view.View onFindViewById(int) -> onFindViewById
    2570:2570:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$AnimationInfo:
    2995:3028:void <init>() -> <init>
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$InstantiationException:
    430:430:void <init>(java.lang.String,java.lang.Exception) -> <init>
androidx.fragment.app.Fragment$SavedState -> androidx.fragment.app.Fragment$SavedState:
    404:404:void <clinit>() -> <clinit>
    382:383:void <init>(android.os.Bundle) -> <init>
    386:389:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    400:400:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.Fragment$SavedState$1 -> androidx.fragment.app.Fragment$SavedState$1:
    405:405:void <init>() -> <init>
    405:405:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    405:405:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    408:408:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    413:413:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    405:405:java.lang.Object[] newArray(int) -> newArray
    418:418:androidx.fragment.app.Fragment$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.FragmentActivity:
    127:93:void <init>() -> <init>
    830:831:int allocateRequestIndex(androidx.fragment.app.Fragment) -> allocateRequestIndex
    715:715:void checkForValidRequestCode(int) -> checkForValidRequestCode
    357:357:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    599:612:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    636:636:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    990:990:void markFragmentsCreated() -> markFragmentsCreated
    996:1008:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State) -> markState
    155:181:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    273:275:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    284:316:void onCreate(android.os.Bundle) -> onCreate
    325:329:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    336:338:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    347:349:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    365:367:void onDestroy() -> onDestroy
    375:376:void onLowMemory() -> onLowMemory
    384:390:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    250:250:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    437:438:void onNewIntent(android.content.Intent) -> onNewIntent
    407:410:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    418:421:void onPause() -> onPause
    265:265:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    467:468:void onPostResume() -> onPostResume
    502:502:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    488:492:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    754:769:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    456:459:void onResume() -> onResume
    478:479:void onResumeFragments() -> onResumeFragments
    510:527:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    536:551:void onStart() -> onStart
    446:446:void onStateNotSaved() -> onStateNotSaved
    559:565:void onStop() -> onStop
    854:865:void requestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> requestPermissionsFromFragment
    658:663:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    671:676:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    685:690:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    700:705:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    583:583:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    728:730:void validateRequestPermissionsRequestCode(int) -> validateRequestPermissionsRequestCode
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.FragmentActivity$HostCallbacks:
    871:872:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    882:882:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    894:894:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    888:888:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    971:971:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    900:900:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    977:977:android.view.View onFindViewById(int) -> onFindViewById
    868:868:java.lang.Object onGetHost() -> onGetHost
    916:916:androidx.fragment.app.FragmentActivity onGetHost() -> onGetHost
    911:911:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    965:966:int onGetWindowAnimations() -> onGetWindowAnimations
    982:983:boolean onHasView() -> onHasView
    960:960:boolean onHasWindowAnimations() -> onHasWindowAnimations
    948:948:void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> onRequestPermissionsFromFragment
    905:905:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    954:954:boolean onShouldShowRequestPermissionRationale(java.lang.String) -> onShouldShowRequestPermissionRationale
    921:921:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentContainer -> androidx.fragment.app.FragmentContainer:
    31:31:void <init>() -> <init>
    57:57:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
androidx.fragment.app.FragmentController -> androidx.fragment.app.FragmentController:
    60:61:void <init>(androidx.fragment.app.FragmentHostCallback) -> <init>
    116:116:void attachHost(androidx.fragment.app.Fragment) -> attachHost
    57:57:androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback) -> createController
    246:246:void dispatchActivityCreated() -> dispatchActivityCreated
    362:362:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    424:424:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    235:235:void dispatchCreate() -> dispatchCreate
    386:386:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    329:329:void dispatchDestroy() -> dispatchDestroy
    374:374:void dispatchLowMemory() -> dispatchLowMemory
    340:340:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    411:411:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    435:435:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    279:279:void dispatchPause() -> dispatchPause
    351:351:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    398:398:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    268:268:void dispatchResume() -> dispatchResume
    257:257:void dispatchStart() -> dispatchStart
    290:290:void dispatchStop() -> dispatchStop
    446:446:boolean execPendingActions() -> execPendingActions
    92:92:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    69:69:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    141:141:void noteStateNotSaved() -> noteStateNotSaved
    134:134:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    190:191:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    151:151:android.os.Parcelable saveAllState() -> saveAllState
androidx.fragment.app.FragmentFactory -> androidx.fragment.app.FragmentFactory:
    32:32:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    114:117:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
    64:65:boolean isFragmentClass(java.lang.ClassLoader,java.lang.String) -> isFragmentClass
    44:48:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String) -> loadClass
    88:91:java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String) -> loadFragmentClass
androidx.fragment.app.FragmentHostCallback -> androidx.fragment.app.FragmentHostCallback:
    58:58:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    62:66:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    195:195:android.app.Activity getActivity() -> getActivity
    200:200:android.content.Context getContext() -> getContext
    205:205:android.os.Handler getHandler() -> getHandler
    95:95:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    179:179:int onGetWindowAnimations() -> onGetWindowAnimations
androidx.fragment.app.FragmentManager -> androidx.fragment.app.FragmentManager:
    49:49:void <clinit>() -> <clinit>
    48:117:void <init>() -> <init>
    411:414:androidx.fragment.app.FragmentFactory getFragmentFactory() -> getFragmentFactory
    401:401:void setFragmentFactory(androidx.fragment.app.FragmentFactory) -> setFragmentFactory
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks -> androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks:
    454:454:void <init>() -> <init>
androidx.fragment.app.FragmentManagerImpl -> androidx.fragment.app.FragmentManagerImpl:
    574:575:void <clinit>() -> <clinit>
    75:147:void <init>() -> <init>
    2091:2103:void addAddedFragments(androidx.collection.ArraySet) -> addAddedFragments
    2191:2194:void addBackStackState(androidx.fragment.app.BackStackRecord) -> addBackStackState
    1375:1379:void addFragment(androidx.fragment.app.Fragment,boolean) -> addFragment
    393:401:void addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    1597:1613:int allocBackStackIndex(androidx.fragment.app.BackStackRecord) -> allocBackStackIndex
    1076:1128:void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int) -> animateRemoveFragment
    2563:2563:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment) -> attachController
    1464:1469:void attachFragment(androidx.fragment.app.Fragment) -> attachFragment
    178:178:androidx.fragment.app.FragmentTransaction beginTransaction() -> beginTransaction
    2555:2558:void burpActive() -> burpActive
    3097:3099:boolean checkForMenus() -> checkForMenus
    1535:1536:void checkStateLoss() -> checkStateLoss
    1712:1714:void cleanupExec() -> cleanupExec
    1990:2017:void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean) -> completeExecute
    1163:1210:void completeShowHideFragment(androidx.fragment.app.Fragment) -> completeShowHideFragment
    1446:1454:void detachFragment(androidx.fragment.app.Fragment) -> detachFragment
    2611:2613:void dispatchActivityCreated() -> dispatchActivityCreated
    2685:2688:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    2767:2773:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    2605:2607:void dispatchCreate() -> dispatchCreate
    2703:2730:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    2642:2652:void dispatchDestroy() -> dispatchDestroy
    2638:2638:void dispatchDestroyView() -> dispatchDestroyView
    2694:2697:void dispatchLowMemory() -> dispatchLowMemory
    2667:2670:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    2942:2951:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentActivityCreated
    2894:2903:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean) -> dispatchOnFragmentAttached
    2926:2935:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentCreated
    3064:3073:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDestroyed
    3079:3088:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDetached
    3003:3012:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPaused
    2878:2887:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean) -> dispatchOnFragmentPreAttached
    2910:2919:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentPreCreated
    2988:2997:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentResumed
    3034:3043:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentSaveInstanceState
    2973:2982:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStarted
    3018:3027:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStopped
    2958:2967:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean) -> dispatchOnFragmentViewCreated
    3049:3058:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentViewDestroyed
    2752:2758:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    2782:2788:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    2807:2808:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment) -> dispatchParentPrimaryNavigationFragmentChanged
    2629:2629:void dispatchPause() -> dispatchPause
    2676:2679:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    2736:2743:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    2813:2815:void dispatchPrimaryNavigationFragmentChanged() -> dispatchPrimaryNavigationFragmentChanged
    2623:2625:void dispatchResume() -> dispatchResume
    2617:2619:void dispatchStart() -> dispatchStart
    2658:2662:void dispatchStateChange(int) -> dispatchStateChange
    2633:2634:void dispatchStop() -> dispatchStop
    2176:2178:void doPendingDeferredStart() -> doPendingDeferredStart
    475:544:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2125:2141:void endAnimatingAwayFragments() -> endAnimatingAwayFragments
    1558:1573:void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean) -> enqueueAction
    1659:1660:void ensureExecReady(boolean) -> ensureExecReady
    1137:1147:void ensureInflatedFragmentView(androidx.fragment.app.Fragment) -> ensureInflatedFragmentView
    1721:1736:boolean execPendingActions() -> execPendingActions
    1688:1704:void execSingleAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean) -> execSingleAction
    2069:2079:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOps
    1844:1897:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOpsTogether
    183:184:boolean executePendingTransactions() -> executePendingTransactions
    1747:1772:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> executePostponedTransaction
    1487:1495:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    1507:1517:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    1526:1527:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    2040:2050:androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment) -> findFragmentUnder
    2113:2115:void forcePostponedTransactions() -> forcePostponedTransactions
    1642:1649:void freeBackStackIndex(int) -> freeBackStackIndex
    2160:2171:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    324:324:int getBackStackEntryCount() -> getBackStackEntryCount
    389:389:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    359:365:androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    2836:2855:androidx.fragment.app.FragmentFactory getFragmentFactory() -> getFragmentFactory
    374:379:java.util.List getFragments() -> getFragments
    2821:2821:androidx.fragment.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    384:384:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    230:241:void handleOnBackPressed() -> handleOnBackPressed
    1420:1425:void hideFragment(androidx.fragment.app.Fragment) -> hideFragment
    454:454:boolean isDestroyed() -> isDestroyed
    3109:3109:boolean isMenuAvailable(androidx.fragment.app.Fragment) -> isMenuAvailable
    214:221:boolean isPrimaryNavigation(androidx.fragment.app.Fragment) -> isPrimaryNavigation
    718:718:boolean isStateAtLeast(int) -> isStateAtLeast
    1546:1546:boolean isStateSaved() -> isStateSaved
    603:671:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int) -> loadAnimation
    1331:1344:void makeActive(androidx.fragment.app.Fragment) -> makeActive
    595:598:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(float,float) -> makeFadeAnimation
    1348:1371:void makeInactive(androidx.fragment.app.Fragment) -> makeInactive
    581:591:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(float,float,float,float) -> makeOpenCloseAnimation
    1909:1915:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet) -> makeRemovedFragmentsInvisible
    1223:1275:void moveFragmentToExpectedState(androidx.fragment.app.Fragment) -> moveFragmentToExpectedState
    725:1062:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean) -> moveToState
    1133:1133:void moveToState(androidx.fragment.app.Fragment) -> moveToState
    1289:1318:void moveToState(int,boolean) -> moveToState
    2593:2599:void noteStateNotSaved() -> noteStateNotSaved
    3156:3212:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    3248:3248:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    706:713:void performPendingDeferredStart(androidx.fragment.app.Fragment) -> performPendingDeferredStart
    272:270:void popBackStack(int,int) -> popBackStack
    252:253:boolean popBackStackImmediate() -> popBackStackImmediate
    293:318:boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    2200:2248:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> popBackStackState
    1937:1965:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet) -> postponePostponableTransactions
    349:350:void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment) -> putFragment
    1399:1404:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    1794:1799:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> removeRedundantOperationsAndExecute
    406:414:void removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    2183:2185:void reportBackStackChanged() -> reportBackStackChanged
    2441:2546:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    2320:2425:android.os.Parcelable saveAllState() -> saveAllState
    2286:2311:android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment) -> saveFragmentBasicState
    441:442:androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment) -> saveFragmentInstanceState
    2268:2279:void saveFragmentViewState(androidx.fragment.app.Fragment) -> saveFragmentViewState
    1584:1593:void scheduleCommit() -> scheduleCommit
    1617:1638:void setBackStackIndex(int,androidx.fragment.app.BackStackRecord) -> setBackStackIndex
    2825:2827:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    2795:2803:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    1436:1441:void showFragment(androidx.fragment.app.Fragment) -> showFragment
    1323:1325:void startPendingDeferredFragments() -> startPendingDeferredFragments
    155:172:void throwException(java.lang.RuntimeException) -> throwException
    459:469:java.lang.String toString() -> toString
    192:199:void updateOnBackPressedCallbackEnabled() -> updateOnBackPressedCallbackEnabled
androidx.fragment.app.FragmentManagerImpl$1 -> androidx.fragment.app.FragmentManagerImpl$1:
    105:105:void <init>(androidx.fragment.app.FragmentManagerImpl,boolean) -> <init>
    108:108:void handleOnBackPressed() -> handleOnBackPressed
androidx.fragment.app.FragmentManagerImpl$2 -> androidx.fragment.app.FragmentManagerImpl$2:
    147:147:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    150:150:void run() -> run
androidx.fragment.app.FragmentManagerImpl$3 -> androidx.fragment.app.FragmentManagerImpl$3:
    1084:1084:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,androidx.fragment.app.Fragment) -> <init>
    1094:1094:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$3$1 -> androidx.fragment.app.FragmentManagerImpl$3$1:
    1094:1094:void <init>(androidx.fragment.app.FragmentManagerImpl$3) -> <init>
    1097:1099:void run() -> run
androidx.fragment.app.FragmentManagerImpl$4 -> androidx.fragment.app.FragmentManagerImpl$4:
    1114:1114:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1117:1123:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$5 -> androidx.fragment.app.FragmentManagerImpl$5:
    1177:1177:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1180:1183:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$6 -> androidx.fragment.app.FragmentManagerImpl$6:
    2845:2845:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    2851:2851:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator -> androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator:
    3401:3405:void <init>(android.view.animation.Animation) -> <init>
    3409:3413:void <init>(android.animation.Animator) -> <init>
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation -> androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation:
    3433:3439:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    3444:3451:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    3459:3466:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    3473:3479:void run() -> run
androidx.fragment.app.FragmentManagerImpl$FragmentTag -> androidx.fragment.app.FragmentManagerImpl$FragmentTag:
    3256:3256:void <clinit>() -> <clinit>
    3263:3263:void <init>() -> <init>
androidx.fragment.app.FragmentManagerImpl$PopBackStackState -> androidx.fragment.app.FragmentManagerImpl$PopBackStackState:
    3295:3298:void <init>(androidx.fragment.app.FragmentManagerImpl,java.lang.String,int,int) -> <init>
    3304:3314:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener -> androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener:
    3329:3331:void <init>(androidx.fragment.app.BackStackRecord,boolean) -> <init>
    3390:3390:void cancelTransaction() -> cancelTransaction
    3372:3382:void completeTransaction() -> completeTransaction
    3362:3362:boolean isReady() -> isReady
    3341:3345:void onStartEnterTransition() -> onStartEnterTransition
    3355:3355:void startListening() -> startListening
androidx.fragment.app.FragmentManagerState -> androidx.fragment.app.FragmentManagerState:
    58:58:void <clinit>() -> <clinit>
    33:30:void <init>() -> <init>
    36:41:void <init>(android.os.Parcel) -> <init>
    51:55:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> androidx.fragment.app.FragmentManagerState$1:
    59:59:void <init>() -> <init>
    59:59:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    62:62:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    59:59:java.lang.Object[] newArray(int) -> newArray
    67:67:androidx.fragment.app.FragmentManagerState[] newArray(int) -> newArray
androidx.fragment.app.FragmentManagerViewModel -> androidx.fragment.app.FragmentManagerViewModel:
    40:40:void <clinit>() -> <clinit>
    82:83:void <init>(boolean) -> <init>
    99:99:boolean addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    148:161:void clearNonConfigState(androidx.fragment.app.Fragment) -> clearNonConfigState
    231:237:boolean equals(java.lang.Object) -> equals
    129:132:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    52:54:androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    104:104:java.util.Collection getRetainedFragments() -> getRetainedFragments
    139:142:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    242:244:int hashCode() -> hashCode
    95:95:boolean isCleared() -> isCleared
    88:91:void onCleared() -> onCleared
    124:124:boolean removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    108:119:boolean shouldDestroy(androidx.fragment.app.Fragment) -> shouldDestroy
    251:278:java.lang.String toString() -> toString
androidx.fragment.app.FragmentManagerViewModel$1 -> androidx.fragment.app.FragmentManagerViewModel$1:
    40:40:void <init>() -> <init>
    45:45:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.fragment.app.FragmentPagerAdapter -> androidx.fragment.app.FragmentPagerAdapter:
    189:198:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    234:236:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    157:180:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    242:242:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    269:269:java.lang.String makeFragmentName(int,long) -> makeFragmentName
    205:228:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    147:148:void startUpdate(android.view.ViewGroup) -> startUpdate
androidx.fragment.app.FragmentState -> androidx.fragment.app.FragmentState:
    173:173:void <clinit>() -> <clinit>
    47:59:void <init>(androidx.fragment.app.Fragment) -> <init>
    62:75:void <init>(android.os.Parcel) -> <init>
    80:113:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,androidx.fragment.app.FragmentFactory) -> instantiate
    119:148:java.lang.String toString() -> toString
    158:170:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentState$1 -> androidx.fragment.app.FragmentState$1:
    174:174:void <init>() -> <init>
    174:174:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    177:177:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    174:174:java.lang.Object[] newArray(int) -> newArray
    182:182:androidx.fragment.app.FragmentState[] newArray(int) -> newArray
androidx.fragment.app.FragmentStatePagerAdapter -> androidx.fragment.app.FragmentStatePagerAdapter:
    206:222:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    258:260:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    167:198:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    266:266:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    295:317:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    273:286:android.os.Parcelable saveState() -> saveState
    229:252:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    153:154:void startUpdate(android.view.ViewGroup) -> startUpdate
androidx.fragment.app.FragmentTabHost -> androidx.fragment.app.FragmentTabHost:
    402:425:androidx.fragment.app.FragmentTransaction doTabChanged(java.lang.String,androidx.fragment.app.FragmentTransaction) -> doTabChanged
    433:435:androidx.fragment.app.FragmentTabHost$TabInfo getTabInfoForTag(java.lang.String) -> getTabInfoForTag
    299:332:void onAttachedToWindow() -> onAttachedToWindow
    344:345:void onDetachedFromWindow() -> onDetachedFromWindow
    371:377:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    357:359:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    388:395:void onTabChanged(java.lang.String) -> onTabChanged
    259:259:void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    196:196:void setup() -> setup
androidx.fragment.app.FragmentTabHost$DummyTabFactory -> androidx.fragment.app.FragmentTabHost$DummyTabFactory:
    82:84:android.view.View createTabContent(java.lang.String) -> createTabContent
androidx.fragment.app.FragmentTabHost$SavedState -> androidx.fragment.app.FragmentTabHost$SavedState:
    114:114:void <clinit>() -> <clinit>
    93:93:void <init>(android.os.Parcelable) -> <init>
    97:98:void <init>(android.os.Parcel) -> <init>
    109:110:java.lang.String toString() -> toString
    103:104:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentTabHost$SavedState$1 -> androidx.fragment.app.FragmentTabHost$SavedState$1:
    115:115:void <init>() -> <init>
    115:115:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    118:118:androidx.fragment.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    115:115:java.lang.Object[] newArray(int) -> newArray
    123:123:androidx.fragment.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentTransaction -> androidx.fragment.app.FragmentTransaction:
    48:108:void <init>() -> <init>
    125:125:androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String) -> add
    134:134:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment) -> add
    156:156:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String) -> add
    113:117:void addOp(androidx.fragment.app.FragmentTransaction$Op) -> addOp
    306:306:androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment) -> attach
    289:289:androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment) -> detach
    532:533:androidx.fragment.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    161:165:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    359:359:boolean isEmpty() -> isEmpty
    239:239:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    350:350:androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
androidx.fragment.app.FragmentTransaction$Op -> androidx.fragment.app.FragmentTransaction$Op:
    72:72:void <init>() -> <init>
    75:79:void <init>(int,androidx.fragment.app.Fragment) -> <init>
    82:86:void <init>(int,androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> <init>
androidx.fragment.app.FragmentTransition -> androidx.fragment.app.FragmentTransition:
    45:63:void <clinit>() -> <clinit>
    1265:1265:void <init>() -> <init>
    648:651:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection) -> addSharedElementsWithMatchingNames
    1125:1210:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean) -> addToFirstInLastOut
    1077:1080:void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculateFragments
    163:188:androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> calculateNameOverrides
    1094:1100:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculatePopFragments
    981:994:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> callSharedElementStartEnd
    471:472:boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List) -> canHandleAll
    840:843:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureInSharedElements
    784:785:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureOutSharedElements
    425:465:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment) -> chooseImpl
    1005:1015:java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View) -> configureEnteringExitingViews
    691:736:java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsOrdered
    562:624:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsReordered
    313:367:void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap) -> configureTransitionsOrdered
    215:266:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap) -> configureTransitionsReordered
    1223:1224:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> ensureContainer
    891:894:java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String) -> findKeyForValue
    511:510:java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getEnterTransition
    524:523:java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getExitTransition
    913:920:android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> getInEpicenterView
    497:499:java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean) -> getSharedElementTransition
    1044:1060:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean) -> mergeTransitions
    279:285:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList) -> replaceHide
    68:70:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl() -> resolveSupportImpl
    958:961:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> retainValues
    394:394:void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleTargetChange
    937:946:void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord) -> setOutEpicenter
    1029:1031:void setViewVisibility(java.util.ArrayList,int) -> setViewVisibility
    107:138:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean) -> startTransitions
androidx.fragment.app.FragmentTransition$1 -> androidx.fragment.app.FragmentTransition$1:
    285:285:void <init>(java.util.ArrayList) -> <init>
    288:288:void run() -> run
androidx.fragment.app.FragmentTransition$2 -> androidx.fragment.app.FragmentTransition$2:
    394:394:void <init>(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    397:413:void run() -> run
androidx.fragment.app.FragmentTransition$3 -> androidx.fragment.app.FragmentTransition$3:
    624:624:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect) -> <init>
    627:630:void run() -> run
androidx.fragment.app.FragmentTransition$4 -> androidx.fragment.app.FragmentTransition$4:
    736:736:void <init>(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    739:757:void run() -> run
androidx.fragment.app.FragmentTransition$FragmentContainerTransition -> androidx.fragment.app.FragmentTransition$FragmentContainerTransition:
    1233:1233:void <init>() -> <init>
androidx.fragment.app.FragmentTransitionCompat21 -> androidx.fragment.app.FragmentTransitionCompat21:
    32:32:void <init>() -> <init>
    289:290:void addTarget(java.lang.Object,android.view.View) -> addTarget
    92:109:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    206:206:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    36:36:boolean canHandle(java.lang.Object) -> canHandle
    43:43:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    119:121:boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    179:197:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    127:135:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    297:298:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    262:280:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    143:144:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    214:215:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    77:81:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    305:306:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    61:71:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    251:255:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    53:54:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.fragment.app.FragmentTransitionCompat21$1 -> androidx.fragment.app.FragmentTransitionCompat21$1:
    81:81:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    84:84:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$2 -> androidx.fragment.app.FragmentTransitionCompat21$2:
    144:144:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    151:155:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
androidx.fragment.app.FragmentTransitionCompat21$3 -> androidx.fragment.app.FragmentTransitionCompat21$3:
    215:215:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    231:231:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    218:225:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$4 -> androidx.fragment.app.FragmentTransitionCompat21$4:
    306:306:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    309:312:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionImpl -> androidx.fragment.app.FragmentTransitionImpl:
    42:42:void <init>() -> <init>
    315:328:void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    193:206:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    341:341:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    360:362:java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> findKeyForValue
    216:226:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    80:81:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    352:352:boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    134:139:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> prepareSetNameOverridesReordered
    296:296:void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> scheduleNameReset
    237:237:void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> setNameOverridesOrdered
    153:173:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> setNameOverridesReordered
androidx.fragment.app.FragmentTransitionImpl$1 -> androidx.fragment.app.FragmentTransitionImpl$1:
    173:173:void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    176:178:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$2 -> androidx.fragment.app.FragmentTransitionImpl$2:
    237:237:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    240:246:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$3 -> androidx.fragment.app.FragmentTransitionImpl$3:
    296:296:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    299:304:void run() -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> androidx.fragment.app.FragmentViewLifecycleOwner:
    24:25:void <init>() -> <init>
    46:47:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    51:51:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    31:32:void initialize() -> initialize
    40:40:boolean isInitialized() -> isInitialized
androidx.fragment.app.ListFragment -> androidx.fragment.app.ListFragment:
    76:59:void <init>() -> <init>
    349:354:void ensureList() -> ensureList
    97:139:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    159:164:void onDestroyView() -> onDestroyView
    150:151:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    185:192:void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    287:289:void setListShown(boolean,boolean) -> setListShown
androidx.fragment.app.ListFragment$1 -> androidx.fragment.app.ListFragment$1:
    52:52:void <init>(androidx.fragment.app.ListFragment) -> <init>
    55:55:void run() -> run
androidx.fragment.app.ListFragment$2 -> androidx.fragment.app.ListFragment$2:
    60:60:void <init>(androidx.fragment.app.ListFragment) -> <init>
    63:63:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.fragment.app.SuperNotCalledException -> androidx.fragment.app.SuperNotCalledException:
    23:23:void <init>(java.lang.String) -> <init>
androidx.interpolator.R -> androidx.interpolator.R:
    10:10:void <init>() -> <init>
androidx.interpolator.view.animation.FastOutLinearInInterpolator -> androidx.interpolator.view.animation.FastOutLinearInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.FastOutSlowInInterpolator -> androidx.interpolator.view.animation.FastOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LinearOutSlowInInterpolator -> androidx.interpolator.view.animation.LinearOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LookupTableInterpolator -> androidx.interpolator.view.animation.LookupTableInterpolator:
    30:32:void <init>(float[]) -> <init>
    46:54:float getInterpolation(float) -> getInterpolation
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.ClassesInfoCache:
    35:35:void <clinit>() -> <clinit>
    33:42:void <init>() -> <init>
    105:160:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]) -> createInfo
    70:72:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    81:85:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> getInfo
    45:64:boolean hasLifecycleMethods(java.lang.Class) -> hasLifecycleMethods
    91:100:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> verifyAndPutHandler
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.ClassesInfoCache$CallbackInfo:
    169:179:void <init>(java.util.Map) -> <init>
    185:186:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallbacks
    193:194:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeMethodsForEvent
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.ClassesInfoCache$MethodReference:
    205:208:void <init>(int,java.lang.reflect.Method) -> <init>
    237:242:boolean equals(java.lang.Object) -> equals
    247:247:int hashCode() -> hashCode
    214:226:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallback
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    24:25:void <init>(androidx.lifecycle.GeneratedAdapter[]) -> <init>
    30:35:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ComputableLiveData -> androidx.lifecycle.ComputableLiveData:
    56:56:void <init>() -> <init>
    65:67:void <init>(java.util.concurrent.Executor) -> <init>
androidx.lifecycle.ComputableLiveData$1 -> androidx.lifecycle.ComputableLiveData$1:
    67:67:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    70:70:void onActive() -> onActive
androidx.lifecycle.ComputableLiveData$2 -> androidx.lifecycle.ComputableLiveData$2:
    87:87:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    95:118:void run() -> run
androidx.lifecycle.ComputableLiveData$3 -> androidx.lifecycle.ComputableLiveData$3:
    124:124:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    128:131:void run() -> run
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
    25:27:void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver) -> <init>
    32:55:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.FullLifecycleObserverAdapter$1 -> androidx.lifecycle.FullLifecycleObserverAdapter$1:
    32:32:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle -> androidx.lifecycle.Lifecycle:
    78:85:void <init>() -> <init>
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.Lifecycle$Event:
    132:127:void <clinit>() -> <clinit>
    128:128:void <init>(java.lang.String,int) -> <init>
    127:127:androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    127:127:androidx.lifecycle.Lifecycle$Event[] values() -> values
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.Lifecycle$State:
    170:163:void <clinit>() -> <clinit>
    164:164:void <init>(java.lang.String,int) -> <init>
    212:212:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
    163:163:androidx.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    163:163:androidx.lifecycle.Lifecycle$State[] values() -> values
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.LifecycleRegistry:
    94:96:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    169:198:void addObserver(androidx.lifecycle.LifecycleObserver) -> addObserver
    307:317:void backwardPass(androidx.lifecycle.LifecycleOwner) -> backwardPass
    159:164:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver) -> calculateTargetState
    261:263:androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State) -> downEvent
    292:301:void forwardPass(androidx.lifecycle.LifecycleOwner) -> forwardPass
    239:239:androidx.lifecycle.Lifecycle$State getCurrentState() -> getCurrentState
    243:246:androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event) -> getStateAfter
    130:131:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    150:155:boolean isSynced() -> isSynced
    108:108:void markState(androidx.lifecycle.Lifecycle$State) -> markState
    346:346:androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> min
    135:140:void moveToState(androidx.lifecycle.Lifecycle$State) -> moveToState
    202:202:void popParentState() -> popParentState
    206:206:void pushParentState(androidx.lifecycle.Lifecycle$State) -> pushParentState
    223:223:void removeObserver(androidx.lifecycle.LifecycleObserver) -> removeObserver
    118:118:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
    325:327:void sync() -> sync
    277:280:androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State) -> upEvent
androidx.lifecycle.LifecycleRegistry$1 -> androidx.lifecycle.LifecycleRegistry$1:
    261:243:void <clinit>() -> <clinit>
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.LifecycleRegistry$ObserverWithState:
    353:355:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State) -> <init>
    359:362:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> dispatchEvent
androidx.lifecycle.Lifecycling -> androidx.lifecycle.Lifecycling:
    42:43:void <clinit>() -> <clinit>
    208:208:void <init>() -> <init>
    104:106:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> createGeneratedAdapter
    117:136:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> generatedConstructor
    205:205:java.lang.String getAdapterName(java.lang.String) -> getAdapterName
    141:146:int getObserverConstructorType(java.lang.Class) -> getObserverConstructorType
    198:198:boolean isLifecycleParent(java.lang.Class) -> isLifecycleParent
    67:97:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object) -> lifecycleEventObserver
    152:190:int resolveObserverCallbackType(java.lang.Class) -> resolveObserverCallbackType
androidx.lifecycle.Lifecycling$1 -> androidx.lifecycle.Lifecycling$1:
    60:60:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    64:64:void <clinit>() -> <clinit>
    59:82:void <init>() -> <init>
    442:443:void assertMainThread(java.lang.String) -> assertMainThread
    96:113:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> considerNotify
    118:138:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> dispatchingValue
    301:302:java.lang.Object getValue() -> getValue
    310:310:int getVersion() -> getVersion
    353:353:boolean hasActiveObservers() -> hasActiveObservers
    171:185:void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> observe
    204:214:void observeForever(androidx.lifecycle.Observer) -> observeForever
    266:269:void postValue(java.lang.Object) -> postValue
    224:230:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    286:289:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.LiveData$1:
    82:82:void <init>(androidx.lifecycle.LiveData) -> <init>
    86:89:void run() -> run
androidx.lifecycle.LiveData$AlwaysActiveObserver -> androidx.lifecycle.LiveData$AlwaysActiveObserver:
    432:432:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    360:362:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> <init>
    386:386:void detachObserver() -> detachObserver
    381:381:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> isAttachedTo
    372:376:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    367:367:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$ObserverWrapper:
    395:396:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    409:424:void activeStateChanged(boolean) -> activeStateChanged
androidx.lifecycle.MediatorLiveData -> androidx.lifecycle.MediatorLiveData:
    69:70:void <init>() -> <init>
    86:96:void addSource(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> addSource
    117:118:void onActive() -> onActive
    125:126:void onInactive() -> onInactive
    108:110:void removeSource(androidx.lifecycle.LiveData) -> removeSource
androidx.lifecycle.MediatorLiveData$Source -> androidx.lifecycle.MediatorLiveData$Source:
    135:137:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    150:152:void onChanged(java.lang.Object) -> onChanged
    141:141:void plug() -> plug
    145:145:void unplug() -> unplug
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.MethodCallsLogger:
    28:29:void <init>() -> <init>
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.MutableLiveData:
    25:25:void <init>() -> <init>
    28:28:void postValue(java.lang.Object) -> postValue
    33:33:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.R -> androidx.lifecycle.R:
    10:10:void <init>() -> <init>
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    29:31:void <init>(java.lang.Object) -> <init>
    36:36:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ReportFragment -> androidx.lifecycle.ReportFragment:
    32:32:void <init>() -> <init>
    114:123:void dispatch(androidx.lifecycle.Lifecycle$Event) -> dispatch
    56:56:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchCreate
    68:68:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchResume
    62:62:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchStart
    39:43:void injectIfNeededIn(android.app.Activity) -> injectIfNeededIn
    74:76:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    107:110:void onDestroy() -> onDestroy
    95:96:void onPause() -> onPause
    88:90:void onResume() -> onResume
    81:83:void onStart() -> onStart
    101:102:void onStop() -> onStop
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    23:24:void <init>(androidx.lifecycle.GeneratedAdapter) -> <init>
    29:30:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.Transformations -> androidx.lifecycle.Transformations:
    35:35:void <init>() -> <init>
androidx.lifecycle.Transformations$1 -> androidx.lifecycle.Transformations$1:
    75:75:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.Transformations$2 -> androidx.lifecycle.Transformations$2:
    141:150:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.Transformations$2$1 -> androidx.lifecycle.Transformations$2$1:
    150:150:void <init>(androidx.lifecycle.Transformations$2) -> <init>
    153:153:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.ViewModel -> androidx.lifecycle.ViewModel:
    108:110:void <init>() -> <init>
    131:139:void clear() -> clear
    185:189:void closeWithRuntimeException(java.lang.Object) -> closeWithRuntimeException
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.ViewModelProvider:
    105:107:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    126:128:androidx.lifecycle.ViewModel get(java.lang.Class) -> get
    150:166:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> get
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory -> androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory:
    227:241:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.lifecycle.ViewModelProvider$KeyedFactory -> androidx.lifecycle.ViewModelProvider$KeyedFactory:
    60:60:void <init>() -> <init>
    76:76:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.lifecycle.ViewModelProvider$NewInstanceFactory -> androidx.lifecycle.ViewModelProvider$NewInstanceFactory:
    174:174:void <init>() -> <init>
    182:184:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.ViewModelStore:
    38:40:void <init>() -> <init>
    61:64:void clear() -> clear
    50:50:androidx.lifecycle.ViewModel get(java.lang.String) -> get
    43:45:void put(java.lang.String,androidx.lifecycle.ViewModel) -> put
androidx.lifecycle.livedata.R -> androidx.lifecycle.livedata.R:
    10:10:void <init>() -> <init>
androidx.lifecycle.livedata.core.R -> androidx.lifecycle.livedata.core.R:
    10:10:void <init>() -> <init>
androidx.lifecycle.viewmodel.R -> androidx.lifecycle.viewmodel.R:
    10:10:void <init>() -> <init>
androidx.loader.R -> androidx.loader.R:
    10:10:void <init>() -> <init>
androidx.loader.R$attr -> androidx.loader.R$attr:
    13:13:void <init>() -> <init>
androidx.loader.R$color -> androidx.loader.R$color:
    29:29:void <init>() -> <init>
androidx.loader.R$dimen -> androidx.loader.R$dimen:
    37:37:void <init>() -> <init>
androidx.loader.R$drawable -> androidx.loader.R$drawable:
    63:63:void <init>() -> <init>
androidx.loader.R$id -> androidx.loader.R$id:
    79:79:void <init>() -> <init>
androidx.loader.R$integer -> androidx.loader.R$integer:
    111:111:void <init>() -> <init>
androidx.loader.R$layout -> androidx.loader.R$layout:
    116:116:void <init>() -> <init>
androidx.loader.R$string -> androidx.loader.R$string:
    126:126:void <init>() -> <init>
androidx.loader.R$style -> androidx.loader.R$style:
    131:131:void <init>() -> <init>
androidx.loader.R$styleable -> androidx.loader.R$styleable:
    144:179:void <clinit>() -> <clinit>
    142:142:void <init>() -> <init>
androidx.loader.app.LoaderManager -> androidx.loader.app.LoaderManager:
    40:40:void <init>() -> <init>
    128:128:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> getInstance
androidx.loader.app.LoaderManagerImpl -> androidx.loader.app.LoaderManagerImpl:
    371:373:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore) -> <init>
    498:498:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    481:481:void markForRedelivery() -> markForRedelivery
    486:492:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    149:167:androidx.loader.content.Loader destroy(boolean) -> destroy
    212:222:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    71:71:androidx.loader.content.Loader getLoader() -> getLoader
    111:119:void markForRedelivery() -> markForRedelivery
    76:77:void onActive() -> onActive
    82:83:void onInactive() -> onInactive
    172:183:void onLoadComplete(androidx.loader.content.Loader,java.lang.Object) -> onLoadComplete
    134:137:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    189:193:void setValue(java.lang.Object) -> setValue
    199:207:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderObserver -> androidx.loader.app.LoaderManagerImpl$LoaderObserver:
    272:272:void dump(java.lang.String,java.io.PrintWriter) -> dump
    255:255:boolean hasDeliveredData() -> hasDeliveredData
    246:251:void onChanged(java.lang.Object) -> onChanged
    260:262:void reset() -> reset
    268:268:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    281:281:void <clinit>() -> <clinit>
    280:295:void <init>() -> <init>
    354:361:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    292:292:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    335:338:void markForRedelivery() -> markForRedelivery
    344:350:void onCleared() -> onCleared
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1:
    281:281:void <init>() -> <init>
    286:286:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.loader.content.AsyncTaskLoader -> androidx.loader.content.AsyncTaskLoader:
    233:241:void dispatchOnCancelled(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    246:258:void dispatchOnLoadComplete(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    356:371:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    210:228:void executePendingTask() -> executePendingTask
    332:332:boolean isLoadInBackgroundCanceled() -> isLoadInBackgroundCanceled
    162:192:boolean onCancelLoad() -> onCancelLoad
    152:156:void onForceLoad() -> onForceLoad
    307:307:java.lang.Object onLoadInBackground() -> onLoadInBackground
androidx.loader.content.AsyncTaskLoader$LoadTask -> androidx.loader.content.AsyncTaskLoader$LoadTask:
    48:49:void <init>(androidx.loader.content.AsyncTaskLoader) -> <init>
    48:48:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    60:71:java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    94:96:void onCancelled(java.lang.Object) -> onCancelled
    83:85:void onPostExecute(java.lang.Object) -> onPostExecute
    104:105:void run() -> run
androidx.loader.content.CursorLoader -> androidx.loader.content.CursorLoader:
    86:92:void cancelLoadInBackground() -> cancelLoadInBackground
    41:41:void deliverResult(java.lang.Object) -> deliverResult
    98:113:void deliverResult(android.database.Cursor) -> deliverResult
    239:248:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    41:41:java.lang.Object loadInBackground() -> loadInBackground
    56:61:android.database.Cursor loadInBackground() -> loadInBackground
    41:41:void onCanceled(java.lang.Object) -> onCanceled
    173:174:void onCanceled(android.database.Cursor) -> onCanceled
    180:188:void onReset() -> onReset
    154:158:void onStartLoading() -> onStartLoading
    168:168:void onStopLoading() -> onStopLoading
androidx.loader.content.Loader -> androidx.loader.content.Loader:
    409:410:void abandon() -> abandon
    318:318:boolean cancelLoad() -> cancelLoad
    485:485:void commitContentChanged() -> commitContentChanged
    527:530:java.lang.String dataToString(java.lang.Object) -> dataToString
    144:145:void deliverCancellation() -> deliverCancellation
    131:132:void deliverResult(java.lang.Object) -> deliverResult
    555:564:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    347:347:void forceLoad() -> forceLoad
    154:154:android.content.Context getContext() -> getContext
    247:247:boolean isAbandoned() -> isAbandoned
    256:256:boolean isReset() -> isReset
    238:238:boolean isStarted() -> isStarted
    511:517:void onContentChanged() -> onContentChanged
    447:452:void reset() -> reset
    496:497:void rollbackContentChanged() -> rollbackContentChanged
    282:285:void startLoading() -> startLoading
    380:381:void stopLoading() -> stopLoading
    471:473:boolean takeContentChanged() -> takeContentChanged
    535:540:java.lang.String toString() -> toString
    187:188:void unregisterListener(androidx.loader.content.Loader$OnLoadCompleteListener) -> unregisterListener
androidx.loader.content.Loader$ForceLoadContentObserver -> androidx.loader.content.Loader$ForceLoadContentObserver:
    69:69:void onChange(boolean) -> onChange
androidx.loader.content.ModernAsyncTask -> androidx.loader.content.ModernAsyncTask:
    60:75:void <clinit>() -> <clinit>
    132:153:void <init>() -> <init>
    332:333:boolean cancel(boolean) -> cancel
    433:452:androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    487:492:void finish(java.lang.Object) -> finish
    115:120:android.os.Handler getHandler() -> getHandler
    299:299:boolean isCancelled() -> isCancelled
    270:270:void onCancelled(java.lang.Object) -> onCancelled
    183:185:java.lang.Object postResult(java.lang.Object) -> postResult
    176:178:void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
androidx.loader.content.ModernAsyncTask$1 -> androidx.loader.content.ModernAsyncTask$1:
    60:61:void <init>() -> <init>
    65:65:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.loader.content.ModernAsyncTask$2 -> androidx.loader.content.ModernAsyncTask$2:
    133:133:void <init>(androidx.loader.content.ModernAsyncTask) -> <init>
    136:147:java.lang.Object call() -> call
androidx.loader.content.ModernAsyncTask$3 -> androidx.loader.content.ModernAsyncTask$3:
    153:153:void <init>(androidx.loader.content.ModernAsyncTask,java.util.concurrent.Callable) -> <init>
    157:161:void done() -> done
androidx.loader.content.ModernAsyncTask$4 -> androidx.loader.content.ModernAsyncTask$4:
    434:434:void <clinit>() -> <clinit>
androidx.loader.content.ModernAsyncTask$AsyncTaskResult -> androidx.loader.content.ModernAsyncTask$AsyncTaskResult:
    528:530:void <init>(androidx.loader.content.ModernAsyncTask,java.lang.Object[]) -> <init>
androidx.loader.content.ModernAsyncTask$InternalHandler -> androidx.loader.content.ModernAsyncTask$InternalHandler:
    497:497:void <init>() -> <init>
    503:507:void handleMessage(android.os.Message) -> handleMessage
androidx.loader.content.ModernAsyncTask$Status -> androidx.loader.content.ModernAsyncTask$Status:
    103:99:void <clinit>() -> <clinit>
    99:99:void <init>(java.lang.String,int) -> <init>
    99:99:androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
    99:99:androidx.loader.content.ModernAsyncTask$Status[] values() -> values
androidx.loader.content.ModernAsyncTask$WorkerRunnable -> androidx.loader.content.ModernAsyncTask$WorkerRunnable:
    519:519:void <init>() -> <init>
androidx.savedstate.R -> androidx.savedstate.R:
    10:10:void <init>() -> <init>
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
    42:43:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    48:49:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    71:74:void reflectiveNew(java.lang.String) -> reflectiveNew
androidx.savedstate.Recreator$SavedStateProvider -> androidx.savedstate.Recreator$SavedStateProvider:
    106:107:android.os.Bundle saveState() -> saveState
androidx.savedstate.SavedStateRegistry -> androidx.savedstate.SavedStateRegistry:
    52:44:void <init>() -> <init>
    76:77:android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> consumeRestoredStateForKey
    190:191:void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle) -> performRestore
    220:229:void performSave(android.os.Bundle) -> performSave
androidx.savedstate.SavedStateRegistry$1 -> androidx.savedstate.SavedStateRegistry$1:
    197:197:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    200:203:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.savedstate.SavedStateRegistryController -> androidx.savedstate.SavedStateRegistryController:
    36:38:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    84:84:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner) -> create
    46:46:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    56:58:void performRestore(android.os.Bundle) -> performRestore
    74:74:void performSave(android.os.Bundle) -> performSave
androidx.swiperefreshlayout.R -> androidx.swiperefreshlayout.R:
    10:10:void <init>() -> <init>
androidx.swiperefreshlayout.R$attr -> androidx.swiperefreshlayout.R$attr:
    13:13:void <init>() -> <init>
androidx.swiperefreshlayout.R$color -> androidx.swiperefreshlayout.R$color:
    29:29:void <init>() -> <init>
androidx.swiperefreshlayout.R$dimen -> androidx.swiperefreshlayout.R$dimen:
    37:37:void <init>() -> <init>
androidx.swiperefreshlayout.R$drawable -> androidx.swiperefreshlayout.R$drawable:
    63:63:void <init>() -> <init>
androidx.swiperefreshlayout.R$id -> androidx.swiperefreshlayout.R$id:
    79:79:void <init>() -> <init>
androidx.swiperefreshlayout.R$integer -> androidx.swiperefreshlayout.R$integer:
    111:111:void <init>() -> <init>
androidx.swiperefreshlayout.R$layout -> androidx.swiperefreshlayout.R$layout:
    116:116:void <init>() -> <init>
androidx.swiperefreshlayout.R$string -> androidx.swiperefreshlayout.R$string:
    126:126:void <init>() -> <init>
androidx.swiperefreshlayout.R$style -> androidx.swiperefreshlayout.R$style:
    131:131:void <init>() -> <init>
androidx.swiperefreshlayout.R$styleable -> androidx.swiperefreshlayout.R$styleable:
    144:179:void <clinit>() -> <clinit>
    142:142:void <init>() -> <init>
androidx.swiperefreshlayout.widget.CircleImageView -> androidx.swiperefreshlayout.widget.CircleImageView:
    53:75:void <init>(android.content.Context,int) -> <init>
    79:79:boolean elevationSupported() -> elevationSupported
    105:107:void onAnimationEnd() -> onAnimationEnd
    97:99:void onAnimationStart() -> onAnimationStart
    84:86:void onMeasure(int,int) -> onMeasure
    92:92:void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    122:123:void setBackgroundColor(int) -> setBackgroundColor
androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow -> androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow:
    131:135:void <init>(androidx.swiperefreshlayout.widget.CircleImageView,int) -> <init>
    146:149:void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
    140:141:void onResize(float,float) -> onResize
    153:156:void updateRadialGradient(int) -> updateRadialGradient
androidx.swiperefreshlayout.widget.CircularProgressDrawable -> androidx.swiperefreshlayout.widget.CircularProgressDrawable:
    67:97:void <clinit>() -> <clinit>
    138:145:void <init>(android.content.Context) -> <init>
    516:526:void applyFinishTranslation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> applyFinishTranslation
    534:561:void applyTransformation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring,boolean) -> applyTransformation
    399:403:void draw(android.graphics.Canvas) -> draw
    414:414:int getAlpha() -> getAlpha
    438:438:boolean isRunning() -> isRunning
    408:409:void setAlpha(int) -> setAlpha
    280:281:void setArrowEnabled(boolean) -> setArrowEnabled
    299:300:void setArrowScale(float) -> setArrowScale
    419:420:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    392:394:void setColorSchemeColors(int[]) -> setColorSchemeColors
    350:351:void setProgressRotation(float) -> setProgressRotation
    424:424:void setRotation(float) -> setRotation
    151:158:void setSizeParameters(float,float,float,float) -> setSizeParameters
    330:332:void setStartEndTrim(float,float) -> setStartEndTrim
    192:193:void setStrokeWidth(float) -> setStrokeWidth
    169:174:void setStyle(int) -> setStyle
    566:615:void setupAnimators() -> setupAnimators
    446:457:void start() -> start
    466:471:void stop() -> stop
    501:504:void updateRingColor(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> updateRingColor
androidx.swiperefreshlayout.widget.CircularProgressDrawable$1 -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$1:
    568:568:void <init>(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> <init>
    571:574:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2 -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$2:
    580:580:void <init>(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> <init>
    599:611:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    584:584:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring:
    650:658:void <init>() -> <init>
    692:720:void draw(android.graphics.Canvas,android.graphics.Rect) -> draw
    724:751:void drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF) -> drawTriangle
    835:835:int getAlpha() -> getAlpha
    875:875:float getEndTrim() -> getEndTrim
    805:805:int getNextColor() -> getNextColor
    809:809:int getNextColorIndex() -> getNextColorIndex
    855:855:float getStartTrim() -> getStartTrim
    867:867:int getStartingColor() -> getStartingColor
    863:863:float getStartingEndTrim() -> getStartingEndTrim
    927:927:float getStartingRotation() -> getStartingRotation
    859:859:float getStartingStartTrim() -> getStartingStartTrim
    817:817:void goToNextColor() -> goToNextColor
    944:949:void resetOriginals() -> resetOriginals
    828:828:void setAlpha(int) -> setAlpha
    668:669:void setArrowDimensions(float,float) -> setArrowDimensions
    914:915:void setArrowScale(float) -> setArrowScale
    890:890:void setCenterRadius(float) -> setCenterRadius
    778:778:void setColor(int) -> setColor
    821:821:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    797:798:void setColorIndex(int) -> setColorIndex
    761:763:void setColors(int[]) -> setColors
    871:871:void setEndTrim(float) -> setEndTrim
    879:879:void setRotation(float) -> setRotation
    901:902:void setShowArrow(boolean) -> setShowArrow
    851:851:void setStartTrim(float) -> setStartTrim
    842:843:void setStrokeWidth(float) -> setStrokeWidth
    935:937:void storeOriginals() -> storeOriginals
androidx.swiperefreshlayout.widget.SwipeRefreshLayout -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout:
    84:140:void <clinit>() -> <clinit>
    340:340:void <init>(android.content.Context) -> <init>
    350:378:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1089:1097:void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToCorrectPosition
    1101:1113:void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    672:678:boolean canChildScrollUp() -> canChildScrollUp
    398:403:void createProgressView() -> createProgressView
    903:903:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    908:908:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    885:885:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    879:879:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    587:591:void ensureTarget() -> ensureTarget
    968:996:void finishSpinner(float) -> finishSpinner
    383:383:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    813:813:int getNestedScrollAxes() -> getNestedScrollAxes
    664:664:int getProgressCircleDiameter() -> getProgressCircleDiameter
    279:279:int getProgressViewEndOffset() -> getProgressViewEndOffset
    271:271:int getProgressViewStartOffset() -> getProgressViewStartOffset
    873:873:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    912:912:boolean isAnimationRunning(android.view.animation.Animation) -> isAnimationRunning
    858:858:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    916:964:void moveSpinner(float) -> moveSpinner
    1136:1138:void moveToStart(float) -> moveToStart
    229:230:void onDetachedFromWindow() -> onDetachedFromWindow
    692:745:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    609:628:void onLayout(boolean,int,int,int,int) -> onLayout
    634:651:void onMeasure(int,int) -> onMeasure
    898:898:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    892:892:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    783:807:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    834:845:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    772:776:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1175:1181:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    765:765:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    818:827:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1002:1018:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    753:757:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    206:216:void reset() -> reset
    460:461:void setAnimationProgress(float) -> setAnimationProgress
    545:545:void setColorScheme(int[]) -> setColorScheme
    572:573:void setColorSchemeColors(int[]) -> setColorSchemeColors
    556:561:void setColorSchemeResources(int[]) -> setColorSchemeResources
    234:235:void setColorViewAlpha(int) -> setColorViewAlpha
    604:604:void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    221:223:void setEnabled(boolean) -> setEnabled
    853:853:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    687:687:void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback) -> setOnChildScrollUpCallback
    411:411:void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    519:519:void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    537:537:void setProgressBackgroundColorSchemeColor(int) -> setProgressBackgroundColorSchemeColor
    528:528:void setProgressBackgroundColorSchemeResource(int) -> setProgressBackgroundColorSchemeResource
    258:263:void setProgressViewOffset(boolean,int,int) -> setProgressViewOffset
    421:434:void setRefreshing(boolean) -> setRefreshing
    465:472:void setRefreshing(boolean,boolean) -> setRefreshing
    320:331:void setSize(int) -> setSize
    310:310:void setSlingshotDistance(int) -> setSlingshotDistance
    1169:1171:void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    499:510:android.view.animation.Animation startAlphaAnimation(int,int) -> startAlphaAnimation
    1080:1084:void startDragging(float) -> startDragging
    863:863:boolean startNestedScroll(int) -> startNestedScroll
    495:495:void startProgressAlphaMaxAnimation() -> startProgressAlphaMaxAnimation
    491:491:void startProgressAlphaStartAnimation() -> startProgressAlphaStartAnimation
    478:487:void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> startScaleDownAnimation
    1150:1165:void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> startScaleDownReturnToStartAnimation
    439:452:void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> startScaleUpAnimation
    868:868:void stopNestedScroll() -> stopNestedScroll
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1:
    178:178:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    189:200:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2:
    441:441:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    444:444:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3:
    478:478:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    481:481:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4:
    499:499:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout,int,int) -> <init>
    502:502:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5:
    976:976:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    984:985:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6:
    1117:1117:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1122:1130:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7:
    1141:1141:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1144:1144:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8:
    1152:1152:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1155:1157:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.vectordrawable.R -> androidx.vectordrawable.R:
    10:10:void <init>() -> <init>
androidx.vectordrawable.R$attr -> androidx.vectordrawable.R$attr:
    13:13:void <init>() -> <init>
androidx.vectordrawable.R$color -> androidx.vectordrawable.R$color:
    29:29:void <init>() -> <init>
androidx.vectordrawable.R$dimen -> androidx.vectordrawable.R$dimen:
    37:37:void <init>() -> <init>
androidx.vectordrawable.R$drawable -> androidx.vectordrawable.R$drawable:
    63:63:void <init>() -> <init>
androidx.vectordrawable.R$id -> androidx.vectordrawable.R$id:
    79:79:void <init>() -> <init>
androidx.vectordrawable.R$integer -> androidx.vectordrawable.R$integer:
    150:150:void <init>() -> <init>
androidx.vectordrawable.R$layout -> androidx.vectordrawable.R$layout:
    155:155:void <init>() -> <init>
androidx.vectordrawable.R$string -> androidx.vectordrawable.R$string:
    166:166:void <init>() -> <init>
androidx.vectordrawable.R$style -> androidx.vectordrawable.R$style:
    171:171:void <init>() -> <init>
androidx.vectordrawable.R$styleable -> androidx.vectordrawable.R$styleable:
    184:219:void <clinit>() -> <clinit>
    182:182:void <init>() -> <init>
androidx.vectordrawable.animated.R -> androidx.vectordrawable.animated.R:
    10:10:void <init>() -> <init>
androidx.vectordrawable.animated.R$attr -> androidx.vectordrawable.animated.R$attr:
    13:13:void <init>() -> <init>
androidx.vectordrawable.animated.R$color -> androidx.vectordrawable.animated.R$color:
    29:29:void <init>() -> <init>
androidx.vectordrawable.animated.R$dimen -> androidx.vectordrawable.animated.R$dimen:
    37:37:void <init>() -> <init>
androidx.vectordrawable.animated.R$drawable -> androidx.vectordrawable.animated.R$drawable:
    63:63:void <init>() -> <init>
androidx.vectordrawable.animated.R$id -> androidx.vectordrawable.animated.R$id:
    79:79:void <init>() -> <init>
androidx.vectordrawable.animated.R$integer -> androidx.vectordrawable.animated.R$integer:
    150:150:void <init>() -> <init>
androidx.vectordrawable.animated.R$layout -> androidx.vectordrawable.animated.R$layout:
    155:155:void <init>() -> <init>
androidx.vectordrawable.animated.R$string -> androidx.vectordrawable.animated.R$string:
    166:166:void <init>() -> <init>
androidx.vectordrawable.animated.R$style -> androidx.vectordrawable.animated.R$style:
    171:171:void <init>() -> <init>
androidx.vectordrawable.animated.R$styleable -> androidx.vectordrawable.animated.R$styleable:
    184:219:void <clinit>() -> <clinit>
    182:182:void <init>() -> <init>
androidx.vectordrawable.graphics.drawable.AndroidResources -> androidx.vectordrawable.graphics.drawable.AndroidResources:
    22:134:void <clinit>() -> <clinit>
    151:151:void <init>() -> <init>
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback -> androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback:
    57:57:void <init>() -> <init>
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1 -> androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1:
    86:86:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    81:81:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
    168:168:void <init>() -> <init>
    172:172:void <init>(android.content.Context) -> <init>
    177:182:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources) -> <init>
    522:523:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    532:533:boolean canApplyTheme() -> canApplyTheme
    143:143:void clearColorFilter() -> clearColorFilter
    253:254:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    284:290:void draw(android.graphics.Canvas) -> draw
    321:324:int getAlpha() -> getAlpha
    276:279:int getChangingConfigurations() -> getChangingConfigurations
    347:350:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    265:266:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    143:143:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    420:423:int getIntrinsicHeight() -> getIntrinsicHeight
    412:415:int getIntrinsicWidth() -> getIntrinsicWidth
    143:143:int getMinimumHeight() -> getMinimumHeight
    143:143:int getMinimumWidth() -> getMinimumWidth
    404:407:int getOpacity() -> getOpacity
    143:143:boolean getPadding(android.graphics.Rect) -> getPadding
    143:143:int[] getState() -> getState
    143:143:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    446:511:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    517:517:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    428:431:boolean isAutoMirrored() -> isAutoMirrored
    700:704:boolean isRunning() -> isRunning
    394:397:boolean isStateful() -> isStateful
    143:143:void jumpToCurrentState() -> jumpToCurrentState
    193:194:android.graphics.drawable.Drawable mutate() -> mutate
    296:300:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    313:316:boolean onLevelChange(int) -> onLevelChange
    305:308:boolean onStateChange(int[]) -> onStateChange
    329:333:void setAlpha(int) -> setAlpha
    436:440:void setAutoMirrored(boolean) -> setAutoMirrored
    143:143:void setChangingConfigurations(int) -> setChangingConfigurations
    143:143:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    338:342:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    143:143:void setFilterBitmap(boolean) -> setFilterBitmap
    143:143:void setHotspot(float,float) -> setHotspot
    143:143:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    143:143:boolean setState(int[]) -> setState
    355:360:void setTint(int) -> setTint
    365:370:void setTintList(android.content.res.ColorStateList) -> setTintList
    375:380:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    385:389:boolean setVisible(boolean,boolean) -> setVisible
    682:692:void setupAnimatorsForTarget(java.lang.String,android.animation.Animator) -> setupAnimatorsForTarget
    661:676:void setupColorAnimator(android.animation.Animator) -> setupColorAnimator
    709:720:void start() -> start
    725:730:void stop() -> stop
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1:
    733:733:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    736:736:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    741:741:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    746:746:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2:
    801:805:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    791:795:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState:
    599:627:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources) -> <init>
    644:644:int getChangingConfigurations() -> getChangingConfigurations
    634:634:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    639:639:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    648:651:void setupAnimatorSet() -> setupAnimatorSet
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState:
    548:549:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    581:581:boolean canApplyTheme() -> canApplyTheme
    586:586:int getChangingConfigurations() -> getChangingConfigurations
    554:557:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    563:566:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    572:575:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat -> androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat:
    149:149:void <init>() -> <init>
    109:143:android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> createInterpolatorFromXml
    67:96:android.view.animation.Interpolator loadInterpolator(android.content.Context,int) -> loadInterpolator
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat:
    921:921:void <init>() -> <init>
    501:501:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float) -> createAnimatorFromXml
    514:568:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float) -> createAnimatorFromXml
    779:783:android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float) -> createNewKeyframe
    809:809:void distributeKeyframes(android.animation.Keyframe[],float,int,int) -> distributeKeyframes
    207:327:android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String) -> getPVH
    655:664:int inferValueTypeFromValues(android.content.res.TypedArray,int,int) -> inferValueTypeFromValues
    636:649:int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> inferValueTypeOfKeyframe
    100:103:android.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
    119:119:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int) -> loadAnimator
    131:148:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float) -> loadAnimator
    890:911:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser) -> loadAnimator
    818:864:android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser) -> loadKeyframe
    872:874:android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser) -> loadObjectAnimator
    696:771:android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> loadPvh
    579:624:android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> loadValues
    345:376:void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser) -> parseAnimatorFromTypeArray
    390:425:void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser) -> setupObjectAnimator
    436:493:void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String) -> setupPathMotion
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
    166:166:void <init>() -> <init>
    157:157:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    185:186:androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> evaluate
androidx.vectordrawable.graphics.drawable.ArgbEvaluator -> androidx.vectordrawable.graphics.drawable.ArgbEvaluator:
    33:33:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    64:97:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    43:43:androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance() -> getInstance
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat -> androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat:
    68:68:void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    72:76:void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    202:222:float getInterpolation(float) -> getInterpolation
    130:133:void initCubic(float,float,float,float) -> initCubic
    137:143:void initPath(android.graphics.Path) -> initPath
    123:126:void initQuad(float,float) -> initQuad
    82:93:void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> parseInterpolatorFromTypeArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon -> androidx.vectordrawable.graphics.drawable.VectorDrawableCommon:
    29:29:void <init>() -> <init>
    95:96:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    103:107:void clearColorFilter() -> clearColorFilter
    112:115:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    128:131:int getMinimumHeight() -> getMinimumHeight
    120:123:int getMinimumWidth() -> getMinimumWidth
    136:139:boolean getPadding(android.graphics.Rect) -> getPadding
    144:147:int[] getState() -> getState
    153:156:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    86:87:void jumpToCurrentState() -> jumpToCurrentState
    53:57:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    45:48:boolean onLevelChange(int) -> onLevelChange
    161:165:void setChangingConfigurations(int) -> setChangingConfigurations
    36:40:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    78:79:void setFilterBitmap(boolean) -> setFilterBitmap
    62:63:void setHotspot(float,float) -> setHotspot
    70:71:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    170:173:boolean setState(int[]) -> setState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
    280:280:void <clinit>() -> <clinit>
    321:322:void <init>() -> <init>
    325:327:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    687:687:int applyAlpha(int,float) -> applyAlpha
    277:277:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    587:588:boolean canApplyTheme() -> canApplyTheme
    277:277:void clearColorFilter() -> clearColorFilter
    645:666:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme) -> create
    681:682:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    360:427:void draw(android.graphics.Canvas) -> draw
    432:436:int getAlpha() -> getAlpha
    925:928:int getChangingConfigurations() -> getChangingConfigurations
    465:468:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    350:355:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    277:277:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    577:581:int getIntrinsicHeight() -> getIntrinsicHeight
    568:572:int getIntrinsicWidth() -> getIntrinsicWidth
    277:277:int getMinimumHeight() -> getMinimumHeight
    277:277:int getMinimumWidth() -> getMinimumWidth
    559:560:int getOpacity() -> getOpacity
    277:277:boolean getPadding(android.graphics.Rect) -> getPadding
    277:277:int[] getState() -> getState
    345:345:java.lang.Object getTargetByName(java.lang.String) -> getTargetByName
    277:277:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    696:701:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    707:725:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    816:877:void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateInternal
    933:937:void invalidateSelf() -> invalidateSelf
    596:599:boolean isAutoMirrored() -> isAutoMirrored
    528:534:boolean isStateful() -> isStateful
    277:277:void jumpToCurrentState() -> jumpToCurrentState
    332:339:android.graphics.drawable.Drawable mutate() -> mutate
    907:909:boolean needMirroring() -> needMirroring
    918:919:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    539:551:boolean onStateChange(int[]) -> onStateChange
    746:736:android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode) -> parseTintModeCompat
    942:946:void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    902:902:void setAllowCaching(boolean) -> setAllowCaching
    441:448:void setAlpha(int) -> setAlpha
    604:608:void setAutoMirrored(boolean) -> setAutoMirrored
    277:277:void setChangingConfigurations(int) -> setChangingConfigurations
    277:277:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    454:460:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    277:277:void setFilterBitmap(boolean) -> setFilterBitmap
    277:277:void setHotspot(float,float) -> setHotspot
    277:277:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    277:277:boolean setState(int[]) -> setState
    488:493:void setTint(int) -> setTint
    498:507:void setTintList(android.content.res.ColorStateList) -> setTintList
    513:522:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    951:954:boolean setVisible(boolean,boolean) -> setVisible
    959:963:void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    754:783:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
    482:483:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath:
    1768:1768:void <init>() -> <init>
    1773:1773:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath) -> <init>
    1778:1785:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1793:1803:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath:
    1835:1833:void <init>() -> <init>
    1840:1855:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) -> <init>
    2028:2028:float getFillAlpha() -> getFillAlpha
    2018:2018:int getFillColor() -> getFillColor
    2007:2007:float getStrokeAlpha() -> getStrokeAlpha
    1987:1987:int getStrokeColor() -> getStrokeColor
    1865:1861:android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap) -> getStrokeLineCap
    1878:1874:android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join) -> getStrokeLineJoin
    1997:1997:float getStrokeWidth() -> getStrokeWidth
    2048:2048:float getTrimPathEnd() -> getTrimPathEnd
    2058:2058:float getTrimPathOffset() -> getTrimPathOffset
    2038:2038:float getTrimPathStart() -> getTrimPathStart
    1890:1893:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1960:1960:boolean isStateful() -> isStateful
    1965:1966:boolean onStateChanged(int[]) -> onStateChanged
    2033:2033:void setFillAlpha(float) -> setFillAlpha
    2023:2023:void setFillColor(int) -> setFillColor
    2012:2012:void setStrokeAlpha(float) -> setStrokeAlpha
    1992:1992:void setStrokeColor(int) -> setStrokeColor
    2002:2002:void setStrokeWidth(float) -> setStrokeWidth
    2053:2053:void setTrimPathEnd(float) -> setTrimPathEnd
    2063:2063:void setTrimPathOffset(float) -> setTrimPathOffset
    2043:2043:void setTrimPathStart(float) -> setTrimPathStart
    1901:1953:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup:
    1466:1496:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap) -> <init>
    1506:1464:void <init>() -> <init>
    1510:1510:java.lang.String getGroupName() -> getGroupName
    1514:1514:android.graphics.Matrix getLocalMatrix() -> getLocalMatrix
    1586:1586:float getPivotX() -> getPivotX
    1599:1599:float getPivotY() -> getPivotY
    1573:1573:float getRotation() -> getRotation
    1612:1612:float getScaleX() -> getScaleX
    1625:1625:float getScaleY() -> getScaleY
    1638:1638:float getTranslateX() -> getTranslateX
    1651:1651:float getTranslateY() -> getTranslateY
    1518:1521:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1664:1665:boolean isStateful() -> isStateful
    1675:1676:boolean onStateChanged(int[]) -> onStateChanged
    1591:1593:void setPivotX(float) -> setPivotX
    1604:1606:void setPivotY(float) -> setPivotY
    1578:1580:void setRotation(float) -> setRotation
    1617:1619:void setScaleX(float) -> setScaleX
    1630:1632:void setScaleY(float) -> setScaleY
    1643:1645:void setTranslateX(float) -> setTranslateX
    1656:1658:void setTranslateY(float) -> setTranslateY
    1563:1567:void updateLocalMatrix() -> updateLocalMatrix
    1529:1557:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject:
    1423:1423:void <init>() -> <init>
    1423:1423:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1) -> <init>
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath:
    1693:1690:void <init>() -> <init>
    1719:1722:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath) -> <init>
    1750:1750:androidx.core.graphics.PathParser$PathDataNode[] getPathData() -> getPathData
    1733:1733:java.lang.String getPathName() -> getPathName
    1755:1759:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]) -> setPathData
    1726:1728:void toPath(android.graphics.Path) -> toPath
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer:
    1170:1170:void <clinit>() -> <clinit>
    1191:1194:void <init>() -> <init>
    1216:1230:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> <init>
    1264:1264:void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> draw
    1239:1259:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawGroupTree
    1269:1373:void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawPath
    1213:1213:float getAlpha() -> getAlpha
    1393:1403:float getMatrixScale(android.graphics.Matrix) -> getMatrixScale
    1202:1202:int getRootAlpha() -> getRootAlpha
    1412:1415:boolean isStateful() -> isStateful
    1419:1419:boolean onStateChanged(int[]) -> onStateChanged
    1208:1208:void setAlpha(float) -> setAlpha
    1198:1198:void setRootAlpha(int) -> setRootAlpha
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    1033:1045:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    1121:1122:void <init>() -> <init>
    1093:1094:boolean canReuseBitmap(int,int) -> canReuseBitmap
    1101:1105:boolean canReuseCache() -> canReuseCache
    1084:1087:void createCachedBitmapIfNeeded(int,int) -> createCachedBitmapIfNeeded
    1052:1053:void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect) -> drawCachedBitmapWithRootAlpha
    1139:1139:int getChangingConfigurations() -> getChangingConfigurations
    1064:1074:android.graphics.Paint getPaint(android.graphics.ColorFilter) -> getPaint
    1057:1057:boolean hasTranslucentRoot() -> hasTranslucentRoot
    1143:1143:boolean isStateful() -> isStateful
    1128:1128:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    1134:1134:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    1147:1148:boolean onStateChanged(int[]) -> onStateChanged
    1114:1118:void updateCacheStates() -> updateCacheStates
    1078:1080:void updateCachedBitmap(int,int) -> updateCachedBitmap
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState:
    975:976:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    1003:1003:boolean canApplyTheme() -> canApplyTheme
    1008:1008:int getChangingConfigurations() -> getChangingConfigurations
    981:982:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    988:989:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    995:997:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    60:60:void <clinit>() -> <clinit>
    38:39:void <init>(android.os.Parcel) -> <init>
    56:57:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$1:
    60:60:void <init>() -> <init>
    60:60:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    60:60:java.lang.Object[] newArray(int) -> newArray
    68:68:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.ParcelUtils -> androidx.versionedparcelable.ParcelUtils:
    40:40:void <init>() -> <init>
androidx.versionedparcelable.R -> androidx.versionedparcelable.R:
    10:10:void <init>() -> <init>
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
    86:89:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    1628:1633:java.lang.Class findParcelClass(java.lang.Class) -> findParcelClass
    1604:1609:java.lang.reflect.Method getReadMethod(java.lang.String) -> getReadMethod
    1616:1621:java.lang.reflect.Method getWriteMethod(java.lang.Class) -> getWriteMethod
    399:402:boolean readBoolean(boolean,int) -> readBoolean
    472:475:byte[] readByteArray(byte[],int) -> readByteArray
    616:619:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int) -> readCharSequence
    1565:1568:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    409:412:int readInt(int,int) -> readInt
    481:484:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    451:454:java.lang.String readString(java.lang.String,int) -> readString
    1493:1496:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> readVersionedParcelable
    1509:1513:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    294:295:void writeBoolean(boolean,int) -> writeBoolean
    304:305:void writeByteArray(byte[],int) -> writeByteArray
    325:326:void writeCharSequence(java.lang.CharSequence,int) -> writeCharSequence
    334:335:void writeInt(int,int) -> writeInt
    391:392:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    370:371:void writeString(java.lang.String,int) -> writeString
    1586:1589:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    1021:1022:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> writeVersionedParcelable
    1029:1036:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
    1042:1044:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelableCreator
androidx.versionedparcelable.VersionedParcel$1 -> androidx.versionedparcelable.VersionedParcel$1:
    1539:1544:java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
androidx.versionedparcelable.VersionedParcel$ParcelException -> androidx.versionedparcelable.VersionedParcel$ParcelException:
    1642:1642:void <init>(java.lang.Throwable) -> <init>
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.VersionedParcelParcel:
    51:51:void <init>(android.os.Parcel) -> <init>
    60:65:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    99:109:void closeField() -> closeField
    119:119:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    258:258:boolean readBoolean() -> readBoolean
    236:241:byte[] readByteArray() -> readByteArray
    201:201:java.lang.CharSequence readCharSequence() -> readCharSequence
    70:84:boolean readField(int) -> readField
    206:206:int readInt() -> readInt
    248:248:android.os.Parcelable readParcelable() -> readParcelable
    226:226:java.lang.String readString() -> readString
    89:94:void setOutputField(int) -> setOutputField
    181:181:void writeBoolean(boolean) -> writeBoolean
    127:130:void writeByteArray(byte[]) -> writeByteArray
    196:196:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    146:146:void writeInt(int) -> writeInt
    176:176:void writeParcelable(android.os.Parcelable) -> writeParcelable
    166:166:void writeString(java.lang.String) -> writeString
androidx.versionedparcelable.VersionedParcelStream -> androidx.versionedparcelable.VersionedParcelStream:
    44:44:void <clinit>() -> <clinit>
    84:122:void <init>(java.io.InputStream,java.io.OutputStream,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    142:148:void closeField() -> closeField
    156:156:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    402:404:boolean readBoolean() -> readBoolean
    381:390:byte[] readByteArray() -> readByteArray
    164:182:boolean readField(int) -> readField
    329:331:int readInt() -> readInt
    365:374:java.lang.String readString() -> readString
    191:193:void setOutputField(int) -> setOutputField
    137:135:void setSerializationFlags(boolean,boolean) -> setSerializationFlags
    288:290:void writeBoolean(boolean) -> writeBoolean
    200:206:void writeByteArray(byte[]) -> writeByteArray
    226:227:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    234:236:void writeInt(int) -> writeInt
    303:304:void writeParcelable(android.os.Parcelable) -> writeParcelable
    274:281:void writeString(java.lang.String) -> writeString
androidx.versionedparcelable.VersionedParcelStream$1 -> androidx.versionedparcelable.VersionedParcelStream$1:
    85:85:void <init>(androidx.versionedparcelable.VersionedParcelStream,java.io.InputStream) -> <init>
    88:92:int read() -> read
    98:103:int read(byte[],int,int) -> read
    110:115:long skip(long) -> skip
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer -> androidx.versionedparcelable.VersionedParcelStream$FieldBuffer:
    549:551:void <init>(int,java.io.DataOutputStream) -> <init>
    555:562:void flushField() -> flushField
androidx.viewpager.R -> androidx.viewpager.R:
    10:10:void <init>() -> <init>
androidx.viewpager.R$attr -> androidx.viewpager.R$attr:
    13:13:void <init>() -> <init>
androidx.viewpager.R$color -> androidx.viewpager.R$color:
    29:29:void <init>() -> <init>
androidx.viewpager.R$dimen -> androidx.viewpager.R$dimen:
    37:37:void <init>() -> <init>
androidx.viewpager.R$drawable -> androidx.viewpager.R$drawable:
    63:63:void <init>() -> <init>
androidx.viewpager.R$id -> androidx.viewpager.R$id:
    79:79:void <init>() -> <init>
androidx.viewpager.R$integer -> androidx.viewpager.R$integer:
    111:111:void <init>() -> <init>
androidx.viewpager.R$layout -> androidx.viewpager.R$layout:
    116:116:void <init>() -> <init>
androidx.viewpager.R$string -> androidx.viewpager.R$string:
    126:126:void <init>() -> <init>
androidx.viewpager.R$style -> androidx.viewpager.R$style:
    131:131:void <init>() -> <init>
androidx.viewpager.R$styleable -> androidx.viewpager.R$styleable:
    144:179:void <clinit>() -> <clinit>
    142:142:void <init>() -> <init>
androidx.viewpager.widget.PagerAdapter -> androidx.viewpager.widget.PagerAdapter:
    81:82:void <init>() -> <init>
    129:129:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    202:202:void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    154:154:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    115:115:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    184:184:java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    289:293:void notifyDataSetChanged() -> notifyDataSetChanged
    303:303:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    143:143:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    316:318:void setViewPagerObserver(android.database.DataSetObserver) -> setViewPagerObserver
    99:99:void startUpdate(android.view.ViewGroup) -> startUpdate
    312:312:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.viewpager.widget.PagerTabStrip -> androidx.viewpager.widget.PagerTabStrip:
    218:218:boolean getDrawFullUnderline() -> getDrawFullUnderline
    223:223:int getMinHeight() -> getMinHeight
    155:155:int getTabIndicatorColor() -> getTabIndicatorColor
    265:278:void onDraw(android.graphics.Canvas) -> onDraw
    228:241:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    184:186:void setBackgroundColor(int) -> setBackgroundColor
    176:178:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    192:194:void setBackgroundResource(int) -> setBackgroundResource
    205:207:void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    160:163:void setPadding(int,int,int,int) -> setPadding
    136:138:void setTabIndicatorColor(int) -> setTabIndicatorColor
    147:147:void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    168:171:void setTextSpacing(int) -> setTextSpacing
    285:300:void updateTextPositions(int,float,boolean) -> updateTextPositions
androidx.viewpager.widget.PagerTabStrip$1 -> androidx.viewpager.widget.PagerTabStrip$1:
    113:113:void onClick(android.view.View) -> onClick
androidx.viewpager.widget.PagerTabStrip$2 -> androidx.viewpager.widget.PagerTabStrip$2:
    121:121:void onClick(android.view.View) -> onClick
androidx.viewpager.widget.PagerTitleStrip -> androidx.viewpager.widget.PagerTitleStrip:
    464:466:int getMinHeight() -> getMinHeight
    181:181:int getTextSpacing() -> getTextSpacing
    239:243:void onAttachedToWindow() -> onAttachedToWindow
    258:263:void onDetachedFromWindow() -> onDetachedFromWindow
    456:458:void onLayout(boolean,int,int,int,int) -> onLayout
    420:422:void onMeasure(int,int) -> onMeasure
    308:309:void requestLayout() -> requestLayout
    233:234:void setGravity(int) -> setGravity
    190:193:void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    105:105:void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    203:207:void setTextColor(int) -> setTextColor
    173:174:void setTextSpacing(int) -> setTextSpacing
    315:326:void updateAdapter(androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> updateAdapter
    268:303:void updateText(int,androidx.viewpager.widget.PagerAdapter) -> updateText
    331:415:void updateTextPositions(int,float,boolean) -> updateTextPositions
androidx.viewpager.widget.PagerTitleStrip$PageListener -> androidx.viewpager.widget.PagerTitleStrip$PageListener:
    506:506:void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> onAdapterChanged
    511:514:void onChanged() -> onChanged
    500:500:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    484:484:void onPageScrolled(int,float,int) -> onPageScrolled
    489:494:void onPageSelected(int) -> onPageSelected
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform -> androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform:
    93:94:void <init>(android.content.Context) -> <init>
    99:100:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
androidx.viewpager.widget.ViewPager -> androidx.viewpager.widget.ViewPager:
    122:251:void <clinit>() -> <clinit>
    391:392:void <init>(android.content.Context) -> <init>
    2905:2937:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1008:1013:androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    581:584:void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> addOnAdapterChangeListener
    2950:2955:void addTouchables(java.util.ArrayList) -> addTouchables
    1472:1485:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    2793:2853:boolean arrowScroll(int) -> arrowScroll
    1298:1377:void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo,int,androidx.viewpager.widget.ViewPager$ItemInfo) -> calculatePageOffsets
    2719:2738:boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    2692:2701:boolean canScrollHorizontally(int) -> canScrollHorizontally
    3029:3029:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1974:2005:void completeScroll(boolean) -> completeScroll
    1793:1814:void computeScroll() -> computeScroll
    1023:1087:void dataSetChanged() -> dataSetChanged
    2406:2418:int determineTargetPage(int,float,int,int) -> determineTargetPage
    2744:2744:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    1923:1935:void dispatchOnPageScrolled(int,float,int) -> dispatchOnPageScrolled
    1940:1952:void dispatchOnPageSelected(int) -> dispatchOnPageSelected
    1957:1969:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    2997:3008:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    929:929:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    2426:2462:void draw(android.graphics.Canvas) -> draw
    915:918:void drawableStateChanged() -> drawableStateChanged
    2015:2019:void enableLayers(boolean) -> enableLayers
    2659:2664:void endDrag() -> endDrag
    2757:2763:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    3019:3019:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    3024:3024:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    3034:3034:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    572:572:androidx.viewpager.widget.PagerAdapter getAdapter() -> getAdapter
    802:804:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    2860:2879:android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    600:600:int getClientWidth() -> getClientWidth
    627:627:int getCurrentItem() -> getCurrentItem
    828:828:int getOffscreenPageLimit() -> getOffscreenPageLimit
    884:884:int getPageMargin() -> getPageMargin
    1523:1529:androidx.viewpager.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    1512:1514:androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    2363:2397:androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    1533:1535:androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    401:427:void initViewPager() -> initViewPager
    1498:1499:boolean isDecorView(android.view.View) -> isDecorView
    2011:2011:boolean isGutterDrag(float,float) -> isGutterDrag
    1544:1545:void onAttachedToWindow() -> onAttachedToWindow
    479:484:void onDetachedFromWindow() -> onDetachedFromWindow
    2468:2500:void onDraw(android.graphics.Canvas) -> onDraw
    2031:2037:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1682:1788:void onLayout(boolean,int,int,int,int) -> onLayout
    1555:1638:void onMeasure(int,int) -> onMeasure
    1865:1919:void onPageScrolled(int,float,int) -> onPageScrolled
    2970:2985:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1452:1466:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1441:1445:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2644:2653:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1646:1650:void onSizeChanged(int,int,int,int) -> onSizeChanged
    2166:2287:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    2885:2886:boolean pageLeft() -> pageLeft
    2893:2894:boolean pageRight() -> pageRight
    1818:1844:boolean pageScrolled(int) -> pageScrolled
    2312:2353:boolean performDrag(float) -> performDrag
    1092:1092:void populate() -> populate
    1097:1143:void populate(int) -> populate
    1655:1675:void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    555:559:void removeNonDecorViews() -> removeNonDecorViews
    594:595:void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> removeOnAdapterChangeListener
    1504:1507:void removeView(android.view.View) -> removeView
    2303:2305:void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    2294:2298:boolean resetTouch() -> resetTouch
    676:694:void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    506:549:void setAdapter(androidx.viewpager.widget.PagerAdapter) -> setAdapter
    611:612:void setCurrentItem(int) -> setCurrentItem
    622:623:void setCurrentItem(int,boolean) -> setCurrentItem
    631:631:void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    635:636:void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    815:816:androidx.viewpager.widget.ViewPager$OnPageChangeListener setInternalPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    850:856:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    709:709:void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    869:875:void setPageMargin(int) -> setPageMargin
    893:896:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    905:905:void setPageMarginDrawable(int) -> setPageMarginDrawable
    488:497:void setScrollState(int) -> setScrollState
    2669:2670:void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    950:1004:void smoothScrollTo(int,int,int) -> smoothScrollTo
    1282:1293:void sortChildDrawingOrder() -> sortChildDrawingOrder
    910:910:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.viewpager.widget.ViewPager$1 -> androidx.viewpager.widget.ViewPager$1:
    140:140:void <init>() -> <init>
    140:140:int compare(java.lang.Object,java.lang.Object) -> compare
    143:143:int compare(androidx.viewpager.widget.ViewPager$ItemInfo,androidx.viewpager.widget.ViewPager$ItemInfo) -> compare
androidx.viewpager.widget.ViewPager$2 -> androidx.viewpager.widget.ViewPager$2:
    147:147:void <init>() -> <init>
androidx.viewpager.widget.ViewPager$3 -> androidx.viewpager.widget.ViewPager$3:
    269:269:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    272:273:void run() -> run
androidx.viewpager.widget.ViewPager$4 -> androidx.viewpager.widget.ViewPager$4:
    428:429:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    436:471:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.viewpager.widget.ViewPager$ItemInfo -> androidx.viewpager.widget.ViewPager$ItemInfo:
    132:132:void <init>() -> <init>
androidx.viewpager.widget.ViewPager$LayoutParams -> androidx.viewpager.widget.ViewPager$LayoutParams:
    3145:3126:void <init>() -> <init>
    3149:3153:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate -> androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate:
    3037:3037:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3087:3087:boolean canScroll() -> canScroll
    3041:3047:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    3053:3060:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    3066:3072:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.viewpager.widget.ViewPager$PagerObserver -> androidx.viewpager.widget.ViewPager$PagerObserver:
    3092:3092:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3097:3097:void onChanged() -> onChanged
    3101:3101:void onInvalidated() -> onInvalidated
androidx.viewpager.widget.ViewPager$SavedState -> androidx.viewpager.widget.ViewPager$SavedState:
    1412:1412:void <clinit>() -> <clinit>
    1395:1395:void <init>(android.os.Parcelable) -> <init>
    1429:1435:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1407:1408:java.lang.String toString() -> toString
    1400:1402:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager.widget.ViewPager$SavedState$1 -> androidx.viewpager.widget.ViewPager$SavedState$1:
    1412:1412:void <init>() -> <init>
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1415:1415:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1420:1420:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object[] newArray(int) -> newArray
    1424:1424:androidx.viewpager.widget.ViewPager$SavedState[] newArray(int) -> newArray
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener -> androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener:
    321:321:void <init>() -> <init>
androidx.viewpager.widget.ViewPager$ViewPositionComparator -> androidx.viewpager.widget.ViewPager$ViewPositionComparator:
    3157:3157:void <init>() -> <init>
    3157:3157:int compare(java.lang.Object,java.lang.Object) -> compare
    3160:3165:int compare(android.view.View,android.view.View) -> compare
bolts.AggregateException -> bolts.AggregateException:
    55:57:void <init>(java.lang.String,java.util.List) -> <init>
    81:90:void printStackTrace(java.io.PrintStream) -> printStackTrace
    96:105:void printStackTrace(java.io.PrintWriter) -> printStackTrace
bolts.AndroidExecutors -> bolts.AndroidExecutors:
    40:60:void <clinit>() -> <clinit>
    44:45:void <init>() -> <init>
    120:121:void allowCoreThreadTimeout(java.util.concurrent.ThreadPoolExecutor,boolean) -> allowCoreThreadTimeout
    74:80:java.util.concurrent.ExecutorService newCachedThreadPool() -> newCachedThreadPool
    129:129:java.util.concurrent.Executor uiThread() -> uiThread
bolts.AndroidExecutors$UIThreadExecutor -> bolts.AndroidExecutors$UIThreadExecutor:
    135:135:void <init>() -> <init>
    135:135:void <init>(bolts.AndroidExecutors$1) -> <init>
    138:138:void execute(java.lang.Runnable) -> execute
bolts.BoltsExecutors -> bolts.BoltsExecutors:
    14:14:void <clinit>() -> <clinit>
    28:33:void <init>() -> <init>
    40:40:java.util.concurrent.ExecutorService background() -> background
    53:53:java.util.concurrent.Executor immediate() -> immediate
    17:21:boolean isAndroidRuntime() -> isAndroidRuntime
    44:44:java.util.concurrent.ScheduledExecutorService scheduled() -> scheduled
bolts.BoltsExecutors$ImmediateExecutor -> bolts.BoltsExecutors$ImmediateExecutor:
    62:64:void <init>() -> <init>
    62:62:void <init>(bolts.BoltsExecutors$1) -> <init>
    87:95:int decrementDepth() -> decrementDepth
    102:110:void execute(java.lang.Runnable) -> execute
    72:77:int incrementDepth() -> incrementDepth
bolts.CancellationToken -> bolts.CancellationToken:
    44:44:boolean isCancellationRequested() -> isCancellationRequested
    68:68:java.lang.String toString() -> toString
bolts.CancellationTokenRegistration -> bolts.CancellationTokenRegistration:
    36:45:void close() -> close
    49:53:void runAction() -> runAction
    57:58:void throwIfClosed() -> throwIfClosed
bolts.CancellationTokenSource -> bolts.CancellationTokenSource:
    41:33:void <init>() -> <init>
    29:29:java.lang.Object access$000(bolts.CancellationTokenSource) -> access$000
    29:29:java.util.concurrent.ScheduledFuture access$102(bolts.CancellationTokenSource,java.util.concurrent.ScheduledFuture) -> access$102
    69:79:void cancel() -> cancel
    205:207:void cancelScheduledCancellation() -> cancelScheduledCancellation
    125:137:void close() -> close
    48:51:boolean isCancellationRequested() -> isCancellationRequested
    181:182:void notifyListeners(java.util.List) -> notifyListeners
    198:199:void throwIfClosed() -> throwIfClosed
    188:188:java.lang.String toString() -> toString
    169:172:void unregister(bolts.CancellationTokenRegistration) -> unregister
bolts.CancellationTokenSource$1 -> bolts.CancellationTokenSource$1:
    113:115:void run() -> run
bolts.Capture -> bolts.Capture:
    20:20:void <init>() -> <init>
    28:28:java.lang.Object get() -> get
bolts.ExecutorException -> bolts.ExecutorException:
    10:10:void <init>(java.lang.Exception) -> <init>
bolts.Task -> bolts.Task:
    36:1030:void <clinit>() -> <clinit>
    100:98:void <init>() -> <init>
    103:104:void <init>(java.lang.Object) -> <init>
    107:111:void <init>(boolean) -> <init>
    32:32:void access$000(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken) -> access$000
    32:32:void access$100(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken) -> access$100
    338:338:bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor) -> call
    346:369:bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken) -> call
    231:231:bolts.Task cancelled() -> cancelled
    908:948:void completeAfterTask(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken) -> completeAfterTask
    863:882:void completeImmediately(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken) -> completeImmediately
    647:659:bolts.Task continueWith(bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken) -> continueWith
    672:672:bolts.Task continueWith(bolts.Continuation) -> continueWith
    690:690:bolts.Task continueWithTask(bolts.Continuation,java.util.concurrent.Executor) -> continueWithTask
    701:713:bolts.Task continueWithTask(bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken) -> continueWithTask
    726:726:bolts.Task continueWithTask(bolts.Continuation) -> continueWithTask
    221:223:bolts.Task forError(java.lang.Exception) -> forError
    207:214:bolts.Task forResult(java.lang.Object) -> forResult
    164:173:java.lang.Exception getError() -> getError
    155:157:java.lang.Object getResult() -> getResult
    79:79:bolts.Task$UnobservedExceptionHandler getUnobservedExceptionHandler() -> getUnobservedExceptionHandler
    137:139:boolean isCancelled() -> isCancelled
    128:130:boolean isCompleted() -> isCompleted
    146:148:boolean isFaulted() -> isFaulted
    796:796:bolts.Task onSuccessTask(bolts.Continuation,java.util.concurrent.Executor) -> onSuccessTask
    806:806:bolts.Task onSuccessTask(bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken) -> onSuccessTask
    953:964:void runContinuations() -> runContinuations
    971:980:boolean trySetCancelled() -> trySetCancelled
    1003:1015:boolean trySetError(java.lang.Exception) -> trySetError
    987:996:boolean trySetResult(java.lang.Object) -> trySetResult
bolts.Task$1 -> bolts.Task$1:
    269:269:void run() -> run
bolts.Task$10 -> bolts.Task$10:
    651:651:void <init>(bolts.Task,bolts.TaskCompletionSource,bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken) -> <init>
    651:651:java.lang.Object then(bolts.Task) -> then
    654:654:java.lang.Void then(bolts.Task) -> then
bolts.Task$11 -> bolts.Task$11:
    705:705:void <init>(bolts.Task,bolts.TaskCompletionSource,bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken) -> <init>
    705:705:java.lang.Object then(bolts.Task) -> then
    708:708:java.lang.Void then(bolts.Task) -> then
bolts.Task$12 -> bolts.Task$12:
    754:754:java.lang.Object then(bolts.Task) -> then
    757:766:bolts.Task then(bolts.Task) -> then
bolts.Task$13 -> bolts.Task$13:
    806:806:void <init>(bolts.Task,bolts.CancellationToken,bolts.Continuation) -> <init>
    806:806:java.lang.Object then(bolts.Task) -> then
    809:818:bolts.Task then(bolts.Task) -> then
bolts.Task$14 -> bolts.Task$14:
    863:863:void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,bolts.Continuation,bolts.Task) -> <init>
    866:875:void run() -> run
bolts.Task$15 -> bolts.Task$15:
    908:908:void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,bolts.Continuation,bolts.Task) -> <init>
    911:941:void run() -> run
bolts.Task$15$1 -> bolts.Task$15$1:
    921:921:void <init>(bolts.Task$15) -> <init>
    921:921:java.lang.Object then(bolts.Task) -> then
    924:934:java.lang.Void then(bolts.Task) -> then
bolts.Task$2 -> bolts.Task$2:
    277:278:void run() -> run
bolts.Task$3 -> bolts.Task$3:
    300:300:java.lang.Object then(bolts.Task) -> then
    303:309:bolts.Task then(bolts.Task) -> then
bolts.Task$4 -> bolts.Task$4:
    348:348:void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,java.util.concurrent.Callable) -> <init>
    351:359:void run() -> run
bolts.Task$5 -> bolts.Task$5:
    410:410:java.lang.Object then(bolts.Task) -> then
    413:416:java.lang.Void then(bolts.Task) -> then
bolts.Task$6 -> bolts.Task$6:
    447:447:java.lang.Object then(bolts.Task) -> then
    450:453:java.lang.Void then(bolts.Task) -> then
bolts.Task$7 -> bolts.Task$7:
    488:488:java.lang.Object then(bolts.Task) -> then
    491:497:java.util.List then(bolts.Task) -> then
bolts.Task$8 -> bolts.Task$8:
    538:538:java.lang.Object then(bolts.Task) -> then
    541:564:java.lang.Void then(bolts.Task) -> then
bolts.Task$9 -> bolts.Task$9:
    611:611:java.lang.Object then(bolts.Task) -> then
    614:622:bolts.Task then(bolts.Task) -> then
bolts.TaskCompletionSource -> bolts.TaskCompletionSource:
    17:18:void <init>() -> <init>
    25:25:bolts.Task getTask() -> getTask
    53:54:void setCancelled() -> setCancelled
    71:72:void setError(java.lang.Exception) -> setError
    62:63:void setResult(java.lang.Object) -> setResult
    32:32:boolean trySetCancelled() -> trySetCancelled
    46:46:boolean trySetError(java.lang.Exception) -> trySetError
    39:39:boolean trySetResult(java.lang.Object) -> trySetResult
bolts.UnobservedErrorNotifier -> bolts.UnobservedErrorNotifier:
    11:12:void <init>(bolts.Task) -> <init>
    18:26:void finalize() -> finalize
    31:31:void setObserved() -> setObserved
bolts.UnobservedTaskException -> bolts.UnobservedTaskException:
    8:8:void <init>(java.lang.Throwable) -> <init>
com.example.BuildConfig -> com.example.BuildConfig:
    6:6:void <init>() -> <init>
com.example.MainActivity -> com.example.MainActivity:
    5:5:void <init>() -> <init>
com.example.MainApplication -> com.example.MainApplication:
    14:15:void <init>() -> <init>
    31:31:com.facebook.react.ReactNativeHost getReactNativeHost() -> getReactNativeHost
    36:37:void onCreate() -> onCreate
com.example.MainApplication$1 -> com.example.MainApplication$1:
    15:15:void <init>(com.example.MainApplication,android.app.Application) -> <init>
    23:23:java.util.List getPackages() -> getPackages
com.example.R -> com.example.R:
    10:10:void <init>() -> <init>
com.example.R$anim -> com.example.R$anim:
    11:11:void <init>() -> <init>
com.example.R$attr -> com.example.R$attr:
    43:43:void <init>() -> <init>
com.example.R$bool -> com.example.R$bool:
    2856:2856:void <init>() -> <init>
com.example.R$color -> com.example.R$color:
    2861:2861:void <init>() -> <init>
com.example.R$dimen -> com.example.R$dimen:
    2949:2949:void <init>() -> <init>
com.example.R$drawable -> com.example.R$drawable:
    3068:3068:void <init>() -> <init>
com.example.R$id -> com.example.R$id:
    3179:3179:void <init>() -> <init>
com.example.R$integer -> com.example.R$integer:
    3375:3375:void <init>() -> <init>
com.example.R$interpolator -> com.example.R$interpolator:
    3384:3384:void <init>() -> <init>
com.example.R$layout -> com.example.R$layout:
    3393:3393:void <init>() -> <init>
com.example.R$mipmap -> com.example.R$mipmap:
    3439:3439:void <init>() -> <init>
com.example.R$string -> com.example.R$string:
    3442:3442:void <init>() -> <init>
com.example.R$style -> com.example.R$style:
    3528:3528:void <init>() -> <init>
com.example.R$styleable -> com.example.R$styleable:
    3974:12356:void <clinit>() -> <clinit>
    3902:3902:void <init>() -> <init>
com.example.R$xml -> com.example.R$xml:
    12400:12400:void <init>() -> <init>
com.facebook.binaryresource.ByteArrayBinaryResource -> com.facebook.binaryresource.ByteArrayBinaryResource:
    32:32:java.io.InputStream openStream() -> openStream
    27:27:long size() -> size
com.facebook.binaryresource.FileBinaryResource -> com.facebook.binaryresource.FileBinaryResource:
    24:25:void <init>(java.io.File) -> <init>
    66:66:com.facebook.binaryresource.FileBinaryResource createOrNull(java.io.File) -> createOrNull
    49:53:boolean equals(java.lang.Object) -> equals
    29:29:java.io.File getFile() -> getFile
    58:58:int hashCode() -> hashCode
    34:34:java.io.InputStream openStream() -> openStream
    39:39:long size() -> size
com.facebook.cache.common.BaseCacheEventListener -> com.facebook.cache.common.BaseCacheEventListener:
    13:13:void <init>() -> <init>
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory -> com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory:
    21:20:void <clinit>() -> <clinit>
    20:20:void <init>(java.lang.String,int) -> <init>
    20:20:com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory valueOf(java.lang.String) -> valueOf
    20:20:com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory[] values() -> values
com.facebook.cache.common.CacheEventListener$EvictionReason -> com.facebook.cache.common.CacheEventListener$EvictionReason:
    61:60:void <clinit>() -> <clinit>
    60:60:void <init>(java.lang.String,int) -> <init>
    60:60:com.facebook.cache.common.CacheEventListener$EvictionReason valueOf(java.lang.String) -> valueOf
    60:60:com.facebook.cache.common.CacheEventListener$EvictionReason[] values() -> values
com.facebook.cache.common.CacheKeyUtil -> com.facebook.cache.common.CacheKeyUtil:
    14:14:void <init>() -> <init>
    44:52:java.lang.String getFirstResourceId(com.facebook.cache.common.CacheKey) -> getFirstResourceId
    22:35:java.util.List getResourceIds(com.facebook.cache.common.CacheKey) -> getResourceIds
    57:57:java.lang.String secureHashKey(com.facebook.cache.common.CacheKey) -> secureHashKey
com.facebook.cache.common.MultiCacheKey -> com.facebook.cache.common.MultiCacheKey:
    29:30:void <init>(java.util.List) -> <init>
    61:62:boolean containsUri(android.net.Uri) -> containsUri
    47:49:boolean equals(java.lang.Object) -> equals
    34:34:java.util.List getCacheKeys() -> getCacheKeys
    71:71:java.lang.String getUriString() -> getUriString
    56:56:int hashCode() -> hashCode
    39:39:java.lang.String toString() -> toString
com.facebook.cache.common.NoOpCacheErrorLogger -> com.facebook.cache.common.NoOpCacheErrorLogger:
    18:18:void <init>() -> <init>
    22:25:com.facebook.cache.common.NoOpCacheErrorLogger getInstance() -> getInstance
com.facebook.cache.common.NoOpCacheEventListener -> com.facebook.cache.common.NoOpCacheEventListener:
    18:18:void <init>() -> <init>
    22:25:com.facebook.cache.common.NoOpCacheEventListener getInstance() -> getInstance
com.facebook.cache.common.SimpleCacheKey -> com.facebook.cache.common.SimpleCacheKey:
    22:23:void <init>(java.lang.String) -> <init>
    50:50:boolean containsUri(android.net.Uri) -> containsUri
    36:38:boolean equals(java.lang.Object) -> equals
    55:55:java.lang.String getUriString() -> getUriString
    45:45:int hashCode() -> hashCode
    28:28:java.lang.String toString() -> toString
com.facebook.cache.common.WriterCallbacks -> com.facebook.cache.common.WriterCallbacks:
    18:18:void <init>() -> <init>
com.facebook.cache.common.WriterCallbacks$1 -> com.facebook.cache.common.WriterCallbacks$1:
    32:32:void write(java.io.OutputStream) -> write
com.facebook.cache.common.WriterCallbacks$2 -> com.facebook.cache.common.WriterCallbacks$2:
    48:48:void write(java.io.OutputStream) -> write
com.facebook.cache.disk.DefaultDiskStorage -> com.facebook.cache.disk.DefaultDiskStorage:
    41:61:void <clinit>() -> <clinit>
    98:111:void <init>(java.io.File,int,com.facebook.cache.common.CacheErrorLogger) -> <init>
    39:39:com.facebook.cache.disk.DefaultDiskStorage$FileInfo access$000(com.facebook.cache.disk.DefaultDiskStorage,java.io.File) -> access$000
    39:39:com.facebook.cache.common.CacheErrorLogger access$1000(com.facebook.cache.disk.DefaultDiskStorage) -> access$1000
    39:39:java.io.File access$200(com.facebook.cache.disk.DefaultDiskStorage) -> access$200
    39:39:java.io.File access$300(com.facebook.cache.disk.DefaultDiskStorage) -> access$300
    39:39:com.facebook.common.time.Clock access$400(com.facebook.cache.disk.DefaultDiskStorage) -> access$400
    39:39:java.lang.String access$800(java.lang.String) -> access$800
    39:39:java.lang.Class access$900() -> access$900
    443:443:void clearAll() -> clearAll
    399:399:boolean contains(java.lang.String,java.lang.Object) -> contains
    430:435:long doRemove(java.io.File) -> doRemove
    218:218:java.io.File getContentFileFor(java.lang.String) -> getContentFileFor
    39:39:java.util.Collection getEntries() -> getEntries
    498:500:java.util.List getEntries() -> getEntries
    581:583:java.lang.String getFileTypefromExtension(java.lang.String) -> getFileTypefromExtension
    392:394:java.lang.String getFilename(java.lang.String) -> getFilename
    383:386:com.facebook.binaryresource.BinaryResource getResource(java.lang.String,java.lang.Object) -> getResource
    557:562:com.facebook.cache.disk.DefaultDiskStorage$FileInfo getShardFileInfo(java.io.File) -> getShardFileInfo
    237:237:java.io.File getSubdirectory(java.lang.String) -> getSubdirectory
    227:228:java.lang.String getSubdirectoryPath(java.lang.String) -> getSubdirectoryPath
    151:147:java.lang.String getVersionSubdirectoryName(int) -> getVersionSubdirectoryName
    362:377:com.facebook.cache.disk.DiskStorage$Inserter insert(java.lang.String,java.lang.Object) -> insert
    119:136:boolean isExternal(java.io.File,com.facebook.cache.common.CacheErrorLogger) -> isExternal
    162:162:boolean isExternal() -> isExternal
    345:352:void mkdirs(java.io.File,java.lang.String) -> mkdirs
    333:333:void purgeUnexpectedResources() -> purgeUnexpectedResources
    408:411:boolean query(java.lang.String,boolean) -> query
    181:193:void recreateDirectoryIfVersionChanges() -> recreateDirectoryIfVersionChanges
    419:421:long remove(com.facebook.cache.disk.DiskStorage$Entry) -> remove
    426:426:long remove(java.lang.String) -> remove
com.facebook.cache.disk.DefaultDiskStorage$EntriesCollector -> com.facebook.cache.disk.DefaultDiskStorage$EntriesCollector:
    244:246:void <init>(com.facebook.cache.disk.DefaultDiskStorage) -> <init>
    244:244:void <init>(com.facebook.cache.disk.DefaultDiskStorage,com.facebook.cache.disk.DefaultDiskStorage$1) -> <init>
    266:266:java.util.List getEntries() -> getEntries
    254:256:void visitFile(java.io.File) -> visitFile
com.facebook.cache.disk.DefaultDiskStorage$EntryImpl -> com.facebook.cache.disk.DefaultDiskStorage$EntryImpl:
    507:507:void <init>(java.lang.String,java.io.File,com.facebook.cache.disk.DefaultDiskStorage$1) -> <init>
    513:518:void <init>(java.lang.String,java.io.File) -> <init>
    523:523:java.lang.String getId() -> getId
    537:537:com.facebook.binaryresource.FileBinaryResource getResource() -> getResource
    542:545:long getSize() -> getSize
    528:532:long getTimestamp() -> getTimestamp
com.facebook.cache.disk.DefaultDiskStorage$FileInfo -> com.facebook.cache.disk.DefaultDiskStorage$FileInfo:
    594:594:void <init>(java.lang.String,java.lang.String,com.facebook.cache.disk.DefaultDiskStorage$1) -> <init>
    599:601:void <init>(java.lang.String,java.lang.String) -> <init>
    614:614:java.io.File createTempFile(java.io.File) -> createTempFile
    620:639:com.facebook.cache.disk.DefaultDiskStorage$FileInfo fromFile(java.io.File) -> fromFile
    610:610:java.lang.String toPath(java.lang.String) -> toPath
    606:606:java.lang.String toString() -> toString
com.facebook.cache.disk.DefaultDiskStorage$IncompleteFileException -> com.facebook.cache.disk.DefaultDiskStorage$IncompleteFileException:
    207:207:void <init>(long,long) -> <init>
com.facebook.cache.disk.DefaultDiskStorage$InserterImpl -> com.facebook.cache.disk.DefaultDiskStorage$InserterImpl:
    651:653:void <init>(com.facebook.cache.disk.DefaultDiskStorage,java.lang.String,java.io.File) -> <init>
    726:726:boolean cleanUp() -> cleanUp
    694:716:com.facebook.binaryresource.BinaryResource commit(java.lang.Object) -> commit
    660:667:void writeData(com.facebook.cache.common.WriterCallback,java.lang.Object) -> writeData
com.facebook.cache.disk.DefaultDiskStorage$PurgingVisitor -> com.facebook.cache.disk.DefaultDiskStorage$PurgingVisitor:
    279:279:void <init>(com.facebook.cache.disk.DefaultDiskStorage) -> <init>
    279:279:void <init>(com.facebook.cache.disk.DefaultDiskStorage,com.facebook.cache.disk.DefaultDiskStorage$1) -> <init>
    312:319:boolean isExpectedFile(java.io.File) -> isExpectedFile
    327:327:boolean isRecentFile(java.io.File) -> isRecentFile
    299:307:void postVisitDirectory(java.io.File) -> postVisitDirectory
    284:286:void preVisitDirectory(java.io.File) -> preVisitDirectory
    292:293:void visitFile(java.io.File) -> visitFile
com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier -> com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier:
    12:12:void <init>() -> <init>
    16:16:com.facebook.cache.disk.EntryEvictionComparator get() -> get
com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier$1 -> com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier$1:
    16:16:void <init>(com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier) -> <init>
    16:16:int compare(java.lang.Object,java.lang.Object) -> compare
    19:20:int compare(com.facebook.cache.disk.DiskStorage$Entry,com.facebook.cache.disk.DiskStorage$Entry) -> compare
com.facebook.cache.disk.DiskCacheConfig -> com.facebook.cache.disk.DiskCacheConfig:
    28:28:void <init>(com.facebook.cache.disk.DiskCacheConfig$Builder,com.facebook.cache.disk.DiskCacheConfig$1) -> <init>
    43:65:void <init>(com.facebook.cache.disk.DiskCacheConfig$Builder) -> <init>
    73:73:java.lang.String getBaseDirectoryName() -> getBaseDirectoryName
    77:77:com.facebook.common.internal.Supplier getBaseDirectoryPathSupplier() -> getBaseDirectoryPathSupplier
    97:97:com.facebook.cache.common.CacheErrorLogger getCacheErrorLogger() -> getCacheErrorLogger
    101:101:com.facebook.cache.common.CacheEventListener getCacheEventListener() -> getCacheEventListener
    109:109:android.content.Context getContext() -> getContext
    81:81:long getDefaultSizeLimit() -> getDefaultSizeLimit
    105:105:com.facebook.common.disk.DiskTrimmableRegistry getDiskTrimmableRegistry() -> getDiskTrimmableRegistry
    93:93:com.facebook.cache.disk.EntryEvictionComparatorSupplier getEntryEvictionComparatorSupplier() -> getEntryEvictionComparatorSupplier
    113:113:boolean getIndexPopulateAtStartupEnabled() -> getIndexPopulateAtStartupEnabled
    85:85:long getLowDiskSpaceSizeLimit() -> getLowDiskSpaceSizeLimit
    89:89:long getMinimumSizeLimit() -> getMinimumSizeLimit
    69:69:int getVersion() -> getVersion
    126:126:com.facebook.cache.disk.DiskCacheConfig$Builder newBuilder(android.content.Context) -> newBuilder
com.facebook.cache.disk.DiskCacheConfig$Builder -> com.facebook.cache.disk.DiskCacheConfig$Builder:
    129:129:void <init>(android.content.Context,com.facebook.cache.disk.DiskCacheConfig$1) -> <init>
    146:147:void <init>(android.content.Context) -> <init>
    129:129:int access$000(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$000
    129:129:java.lang.String access$100(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$100
    129:129:android.content.Context access$1000(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$1000
    129:129:boolean access$1100(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$1100
    129:129:com.facebook.common.internal.Supplier access$200(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$200
    129:129:long access$300(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$300
    129:129:long access$400(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$400
    129:129:long access$500(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$500
    129:129:com.facebook.cache.disk.EntryEvictionComparatorSupplier access$600(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$600
    129:129:com.facebook.cache.common.CacheErrorLogger access$700(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$700
    129:129:com.facebook.cache.common.CacheEventListener access$800(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$800
    129:129:com.facebook.common.disk.DiskTrimmableRegistry access$900(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$900
    252:263:com.facebook.cache.disk.DiskCacheConfig build() -> build
com.facebook.cache.disk.DiskCacheConfig$Builder$1 -> com.facebook.cache.disk.DiskCacheConfig$Builder$1:
    256:256:void <init>(com.facebook.cache.disk.DiskCacheConfig$Builder) -> <init>
    256:256:java.lang.Object get() -> get
    259:259:java.io.File get() -> get
com.facebook.cache.disk.DiskStorage$DiskDumpInfo -> com.facebook.cache.disk.DiskStorage$DiskDumpInfo:
    41:43:void <init>() -> <init>
com.facebook.cache.disk.DiskStorageCache -> com.facebook.cache.disk.DiskStorageCache:
    44:53:void <clinit>() -> <clinit>
    156:201:void <init>(com.facebook.cache.disk.DiskStorage,com.facebook.cache.disk.EntryEvictionComparatorSupplier,com.facebook.cache.disk.DiskStorageCache$Params,com.facebook.cache.common.CacheEventListener,com.facebook.cache.common.CacheErrorLogger,com.facebook.common.disk.DiskTrimmableRegistry,android.content.Context,java.util.concurrent.Executor,boolean) -> <init>
    42:42:java.lang.Object access$000(com.facebook.cache.disk.DiskStorageCache) -> access$000
    42:42:boolean access$100(com.facebook.cache.disk.DiskStorageCache) -> access$100
    42:42:boolean access$202(com.facebook.cache.disk.DiskStorageCache,boolean) -> access$202
    42:42:java.util.concurrent.CountDownLatch access$300(com.facebook.cache.disk.DiskStorageCache) -> access$300
    589:599:void clearAll() -> clearAll
    340:345:com.facebook.binaryresource.BinaryResource endInsert(com.facebook.cache.disk.DiskStorage$Inserter,com.facebook.cache.common.CacheKey,java.lang.String) -> endInsert
    496:503:void evictAboveSize(long,com.facebook.cache.common.CacheEventListener$EvictionReason) -> evictAboveSize
    248:281:com.facebook.binaryresource.BinaryResource getResource(com.facebook.cache.common.CacheKey) -> getResource
    542:553:java.util.Collection getSortedEntries(java.util.Collection) -> getSortedEntries
    619:637:boolean hasKey(com.facebook.cache.common.CacheKey) -> hasKey
    604:614:boolean hasKeySync(com.facebook.cache.common.CacheKey) -> hasKeySync
    352:359:com.facebook.binaryresource.BinaryResource insert(com.facebook.cache.common.CacheKey,com.facebook.cache.common.WriterCallback) -> insert
    467:487:void maybeEvictFilesInCacheDir() -> maybeEvictFilesInCacheDir
    688:692:boolean maybeUpdateFileCacheSize() -> maybeUpdateFileCacheSize
    705:748:boolean maybeUpdateFileCacheSizeAndIndex() -> maybeUpdateFileCacheSizeAndIndex
    389:405:void remove(com.facebook.cache.common.CacheKey) -> remove
    328:329:com.facebook.cache.disk.DiskStorage$Inserter startInsert(java.lang.String,com.facebook.cache.common.CacheKey) -> startInsert
    565:576:void updateFileCacheSizeLimit() -> updateFileCacheSizeLimit
com.facebook.cache.disk.DiskStorageCache$1 -> com.facebook.cache.disk.DiskStorageCache$1:
    189:189:void <init>(com.facebook.cache.disk.DiskStorageCache) -> <init>
    193:195:void run() -> run
com.facebook.cache.disk.DiskStorageCache$CacheStats -> com.facebook.cache.disk.DiskStorageCache$CacheStats:
    94:98:void <init>() -> <init>
    128:128:long getCount() -> getCount
    124:124:long getSize() -> getSize
    117:121:void increment(long,long) -> increment
    101:101:boolean isInitialized() -> isInitialized
    105:108:void reset() -> reset
    111:114:void set(long,long) -> set
com.facebook.cache.disk.DiskStorageCache$Params -> com.facebook.cache.disk.DiskStorageCache$Params:
    140:143:void <init>(long,long,long) -> <init>
com.facebook.cache.disk.DynamicDefaultDiskStorage -> com.facebook.cache.disk.DynamicDefaultDiskStorage:
    27:27:void <clinit>() -> <clinit>
    54:59:void <init>(int,com.facebook.common.internal.Supplier,java.lang.String,com.facebook.cache.common.CacheErrorLogger) -> <init>
    137:137:void clearAll() -> clearAll
    96:96:boolean contains(java.lang.String,java.lang.Object) -> contains
    187:194:void createRootDirectoryIfNecessary(java.io.File) -> createRootDirectoryIfNecessary
    178:181:void createStorage() -> createStorage
    170:173:void deleteOldStorageIfNecessary() -> deleteOldStorageIfNecessary
    153:158:com.facebook.cache.disk.DiskStorage get() -> get
    122:122:java.util.Collection getEntries() -> getEntries
    91:91:com.facebook.binaryresource.BinaryResource getResource(java.lang.String,java.lang.Object) -> getResource
    117:117:com.facebook.cache.disk.DiskStorage$Inserter insert(java.lang.String,java.lang.Object) -> insert
    74:74:boolean isExternal() -> isExternal
    107:111:void purgeUnexpectedResources() -> purgeUnexpectedResources
    127:127:long remove(com.facebook.cache.disk.DiskStorage$Entry) -> remove
    132:132:long remove(java.lang.String) -> remove
    162:165:boolean shouldCreateNewStorage() -> shouldCreateNewStorage
com.facebook.cache.disk.DynamicDefaultDiskStorage$State -> com.facebook.cache.disk.DynamicDefaultDiskStorage$State:
    44:46:void <init>(java.io.File,com.facebook.cache.disk.DiskStorage) -> <init>
com.facebook.cache.disk.ScoreBasedEvictionComparatorSupplier -> com.facebook.cache.disk.ScoreBasedEvictionComparatorSupplier:
    50:52:float calculateScore(com.facebook.cache.disk.DiskStorage$Entry,long) -> calculateScore
    27:27:com.facebook.cache.disk.EntryEvictionComparator get() -> get
com.facebook.cache.disk.ScoreBasedEvictionComparatorSupplier$1 -> com.facebook.cache.disk.ScoreBasedEvictionComparatorSupplier$1:
    27:29:void <init>(com.facebook.cache.disk.ScoreBasedEvictionComparatorSupplier) -> <init>
    27:27:int compare(java.lang.Object,java.lang.Object) -> compare
    36:37:int compare(com.facebook.cache.disk.DiskStorage$Entry,com.facebook.cache.disk.DiskStorage$Entry) -> compare
com.facebook.cache.disk.SettableCacheEvent -> com.facebook.cache.disk.SettableCacheEvent:
    23:23:void <clinit>() -> <clinit>
    53:53:void <init>() -> <init>
    40:48:com.facebook.cache.disk.SettableCacheEvent obtain() -> obtain
    131:141:void recycle() -> recycle
com.facebook.common.activitylistener.ActivityListenerManager -> com.facebook.common.activitylistener.ActivityListenerManager:
    23:23:void <init>() -> <init>
com.facebook.common.activitylistener.BaseActivityListener -> com.facebook.common.activitylistener.BaseActivityListener:
    12:12:void <init>() -> <init>
com.facebook.common.disk.NoOpDiskTrimmableRegistry -> com.facebook.common.disk.NoOpDiskTrimmableRegistry:
    17:17:void <init>() -> <init>
    21:24:com.facebook.common.disk.NoOpDiskTrimmableRegistry getInstance() -> getInstance
com.facebook.common.executors.CallerThreadExecutor -> com.facebook.common.executors.CallerThreadExecutor:
    36:36:void <clinit>() -> <clinit>
    42:42:void <init>() -> <init>
    47:47:void execute(java.lang.Runnable) -> execute
    39:39:com.facebook.common.executors.CallerThreadExecutor getInstance() -> getInstance
    62:63:java.util.List shutdownNow() -> shutdownNow
com.facebook.common.executors.ConstrainedExecutorService -> com.facebook.common.executors.ConstrainedExecutorService:
    27:27:void <clinit>() -> <clinit>
    25:25:java.util.concurrent.BlockingQueue access$100(com.facebook.common.executors.ConstrainedExecutorService) -> access$100
    25:25:java.lang.Class access$200() -> access$200
    25:25:java.lang.String access$300(com.facebook.common.executors.ConstrainedExecutorService) -> access$300
    25:25:java.util.concurrent.atomic.AtomicInteger access$400(com.facebook.common.executors.ConstrainedExecutorService) -> access$400
    25:25:void access$500(com.facebook.common.executors.ConstrainedExecutorService) -> access$500
    160:160:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    101:98:void execute(java.lang.Runnable) -> execute
    140:140:void shutdown() -> shutdown
    145:145:java.util.List shutdownNow() -> shutdownNow
    123:134:void startWorkerIfNeeded() -> startWorkerIfNeeded
com.facebook.common.executors.ConstrainedExecutorService$Worker -> com.facebook.common.executors.ConstrainedExecutorService$Worker:
    173:188:void run() -> run
com.facebook.common.executors.DefaultSerialExecutorService -> com.facebook.common.executors.DefaultSerialExecutorService:
    32:33:void execute(java.lang.Runnable) -> execute
com.facebook.common.executors.HandlerExecutorServiceImpl -> com.facebook.common.executors.HandlerExecutorServiceImpl:
    26:27:void <init>(android.os.Handler) -> <init>
    52:52:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    57:57:void execute(java.lang.Runnable) -> execute
    124:124:boolean isHandlerThread() -> isHandlerThread
    21:21:java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object) -> newTaskFor
    21:21:java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable) -> newTaskFor
    62:62:com.facebook.common.executors.ScheduledFutureImpl newTaskFor(java.lang.Runnable,java.lang.Object) -> newTaskFor
    67:67:com.facebook.common.executors.ScheduledFutureImpl newTaskFor(java.util.concurrent.Callable) -> newTaskFor
    93:94:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    100:101:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    108:108:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    114:114:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    32:32:void shutdown() -> shutdown
    37:37:java.util.List shutdownNow() -> shutdownNow
    21:21:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    21:21:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    21:21:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    72:72:java.util.concurrent.ScheduledFuture submit(java.lang.Runnable) -> submit
    78:77:java.util.concurrent.ScheduledFuture submit(java.lang.Runnable,java.lang.Object) -> submit
    86:85:java.util.concurrent.ScheduledFuture submit(java.util.concurrent.Callable) -> submit
com.facebook.common.executors.ScheduledFutureImpl -> com.facebook.common.executors.ScheduledFutureImpl:
    29:31:void <init>(android.os.Handler,java.util.concurrent.Callable) -> <init>
    34:36:void <init>(android.os.Handler,java.lang.Runnable,java.lang.Object) -> <init>
    56:56:boolean cancel(boolean) -> cancel
    24:24:int compareTo(java.lang.Object) -> compareTo
    46:46:int compareTo(java.util.concurrent.Delayed) -> compareTo
    71:71:java.lang.Object get() -> get
    77:77:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    41:41:long getDelay(java.util.concurrent.TimeUnit) -> getDelay
    61:61:boolean isCancelled() -> isCancelled
    66:66:boolean isDone() -> isDone
    51:51:void run() -> run
com.facebook.common.executors.StatefulRunnable -> com.facebook.common.executors.StatefulRunnable:
    32:33:void <init>() -> <init>
    59:60:void cancel() -> cancel
    38:46:void run() -> run
com.facebook.common.executors.UiThreadImmediateExecutorService -> com.facebook.common.executors.UiThreadImmediateExecutorService:
    25:25:void <init>() -> <init>
    37:40:void execute(java.lang.Runnable) -> execute
    29:32:com.facebook.common.executors.UiThreadImmediateExecutorService getInstance() -> getInstance
com.facebook.common.file.FileTree -> com.facebook.common.file.FileTree:
    18:18:void <init>() -> <init>
    50:54:boolean deleteContents(java.io.File) -> deleteContents
    66:70:boolean deleteRecursively(java.io.File) -> deleteRecursively
    31:42:void walkFileTree(java.io.File,com.facebook.common.file.FileTreeVisitor) -> walkFileTree
com.facebook.common.file.FileUtils -> com.facebook.common.file.FileUtils:
    19:19:void <init>() -> <init>
    27:43:void mkdirs(java.io.File) -> mkdirs
    55:75:void rename(java.io.File,java.io.File) -> rename
com.facebook.common.file.FileUtils$CreateDirectoryException -> com.facebook.common.file.FileUtils$CreateDirectoryException:
    84:84:void <init>(java.lang.String) -> <init>
    88:89:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.facebook.common.file.FileUtils$FileDeleteException -> com.facebook.common.file.FileUtils$FileDeleteException:
    107:107:void <init>(java.lang.String) -> <init>
com.facebook.common.file.FileUtils$ParentDirNotFoundException -> com.facebook.common.file.FileUtils$ParentDirNotFoundException:
    98:98:void <init>(java.lang.String) -> <init>
com.facebook.common.file.FileUtils$RenameException -> com.facebook.common.file.FileUtils$RenameException:
    120:121:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.facebook.common.internal.AndroidPredicates -> com.facebook.common.internal.AndroidPredicates:
    15:15:void <init>() -> <init>
com.facebook.common.internal.AndroidPredicates$1 -> com.facebook.common.internal.AndroidPredicates$1:
    18:18:void <init>() -> <init>
com.facebook.common.internal.AndroidPredicates$2 -> com.facebook.common.internal.AndroidPredicates$2:
    27:27:void <init>() -> <init>
com.facebook.common.internal.ByteStreams -> com.facebook.common.internal.ByteStreams:
    40:40:void <init>() -> <init>
    54:63:long copy(java.io.InputStream,java.io.OutputStream) -> copy
    95:98:int read(java.io.InputStream,byte[],int,int) -> read
com.facebook.common.internal.ByteStreams$FastByteArrayOutputStream -> com.facebook.common.internal.ByteStreams$FastByteArrayOutputStream:
    169:169:void <init>() -> <init>
com.facebook.common.internal.Closeables -> com.facebook.common.internal.Closeables:
    34:35:void <clinit>() -> <clinit>
    37:37:void <init>() -> <init>
    74:80:void close(java.io.Closeable,boolean) -> close
    101:103:void closeQuietly(java.io.InputStream) -> closeQuietly
com.facebook.common.internal.CountingOutputStream -> com.facebook.common.internal.CountingOutputStream:
    40:41:void <init>(java.io.OutputStream) -> <init>
    68:68:void close() -> close
    48:48:long getCount() -> getCount
    53:54:void write(byte[],int,int) -> write
    59:60:void write(int) -> write
com.facebook.common.internal.Files -> com.facebook.common.internal.Files:
    34:34:void <init>() -> <init>
com.facebook.common.internal.ImmutableList -> com.facebook.common.internal.ImmutableList:
    21:21:void <init>(int) -> <init>
    33:34:com.facebook.common.internal.ImmutableList of(java.lang.Object[]) -> of
com.facebook.common.internal.ImmutableMap -> com.facebook.common.internal.ImmutableMap:
    23:23:void <init>(java.util.Map) -> <init>
    89:89:com.facebook.common.internal.ImmutableMap copyOf(java.util.Map) -> copyOf
    31:33:java.util.Map of(java.lang.Object,java.lang.Object) -> of
    37:40:java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
com.facebook.common.internal.Ints -> com.facebook.common.internal.Ints:
    29:29:void <init>() -> <init>
    40:44:int max(int[]) -> max
com.facebook.common.internal.Objects -> com.facebook.common.internal.Objects:
    36:36:void <init>() -> <init>
    53:53:boolean equal(java.lang.Object,java.lang.Object) -> equal
    74:74:int hashCode(java.lang.Object[]) -> hashCode
    151:165:java.lang.String simpleName(java.lang.Class) -> simpleName
    117:117:com.facebook.common.internal.Objects$ToStringHelper toStringHelper(java.lang.Object) -> toStringHelper
com.facebook.common.internal.Objects$ToStringHelper -> com.facebook.common.internal.Objects$ToStringHelper:
    195:195:void <init>(java.lang.String,com.facebook.common.internal.Objects$1) -> <init>
    204:205:void <init>(java.lang.String) -> <init>
    227:227:com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object) -> add
    237:237:com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,boolean) -> add
    277:277:com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,int) -> add
    404:405:com.facebook.common.internal.Objects$ToStringHelper$ValueHolder addHolder() -> addHolder
    416:418:com.facebook.common.internal.Objects$ToStringHelper addHolder(java.lang.String,java.lang.Object) -> addHolder
    384:400:java.lang.String toString() -> toString
com.facebook.common.internal.Objects$ToStringHelper$ValueHolder -> com.facebook.common.internal.Objects$ToStringHelper$ValueHolder:
    422:422:void <init>() -> <init>
    422:422:void <init>(com.facebook.common.internal.Objects$1) -> <init>
com.facebook.common.internal.Preconditions -> com.facebook.common.internal.Preconditions:
    98:98:void <init>() -> <init>
    317:319:java.lang.String badElementIndex(int,int,java.lang.String) -> badElementIndex
    108:108:void checkArgument(boolean) -> checkArgument
    122:122:void checkArgument(boolean,java.lang.Object) -> checkArgument
    145:145:void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> checkArgument
    292:292:int checkElementIndex(int,int) -> checkElementIndex
    310:310:int checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    210:210:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    226:226:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    158:158:void checkState(boolean) -> checkState
    173:173:void checkState(boolean,java.lang.Object) -> checkState
    410:438:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
com.facebook.common.internal.Sets -> com.facebook.common.internal.Sets:
    33:33:void <init>() -> <init>
    159:159:java.util.concurrent.CopyOnWriteArraySet newCopyOnWriteArraySet() -> newCopyOnWriteArraySet
    111:111:java.util.Set newIdentityHashSet() -> newIdentityHashSet
    146:146:java.util.Set newSetFromMap(java.util.Map) -> newSetFromMap
com.facebook.common.internal.Suppliers -> com.facebook.common.internal.Suppliers:
    27:36:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    18:18:com.facebook.common.internal.Supplier of(java.lang.Object) -> of
com.facebook.common.internal.Suppliers$1 -> com.facebook.common.internal.Suppliers$1:
    18:18:void <init>(java.lang.Object) -> <init>
    21:21:java.lang.Object get() -> get
com.facebook.common.internal.Suppliers$2 -> com.facebook.common.internal.Suppliers$2:
    28:28:void <init>() -> <init>
    28:28:java.lang.Object get() -> get
    31:31:java.lang.Boolean get() -> get
com.facebook.common.internal.Suppliers$3 -> com.facebook.common.internal.Suppliers$3:
    37:37:void <init>() -> <init>
    37:37:java.lang.Object get() -> get
    40:40:java.lang.Boolean get() -> get
com.facebook.common.internal.Throwables -> com.facebook.common.internal.Throwables:
    38:38:void <init>() -> <init>
    154:155:java.lang.RuntimeException propagate(java.lang.Throwable) -> propagate
    58:59:void propagateIfInstanceOf(java.lang.Throwable,java.lang.Class) -> propagateIfInstanceOf
    78:79:void propagateIfPossible(java.lang.Throwable) -> propagateIfPossible
com.facebook.common.logging.FLog -> com.facebook.common.logging.FLog:
    29:29:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    153:154:void d(java.lang.String,java.lang.String) -> d
    159:160:void d(java.lang.String,java.lang.String,java.lang.Object) -> d
    165:166:void d(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object) -> d
    189:190:void d(java.lang.Class,java.lang.String,java.lang.Object) -> d
    238:239:void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    395:396:void e(java.lang.String,java.lang.String) -> e
    401:402:void e(java.lang.Class,java.lang.String) -> e
    407:408:void e(java.lang.String,java.lang.String,java.lang.Object[]) -> e
    419:420:void e(java.lang.Class,java.lang.String,java.lang.Object[]) -> e
    425:426:void e(java.lang.Class,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> e
    431:432:void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    437:438:void e(java.lang.Class,java.lang.String,java.lang.Throwable) -> e
    491:491:java.lang.String formatString(java.lang.String,java.lang.Object[]) -> formatString
    495:495:java.lang.String getTag(java.lang.Class) -> getTag
    250:251:void i(java.lang.String,java.lang.String) -> i
    262:263:void i(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object) -> i
    335:336:void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    44:44:boolean isLoggable(int) -> isLoggable
    74:75:void v(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> v
    80:81:void v(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> v
    86:87:void v(java.lang.Class,java.lang.String) -> v
    92:93:void v(java.lang.Class,java.lang.String,java.lang.Object) -> v
    98:99:void v(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object) -> v
    104:105:void v(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> v
    111:112:void v(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> v
    117:118:void v(java.lang.String,java.lang.String,java.lang.Object[]) -> v
    129:130:void v(java.lang.Class,java.lang.String,java.lang.Object[]) -> v
    347:348:void w(java.lang.String,java.lang.String) -> w
    353:354:void w(java.lang.Class,java.lang.String) -> w
    359:360:void w(java.lang.String,java.lang.String,java.lang.Object[]) -> w
    365:366:void w(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> w
    371:372:void w(java.lang.Class,java.lang.String,java.lang.Object[]) -> w
    377:378:void w(java.lang.Class,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> w
    383:384:void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    389:390:void w(java.lang.Class,java.lang.String,java.lang.Throwable) -> w
    443:444:void wtf(java.lang.String,java.lang.String) -> wtf
    455:456:void wtf(java.lang.String,java.lang.String,java.lang.Object[]) -> wtf
    479:480:void wtf(java.lang.String,java.lang.String,java.lang.Throwable) -> wtf
    485:486:void wtf(java.lang.Class,java.lang.String,java.lang.Throwable) -> wtf
com.facebook.common.logging.FLogDefaultLoggingDelegate -> com.facebook.common.logging.FLogDefaultLoggingDelegate:
    19:19:void <clinit>() -> <clinit>
    28:22:void <init>() -> <init>
    69:69:void d(java.lang.String,java.lang.String) -> d
    74:74:void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    99:99:void e(java.lang.String,java.lang.String) -> e
    104:104:void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    25:25:com.facebook.common.logging.FLogDefaultLoggingDelegate getInstance() -> getInstance
    147:147:java.lang.String getMsg(java.lang.String,java.lang.Throwable) -> getMsg
    154:157:java.lang.String getStackTraceString(java.lang.Throwable) -> getStackTraceString
    79:79:void i(java.lang.String,java.lang.String) -> i
    84:84:void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    54:54:boolean isLoggable(int) -> isLoggable
    139:140:java.lang.String prefixTag(java.lang.String) -> prefixTag
    131:131:void println(int,java.lang.String,java.lang.String) -> println
    135:135:void println(int,java.lang.String,java.lang.String,java.lang.Throwable) -> println
    59:59:void v(java.lang.String,java.lang.String) -> v
    89:89:void w(java.lang.String,java.lang.String) -> w
    94:94:void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    113:113:void wtf(java.lang.String,java.lang.String) -> wtf
    122:122:void wtf(java.lang.String,java.lang.String,java.lang.Throwable) -> wtf
com.facebook.common.media.MediaUtils -> com.facebook.common.media.MediaUtils:
    22:22:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    54:58:java.lang.String extractExtension(java.lang.String) -> extractExtension
    37:48:java.lang.String extractMime(java.lang.String) -> extractMime
    29:29:boolean isVideo(java.lang.String) -> isVideo
com.facebook.common.media.MimeTypeMapWrapper -> com.facebook.common.media.MimeTypeMapWrapper:
    18:26:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    39:43:java.lang.String getMimeTypeFromExtension(java.lang.String) -> getMimeTypeFromExtension
com.facebook.common.memory.MemoryTrimType -> com.facebook.common.memory.MemoryTrimType:
    20:17:void <clinit>() -> <clinit>
    36:36:void <init>(java.lang.String,int,double) -> <init>
    17:17:com.facebook.common.memory.MemoryTrimType valueOf(java.lang.String) -> valueOf
    17:17:com.facebook.common.memory.MemoryTrimType[] values() -> values
com.facebook.common.memory.NoOpMemoryTrimmableRegistry -> com.facebook.common.memory.NoOpMemoryTrimmableRegistry:
    16:16:void <init>() -> <init>
    20:23:com.facebook.common.memory.NoOpMemoryTrimmableRegistry getInstance() -> getInstance
com.facebook.common.memory.PooledByteArrayBufferedInputStream -> com.facebook.common.memory.PooledByteArrayBufferedInputStream:
    48:54:void <init>(java.io.InputStream,byte[],com.facebook.common.references.ResourceReleaser) -> <init>
    84:86:int available() -> available
    91:94:void close() -> close
    121:131:boolean ensureDataInBuffer() -> ensureDataInBuffer
    136:137:void ensureNotClosed() -> ensureNotClosed
    143:147:void finalize() -> finalize
    59:65:int read() -> read
    70:78:int read(byte[],int,int) -> read
    100:109:long skip(long) -> skip
com.facebook.common.memory.PooledByteBuffer$ClosedException -> com.facebook.common.memory.PooledByteBuffer$ClosedException:
    73:73:void <init>() -> <init>
com.facebook.common.memory.PooledByteBufferInputStream -> com.facebook.common.memory.PooledByteBufferInputStream:
    34:38:void <init>(com.facebook.common.memory.PooledByteBuffer) -> <init>
    46:46:int available() -> available
    57:57:void mark(int) -> mark
    71:74:int read() -> read
    79:79:int read(byte[]) -> read
    92:93:int read(byte[],int,int) -> read
    121:121:void reset() -> reset
    131:133:long skip(long) -> skip
com.facebook.common.memory.PooledByteBufferOutputStream -> com.facebook.common.memory.PooledByteBufferOutputStream:
    26:26:void <init>() -> <init>
    45:48:void close() -> close
com.facebook.common.memory.PooledByteStreams -> com.facebook.common.memory.PooledByteStreams:
    30:30:void <init>(com.facebook.common.memory.ByteArrayPool) -> <init>
    34:37:void <init>(com.facebook.common.memory.ByteArrayPool,int) -> <init>
    49:61:long copy(java.io.InputStream,java.io.OutputStream) -> copy
com.facebook.common.references.CloseableReference -> com.facebook.common.references.CloseableReference:
    68:99:void <clinit>() -> <clinit>
    118:122:void <init>(com.facebook.common.references.SharedReference,com.facebook.common.references.CloseableReference$LeakHandler,java.lang.Throwable) -> <init>
    129:132:void <init>(java.lang.Object,com.facebook.common.references.ResourceReleaser,com.facebook.common.references.CloseableReference$LeakHandler,java.lang.Throwable) -> <init>
    66:66:java.lang.Class access$000() -> access$000
    66:66:java.lang.Object clone() -> clone
    204:205:com.facebook.common.references.CloseableReference clone() -> clone
    209:212:com.facebook.common.references.CloseableReference cloneOrNull() -> cloneOrNull
    278:278:com.facebook.common.references.CloseableReference cloneOrNull(com.facebook.common.references.CloseableReference) -> cloneOrNull
    252:257:void close() -> close
    308:308:void closeSafely(com.facebook.common.references.CloseableReference) -> closeSafely
    330:340:void finalize() -> finalize
    195:196:java.lang.Object get() -> get
    239:239:int getValueHash() -> getValueHash
    221:221:boolean isValid() -> isValid
    268:268:boolean isValid(com.facebook.common.references.CloseableReference) -> isValid
    141:141:com.facebook.common.references.CloseableReference of(java.io.Closeable) -> of
    155:159:com.facebook.common.references.CloseableReference of(java.io.Closeable,com.facebook.common.references.CloseableReference$LeakHandler) -> of
    169:169:com.facebook.common.references.CloseableReference of(java.lang.Object,com.facebook.common.references.ResourceReleaser) -> of
    182:186:com.facebook.common.references.CloseableReference of(java.lang.Object,com.facebook.common.references.ResourceReleaser,com.facebook.common.references.CloseableReference$LeakHandler) -> of
com.facebook.common.references.CloseableReference$1 -> com.facebook.common.references.CloseableReference$1:
    88:88:void <init>() -> <init>
    88:88:void release(java.lang.Object) -> release
    92:92:void release(java.io.Closeable) -> release
com.facebook.common.references.CloseableReference$2 -> com.facebook.common.references.CloseableReference$2:
    100:100:void <init>() -> <init>
    104:103:void reportLeak(com.facebook.common.references.SharedReference,java.lang.Throwable) -> reportLeak
com.facebook.common.references.OOMSoftReference -> com.facebook.common.references.OOMSoftReference:
    42:45:void <init>() -> <init>
    60:70:void clear() -> clear
    56:56:java.lang.Object get() -> get
    49:51:void set(java.lang.Object) -> set
com.facebook.common.references.SharedReference -> com.facebook.common.references.SharedReference:
    100:100:void <clinit>() -> <clinit>
    116:120:void <init>(java.lang.Object,com.facebook.common.references.ResourceReleaser) -> <init>
    130:137:void addLiveReference(java.lang.Object) -> addLiveReference
    192:194:void addReference() -> addReference
    226:230:int decreaseRefCount() -> decreaseRefCount
    210:215:void deleteReference() -> deleteReference
    238:239:void ensureValid() -> ensureValid
    168:168:java.lang.Object get() -> get
    176:176:boolean isValid() -> isValid
    184:184:boolean isValid(com.facebook.common.references.SharedReference) -> isValid
    147:160:void removeLiveReference(java.lang.Object) -> removeLiveReference
com.facebook.common.references.SharedReference$NullReferenceException -> com.facebook.common.references.SharedReference$NullReferenceException:
    257:257:void <init>() -> <init>
com.facebook.common.statfs.StatFsHelper -> com.facebook.common.statfs.StatFsHelper:
    51:51:void <clinit>() -> <clinit>
    78:79:void <init>() -> <init>
    291:291:android.os.StatFs createStatFs(java.lang.String) -> createStatFs
    86:96:void ensureInitialized() -> ensureInitialized
    184:196:long getAvailableStorageSpace(com.facebook.common.statfs.StatFsHelper$StorageType) -> getAvailableStorageSpace
    66:69:com.facebook.common.statfs.StatFsHelper getInstance() -> getInstance
    212:218:void maybeUpdateStats() -> maybeUpdateStats
    113:115:boolean testLowDiskSpace(com.facebook.common.statfs.StatFsHelper$StorageType,long) -> testLowDiskSpace
    249:251:void updateStats() -> updateStats
    260:284:android.os.StatFs updateStatsHelper(android.os.StatFs,java.io.File) -> updateStatsHelper
com.facebook.common.statfs.StatFsHelper$StorageType -> com.facebook.common.statfs.StatFsHelper$StorageType:
    38:37:void <clinit>() -> <clinit>
    37:37:void <init>(java.lang.String,int) -> <init>
    37:37:com.facebook.common.statfs.StatFsHelper$StorageType valueOf(java.lang.String) -> valueOf
    37:37:com.facebook.common.statfs.StatFsHelper$StorageType[] values() -> values
com.facebook.common.streams.LimitedInputStream -> com.facebook.common.streams.LimitedInputStream:
    22:24:void <init>(java.io.InputStream,int) -> <init>
    72:72:int available() -> available
    77:79:void mark(int) -> mark
    35:41:int read() -> read
    49:56:int read(byte[],int,int) -> read
    85:86:void reset() -> reset
    64:66:long skip(long) -> skip
com.facebook.common.streams.TailAppendingInputStream -> com.facebook.common.streams.TailAppendingInputStream:
    24:26:void <init>(java.io.InputStream,byte[]) -> <init>
    83:85:void mark(int) -> mark
    36:40:int read() -> read
    45:45:int read(byte[]) -> read
    50:65:int read(byte[],int,int) -> read
    90:93:int readNextTailByte() -> readNextTailByte
    73:77:void reset() -> reset
com.facebook.common.time.AwakeTimeSinceBootClock -> com.facebook.common.time.AwakeTimeSinceBootClock:
    18:18:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
    29:29:com.facebook.common.time.AwakeTimeSinceBootClock get() -> get
    36:36:long now() -> now
com.facebook.common.time.CurrentThreadTimeClock -> com.facebook.common.time.CurrentThreadTimeClock:
    16:16:void <init>() -> <init>
    20:20:long now() -> now
com.facebook.common.time.RealtimeSinceBootClock -> com.facebook.common.time.RealtimeSinceBootClock:
    22:22:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    33:33:com.facebook.common.time.RealtimeSinceBootClock get() -> get
    39:39:long now() -> now
com.facebook.common.time.SystemClock -> com.facebook.common.time.SystemClock:
    15:15:void <clinit>() -> <clinit>
    17:17:void <init>() -> <init>
    21:21:com.facebook.common.time.SystemClock get() -> get
    26:26:long now() -> now
com.facebook.common.util.ByteConstants -> com.facebook.common.util.ByteConstants:
    14:14:void <init>() -> <init>
com.facebook.common.util.ExceptionWithNoStacktrace -> com.facebook.common.util.ExceptionWithNoStacktrace:
    19:19:void <init>(java.lang.String) -> <init>
    16:16:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.facebook.common.util.HashCodeUtil -> com.facebook.common.util.HashCodeUtil:
    17:17:void <init>() -> <init>
    39:38:int hashCode(java.lang.Object,java.lang.Object) -> hashCode
    87:86:int hashCode(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> hashCode
com.facebook.common.util.Hex -> com.facebook.common.util.Hex:
    21:47:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
com.facebook.common.util.SecureHashUtil -> com.facebook.common.util.SecureHashUtil:
    20:20:void <init>() -> <init>
    40:45:java.lang.String makeSHA1HashBase64(byte[]) -> makeSHA1HashBase64
com.facebook.common.util.StreamUtil -> com.facebook.common.util.StreamUtil:
    19:19:void <init>() -> <init>
    62:73:long skip(java.io.InputStream,long) -> skip
com.facebook.common.util.StreamUtil$1 -> com.facebook.common.util.StreamUtil$1:
    42:45:byte[] toByteArray() -> toByteArray
com.facebook.common.util.TriState -> com.facebook.common.util.TriState:
    17:16:void <clinit>() -> <clinit>
    16:16:void <init>(java.lang.String,int) -> <init>
    16:16:com.facebook.common.util.TriState valueOf(java.lang.String) -> valueOf
    42:42:com.facebook.common.util.TriState valueOf(boolean) -> valueOf
    16:16:com.facebook.common.util.TriState[] values() -> values
com.facebook.common.util.TriState$1 -> com.facebook.common.util.TriState$1:
    59:59:void <clinit>() -> <clinit>
com.facebook.common.util.UriUtil -> com.facebook.common.util.UriUtil:
    38:39:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    208:224:java.lang.String getRealPathFromUri(android.content.ContentResolver,android.net.Uri) -> getRealPathFromUri
    185:185:java.lang.String getSchemeOrNull(android.net.Uri) -> getSchemeOrNull
    248:251:android.net.Uri getUriForResourceId(int) -> getUriForResourceId
    176:176:boolean isDataUri(android.net.Uri) -> isDataUri
    146:147:boolean isLocalAssetUri(android.net.Uri) -> isLocalAssetUri
    134:136:boolean isLocalCameraUri(android.net.Uri) -> isLocalCameraUri
    122:124:boolean isLocalContactUri(android.net.Uri) -> isLocalContactUri
    111:112:boolean isLocalContentUri(android.net.Uri) -> isLocalContentUri
    100:101:boolean isLocalFileUri(android.net.Uri) -> isLocalFileUri
    157:158:boolean isLocalResourceUri(android.net.Uri) -> isLocalResourceUri
    89:90:boolean isNetworkUri(android.net.Uri) -> isNetworkUri
    168:169:boolean isQualifiedResourceUri(android.net.Uri) -> isQualifiedResourceUri
    75:78:java.net.URL uriToUrl(android.net.Uri) -> uriToUrl
com.facebook.common.webp.WebpSupportStatus -> com.facebook.common.webp.WebpSupportStatus:
    17:89:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    59:62:byte[] asciiBytes(java.lang.String) -> asciiBytes
    145:147:boolean isAnimatedWebpHeader(byte[],int) -> isAnimatedWebpHeader
    163:164:boolean isExtendedWebpHeader(byte[],int,int) -> isExtendedWebpHeader
    170:172:boolean isExtendedWebpHeaderWithAlpha(byte[],int) -> isExtendedWebpHeaderWithAlpha
    98:114:boolean isExtendedWebpSupported() -> isExtendedWebpSupported
    156:156:boolean isLosslessWebpHeader(byte[],int) -> isLosslessWebpHeader
    152:152:boolean isSimpleWebpHeader(byte[],int) -> isSimpleWebpHeader
    189:191:boolean isWebpHeader(byte[],int,int) -> isWebpHeader
    30:41:com.facebook.common.webp.WebpBitmapFactory loadWebpBitmapFactoryIfExists() -> loadWebpBitmapFactoryIfExists
    201:206:boolean matchBytePattern(byte[],int,byte[]) -> matchBytePattern
com.facebook.datasource.AbstractDataSource -> com.facebook.datasource.AbstractDataSource:
    54:57:void <init>() -> <init>
    100:107:boolean close() -> close
    89:89:java.lang.Throwable getFailureCause() -> getFailureCause
    94:94:float getProgress() -> getProgress
    78:78:java.lang.Object getResult() -> getResult
    83:83:boolean hasFailed() -> hasFailed
    72:72:boolean hasResult() -> hasResult
    62:62:boolean isClosed() -> isClosed
    67:67:boolean isFinished() -> isFinished
    167:167:void notifyDataSubscriber(com.facebook.datasource.DataSubscriber,java.util.concurrent.Executor,boolean,boolean) -> notifyDataSubscriber
    155:158:void notifyDataSubscribers() -> notifyDataSubscribers
    310:313:void notifyProgressUpdate() -> notifyProgressUpdate
    233:235:boolean setFailure(java.lang.Throwable) -> setFailure
    289:290:boolean setFailureInternal(java.lang.Throwable) -> setFailureInternal
    255:257:boolean setProgress(float) -> setProgress
    299:300:boolean setProgressInternal(float) -> setProgressInternal
    208:210:boolean setResult(java.lang.Object,boolean) -> setResult
    265:283:boolean setResultInternal(java.lang.Object,boolean) -> setResultInternal
    133:147:void subscribe(com.facebook.datasource.DataSubscriber,java.util.concurrent.Executor) -> subscribe
    183:183:boolean wasCancelled() -> wasCancelled
com.facebook.datasource.AbstractDataSource$1 -> com.facebook.datasource.AbstractDataSource$1:
    168:168:void <init>(com.facebook.datasource.AbstractDataSource,boolean,com.facebook.datasource.DataSubscriber,boolean) -> <init>
    171:176:void run() -> run
com.facebook.datasource.AbstractDataSource$2 -> com.facebook.datasource.AbstractDataSource$2:
    314:314:void <init>(com.facebook.datasource.AbstractDataSource,com.facebook.datasource.DataSubscriber) -> <init>
    317:317:void run() -> run
com.facebook.datasource.AbstractDataSource$DataSourceStatus -> com.facebook.datasource.AbstractDataSource$DataSourceStatus:
    33:31:void <clinit>() -> <clinit>
    31:31:void <init>(java.lang.String,int) -> <init>
    31:31:com.facebook.datasource.AbstractDataSource$DataSourceStatus valueOf(java.lang.String) -> valueOf
    31:31:com.facebook.datasource.AbstractDataSource$DataSourceStatus[] values() -> values
com.facebook.datasource.BaseBooleanSubscriber -> com.facebook.datasource.BaseBooleanSubscriber:
    27:27:void <init>() -> <init>
    40:42:void onFailure(com.facebook.datasource.DataSource) -> onFailure
    31:33:void onNewResult(com.facebook.datasource.DataSource) -> onNewResult
com.facebook.datasource.BaseDataSubscriber -> com.facebook.datasource.BaseDataSubscriber:
    36:36:void <init>() -> <init>
    57:59:void onFailure(com.facebook.datasource.DataSource) -> onFailure
    44:49:void onNewResult(com.facebook.datasource.DataSource) -> onNewResult
com.facebook.datasource.DataSources -> com.facebook.datasource.DataSources:
    20:20:void <init>() -> <init>
    36:36:com.facebook.common.internal.Supplier getFailedDataSourceSupplier(java.lang.Throwable) -> getFailedDataSourceSupplier
    24:25:com.facebook.datasource.DataSource immediateFailedDataSource(java.lang.Throwable) -> immediateFailedDataSource
com.facebook.datasource.DataSources$1 -> com.facebook.datasource.DataSources$1:
    36:36:void <init>(java.lang.Throwable) -> <init>
    36:36:java.lang.Object get() -> get
    39:39:com.facebook.datasource.DataSource get() -> get
com.facebook.datasource.DataSources$2 -> com.facebook.datasource.DataSources$2:
    91:91:void onCancellation(com.facebook.datasource.DataSource) -> onCancellation
    82:84:void onFailure(com.facebook.datasource.DataSource) -> onFailure
    68:75:void onNewResult(com.facebook.datasource.DataSource) -> onNewResult
com.facebook.datasource.DataSources$3 -> com.facebook.datasource.DataSources$3:
    99:99:void <init>() -> <init>
    104:104:void execute(java.lang.Runnable) -> execute
com.facebook.datasource.DataSources$ValueHolder -> com.facebook.datasource.DataSources$ValueHolder:
    119:119:void <init>() -> <init>
com.facebook.datasource.FirstAvailableDataSourceSupplier -> com.facebook.datasource.FirstAvailableDataSourceSupplier:
    30:32:void <init>(java.util.List) -> <init>
    26:26:java.util.List access$100(com.facebook.datasource.FirstAvailableDataSourceSupplier) -> access$100
    37:37:com.facebook.datasource.FirstAvailableDataSourceSupplier create(java.util.List) -> create
    55:59:boolean equals(java.lang.Object) -> equals
    25:25:java.lang.Object get() -> get
    42:42:com.facebook.datasource.DataSource get() -> get
    47:47:int hashCode() -> hashCode
    64:66:java.lang.String toString() -> toString
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource -> com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource:
    76:78:void <init>(com.facebook.datasource.FirstAvailableDataSourceSupplier) -> <init>
    70:70:void access$200(com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource,com.facebook.datasource.DataSource) -> access$200
    70:70:void access$300(com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource,com.facebook.datasource.DataSource) -> access$300
    144:145:boolean clearCurrentDataSource(com.facebook.datasource.DataSource) -> clearCurrentDataSource
    99:109:boolean close() -> close
    200:200:void closeSafely(com.facebook.datasource.DataSource) -> closeSafely
    153:153:com.facebook.datasource.DataSource getDataSourceWithResult() -> getDataSourceWithResult
    129:132:com.facebook.common.internal.Supplier getNextSupplier() -> getNextSupplier
    85:86:java.lang.Object getResult() -> getResult
    91:92:boolean hasResult() -> hasResult
    160:173:void maybeSetDataSourceWithResult(com.facebook.datasource.DataSource,boolean) -> maybeSetDataSourceWithResult
    178:185:void onDataSourceFailed(com.facebook.datasource.DataSource) -> onDataSourceFailed
    190:194:void onDataSourceNewResult(com.facebook.datasource.DataSource) -> onDataSourceNewResult
    136:140:boolean setCurrentDataSource(com.facebook.datasource.DataSource) -> setCurrentDataSource
    116:122:boolean startNextDataSource() -> startNextDataSource
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource$InternalDataSubscriber -> com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource$InternalDataSubscriber:
    204:204:void <init>(com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource) -> <init>
    204:204:void <init>(com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource,com.facebook.datasource.FirstAvailableDataSourceSupplier$1) -> <init>
    208:208:void onFailure(com.facebook.datasource.DataSource) -> onFailure
    217:220:void onNewResult(com.facebook.datasource.DataSource) -> onNewResult
    226:227:void onProgressUpdate(com.facebook.datasource.DataSource) -> onProgressUpdate
com.facebook.datasource.IncreasingQualityDataSourceSupplier -> com.facebook.datasource.IncreasingQualityDataSourceSupplier:
    41:44:void <init>(java.util.List,boolean) -> <init>
    35:35:boolean access$000(com.facebook.datasource.IncreasingQualityDataSourceSupplier) -> access$000
    35:35:java.util.List access$100(com.facebook.datasource.IncreasingQualityDataSourceSupplier) -> access$100
    72:72:com.facebook.datasource.IncreasingQualityDataSourceSupplier create(java.util.List,boolean) -> create
    90:94:boolean equals(java.lang.Object) -> equals
    34:34:java.lang.Object get() -> get
    77:77:com.facebook.datasource.DataSource get() -> get
    82:82:int hashCode() -> hashCode
    99:101:java.lang.String toString() -> toString
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource -> com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource:
    116:118:void <init>(com.facebook.datasource.IncreasingQualityDataSourceSupplier) -> <init>
    105:105:void access$200(com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource,int,com.facebook.datasource.DataSource) -> access$200
    105:105:void access$300(com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource,int,com.facebook.datasource.DataSource) -> access$300
    186:199:boolean close() -> close
    275:275:void closeSafely(com.facebook.datasource.DataSource) -> closeSafely
    123:145:void ensureDataSourceInitialized() -> ensureDataSourceInitialized
    155:155:com.facebook.datasource.DataSource getAndClearDataSource(int) -> getAndClearDataSource
    150:150:com.facebook.datasource.DataSource getDataSource(int) -> getDataSource
    160:160:com.facebook.datasource.DataSource getDataSourceWithResult() -> getDataSourceWithResult
    166:171:java.lang.Object getResult() -> getResult
    176:181:boolean hasResult() -> hasResult
    227:229:void maybeSetFailure() -> maybeSetFailure
    239:255:void maybeSetIndexOfDataSourceWithResult(int,com.facebook.datasource.DataSource,boolean) -> maybeSetIndexOfDataSourceWithResult
    219:223:void onDataSourceFailed(int,com.facebook.datasource.DataSource) -> onDataSourceFailed
    209:215:void onDataSourceNewResult(int,com.facebook.datasource.DataSource) -> onDataSourceNewResult
    264:270:com.facebook.datasource.DataSource tryGetAndClearDataSource(int,com.facebook.datasource.DataSource) -> tryGetAndClearDataSource
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource$InternalDataSubscriber -> com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource$InternalDataSubscriber:
    282:283:void <init>(com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource,int) -> <init>
    297:297:void onFailure(com.facebook.datasource.DataSource) -> onFailure
    288:291:void onNewResult(com.facebook.datasource.DataSource) -> onNewResult
    306:307:void onProgressUpdate(com.facebook.datasource.DataSource) -> onProgressUpdate
com.facebook.datasource.RetainingDataSourceSupplier -> com.facebook.datasource.RetainingDataSourceSupplier:
    19:24:void <init>() -> <init>
    18:18:java.lang.Object get() -> get
    28:30:com.facebook.datasource.DataSource get() -> get
com.facebook.datasource.RetainingDataSourceSupplier$RetainingDataSource -> com.facebook.datasource.RetainingDataSourceSupplier$RetainingDataSource:
    43:44:void <init>() -> <init>
    43:43:void <init>(com.facebook.datasource.RetainingDataSourceSupplier$1) -> <init>
    43:43:void access$200(com.facebook.datasource.RetainingDataSourceSupplier$RetainingDataSource,com.facebook.datasource.DataSource) -> access$200
    43:43:void access$300(com.facebook.datasource.RetainingDataSourceSupplier$RetainingDataSource,com.facebook.datasource.DataSource) -> access$300
    43:43:void access$400(com.facebook.datasource.RetainingDataSourceSupplier$RetainingDataSource,com.facebook.datasource.DataSource) -> access$400
    84:92:boolean close() -> close
    115:115:void closeSafely(com.facebook.datasource.DataSource) -> closeSafely
    73:73:java.lang.Object getResult() -> getResult
    78:78:boolean hasResult() -> hasResult
    98:99:void onDataSourceNewResult(com.facebook.datasource.DataSource) -> onDataSourceNewResult
    108:109:void onDatasourceProgress(com.facebook.datasource.DataSource) -> onDatasourceProgress
    50:63:void setSupplier(com.facebook.common.internal.Supplier) -> setSupplier
com.facebook.datasource.RetainingDataSourceSupplier$RetainingDataSource$InternalDataSubscriber -> com.facebook.datasource.RetainingDataSourceSupplier$RetainingDataSource$InternalDataSubscriber:
    119:119:void <init>(com.facebook.datasource.RetainingDataSourceSupplier$RetainingDataSource) -> <init>
    119:119:void <init>(com.facebook.datasource.RetainingDataSourceSupplier$RetainingDataSource,com.facebook.datasource.RetainingDataSourceSupplier$1) -> <init>
    131:131:void onFailure(com.facebook.datasource.DataSource) -> onFailure
    122:125:void onNewResult(com.facebook.datasource.DataSource) -> onNewResult
    139:139:void onProgressUpdate(com.facebook.datasource.DataSource) -> onProgressUpdate
com.facebook.datasource.SimpleDataSource -> com.facebook.datasource.SimpleDataSource:
    17:17:void <init>() -> <init>
    24:24:com.facebook.datasource.SimpleDataSource create() -> create
    71:71:boolean setFailure(java.lang.Throwable) -> setFailure
    52:52:boolean setResult(java.lang.Object) -> setResult
com.facebook.debug.debugoverlay.model.DebugOverlayTag -> com.facebook.debug.debugoverlay.model.DebugOverlayTag:
    25:25:void <init>(java.lang.String,java.lang.String,int) -> <init>
com.facebook.debug.holder.NoopPrinter -> com.facebook.debug.holder.NoopPrinter:
    15:15:void <clinit>() -> <clinit>
    17:17:void <init>() -> <init>
com.facebook.debug.holder.PrinterHolder -> com.facebook.debug.holder.PrinterHolder:
    13:13:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    24:24:com.facebook.debug.holder.Printer getPrinter() -> getPrinter
com.facebook.debug.tags.ReactDebugOverlayTags -> com.facebook.debug.tags.ReactDebugOverlayTags:
    16:37:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
com.facebook.drawee.BuildConfig -> com.facebook.drawee.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.drawee.R -> com.facebook.drawee.R:
    10:10:void <init>() -> <init>
com.facebook.drawee.R$attr -> com.facebook.drawee.R$attr:
    13:13:void <init>() -> <init>
com.facebook.drawee.R$id -> com.facebook.drawee.R$id:
    48:48:void <init>() -> <init>
com.facebook.drawee.R$styleable -> com.facebook.drawee.R$styleable:
    64:94:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
com.facebook.drawee.backends.pipeline.BuildConfig -> com.facebook.drawee.backends.pipeline.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.drawee.backends.pipeline.DefaultDrawableFactory -> com.facebook.drawee.backends.pipeline.DefaultDrawableFactory:
    28:30:void <init>(android.content.res.Resources,com.facebook.imagepipeline.drawable.DrawableFactory) -> <init>
    42:66:android.graphics.drawable.Drawable createDrawable(com.facebook.imagepipeline.image.CloseableImage) -> createDrawable
    81:82:boolean hasTransformableExifOrientation(com.facebook.imagepipeline.image.CloseableStaticBitmap) -> hasTransformableExifOrientation
    74:75:boolean hasTransformableRotationAngle(com.facebook.imagepipeline.image.CloseableStaticBitmap) -> hasTransformableRotationAngle
com.facebook.drawee.backends.pipeline.DraweeConfig -> com.facebook.drawee.backends.pipeline.DraweeConfig:
    44:44:com.facebook.common.internal.ImmutableList getCustomDrawableFactories() -> getCustomDrawableFactories
    62:62:com.facebook.common.internal.Supplier getDebugOverlayEnabledSupplier() -> getDebugOverlayEnabledSupplier
    54:54:com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener getImagePerfDataListener() -> getImagePerfDataListener
    49:49:com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory getPipelineDraweeControllerFactory() -> getPipelineDraweeControllerFactory
com.facebook.drawee.backends.pipeline.DraweeConfig$Builder -> com.facebook.drawee.backends.pipeline.DraweeConfig$Builder:
    65:65:void <init>() -> <init>
com.facebook.drawee.backends.pipeline.Fresco -> com.facebook.drawee.backends.pipeline.Fresco:
    29:29:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    120:120:com.facebook.imagepipeline.core.ImagePipeline getImagePipeline() -> getImagePipeline
    115:115:com.facebook.imagepipeline.core.ImagePipelineFactory getImagePipelineFactory() -> getImagePipelineFactory
    45:45:void initialize(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineConfig) -> initialize
    53:76:void initialize(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineConfig,com.facebook.drawee.backends.pipeline.DraweeConfig) -> initialize
    93:100:void initializeDrawee(android.content.Context,com.facebook.drawee.backends.pipeline.DraweeConfig) -> initializeDrawee
    111:111:com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder newDraweeControllerBuilder() -> newDraweeControllerBuilder
com.facebook.drawee.backends.pipeline.PipelineDraweeController -> com.facebook.drawee.backends.pipeline.PipelineDraweeController:
    60:60:void <clinit>() -> <clinit>
    100:104:void <init>(android.content.res.Resources,com.facebook.drawee.components.DeferredReleaser,com.facebook.imagepipeline.drawable.DrawableFactory,java.util.concurrent.Executor,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.common.internal.ImmutableList) -> <init>
    176:185:void addImageOriginListener(com.facebook.drawee.backends.pipeline.info.ImageOriginListener) -> addImageOriginListener
    162:166:void addRequestListener(com.facebook.imagepipeline.listener.RequestListener) -> addRequestListener
    200:202:void clearImageOriginListeners() -> clearImageOriginListeners
    57:57:android.graphics.drawable.Drawable createDrawable(java.lang.Object) -> createDrawable
    253:279:android.graphics.drawable.Drawable createDrawable(com.facebook.common.references.CloseableReference) -> createDrawable
    57:57:java.lang.Object getCachedImage() -> getCachedImage
    387:403:com.facebook.common.references.CloseableReference getCachedImage() -> getCachedImage
    237:245:com.facebook.datasource.DataSource getDataSource() -> getDataSource
    57:57:int getImageHash(java.lang.Object) -> getImageHash
    370:370:int getImageHash(com.facebook.common.references.CloseableReference) -> getImageHash
    57:57:java.lang.Object getImageInfo(java.lang.Object) -> getImageInfo
    364:365:com.facebook.imagepipeline.image.ImageInfo getImageInfo(com.facebook.common.references.CloseableReference) -> getImageInfo
    222:232:com.facebook.imagepipeline.listener.RequestListener getRequestListener() -> getRequestListener
    206:208:void init(com.facebook.common.internal.Supplier) -> init
    123:134:void initialize(com.facebook.common.internal.Supplier,java.lang.String,com.facebook.cache.common.CacheKey,java.lang.Object,com.facebook.common.internal.ImmutableList,com.facebook.drawee.backends.pipeline.info.ImageOriginListener) -> initialize
    140:150:void initializePerformanceMonitoring(com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener) -> initializePerformanceMonitoring
    289:291:android.graphics.drawable.Drawable maybeCreateDrawableFromFactories(com.facebook.common.internal.ImmutableList,com.facebook.imagepipeline.image.CloseableImage) -> maybeCreateDrawableFromFactories
    315:333:void maybeUpdateDebugOverlay(com.facebook.imagepipeline.image.CloseableImage) -> maybeUpdateDebugOverlay
    57:57:void onImageLoadedFromCacheImmediately(java.lang.String,java.lang.Object) -> onImageLoadedFromCacheImmediately
    411:417:void onImageLoadedFromCacheImmediately(java.lang.String,com.facebook.common.references.CloseableReference) -> onImageLoadedFromCacheImmediately
    380:381:void releaseDrawable(android.graphics.drawable.Drawable) -> releaseDrawable
    57:57:void releaseImage(java.lang.Object) -> releaseImage
    375:375:void releaseImage(com.facebook.common.references.CloseableReference) -> releaseImage
    188:197:void removeImageOriginListener(com.facebook.drawee.backends.pipeline.info.ImageOriginListener) -> removeImageOriginListener
    169:173:void removeRequestListener(com.facebook.imagepipeline.listener.RequestListener) -> removeRequestListener
    158:158:void setCustomDrawableFactories(com.facebook.common.internal.ImmutableList) -> setCustomDrawableFactories
    153:153:void setDrawDebugOverlay(boolean) -> setDrawDebugOverlay
    302:303:void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy) -> setHierarchy
    426:429:java.lang.String toString() -> toString
    343:358:void updateDebugOverlay(com.facebook.imagepipeline.image.CloseableImage,com.facebook.drawee.debug.DebugControllerOverlayDrawable) -> updateDebugOverlay
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder -> com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder:
    58:60:void <init>(android.content.Context,com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory,com.facebook.imagepipeline.core.ImagePipeline,java.util.Set) -> <init>
    183:185:com.facebook.imagepipeline.request.ImageRequest$RequestLevel convertCacheLevelToRequestLevel(com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel) -> convertCacheLevelToRequestLevel
    142:151:com.facebook.cache.common.CacheKey getCacheKey() -> getCacheKey
    39:39:com.facebook.datasource.DataSource getDataSourceForRequest(com.facebook.drawee.interfaces.DraweeController,java.lang.String,java.lang.Object,java.lang.Object,com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel) -> getDataSourceForRequest
    166:166:com.facebook.datasource.DataSource getDataSourceForRequest(com.facebook.drawee.interfaces.DraweeController,java.lang.String,com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel) -> getDataSourceForRequest
    175:176:com.facebook.imagepipeline.listener.RequestListener getRequestListener(com.facebook.drawee.interfaces.DraweeController) -> getRequestListener
    39:39:com.facebook.drawee.controller.AbstractDraweeController obtainController() -> obtainController
    113:136:com.facebook.drawee.backends.pipeline.PipelineDraweeController obtainController() -> obtainController
    107:108:com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder setPerfDataListener(com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener) -> setPerfDataListener
    39:39:com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder setUri(android.net.Uri) -> setUri
    66:71:com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder setUri(android.net.Uri) -> setUri
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder$1 -> com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder$1:
    183:183:void <clinit>() -> <clinit>
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier -> com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier:
    37:37:void <init>(android.content.Context,com.facebook.drawee.backends.pipeline.DraweeConfig) -> <init>
    44:44:void <init>(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineFactory,com.facebook.drawee.backends.pipeline.DraweeConfig) -> <init>
    51:75:void <init>(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineFactory,java.util.Set,com.facebook.drawee.backends.pipeline.DraweeConfig) -> <init>
    21:21:java.lang.Object get() -> get
    80:83:com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder get() -> get
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory -> com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory:
    22:22:void <init>() -> <init>
    40:46:void init(android.content.res.Resources,com.facebook.drawee.components.DeferredReleaser,com.facebook.imagepipeline.drawable.DrawableFactory,java.util.concurrent.Executor,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.common.internal.ImmutableList,com.facebook.common.internal.Supplier) -> init
    71:71:com.facebook.drawee.backends.pipeline.PipelineDraweeController internalCreateController(android.content.res.Resources,com.facebook.drawee.components.DeferredReleaser,com.facebook.imagepipeline.drawable.DrawableFactory,java.util.concurrent.Executor,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.common.internal.ImmutableList) -> internalCreateController
    50:59:com.facebook.drawee.backends.pipeline.PipelineDraweeController newController() -> newController
com.facebook.drawee.backends.pipeline.R -> com.facebook.drawee.backends.pipeline.R:
    10:10:void <init>() -> <init>
com.facebook.drawee.backends.pipeline.R$attr -> com.facebook.drawee.backends.pipeline.R$attr:
    13:13:void <init>() -> <init>
com.facebook.drawee.backends.pipeline.R$id -> com.facebook.drawee.backends.pipeline.R$id:
    48:48:void <init>() -> <init>
com.facebook.drawee.backends.pipeline.R$styleable -> com.facebook.drawee.backends.pipeline.R$styleable:
    64:94:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener -> com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener:
    15:17:void <init>() -> <init>
    26:26:java.lang.String getImageOrigin() -> getImageOrigin
    22:22:void onImageLoaded(java.lang.String,int,boolean,java.lang.String) -> onImageLoaded
com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener -> com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener:
    25:27:void <init>(com.facebook.drawee.backends.pipeline.info.ImageOriginListener[]) -> <init>
    31:32:void addImageOriginListener(com.facebook.drawee.backends.pipeline.info.ImageOriginListener) -> addImageOriginListener
    41:52:void onImageLoaded(java.lang.String,int,boolean,java.lang.String) -> onImageLoaded
    35:36:void removeImageOriginListener(com.facebook.drawee.backends.pipeline.info.ImageOriginListener) -> removeImageOriginListener
com.facebook.drawee.backends.pipeline.info.ForwardingImagePerfDataListener -> com.facebook.drawee.backends.pipeline.info.ForwardingImagePerfDataListener:
    22:23:void onImageLoadStatusUpdated(com.facebook.drawee.backends.pipeline.info.ImagePerfData,int) -> onImageLoadStatusUpdated
    30:31:void onImageVisibilityUpdated(com.facebook.drawee.backends.pipeline.info.ImagePerfData,int) -> onImageVisibilityUpdated
com.facebook.drawee.backends.pipeline.info.ImageOriginRequestListener -> com.facebook.drawee.backends.pipeline.info.ImageOriginRequestListener:
    22:24:void <init>(java.lang.String,com.facebook.drawee.backends.pipeline.info.ImageOriginListener) -> <init>
    33:33:void init(java.lang.String) -> init
    39:40:void onUltimateProducerReached(java.lang.String,java.lang.String,boolean) -> onUltimateProducerReached
com.facebook.drawee.backends.pipeline.info.ImageOriginUtils -> com.facebook.drawee.backends.pipeline.info.ImageOriginUtils:
    79:79:void <init>() -> <init>
    48:48:int mapProducerNameToImageOrigin(java.lang.String) -> mapProducerNameToImageOrigin
com.facebook.drawee.backends.pipeline.info.ImagePerfData -> com.facebook.drawee.backends.pipeline.info.ImagePerfData:
    67:67:void <init>(java.lang.String,java.lang.String,com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.image.ImageInfo,long,long,long,long,long,long,long,int,java.lang.String,boolean,int,int,int,long,long,java.lang.String) -> <init>
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor -> com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor:
    38:41:void <init>(com.facebook.common.time.MonotonicClock,com.facebook.drawee.backends.pipeline.PipelineDraweeController) -> <init>
    74:77:void addImagePerfDataListener(com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener) -> addImagePerfDataListener
    120:124:void addViewportData() -> addViewportData
    88:89:void clearImagePerfDataListeners() -> clearImagePerfDataListeners
    109:115:void notifyListenersOfVisibilityStateUpdate(com.facebook.drawee.backends.pipeline.info.ImagePerfState,int) -> notifyListenersOfVisibilityStateUpdate
    94:103:void notifyStatusUpdated(com.facebook.drawee.backends.pipeline.info.ImagePerfState,int) -> notifyStatusUpdated
    153:155:void reset() -> reset
    45:65:void setEnabled(boolean) -> setEnabled
    129:147:void setupListeners() -> setupListeners
com.facebook.drawee.backends.pipeline.info.ImagePerfState -> com.facebook.drawee.backends.pipeline.info.ImagePerfState:
    15:49:void <init>() -> <init>
    89:89:int getImageLoadStatus() -> getImageLoadStatus
    54:80:void reset() -> reset
    105:105:void setCallerContext(java.lang.Object) -> setCallerContext
    125:125:void setControllerCancelTimeMs(long) -> setControllerCancelTimeMs
    121:121:void setControllerFailureTimeMs(long) -> setControllerFailureTimeMs
    117:117:void setControllerFinalImageSetTimeMs(long) -> setControllerFinalImageSetTimeMs
    93:93:void setControllerId(java.lang.String) -> setControllerId
    113:113:void setControllerIntermediateImageSetTimeMs(long) -> setControllerIntermediateImageSetTimeMs
    109:109:void setControllerSubmitTimeMs(long) -> setControllerSubmitTimeMs
    157:157:void setImageInfo(com.facebook.imagepipeline.image.ImageInfo) -> setImageInfo
    84:84:void setImageLoadStatus(int) -> setImageLoadStatus
    145:145:void setImageOrigin(int) -> setImageOrigin
    101:101:void setImageRequest(com.facebook.imagepipeline.request.ImageRequest) -> setImageRequest
    133:133:void setImageRequestEndTimeMs(long) -> setImageRequestEndTimeMs
    129:129:void setImageRequestStartTimeMs(long) -> setImageRequestStartTimeMs
    141:141:void setInvisibilityEventTimeMs(long) -> setInvisibilityEventTimeMs
    165:165:void setOnScreenHeight(int) -> setOnScreenHeight
    161:161:void setOnScreenWidth(int) -> setOnScreenWidth
    153:153:void setPrefetch(boolean) -> setPrefetch
    97:97:void setRequestId(java.lang.String) -> setRequestId
    149:149:void setUltimateProducerName(java.lang.String) -> setUltimateProducerName
    137:137:void setVisibilityEventTimeMs(long) -> setVisibilityEventTimeMs
    169:169:void setVisible(boolean) -> setVisible
    177:177:com.facebook.drawee.backends.pipeline.info.ImagePerfData snapshot() -> snapshot
com.facebook.drawee.backends.pipeline.info.ImagePerfUtils -> com.facebook.drawee.backends.pipeline.info.ImagePerfUtils:
    30:30:void <init>() -> <init>
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener -> com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener:
    27:30:void <init>(com.facebook.common.time.MonotonicClock,com.facebook.drawee.backends.pipeline.info.ImagePerfState,com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor) -> <init>
    71:78:void onFailure(java.lang.String,java.lang.Throwable) -> onFailure
    20:20:void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable) -> onFinalImageSet
    59:66:void onFinalImageSet(java.lang.String,com.facebook.imagepipeline.image.ImageInfo,android.graphics.drawable.Animatable) -> onFinalImageSet
    20:20:void onIntermediateImageSet(java.lang.String,java.lang.Object) -> onIntermediateImageSet
    47:53:void onIntermediateImageSet(java.lang.String,com.facebook.imagepipeline.image.ImageInfo) -> onIntermediateImageSet
    83:95:void onRelease(java.lang.String) -> onRelease
    35:42:void onSubmit(java.lang.String,java.lang.Object) -> onSubmit
    109:112:void reportViewInvisible(long) -> reportViewInvisible
    100:103:void reportViewVisible(long) -> reportViewVisible
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfImageOriginListener -> com.facebook.drawee.backends.pipeline.info.internal.ImagePerfImageOriginListener:
    21:23:void <init>(com.facebook.drawee.backends.pipeline.info.ImagePerfState,com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor) -> <init>
    32:34:void onImageLoaded(java.lang.String,int,boolean,java.lang.String) -> onImageLoaded
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener -> com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener:
    19:21:void <init>(com.facebook.common.time.MonotonicClock,com.facebook.drawee.backends.pipeline.info.ImagePerfState) -> <init>
    56:58:void onRequestCancellation(java.lang.String) -> onRequestCancellation
    47:51:void onRequestFailure(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.Throwable,boolean) -> onRequestFailure
    27:32:void onRequestStart(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,java.lang.String,boolean) -> onRequestStart
    37:41:void onRequestSuccess(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,boolean) -> onRequestSuccess
com.facebook.drawee.components.DeferredReleaser -> com.facebook.drawee.components.DeferredReleaser:
    50:52:void <init>() -> <init>
    32:32:void access$000() -> access$000
    32:32:java.util.Set access$100(com.facebook.drawee.components.DeferredReleaser) -> access$100
    95:96:void cancelDeferredRelease(com.facebook.drawee.components.DeferredReleaser$Releasable) -> cancelDeferredRelease
    100:100:void ensureOnUiThread() -> ensureOnUiThread
    37:40:com.facebook.drawee.components.DeferredReleaser getInstance() -> getInstance
    78:86:void scheduleDeferredRelease(com.facebook.drawee.components.DeferredReleaser$Releasable) -> scheduleDeferredRelease
com.facebook.drawee.components.DeferredReleaser$1 -> com.facebook.drawee.components.DeferredReleaser$1:
    59:59:void <init>(com.facebook.drawee.components.DeferredReleaser) -> <init>
    62:66:void run() -> run
com.facebook.drawee.components.DraweeEventTracker -> com.facebook.drawee.components.DraweeEventTracker:
    23:25:void <clinit>() -> <clinit>
    54:20:void <init>() -> <init>
    58:58:com.facebook.drawee.components.DraweeEventTracker newInstance() -> newInstance
    69:75:void recordEvent(com.facebook.drawee.components.DraweeEventTracker$Event) -> recordEvent
    80:80:java.lang.String toString() -> toString
com.facebook.drawee.components.DraweeEventTracker$Event -> com.facebook.drawee.components.DraweeEventTracker$Event:
    28:27:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int) -> <init>
    27:27:com.facebook.drawee.components.DraweeEventTracker$Event valueOf(java.lang.String) -> valueOf
    27:27:com.facebook.drawee.components.DraweeEventTracker$Event[] values() -> values
com.facebook.drawee.components.RetryManager -> com.facebook.drawee.components.RetryManager:
    20:21:void <init>() -> <init>
    32:34:void init() -> init
    62:62:void notifyTapToRetry() -> notifyTapToRetry
    42:42:void reset() -> reset
    50:50:void setTapToRetryEnabled(boolean) -> setTapToRetryEnabled
    58:58:boolean shouldRetryOnTap() -> shouldRetryOnTap
com.facebook.drawee.controller.AbstractDraweeController -> com.facebook.drawee.controller.AbstractDraweeController:
    69:69:void <clinit>() -> <clinit>
    106:109:void <init>(com.facebook.drawee.components.DeferredReleaser,java.util.concurrent.Executor,java.lang.String,java.lang.Object) -> <init>
    44:44:void access$000(com.facebook.drawee.controller.AbstractDraweeController,java.lang.String,com.facebook.datasource.DataSource,java.lang.Object,float,boolean,boolean,boolean) -> access$000
    44:44:void access$100(com.facebook.drawee.controller.AbstractDraweeController,java.lang.String,com.facebook.datasource.DataSource,java.lang.Throwable,boolean) -> access$100
    44:44:void access$200(com.facebook.drawee.controller.AbstractDraweeController,java.lang.String,com.facebook.datasource.DataSource,float,boolean) -> access$200
    260:273:void addControllerListener(com.facebook.drawee.controller.ControllerListener) -> addControllerListener
    692:692:android.graphics.drawable.Animatable getAnimatable() -> getAnimatable
    290:291:com.facebook.drawee.controller.ControllerListener getControllerListener() -> getControllerListener
    355:355:android.graphics.drawable.Drawable getControllerOverlay() -> getControllerOverlay
    230:230:com.facebook.drawee.gestures.GestureDetector getGestureDetector() -> getGestureDetector
    306:306:com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy() -> getHierarchy
    212:212:java.lang.String getId() -> getId
    702:702:java.lang.String getImageClass(java.lang.Object) -> getImageClass
    706:706:int getImageHash(java.lang.Object) -> getImageHash
    222:225:com.facebook.drawee.components.RetryManager getRetryManager() -> getRetryManager
    125:168:void init(java.lang.String,java.lang.Object) -> init
    120:121:void initialize(java.lang.String,java.lang.Object) -> initialize
    655:662:boolean isExpectedDataSource(java.lang.String,com.facebook.datasource.DataSource) -> isExpectedDataSource
    679:680:void logMessageAndFailure(java.lang.String,java.lang.Throwable) -> logMessageAndFailure
    666:667:void logMessageAndImage(java.lang.String,java.lang.Object) -> logMessageAndImage
    360:379:void onAttach() -> onAttach
    440:446:boolean onClick() -> onClick
    385:395:void onDetach() -> onDetach
    599:634:void onFailureInternal(java.lang.String,com.facebook.datasource.DataSource,java.lang.Throwable,boolean) -> onFailureInternal
    537:592:void onNewResultInternal(java.lang.String,com.facebook.datasource.DataSource,java.lang.Object,float,boolean,boolean,boolean) -> onNewResultInternal
    644:650:void onProgressUpdateInternal(java.lang.String,com.facebook.datasource.DataSource,float,boolean) -> onProgressUpdateInternal
    414:421:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    172:182:void release() -> release
    186:206:void releaseFetch() -> releaseFetch
    278:284:void removeControllerListener(com.facebook.drawee.controller.ControllerListener) -> removeControllerListener
    255:255:void setContentDescription(java.lang.String) -> setContentDescription
    347:349:void setControllerOverlay(android.graphics.drawable.Drawable) -> setControllerOverlay
    235:237:void setGestureDetector(com.facebook.drawee.gestures.GestureDetector) -> setGestureDetector
    317:341:void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy) -> setHierarchy
    243:243:void setRetainImageOnFailure(boolean) -> setRetainImageOnFailure
    429:429:boolean shouldHandleGesture() -> shouldHandleGesture
    435:435:boolean shouldRetryOnTap() -> shouldRetryOnTap
    453:524:void submitRequest() -> submitRequest
    715:721:java.lang.String toString() -> toString
com.facebook.drawee.controller.AbstractDraweeController$1 -> com.facebook.drawee.controller.AbstractDraweeController$1:
    493:493:void <init>(com.facebook.drawee.controller.AbstractDraweeController,java.lang.String,boolean) -> <init>
    512:512:void onFailureImpl(com.facebook.datasource.DataSource) -> onFailureImpl
    498:506:void onNewResultImpl(com.facebook.datasource.DataSource) -> onNewResultImpl
    517:519:void onProgressUpdate(com.facebook.datasource.DataSource) -> onProgressUpdate
com.facebook.drawee.controller.AbstractDraweeController$InternalForwardingListener -> com.facebook.drawee.controller.AbstractDraweeController$InternalForwardingListener:
    53:53:void <init>() -> <init>
    56:63:com.facebook.drawee.controller.AbstractDraweeController$InternalForwardingListener createInternal(com.facebook.drawee.controller.ControllerListener,com.facebook.drawee.controller.ControllerListener) -> createInternal
com.facebook.drawee.controller.AbstractDraweeControllerBuilder -> com.facebook.drawee.controller.AbstractDraweeControllerBuilder:
    40:73:void <clinit>() -> <clinit>
    77:80:void <init>(android.content.Context,java.util.Set) -> <init>
    33:33:com.facebook.drawee.interfaces.DraweeController build() -> build
    287:295:com.facebook.drawee.controller.AbstractDraweeController build() -> build
    311:321:com.facebook.drawee.controller.AbstractDraweeController buildController() -> buildController
    328:328:java.lang.String generateUniqueControllerId() -> generateUniqueControllerId
    114:114:java.lang.Object getCallerContext() -> getCallerContext
    268:268:java.lang.String getContentDescription() -> getContentDescription
    256:256:com.facebook.drawee.controller.ControllerViewportVisibilityListener getControllerViewportVisibilityListener() -> getControllerViewportVisibilityListener
    388:388:com.facebook.common.internal.Supplier getDataSourceSupplierForRequest(com.facebook.drawee.interfaces.DraweeController,java.lang.String,java.lang.Object) -> getDataSourceSupplierForRequest
    398:399:com.facebook.common.internal.Supplier getDataSourceSupplierForRequest(com.facebook.drawee.interfaces.DraweeController,java.lang.String,java.lang.Object,com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel) -> getDataSourceSupplierForRequest
    370:382:com.facebook.common.internal.Supplier getFirstAvailableDataSourceSupplier(com.facebook.drawee.interfaces.DraweeController,java.lang.String,java.lang.Object[],boolean) -> getFirstAvailableDataSourceSupplier
    126:126:java.lang.Object getImageRequest() -> getImageRequest
    281:281:com.facebook.drawee.interfaces.DraweeController getOldController() -> getOldController
    219:219:boolean getRetainImageOnFailure() -> getRetainImageOnFailure
    85:95:void init() -> init
    415:424:void maybeAttachListeners(com.facebook.drawee.controller.AbstractDraweeController) -> maybeAttachListeners
    439:442:void maybeBuildAndSetGestureDetector(com.facebook.drawee.controller.AbstractDraweeController) -> maybeBuildAndSetGestureDetector
    430:434:void maybeBuildAndSetRetryManager(com.facebook.drawee.controller.AbstractDraweeController) -> maybeBuildAndSetRetryManager
    334:359:com.facebook.common.internal.Supplier obtainDataSourceSupplier(com.facebook.drawee.interfaces.DraweeController,java.lang.String) -> obtainDataSourceSupplier
    100:101:com.facebook.drawee.controller.AbstractDraweeControllerBuilder reset() -> reset
    224:225:com.facebook.drawee.controller.AbstractDraweeControllerBuilder setAutoPlayAnimations(boolean) -> setAutoPlayAnimations
    107:108:com.facebook.drawee.controller.AbstractDraweeControllerBuilder setCallerContext(java.lang.Object) -> setCallerContext
    236:237:com.facebook.drawee.controller.AbstractDraweeControllerBuilder setControllerListener(com.facebook.drawee.controller.ControllerListener) -> setControllerListener
    119:120:com.facebook.drawee.controller.AbstractDraweeControllerBuilder setImageRequest(java.lang.Object) -> setImageRequest
    131:132:com.facebook.drawee.controller.AbstractDraweeControllerBuilder setLowResImageRequest(java.lang.Object) -> setLowResImageRequest
    33:33:com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder setOldController(com.facebook.drawee.interfaces.DraweeController) -> setOldController
    274:275:com.facebook.drawee.controller.AbstractDraweeControllerBuilder setOldController(com.facebook.drawee.interfaces.DraweeController) -> setOldController
    300:303:void validate() -> validate
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$1 -> com.facebook.drawee.controller.AbstractDraweeControllerBuilder$1:
    41:41:void <init>() -> <init>
    45:45:void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable) -> onFinalImageSet
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$2 -> com.facebook.drawee.controller.AbstractDraweeControllerBuilder$2:
    399:399:void <init>(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.drawee.interfaces.DraweeController,java.lang.String,java.lang.Object,java.lang.Object,com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel) -> <init>
    399:399:java.lang.Object get() -> get
    402:402:com.facebook.datasource.DataSource get() -> get
    408:408:java.lang.String toString() -> toString
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel -> com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel:
    478:476:void <clinit>() -> <clinit>
    476:476:void <init>(java.lang.String,int) -> <init>
    476:476:com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel valueOf(java.lang.String) -> valueOf
    476:476:com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel[] values() -> values
com.facebook.drawee.controller.BaseControllerListener -> com.facebook.drawee.controller.BaseControllerListener:
    18:18:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    24:24:com.facebook.drawee.controller.ControllerListener getNoOpListener() -> getNoOpListener
com.facebook.drawee.controller.ForwardingControllerListener -> com.facebook.drawee.controller.ForwardingControllerListener:
    27:25:void <init>() -> <init>
    50:51:void addListener(com.facebook.drawee.controller.ControllerListener) -> addListener
    61:62:void clearListeners() -> clearListeners
    65:66:void onException(java.lang.String,java.lang.Throwable) -> onException
    137:149:void onFailure(java.lang.String,java.lang.Throwable) -> onFailure
    89:101:void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable) -> onFinalImageSet
    121:130:void onIntermediateImageFailed(java.lang.String,java.lang.Throwable) -> onIntermediateImageFailed
    105:114:void onIntermediateImageSet(java.lang.String,java.lang.Object) -> onIntermediateImageSet
    153:165:void onRelease(java.lang.String) -> onRelease
    70:82:void onSubmit(java.lang.String,java.lang.Object) -> onSubmit
    54:58:void removeListener(com.facebook.drawee.controller.ControllerListener) -> removeListener
com.facebook.drawee.debug.DebugControllerOverlayDrawable -> com.facebook.drawee.debug.DebugControllerOverlayDrawable:
    90:91:void <init>() -> <init>
    261:265:void addDebugText(android.graphics.Canvas,java.lang.String,java.lang.Object[]) -> addDebugText
    273:315:int determineOverlayColor(int,int,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> determineOverlayColor
    179:224:void draw(android.graphics.Canvas) -> draw
    169:174:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    334:335:void onFinalImageSet(long) -> onFinalImageSet
    245:254:void prepareDebugTextParameters(android.graphics.Rect,int,int) -> prepareDebugTextParameters
    95:105:void reset() -> reset
    121:122:void setControllerId(java.lang.String) -> setControllerId
    131:133:void setDimensions(int,int) -> setDimensions
    152:152:void setImageSize(int) -> setImageSize
    143:144:void setOrigin(java.lang.String) -> setOrigin
    164:164:void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setScaleType
com.facebook.drawee.debug.listener.ImageLoadingTimeControllerListener -> com.facebook.drawee.debug.listener.ImageLoadingTimeControllerListener:
    26:27:void <init>(com.facebook.drawee.debug.listener.ImageLoadingTimeListener) -> <init>
    38:40:void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable) -> onFinalImageSet
    32:32:void onSubmit(java.lang.String,java.lang.Object) -> onSubmit
com.facebook.drawee.drawable.ArrayDrawable -> com.facebook.drawee.drawable.ArrayDrawable:
    53:59:void <init>(android.graphics.drawable.Drawable[]) -> <init>
    303:303:com.facebook.drawee.drawable.DrawableParent createDrawableParentForIndex(int) -> createDrawableParentForIndex
    179:182:void draw(android.graphics.Canvas) -> draw
    77:79:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    294:299:com.facebook.drawee.drawable.DrawableParent getDrawableParentForIndex(int) -> getDrawableParentForIndex
    121:124:int getIntrinsicHeight() -> getIntrinsicHeight
    109:112:int getIntrinsicWidth() -> getIntrinsicWidth
    67:67:int getNumberOfLayers() -> getNumberOfLayers
    221:228:int getOpacity() -> getOpacity
    189:201:boolean getPadding(android.graphics.Rect) -> getPadding
    358:361:void getRootBounds(android.graphics.RectF) -> getRootBounds
    349:352:void getTransform(android.graphics.Matrix) -> getTransform
    322:322:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    142:150:boolean isStateful() -> isStateful
    209:215:android.graphics.drawable.Drawable mutate() -> mutate
    132:135:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    168:170:boolean onLevelChange(int) -> onLevelChange
    156:158:boolean onStateChange(int[]) -> onStateChange
    327:327:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    236:240:void setAlpha(int) -> setAlpha
    247:251:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    258:262:void setDither(boolean) -> setDither
    85:100:android.graphics.drawable.Drawable setDrawable(int,android.graphics.drawable.Drawable) -> setDrawable
    269:273:void setFilterBitmap(boolean) -> setFilterBitmap
    368:371:void setHotspot(float,float) -> setHotspot
    340:340:void setTransformCallback(com.facebook.drawee.drawable.TransformCallback) -> setTransformCallback
    280:284:boolean setVisible(boolean,boolean) -> setVisible
    332:332:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
com.facebook.drawee.drawable.ArrayDrawable$1 -> com.facebook.drawee.drawable.ArrayDrawable$1:
    303:303:void <init>(com.facebook.drawee.drawable.ArrayDrawable,int) -> <init>
    311:311:android.graphics.drawable.Drawable getDrawable() -> getDrawable
    306:306:android.graphics.drawable.Drawable setDrawable(android.graphics.drawable.Drawable) -> setDrawable
com.facebook.drawee.drawable.AutoRotateDrawable -> com.facebook.drawee.drawable.AutoRotateDrawable:
    44:44:void <init>(android.graphics.drawable.Drawable,int) -> <init>
    55:57:void <init>(android.graphics.drawable.Drawable,int,boolean) -> <init>
    80:94:void draw(android.graphics.Canvas) -> draw
    128:128:int getIncrement() -> getIncrement
    99:101:void run() -> run
    121:123:void scheduleNextFrame() -> scheduleNextFrame
com.facebook.drawee.drawable.DrawableProperties -> com.facebook.drawee.drawable.DrawableProperties:
    18:26:void <init>() -> <init>
    50:60:void applyTo(android.graphics.drawable.Drawable) -> applyTo
    29:29:void setAlpha(int) -> setAlpha
    33:34:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    38:38:void setDither(boolean) -> setDither
    42:42:void setFilterBitmap(boolean) -> setFilterBitmap
com.facebook.drawee.drawable.DrawableUtils -> com.facebook.drawee.drawable.DrawableUtils:
    17:17:void <init>() -> <init>
    44:48:void copyProperties(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> copyProperties
    77:79:void setCallbacks(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable$Callback,com.facebook.drawee.drawable.TransformCallback) -> setCallbacks
    62:62:void setDrawableProperties(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.DrawableProperties) -> setDrawableProperties
com.facebook.drawee.drawable.FadeDrawable -> com.facebook.drawee.drawable.FadeDrawable:
    85:85:void <init>(android.graphics.drawable.Drawable[]) -> <init>
    97:107:void <init>(android.graphics.drawable.Drawable[],boolean) -> <init>
    121:121:void beginBatchMode() -> beginBatchMode
    300:332:void draw(android.graphics.Canvas) -> draw
    338:341:void drawDrawableWithAlpha(android.graphics.Canvas,android.graphics.drawable.Drawable,int) -> drawDrawableWithAlpha
    128:129:void endBatchMode() -> endBatchMode
    196:198:void fadeInAllLayers() -> fadeInAllLayers
    177:179:void fadeInLayer(int) -> fadeInLayer
    187:189:void fadeOutLayer(int) -> fadeOutLayer
    260:264:void finishTransitionImmediately() -> finishTransitionImmediately
    354:354:int getAlpha() -> getAlpha
    363:363:long getCurrentTimeMs() -> getCurrentTimeMs
    112:113:void invalidateSelf() -> invalidateSelf
    155:161:void resetInternal() -> resetInternal
    347:349:void setAlpha(int) -> setAlpha
    136:139:void setTransitionDuration(int) -> setTransitionDuration
    274:288:boolean updateAlphas(float) -> updateAlphas
com.facebook.drawee.drawable.ForwardingDrawable -> com.facebook.drawee.drawable.ForwardingDrawable:
    44:44:void <clinit>() -> <clinit>
    51:53:void <init>(android.graphics.drawable.Drawable) -> <init>
    184:185:void draw(android.graphics.Canvas) -> draw
    148:152:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    227:227:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    239:239:android.graphics.drawable.Drawable getDrawable() -> getDrawable
    200:204:int getIntrinsicHeight() -> getIntrinsicHeight
    191:195:int getIntrinsicWidth() -> getIntrinsicWidth
    90:94:int getOpacity() -> getOpacity
    209:213:boolean getPadding(android.graphics.Rect) -> getPadding
    269:272:void getParentTransform(android.graphics.Matrix) -> getParentTransform
    283:286:void getRootBounds(android.graphics.RectF) -> getRootBounds
    278:278:void getTransform(android.graphics.Matrix) -> getTransform
    246:246:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    157:161:boolean isStateful() -> isStateful
    218:219:android.graphics.drawable.Drawable mutate() -> mutate
    141:142:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    175:179:boolean onLevelChange(int) -> onLevelChange
    166:170:boolean onStateChange(int[]) -> onStateChange
    251:251:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    99:101:void setAlpha(int) -> setAlpha
    107:109:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    65:66:android.graphics.drawable.Drawable setCurrent(android.graphics.drawable.Drawable) -> setCurrent
    78:84:android.graphics.drawable.Drawable setCurrentWithoutInvalidate(android.graphics.drawable.Drawable) -> setCurrentWithoutInvalidate
    115:117:void setDither(boolean) -> setDither
    234:234:android.graphics.drawable.Drawable setDrawable(android.graphics.drawable.Drawable) -> setDrawable
    123:125:void setFilterBitmap(boolean) -> setFilterBitmap
    306:307:void setHotspot(float,float) -> setHotspot
    263:263:void setTransformCallback(com.facebook.drawee.drawable.TransformCallback) -> setTransformCallback
    131:136:boolean setVisible(boolean,boolean) -> setVisible
    256:256:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
com.facebook.drawee.drawable.MatrixDrawable -> com.facebook.drawee.drawable.MatrixDrawable:
    101:111:void configureBounds() -> configureBounds
    91:93:void configureBoundsIfUnderlyingChanged() -> configureBoundsIfUnderlyingChanged
    71:80:void draw(android.graphics.Canvas) -> draw
    124:126:void getTransform(android.graphics.Matrix) -> getTransform
    86:87:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    45:46:android.graphics.drawable.Drawable setCurrent(android.graphics.drawable.Drawable) -> setCurrent
com.facebook.drawee.drawable.OrientedDrawable -> com.facebook.drawee.drawable.OrientedDrawable:
    47:50:void <init>(android.graphics.drawable.Drawable,int,int) -> <init>
    58:67:void draw(android.graphics.Canvas) -> draw
    83:86:int getIntrinsicHeight() -> getIntrinsicHeight
    72:75:int getIntrinsicWidth() -> getIntrinsicWidth
    135:137:void getTransform(android.graphics.Matrix) -> getTransform
    94:123:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
com.facebook.drawee.drawable.ProgressBarDrawable -> com.facebook.drawee.drawable.ProgressBarDrawable:
    21:33:void <init>() -> <init>
    149:157:void draw(android.graphics.Canvas) -> draw
    194:203:void drawBar(android.graphics.Canvas,int) -> drawBar
    176:181:void drawHorizontalBar(android.graphics.Canvas,int,int) -> drawHorizontalBar
    185:190:void drawVerticalBar(android.graphics.Canvas,int,int) -> drawVerticalBar
    144:144:int getOpacity() -> getOpacity
    72:73:boolean getPadding(android.graphics.Rect) -> getPadding
    127:128:boolean onLevelChange(int) -> onLevelChange
    134:134:void setAlpha(int) -> setAlpha
    139:139:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.facebook.drawee.drawable.RoundedBitmapDrawable -> com.facebook.drawee.drawable.RoundedBitmapDrawable:
    30:37:void <init>(android.content.res.Resources,android.graphics.Bitmap,android.graphics.Paint) -> <init>
    46:69:void draw(android.graphics.Canvas) -> draw
    109:113:void setAlpha(int) -> setAlpha
    119:120:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    104:104:boolean shouldRound() -> shouldRound
    74:83:void updatePaint() -> updatePaint
com.facebook.drawee.drawable.RoundedColorDrawable -> com.facebook.drawee.drawable.RoundedColorDrawable:
    48:49:void <init>(int) -> <init>
    93:101:void draw(android.graphics.Canvas) -> draw
    59:59:com.facebook.drawee.drawable.RoundedColorDrawable fromColorDrawable(android.graphics.drawable.ColorDrawable) -> fromColorDrawable
    288:288:int getAlpha() -> getAlpha
    309:309:int getOpacity() -> getOpacity
    265:265:boolean getPaintFilterBitmap() -> getPaintFilterBitmap
    87:88:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    275:277:void setAlpha(int) -> setAlpha
    186:194:void setBorder(int,float) -> setBorder
    112:114:void setCircle(boolean) -> setCircle
    165:167:void setColor(int) -> setColor
    212:215:void setPadding(float) -> setPadding
    256:258:void setPaintFilterBitmap(boolean) -> setPaintFilterBitmap
    132:138:void setRadii(float[]) -> setRadii
    154:157:void setRadius(float) -> setRadius
    232:235:void setScaleDownInsideBorders(boolean) -> setScaleDownInsideBorders
    313:345:void updatePath() -> updatePath
com.facebook.drawee.drawable.RoundedCornersDrawable -> com.facebook.drawee.drawable.RoundedCornersDrawable:
    67:59:void <init>(android.graphics.drawable.Drawable) -> <init>
    270:340:void draw(android.graphics.Canvas) -> draw
    227:227:boolean getPaintFilterBitmap() -> getPaintFilterBitmap
    232:233:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    157:160:void setBorder(int,float) -> setBorder
    87:89:void setCircle(boolean) -> setCircle
    141:142:void setOverlayColor(int) -> setOverlayColor
    177:179:void setPadding(float) -> setPadding
    218:220:void setPaintFilterBitmap(boolean) -> setPaintFilterBitmap
    120:126:void setRadii(float[]) -> setRadii
    105:107:void setRadius(float) -> setRadius
    195:197:void setScaleDownInsideBorders(boolean) -> setScaleDownInsideBorders
    237:265:void updatePath() -> updatePath
com.facebook.drawee.drawable.RoundedCornersDrawable$1 -> com.facebook.drawee.drawable.RoundedCornersDrawable$1:
    271:271:void <clinit>() -> <clinit>
com.facebook.drawee.drawable.RoundedCornersDrawable$Type -> com.facebook.drawee.drawable.RoundedCornersDrawable$Type:
    34:28:void <clinit>() -> <clinit>
    28:28:void <init>(java.lang.String,int) -> <init>
    28:28:com.facebook.drawee.drawable.RoundedCornersDrawable$Type valueOf(java.lang.String) -> valueOf
    28:28:com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] values() -> values
com.facebook.drawee.drawable.RoundedDrawable -> com.facebook.drawee.drawable.RoundedDrawable:
    37:38:void <init>(android.graphics.drawable.Drawable) -> <init>
    385:385:void clearColorFilter() -> clearColorFilter
    401:406:void draw(android.graphics.Canvas) -> draw
    391:391:int getAlpha() -> getAlpha
    380:380:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    356:356:int getIntrinsicHeight() -> getIntrinsicHeight
    351:351:int getIntrinsicWidth() -> getIntrinsicWidth
    361:361:int getOpacity() -> getOpacity
    225:225:boolean getPaintFilterBitmap() -> getPaintFilterBitmap
    346:346:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    396:396:void setAlpha(int) -> setAlpha
    146:150:void setBorder(int,float) -> setBorder
    85:87:void setCircle(boolean) -> setCircle
    367:367:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    373:373:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    172:175:void setPadding(float) -> setPadding
    216:218:void setPaintFilterBitmap(boolean) -> setPaintFilterBitmap
    119:130:void setRadii(float[]) -> setRadii
    103:107:void setRadius(float) -> setRadius
    192:195:void setScaleDownInsideBorders(boolean) -> setScaleDownInsideBorders
    231:231:void setTransformCallback(com.facebook.drawee.drawable.TransformCallback) -> setTransformCallback
    341:341:boolean shouldRound() -> shouldRound
    295:332:void updatePath() -> updatePath
    235:290:void updateTransform() -> updateTransform
com.facebook.drawee.drawable.RoundedNinePatchDrawable -> com.facebook.drawee.drawable.RoundedNinePatchDrawable:
    16:16:void <init>(android.graphics.drawable.NinePatchDrawable) -> <init>
    21:36:void draw(android.graphics.Canvas) -> draw
com.facebook.drawee.drawable.ScaleTypeDrawable -> com.facebook.drawee.drawable.ScaleTypeDrawable:
    53:54:void <init>(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> <init>
    172:182:void configureBounds() -> configureBounds
    154:163:void configureBoundsIfUnderlyingChanged() -> configureBoundsIfUnderlyingChanged
    134:143:void draw(android.graphics.Canvas) -> draw
    83:83:com.facebook.drawee.drawable.ScalingUtils$ScaleType getScaleType() -> getScaleType
    219:224:void getTransform(android.graphics.Matrix) -> getTransform
    149:149:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    72:73:android.graphics.drawable.Drawable setCurrent(android.graphics.drawable.Drawable) -> setCurrent
    119:129:void setFocusPoint(android.graphics.PointF) -> setFocusPoint
    91:98:void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setScaleType
com.facebook.drawee.drawable.ScalingUtils -> com.facebook.drawee.drawable.ScalingUtils:
    19:19:void <init>() -> <init>
    116:127:com.facebook.drawee.drawable.ScaleTypeDrawable getActiveScaleTypeDrawable(android.graphics.drawable.Drawable) -> getActiveScaleTypeDrawable
com.facebook.drawee.drawable.ScalingUtils$AbstractScaleType -> com.facebook.drawee.drawable.ScalingUtils$AbstractScaleType:
    139:139:void <init>() -> <init>
    149:151:android.graphics.Matrix getTransform(android.graphics.Matrix,android.graphics.Rect,int,int,float,float) -> getTransform
com.facebook.drawee.drawable.ScalingUtils$InterpolatingScaleType -> com.facebook.drawee.drawable.ScalingUtils$InterpolatingScaleType:
    460:466:void <init>(com.facebook.drawee.drawable.ScalingUtils$ScaleType,com.facebook.drawee.drawable.ScalingUtils$ScaleType,android.graphics.Rect,android.graphics.Rect,android.graphics.PointF,android.graphics.PointF) -> <init>
    525:525:java.lang.Object getState() -> getState
    536:560:android.graphics.Matrix getTransform(android.graphics.Matrix,android.graphics.Rect,int,int,float,float) -> getTransform
    513:513:void setValue(float) -> setValue
    566:566:java.lang.String toString() -> toString
com.facebook.drawee.drawable.ScalingUtils$ScaleType -> com.facebook.drawee.drawable.ScalingUtils$ScaleType:
    35:90:void <clinit>() -> <clinit>
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenter -> com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenter:
    302:302:void <clinit>() -> <clinit>
    300:300:void <init>() -> <init>
    314:316:void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float) -> getTransformImpl
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenterCrop -> com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenterCrop:
    354:354:void <clinit>() -> <clinit>
    352:352:void <init>() -> <init>
    369:377:void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float) -> getTransformImpl
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenterInside -> com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenterInside:
    327:327:void <clinit>() -> <clinit>
    325:325:void <init>() -> <init>
    339:343:void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float) -> getTransformImpl
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitBottomStart -> com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitBottomStart:
    221:221:void <clinit>() -> <clinit>
    219:219:void <init>() -> <init>
    233:237:void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float) -> getTransformImpl
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitCenter -> com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitCenter:
    248:248:void <clinit>() -> <clinit>
    246:246:void <init>() -> <init>
    260:264:void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float) -> getTransformImpl
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitEnd -> com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitEnd:
    275:275:void <clinit>() -> <clinit>
    273:273:void <init>() -> <init>
    287:291:void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float) -> getTransformImpl
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitStart -> com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitStart:
    194:194:void <clinit>() -> <clinit>
    192:192:void <init>() -> <init>
    206:210:void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float) -> getTransformImpl
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitXY -> com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitXY:
    168:168:void <clinit>() -> <clinit>
    166:166:void <init>() -> <init>
    180:183:void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float) -> getTransformImpl
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFocusCrop -> com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFocusCrop:
    388:388:void <clinit>() -> <clinit>
    386:386:void <init>() -> <init>
    403:413:void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float) -> getTransformImpl
com.facebook.drawee.generic.GenericDraweeHierarchy -> com.facebook.drawee.generic.GenericDraweeHierarchy:
    102:162:void <init>(com.facebook.drawee.generic.GenericDraweeHierarchyBuilder) -> <init>
    172:173:android.graphics.drawable.Drawable buildActualImageBranch(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType,android.graphics.PointF,android.graphics.ColorFilter) -> buildActualImageBranch
    181:182:android.graphics.drawable.Drawable buildBranch(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> buildBranch
    214:214:void fadeInLayer(int) -> fadeInLayer
    205:209:void fadeOutBranches() -> fadeOutBranches
    220:220:void fadeOutLayer(int) -> fadeOutLayer
    327:332:com.facebook.drawee.drawable.DrawableParent getParentDrawableAtIndex(int) -> getParentDrawableAtIndex
    584:584:com.facebook.drawee.generic.RoundingParams getRoundingParams() -> getRoundingParams
    357:361:com.facebook.drawee.drawable.ScaleTypeDrawable getScaleTypeDrawableAtIndex(int) -> getScaleTypeDrawableAtIndex
    250:250:android.graphics.drawable.Drawable getTopLevelDrawable() -> getTopLevelDrawable
    255:256:void reset() -> reset
    187:187:void resetActualImages() -> resetActualImages
    191:200:void resetFade() -> resetFade
    387:388:void setActualImageFocusPoint(android.graphics.PointF) -> setActualImageFocusPoint
    393:394:void setActualImageScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setActualImageScaleType
    549:549:void setBackgroundImage(android.graphics.drawable.Drawable) -> setBackgroundImage
    343:347:void setChildDrawableAtIndex(int,android.graphics.drawable.Drawable) -> setChildDrawableAtIndex
    313:313:void setControllerOverlay(android.graphics.drawable.Drawable) -> setControllerOverlay
    377:377:void setFadeDuration(int) -> setFadeDuration
    289:296:void setFailure(java.lang.Throwable) -> setFailure
    261:271:void setImage(android.graphics.drawable.Drawable,float,boolean) -> setImage
    421:422:void setPlaceholderImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setPlaceholderImage
    225:243:void setProgress(float) -> setProgress
    276:284:void setProgress(float,boolean) -> setProgress
    301:308:void setRetry(java.lang.Throwable) -> setRetry
    574:577:void setRoundingParams(com.facebook.drawee.generic.RoundingParams) -> setRoundingParams
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder -> com.facebook.drawee.generic.GenericDraweeHierarchyBuilder:
    34:36:void <clinit>() -> <clinit>
    68:70:void <init>(android.content.res.Resources) -> <init>
    643:644:com.facebook.drawee.generic.GenericDraweeHierarchy build() -> build
    531:531:android.graphics.ColorFilter getActualImageColorFilter() -> getActualImageColorFilter
    513:513:android.graphics.PointF getActualImageFocusPoint() -> getActualImageFocusPoint
    490:490:com.facebook.drawee.drawable.ScalingUtils$ScaleType getActualImageScaleType() -> getActualImageScaleType
    549:549:android.graphics.drawable.Drawable getBackground() -> getBackground
    145:145:int getFadeDuration() -> getFadeDuration
    347:347:android.graphics.drawable.Drawable getFailureImage() -> getFailureImage
    366:366:com.facebook.drawee.drawable.ScalingUtils$ScaleType getFailureImageScaleType() -> getFailureImageScaleType
    585:585:java.util.List getOverlays() -> getOverlays
    195:195:android.graphics.drawable.Drawable getPlaceholderImage() -> getPlaceholderImage
    214:214:com.facebook.drawee.drawable.ScalingUtils$ScaleType getPlaceholderImageScaleType() -> getPlaceholderImageScaleType
    609:609:android.graphics.drawable.Drawable getPressedStateOverlay() -> getPressedStateOverlay
    423:423:android.graphics.drawable.Drawable getProgressBarImage() -> getProgressBarImage
    442:442:com.facebook.drawee.drawable.ScalingUtils$ScaleType getProgressBarImageScaleType() -> getProgressBarImageScaleType
    125:125:android.content.res.Resources getResources() -> getResources
    271:271:android.graphics.drawable.Drawable getRetryImage() -> getRetryImage
    290:290:com.facebook.drawee.drawable.ScalingUtils$ScaleType getRetryImageScaleType() -> getRetryImageScaleType
    628:628:com.facebook.drawee.generic.RoundingParams getRoundingParams() -> getRoundingParams
    81:106:void init() -> init
    74:74:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder newInstance(android.content.res.Resources) -> newInstance
    619:619:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setRoundingParams(com.facebook.drawee.generic.RoundingParams) -> setRoundingParams
    632:634:void validate() -> validate
com.facebook.drawee.generic.GenericDraweeHierarchyInflater -> com.facebook.drawee.generic.GenericDraweeHierarchyInflater:
    61:61:void <init>() -> <init>
com.facebook.drawee.generic.RootDrawable -> com.facebook.drawee.generic.RootDrawable:
    46:38:void <init>(android.graphics.drawable.Drawable) -> <init>
    75:84:void draw(android.graphics.Canvas) -> draw
    89:90:void setControllerOverlay(android.graphics.drawable.Drawable) -> setControllerOverlay
    61:61:void setVisibilityCallback(com.facebook.drawee.drawable.VisibilityCallback) -> setVisibilityCallback
    66:69:boolean setVisible(boolean,boolean) -> setVisible
com.facebook.drawee.generic.RoundingParams -> com.facebook.drawee.generic.RoundingParams:
    20:54:void <init>() -> <init>
    291:329:boolean equals(java.lang.Object) -> equals
    175:175:com.facebook.drawee.generic.RoundingParams fromCornersRadius(float) -> fromCornersRadius
    219:219:int getBorderColor() -> getBorderColor
    205:205:float getBorderWidth() -> getBorderWidth
    126:126:float[] getCornersRadii() -> getCornersRadii
    162:165:float[] getOrCreateRoundedCornersRadii() -> getOrCreateRoundedCornersRadii
    158:158:int getOverlayColor() -> getOverlayColor
    246:246:float getPadding() -> getPadding
    283:283:boolean getPaintFilterBitmap() -> getPaintFilterBitmap
    69:69:boolean getRoundAsCircle() -> getRoundAsCircle
    142:142:com.facebook.drawee.generic.RoundingParams$RoundingMethod getRoundingMethod() -> getRoundingMethod
    263:263:boolean getScaleDownInsideBorders() -> getScaleDownInsideBorders
    334:342:int hashCode() -> hashCode
    228:230:com.facebook.drawee.generic.RoundingParams setBorder(int,float) -> setBorder
    97:101:com.facebook.drawee.generic.RoundingParams setCornersRadii(float,float,float,float) -> setCornersRadii
    79:79:com.facebook.drawee.generic.RoundingParams setCornersRadius(float) -> setCornersRadius
    151:152:com.facebook.drawee.generic.RoundingParams setOverlayColor(int) -> setOverlayColor
    136:136:com.facebook.drawee.generic.RoundingParams setRoundingMethod(com.facebook.drawee.generic.RoundingParams$RoundingMethod) -> setRoundingMethod
com.facebook.drawee.generic.RoundingParams$RoundingMethod -> com.facebook.drawee.generic.RoundingParams$RoundingMethod:
    31:22:void <clinit>() -> <clinit>
    22:22:void <init>(java.lang.String,int) -> <init>
    22:22:com.facebook.drawee.generic.RoundingParams$RoundingMethod valueOf(java.lang.String) -> valueOf
    22:22:com.facebook.drawee.generic.RoundingParams$RoundingMethod[] values() -> values
com.facebook.drawee.generic.WrappingUtils -> com.facebook.drawee.generic.WrappingUtils:
    54:54:void <clinit>() -> <clinit>
    36:36:void <init>() -> <init>
    299:321:android.graphics.drawable.Drawable applyLeafRounding(android.graphics.drawable.Drawable,com.facebook.drawee.generic.RoundingParams,android.content.res.Resources) -> applyLeafRounding
    330:335:void applyRoundingParams(com.facebook.drawee.drawable.Rounded,com.facebook.drawee.generic.RoundingParams) -> applyRoundingParams
    355:359:com.facebook.drawee.drawable.DrawableParent findDrawableParentForLeaf(com.facebook.drawee.drawable.DrawableParent) -> findDrawableParentForLeaf
    263:282:android.graphics.drawable.Drawable maybeApplyLeafRounding(android.graphics.drawable.Drawable,com.facebook.drawee.generic.RoundingParams,android.content.res.Resources) -> maybeApplyLeafRounding
    225:239:android.graphics.drawable.Drawable maybeWrapWithRoundedOverlayColor(android.graphics.drawable.Drawable,com.facebook.drawee.generic.RoundingParams) -> maybeWrapWithRoundedOverlayColor
    68:68:android.graphics.drawable.Drawable maybeWrapWithScaleType(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> maybeWrapWithScaleType
    85:90:android.graphics.drawable.Drawable maybeWrapWithScaleType(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType,android.graphics.PointF) -> maybeWrapWithScaleType
    342:347:void resetRoundingParams(com.facebook.drawee.drawable.Rounded) -> resetRoundingParams
    191:208:void updateLeafRounding(com.facebook.drawee.drawable.DrawableParent,com.facebook.drawee.generic.RoundingParams,android.content.res.Resources) -> updateLeafRounding
    149:171:void updateOverlayColorRounding(com.facebook.drawee.drawable.DrawableParent,com.facebook.drawee.generic.RoundingParams) -> updateOverlayColorRounding
    126:130:com.facebook.drawee.drawable.ScaleTypeDrawable wrapChildWithScaleType(com.facebook.drawee.drawable.DrawableParent,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> wrapChildWithScaleType
com.facebook.drawee.gestures.GestureDetector -> com.facebook.drawee.gestures.GestureDetector:
    43:46:void <init>(android.content.Context) -> <init>
    56:57:void init() -> init
    76:76:boolean isCapturingGesture() -> isCapturingGesture
    51:51:com.facebook.drawee.gestures.GestureDetector newInstance(android.content.Context) -> newInstance
    81:87:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    65:66:void reset() -> reset
    71:71:void setClickListener(com.facebook.drawee.gestures.GestureDetector$ClickListener) -> setClickListener
com.facebook.drawee.view.AspectRatioMeasure -> com.facebook.drawee.view.AspectRatioMeasure:
    17:17:void <init>() -> <init>
    59:68:void updateMeasureSpec(com.facebook.drawee.view.AspectRatioMeasure$Spec,float,android.view.ViewGroup$LayoutParams,int,int) -> updateMeasureSpec
com.facebook.drawee.view.AspectRatioMeasure$Spec -> com.facebook.drawee.view.AspectRatioMeasure$Spec:
    22:22:void <init>() -> <init>
com.facebook.drawee.view.DraweeHolder -> com.facebook.drawee.view.DraweeHolder:
    74:76:void <init>(com.facebook.drawee.interfaces.DraweeHierarchy) -> <init>
    259:266:void attachController() -> attachController
    282:285:void attachOrDetachController() -> attachOrDetachController
    61:62:com.facebook.drawee.view.DraweeHolder create(com.facebook.drawee.interfaces.DraweeHierarchy,android.content.Context) -> create
    271:277:void detachController() -> detachController
    206:206:com.facebook.drawee.interfaces.DraweeController getController() -> getController
    231:231:com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy() -> getHierarchy
    243:243:android.graphics.drawable.Drawable getTopLevelDrawable() -> getTopLevelDrawable
    251:251:boolean isControllerValid() -> isControllerValid
    87:89:void onAttach() -> onAttach
    111:113:void onDetach() -> onDetach
    147:162:void onDraw() -> onDraw
    122:125:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    133:138:void onVisibilityChange(boolean) -> onVisibilityChange
    179:198:void setController(com.facebook.drawee.interfaces.DraweeController) -> setController
    213:223:void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy) -> setHierarchy
    169:171:void setVisibilityCallback(com.facebook.drawee.drawable.VisibilityCallback) -> setVisibilityCallback
    291:296:java.lang.String toString() -> toString
com.facebook.drawee.view.DraweeTransition -> com.facebook.drawee.view.DraweeTransition:
    32:32:com.facebook.drawee.drawable.ScalingUtils$ScaleType access$000(com.facebook.drawee.view.DraweeTransition) -> access$000
    32:32:android.graphics.PointF access$100(com.facebook.drawee.view.DraweeTransition) -> access$100
    81:81:void captureEndValues(android.transition.TransitionValues) -> captureEndValues
    76:76:void captureStartValues(android.transition.TransitionValues) -> captureStartValues
    127:128:void captureValues(android.transition.TransitionValues) -> captureValues
    90:112:android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues) -> createAnimator
com.facebook.drawee.view.DraweeTransition$1 -> com.facebook.drawee.view.DraweeTransition$1:
    105:105:void <init>(com.facebook.drawee.view.DraweeTransition,com.facebook.drawee.drawable.ScalingUtils$InterpolatingScaleType) -> <init>
    108:109:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.facebook.drawee.view.DraweeTransition$2 -> com.facebook.drawee.view.DraweeTransition$2:
    113:113:void <init>(com.facebook.drawee.view.DraweeTransition,com.facebook.drawee.view.GenericDraweeView) -> <init>
    116:118:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.facebook.drawee.view.DraweeView -> com.facebook.drawee.view.DraweeView:
    58:59:void <init>(android.content.Context) -> <init>
    189:189:void doAttach() -> doAttach
    198:198:void doDetach() -> doDetach
    272:272:float getAspectRatio() -> getAspectRatio
    137:137:com.facebook.drawee.interfaces.DraweeController getController() -> getController
    116:116:com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy() -> getHierarchy
    126:126:android.graphics.drawable.Drawable getTopLevelDrawable() -> getTopLevelDrawable
    81:103:void init(android.content.Context) -> init
    301:304:void maybeOverrideVisibilityHandling() -> maybeOverrideVisibilityHandling
    175:175:void onAttach() -> onAttach
    147:149:void onAttachedToWindow() -> onAttachedToWindow
    180:180:void onDetach() -> onDetach
    154:156:void onDetachedFromWindow() -> onDetachedFromWindow
    168:170:void onFinishTemporaryDetach() -> onFinishTemporaryDetach
    281:289:void onMeasure(int,int) -> onMeasure
    161:163:void onStartTemporaryDetach() -> onStartTemporaryDetach
    203:206:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    296:297:void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    261:265:void setAspectRatio(float) -> setAspectRatio
    131:132:void setController(com.facebook.drawee.interfaces.DraweeController) -> setController
    54:54:void setGlobalLegacyVisibilityHandlingEnabled(boolean) -> setGlobalLegacyVisibilityHandlingEnabled
    110:111:void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy) -> setHierarchy
    228:230:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    216:218:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    240:242:void setImageResource(int) -> setImageResource
    252:254:void setImageURI(android.net.Uri) -> setImageURI
    276:276:void setLegacyVisibilityHandlingEnabled(boolean) -> setLegacyVisibilityHandlingEnabled
    311:313:java.lang.String toString() -> toString
com.facebook.drawee.view.GenericDraweeView -> com.facebook.drawee.view.GenericDraweeView:
    29:30:void <init>(android.content.Context,com.facebook.drawee.generic.GenericDraweeHierarchy) -> <init>
com.facebook.drawee.view.MultiDraweeHolder -> com.facebook.drawee.view.MultiDraweeHolder:
    32:35:void <init>() -> <init>
com.facebook.drawee.view.SimpleDraweeView -> com.facebook.drawee.view.SimpleDraweeView:
    121:121:com.facebook.drawee.controller.AbstractDraweeControllerBuilder getControllerBuilder() -> getControllerBuilder
    194:194:void setActualImageResource(int) -> setActualImageResource
    209:209:void setActualImageResource(int,java.lang.Object) -> setActualImageResource
    130:133:void setImageRequest(com.facebook.imagepipeline.request.ImageRequest) -> setImageRequest
    221:221:void setImageResource(int) -> setImageResource
    144:144:void setImageURI(android.net.Uri) -> setImageURI
    153:153:void setImageURI(java.lang.String) -> setImageURI
    163:169:void setImageURI(android.net.Uri,java.lang.Object) -> setImageURI
    179:180:void setImageURI(java.lang.String,java.lang.Object) -> setImageURI
com.facebook.fbcore.BuildConfig -> com.facebook.fbcore.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.fbcore.R -> com.facebook.fbcore.R:
    10:10:void <init>() -> <init>
com.facebook.fbreact.specs.NativeAccessibilityInfoSpec -> com.facebook.fbreact.specs.NativeAccessibilityInfoSpec:
    24:24:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeAccessibilityManagerSpec -> com.facebook.fbreact.specs.NativeAccessibilityManagerSpec:
    25:25:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeActionSheetManagerSpec -> com.facebook.fbreact.specs.NativeActionSheetManagerSpec:
    25:25:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeAlertManagerSpec -> com.facebook.fbreact.specs.NativeAlertManagerSpec:
    25:25:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeAnimatedModuleSpec -> com.facebook.fbreact.specs.NativeAnimatedModuleSpec:
    25:25:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec -> com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec:
    23:23:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeAppStateSpec -> com.facebook.fbreact.specs.NativeAppStateSpec:
    30:30:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    46:46:java.util.Map getConstants() -> getConstants
com.facebook.fbreact.specs.NativeAppearanceSpec -> com.facebook.fbreact.specs.NativeAppearanceSpec:
    24:24:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeAsyncStorageSpec -> com.facebook.fbreact.specs.NativeAsyncStorageSpec:
    25:25:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeBlobModuleSpec -> com.facebook.fbreact.specs.NativeBlobModuleSpec:
    31:31:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    56:56:java.util.Map getConstants() -> getConstants
com.facebook.fbreact.specs.NativeBugReportingSpec -> com.facebook.fbreact.specs.NativeBugReportingSpec:
    24:24:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeCameraRollManagerSpec -> com.facebook.fbreact.specs.NativeCameraRollManagerSpec:
    26:26:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeClipboardSpec -> com.facebook.fbreact.specs.NativeClipboardSpec:
    24:24:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeDatePickerAndroidSpec -> com.facebook.fbreact.specs.NativeDatePickerAndroidSpec:
    25:25:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeDevLoadingViewSpec -> com.facebook.fbreact.specs.NativeDevLoadingViewSpec:
    24:24:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeDevMenuSpec -> com.facebook.fbreact.specs.NativeDevMenuSpec:
    23:23:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeDevSettingsSpec -> com.facebook.fbreact.specs.NativeDevSettingsSpec:
    23:23:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeDeviceEventManagerSpec -> com.facebook.fbreact.specs.NativeDeviceEventManagerSpec:
    23:23:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeDeviceInfoSpec -> com.facebook.fbreact.specs.NativeDeviceInfoSpec:
    28:28:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    35:35:java.util.Map getConstants() -> getConstants
com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec -> com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec:
    31:31:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    41:41:java.util.Map getConstants() -> getConstants
com.facebook.fbreact.specs.NativeExceptionsManagerSpec -> com.facebook.fbreact.specs.NativeExceptionsManagerSpec:
    25:25:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeFileReaderModuleSpec -> com.facebook.fbreact.specs.NativeFileReaderModuleSpec:
    25:25:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeFrameRateLoggerSpec -> com.facebook.fbreact.specs.NativeFrameRateLoggerSpec:
    24:24:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec -> com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec:
    24:24:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeHeapCaptureSpec -> com.facebook.fbreact.specs.NativeHeapCaptureSpec:
    24:24:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeI18nManagerSpec -> com.facebook.fbreact.specs.NativeI18nManagerSpec:
    29:29:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    45:45:java.util.Map getConstants() -> getConstants
com.facebook.fbreact.specs.NativeImageEditorSpec -> com.facebook.fbreact.specs.NativeImageEditorSpec:
    25:25:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec -> com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec:
    26:26:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeImageLoaderIOSSpec -> com.facebook.fbreact.specs.NativeImageLoaderIOSSpec:
    26:26:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeImageLoaderSpec -> com.facebook.fbreact.specs.NativeImageLoaderSpec:
    26:26:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeImagePickerIOSSpec -> com.facebook.fbreact.specs.NativeImagePickerIOSSpec:
    25:25:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeImageStoreSpec -> com.facebook.fbreact.specs.NativeImageStoreSpec:
    24:24:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec -> com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec:
    24:24:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeJSDevSupportSpec -> com.facebook.fbreact.specs.NativeJSDevSupportSpec:
    30:30:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    43:43:java.util.Map getConstants() -> getConstants
com.facebook.fbreact.specs.NativeKeyboardObserverSpec -> com.facebook.fbreact.specs.NativeKeyboardObserverSpec:
    23:23:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeLinkingSpec -> com.facebook.fbreact.specs.NativeLinkingSpec:
    25:25:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeLogBoxSpec -> com.facebook.fbreact.specs.NativeLogBoxSpec:
    23:23:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeModalManagerSpec -> com.facebook.fbreact.specs.NativeModalManagerSpec:
    23:23:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeNetworkingAndroidSpec -> com.facebook.fbreact.specs.NativeNetworkingAndroidSpec:
    26:26:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeNetworkingIOSSpec -> com.facebook.fbreact.specs.NativeNetworkingIOSSpec:
    25:25:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativePermissionsAndroidSpec -> com.facebook.fbreact.specs.NativePermissionsAndroidSpec:
    25:25:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec -> com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec:
    29:29:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    41:41:java.util.Map getConstants() -> getConstants
com.facebook.fbreact.specs.NativePlatformConstantsIOSSpec -> com.facebook.fbreact.specs.NativePlatformConstantsIOSSpec:
    28:28:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    35:35:java.util.Map getConstants() -> getConstants
com.facebook.fbreact.specs.NativePushNotificationManagerIOSSpec -> com.facebook.fbreact.specs.NativePushNotificationManagerIOSSpec:
    27:27:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeRedBoxSpec -> com.facebook.fbreact.specs.NativeRedBoxSpec:
    24:24:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeSegmentFetcherSpec -> com.facebook.fbreact.specs.NativeSegmentFetcherSpec:
    25:25:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeSettingsManagerSpec -> com.facebook.fbreact.specs.NativeSettingsManagerSpec:
    31:31:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    44:44:java.util.Map getConstants() -> getConstants
com.facebook.fbreact.specs.NativeShareModuleSpec -> com.facebook.fbreact.specs.NativeShareModuleSpec:
    25:25:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeSoundManagerSpec -> com.facebook.fbreact.specs.NativeSoundManagerSpec:
    23:23:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeSourceCodeSpec -> com.facebook.fbreact.specs.NativeSourceCodeSpec:
    28:28:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    35:35:java.util.Map getConstants() -> getConstants
com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec -> com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec:
    29:29:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    48:48:java.util.Map getConstants() -> getConstants
com.facebook.fbreact.specs.NativeStatusBarManagerIOSSpec -> com.facebook.fbreact.specs.NativeStatusBarManagerIOSSpec:
    30:30:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    55:55:java.util.Map getConstants() -> getConstants
com.facebook.fbreact.specs.NativeStatusBarManagerSpec -> com.facebook.fbreact.specs.NativeStatusBarManagerSpec:
    30:30:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    61:61:java.util.Map getConstants() -> getConstants
com.facebook.fbreact.specs.NativeTVNavigationEventEmitterSpec -> com.facebook.fbreact.specs.NativeTVNavigationEventEmitterSpec:
    23:23:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeTimePickerAndroidSpec -> com.facebook.fbreact.specs.NativeTimePickerAndroidSpec:
    25:25:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeTimingSpec -> com.facebook.fbreact.specs.NativeTimingSpec:
    23:23:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeToastAndroidSpec -> com.facebook.fbreact.specs.NativeToastAndroidSpec:
    29:29:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    46:46:java.util.Map getConstants() -> getConstants
com.facebook.fbreact.specs.NativeUIManagerSpec -> com.facebook.fbreact.specs.NativeUIManagerSpec:
    30:30:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    130:130:java.util.Map getConstants() -> getConstants
com.facebook.fbreact.specs.NativeVibrationSpec -> com.facebook.fbreact.specs.NativeVibrationSpec:
    24:24:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.fbreact.specs.NativeWebSocketModuleSpec -> com.facebook.fbreact.specs.NativeWebSocketModuleSpec:
    25:25:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
com.facebook.hermes.BuildConfig -> com.facebook.hermes.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.hermes.R -> com.facebook.hermes.R:
    10:10:void <init>() -> <init>
com.facebook.hermes.instrumentation.HermesSamplingProfiler -> com.facebook.hermes.instrumentation.HermesSamplingProfiler:
    15:15:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
com.facebook.hermes.reactexecutor.HermesExecutor -> com.facebook.hermes.reactexecutor.HermesExecutor:
    20:26:void <clinit>() -> <clinit>
    33:31:void <init>(com.facebook.hermes.reactexecutor.RuntimeConfig) -> <init>
    39:39:java.lang.String getName() -> getName
com.facebook.hermes.reactexecutor.HermesExecutorFactory -> com.facebook.hermes.reactexecutor.HermesExecutorFactory:
    20:20:void <init>() -> <init>
    23:24:void <init>(com.facebook.hermes.reactexecutor.RuntimeConfig) -> <init>
    29:29:com.facebook.react.bridge.JavaScriptExecutor create() -> create
    34:34:void startSamplingProfiler() -> startSamplingProfiler
    39:40:void stopSamplingProfiler(java.lang.String) -> stopSamplingProfiler
com.facebook.hermes.reactexecutor.RuntimeConfig -> com.facebook.hermes.reactexecutor.RuntimeConfig:
    11:11:void <init>() -> <init>
com.facebook.hermes.unicode.AndroidUnicodeUtils -> com.facebook.hermes.unicode.AndroidUnicodeUtils:
    20:20:void <init>() -> <init>
    50:55:java.lang.String convertToCase(java.lang.String,int,boolean) -> convertToCase
    31:37:java.lang.String dateFormat(double,boolean,boolean) -> dateFormat
    23:24:int localeCompare(java.lang.String,java.lang.String) -> localeCompare
    77:71:java.lang.String normalize(java.lang.String,int) -> normalize
com.facebook.imageformat.DefaultImageFormatChecker -> com.facebook.imageformat.DefaultImageFormatChecker:
    131:252:void <clinit>() -> <clinit>
    18:28:void <init>() -> <init>
    54:84:com.facebook.imageformat.ImageFormat determineFormat(byte[],int) -> determineFormat
    40:40:int getHeaderSize() -> getHeaderSize
    105:124:com.facebook.imageformat.ImageFormat getWebpFormat(byte[],int) -> getWebpFormat
    213:216:boolean isBmpHeader(byte[],int) -> isBmpHeader
    194:195:boolean isGifHeader(byte[],int) -> isGifHeader
    264:275:boolean isHeifHeader(byte[],int) -> isHeifHeader
    235:238:boolean isIcoHeader(byte[],int) -> isIcoHeader
    146:147:boolean isJpegHeader(byte[],int) -> isJpegHeader
    170:171:boolean isPngHeader(byte[],int) -> isPngHeader
com.facebook.imageformat.DefaultImageFormats -> com.facebook.imageformat.DefaultImageFormats:
    18:29:void <clinit>() -> <clinit>
    82:82:void <init>() -> <init>
    51:51:boolean isStaticWebpFormat(com.facebook.imageformat.ImageFormat) -> isStaticWebpFormat
    40:40:boolean isWebpFormat(com.facebook.imageformat.ImageFormat) -> isWebpFormat
com.facebook.imageformat.ImageFormat -> com.facebook.imageformat.ImageFormat:
    37:37:void <clinit>() -> <clinit>
    42:43:void <init>(java.lang.String,java.lang.String) -> <init>
    62:62:java.lang.String getName() -> getName
    58:58:java.lang.String toString() -> toString
com.facebook.imageformat.ImageFormatChecker -> com.facebook.imageformat.ImageFormatChecker:
    34:35:void <init>() -> <init>
    45:62:com.facebook.imageformat.ImageFormat determineImageFormat(java.io.InputStream) -> determineImageFormat
    130:130:com.facebook.imageformat.ImageFormat getImageFormat(java.io.InputStream) -> getImageFormat
    139:141:com.facebook.imageformat.ImageFormat getImageFormat_WrapIOException(java.io.InputStream) -> getImageFormat_WrapIOException
    113:116:com.facebook.imageformat.ImageFormatChecker getInstance() -> getInstance
    90:104:int readHeaderFromStream(int,java.io.InputStream,byte[]) -> readHeaderFromStream
    40:41:void setCustomImageFormatCheckers(java.util.List) -> setCustomImageFormatCheckers
    66:69:void updateMaxHeaderLength() -> updateMaxHeaderLength
com.facebook.imageformat.ImageFormatCheckerUtils -> com.facebook.imageformat.ImageFormatCheckerUtils:
    102:102:void <init>() -> <init>
    25:30:byte[] asciiBytes(java.lang.String) -> asciiBytes
    70:90:int indexOfPattern(byte[],int,byte[],int) -> indexOfPattern
    44:51:boolean startsWithPattern(byte[],byte[]) -> startsWithPattern
com.facebook.imagepipeline.BuildConfig -> com.facebook.imagepipeline.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.imagepipeline.R -> com.facebook.imagepipeline.R:
    10:10:void <init>() -> <init>
com.facebook.imagepipeline.animated.factory.AnimatedFactoryProvider -> com.facebook.imagepipeline.animated.factory.AnimatedFactoryProvider:
    16:16:void <init>() -> <init>
    27:51:com.facebook.imagepipeline.animated.factory.AnimatedFactory getAnimatedFactory(com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,com.facebook.imagepipeline.core.ExecutorSupplier,com.facebook.imagepipeline.cache.CountingMemoryCache,boolean) -> getAnimatedFactory
com.facebook.imagepipeline.backends.okhttp3.BuildConfig -> com.facebook.imagepipeline.backends.okhttp3.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.imagepipeline.backends.okhttp3.OkHttpImagePipelineConfigFactory -> com.facebook.imagepipeline.backends.okhttp3.OkHttpImagePipelineConfigFactory:
    18:18:void <init>() -> <init>
    21:22:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder newBuilder(android.content.Context,okhttp3.OkHttpClient) -> newBuilder
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher -> com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher:
    66:66:void <init>(okhttp3.OkHttpClient) -> <init>
    75:75:void <init>(okhttp3.Call$Factory,java.util.concurrent.Executor) -> <init>
    85:88:void <init>(okhttp3.Call$Factory,java.util.concurrent.Executor,boolean) -> <init>
    36:36:java.util.concurrent.Executor access$000(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher) -> access$000
    36:36:void access$100(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher,okhttp3.Call,java.lang.Exception,com.facebook.imagepipeline.producers.NetworkFetcher$Callback) -> access$100
    36:36:com.facebook.imagepipeline.producers.FetchState createFetchState(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> createFetchState
    95:95:com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState createFetchState(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> createFetchState
    36:36:void fetch(com.facebook.imagepipeline.producers.FetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback) -> fetch
    101:121:void fetch(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback) -> fetch
    144:166:void fetchWithRequest(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback,okhttp3.Request) -> fetchWithRequest
    36:36:java.util.Map getExtraMap(com.facebook.imagepipeline.producers.FetchState,int) -> getExtraMap
    132:136:java.util.Map getExtraMap(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,int) -> getExtraMap
    216:219:void handleException(okhttp3.Call,java.lang.Exception,com.facebook.imagepipeline.producers.NetworkFetcher$Callback) -> handleException
    36:36:void onFetchCompletion(com.facebook.imagepipeline.producers.FetchState,int) -> onFetchCompletion
    127:127:void onFetchCompletion(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,int) -> onFetchCompletion
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$1 -> com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$1:
    149:149:void <init>(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher,okhttp3.Call) -> <init>
    152:155:void onCancellationRequested() -> onCancellationRequested
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$1$1 -> com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$1$1:
    156:156:void <init>(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$1) -> <init>
    159:159:void run() -> run
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$2 -> com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$2:
    167:167:void <init>(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher,com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback) -> <init>
    203:203:void onFailure(okhttp3.Call,java.io.IOException) -> onFailure
    170:197:void onResponse(okhttp3.Call,okhttp3.Response) -> onResponse
com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState -> com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState:
    48:48:void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> <init>
com.facebook.imagepipeline.backends.okhttp3.R -> com.facebook.imagepipeline.backends.okhttp3.R:
    10:10:void <init>() -> <init>
com.facebook.imagepipeline.bitmaps.ArtBitmapFactory -> com.facebook.imagepipeline.bitmaps.ArtBitmapFactory:
    31:33:void <init>(com.facebook.imagepipeline.memory.BitmapPool,com.facebook.imagepipeline.core.CloseableReferenceFactory) -> <init>
    50:56:com.facebook.common.references.CloseableReference createBitmapInternal(int,int,android.graphics.Bitmap$Config) -> createBitmapInternal
com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator -> com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator:
    27:53:void <clinit>() -> <clinit>
    161:162:void <init>(com.facebook.common.memory.PooledByteBufferFactory) -> <init>
    168:181:com.facebook.common.references.CloseableReference generate(short,short) -> generate
com.facebook.imagepipeline.bitmaps.GingerbreadBitmapFactory -> com.facebook.imagepipeline.bitmaps.GingerbreadBitmapFactory:
    16:16:void <init>() -> <init>
    33:34:com.facebook.common.references.CloseableReference createBitmapInternal(int,int,android.graphics.Bitmap$Config) -> createBitmapInternal
com.facebook.imagepipeline.bitmaps.HoneycombBitmapCreator -> com.facebook.imagepipeline.bitmaps.HoneycombBitmapCreator:
    30:32:void <init>(com.facebook.imagepipeline.memory.PoolFactory) -> <init>
com.facebook.imagepipeline.bitmaps.HoneycombBitmapFactory -> com.facebook.imagepipeline.bitmaps.HoneycombBitmapFactory:
    39:42:void <init>(com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator,com.facebook.imagepipeline.platform.PlatformDecoder,com.facebook.imagepipeline.core.CloseableReferenceFactory) -> <init>
    62:90:com.facebook.common.references.CloseableReference createBitmapInternal(int,int,android.graphics.Bitmap$Config) -> createBitmapInternal
    96:96:com.facebook.common.references.CloseableReference createFallbackBitmap(int,int,android.graphics.Bitmap$Config) -> createFallbackBitmap
com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory -> com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory:
    25:25:void <init>() -> <init>
    41:41:com.facebook.common.references.CloseableReference createBitmap(int,int,android.graphics.Bitmap$Config) -> createBitmap
    55:55:com.facebook.common.references.CloseableReference createBitmap(int,int) -> createBitmap
    74:74:com.facebook.common.references.CloseableReference createBitmap(int,int,android.graphics.Bitmap$Config,java.lang.Object) -> createBitmap
com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory$1 -> com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory$1:
    687:687:void <clinit>() -> <clinit>
com.facebook.imagepipeline.bitmaps.PlatformBitmapFactoryProvider -> com.facebook.imagepipeline.bitmaps.PlatformBitmapFactoryProvider:
    17:17:void <init>() -> <init>
    31:39:com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory buildPlatformBitmapFactory(com.facebook.imagepipeline.memory.PoolFactory,com.facebook.imagepipeline.platform.PlatformDecoder,com.facebook.imagepipeline.core.CloseableReferenceFactory) -> buildPlatformBitmapFactory
com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser -> com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser:
    27:27:void <init>() -> <init>
    21:24:com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser getInstance() -> getInstance
    16:16:void release(java.lang.Object) -> release
    31:31:void release(android.graphics.Bitmap) -> release
com.facebook.imagepipeline.cache.BitmapCountingMemoryCacheFactory -> com.facebook.imagepipeline.cache.BitmapCountingMemoryCacheFactory:
    15:15:void <init>() -> <init>
    31:42:com.facebook.imagepipeline.cache.CountingMemoryCache get(com.facebook.common.internal.Supplier,com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.cache.CountingMemoryCache$CacheTrimStrategy) -> get
com.facebook.imagepipeline.cache.BitmapCountingMemoryCacheFactory$1 -> com.facebook.imagepipeline.cache.BitmapCountingMemoryCacheFactory$1:
    32:32:void <init>() -> <init>
    32:32:int getSizeInBytes(java.lang.Object) -> getSizeInBytes
    35:35:int getSizeInBytes(com.facebook.imagepipeline.image.CloseableImage) -> getSizeInBytes
com.facebook.imagepipeline.cache.BitmapMemoryCacheFactory -> com.facebook.imagepipeline.cache.BitmapMemoryCacheFactory:
    13:13:void <init>() -> <init>
    19:38:com.facebook.imagepipeline.cache.InstrumentedMemoryCache get(com.facebook.imagepipeline.cache.CountingMemoryCache,com.facebook.imagepipeline.cache.ImageCacheStatsTracker) -> get
com.facebook.imagepipeline.cache.BitmapMemoryCacheFactory$1 -> com.facebook.imagepipeline.cache.BitmapMemoryCacheFactory$1:
    21:21:void <init>(com.facebook.imagepipeline.cache.ImageCacheStatsTracker) -> <init>
    21:21:void onCacheHit(java.lang.Object) -> onCacheHit
    24:24:void onCacheHit(com.facebook.cache.common.CacheKey) -> onCacheHit
    29:29:void onCacheMiss() -> onCacheMiss
    34:34:void onCachePut() -> onCachePut
com.facebook.imagepipeline.cache.BitmapMemoryCacheKey -> com.facebook.imagepipeline.cache.BitmapMemoryCacheKey:
    46:61:void <init>(java.lang.String,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ImageDecodeOptions,com.facebook.cache.common.CacheKey,java.lang.String,java.lang.Object) -> <init>
    86:86:boolean containsUri(android.net.Uri) -> containsUri
    66:76:boolean equals(java.lang.Object) -> equals
    91:91:java.lang.String getUriString() -> getUriString
    81:81:int hashCode() -> hashCode
    101:101:java.lang.String toString() -> toString
com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy -> com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy:
    22:22:void <init>() -> <init>
com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy$1 -> com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy$1:
    27:27:void <clinit>() -> <clinit>
com.facebook.imagepipeline.cache.BufferedDiskCache -> com.facebook.imagepipeline.cache.BufferedDiskCache:
    37:37:void <clinit>() -> <clinit>
    53:60:void <init>(com.facebook.cache.disk.FileCache,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.PooledByteStreams,java.util.concurrent.Executor,java.util.concurrent.Executor,com.facebook.imagepipeline.cache.ImageCacheStatsTracker) -> <init>
    36:36:boolean access$000(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey) -> access$000
    36:36:com.facebook.imagepipeline.cache.StagingArea access$100(com.facebook.imagepipeline.cache.BufferedDiskCache) -> access$100
    36:36:java.lang.Class access$200() -> access$200
    36:36:com.facebook.imagepipeline.cache.ImageCacheStatsTracker access$300(com.facebook.imagepipeline.cache.BufferedDiskCache) -> access$300
    36:36:com.facebook.common.memory.PooledByteBuffer access$400(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey) -> access$400
    36:36:void access$500(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> access$500
    36:36:com.facebook.cache.disk.FileCache access$600(com.facebook.imagepipeline.cache.BufferedDiskCache) -> access$600
    36:36:com.facebook.common.memory.PooledByteStreams access$700(com.facebook.imagepipeline.cache.BufferedDiskCache) -> access$700
    155:165:boolean checkInStagingAreaAndFileCache(com.facebook.cache.common.CacheKey) -> checkInStagingAreaAndFileCache
    331:347:bolts.Task clearAll() -> clearAll
    83:86:bolts.Task contains(com.facebook.cache.common.CacheKey) -> contains
    91:107:bolts.Task containsAsync(com.facebook.cache.common.CacheKey) -> containsAsync
    72:72:boolean containsSync(com.facebook.cache.common.CacheKey) -> containsSync
    117:120:boolean diskCheckSync(com.facebook.cache.common.CacheKey) -> diskCheckSync
    356:358:bolts.Task foundPinnedImage(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> foundPinnedImage
    133:143:bolts.Task get(com.facebook.cache.common.CacheKey,java.util.concurrent.atomic.AtomicBoolean) -> get
    174:234:bolts.Task getAsync(com.facebook.cache.common.CacheKey,java.util.concurrent.atomic.AtomicBoolean) -> getAsync
    246:288:void put(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> put
    364:392:com.facebook.common.memory.PooledByteBuffer readFromDiskCache(com.facebook.cache.common.CacheKey) -> readFromDiskCache
    297:323:bolts.Task remove(com.facebook.cache.common.CacheKey) -> remove
    403:417:void writeToDiskCache(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> writeToDiskCache
com.facebook.imagepipeline.cache.BufferedDiskCache$1 -> com.facebook.imagepipeline.cache.BufferedDiskCache$1:
    92:92:void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey) -> <init>
    92:92:java.lang.Object call() -> call
    95:95:java.lang.Boolean call() -> call
com.facebook.imagepipeline.cache.BufferedDiskCache$2 -> com.facebook.imagepipeline.cache.BufferedDiskCache$2:
    175:175:void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,java.util.concurrent.atomic.AtomicBoolean,com.facebook.cache.common.CacheKey) -> <init>
    175:175:java.lang.Object call() -> call
    179:220:com.facebook.imagepipeline.image.EncodedImage call() -> call
com.facebook.imagepipeline.cache.BufferedDiskCache$3 -> com.facebook.imagepipeline.cache.BufferedDiskCache$3:
    262:262:void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> <init>
    266:274:void run() -> run
com.facebook.imagepipeline.cache.BufferedDiskCache$4 -> com.facebook.imagepipeline.cache.BufferedDiskCache$4:
    301:301:void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey) -> <init>
    301:301:java.lang.Object call() -> call
    305:312:java.lang.Void call() -> call
com.facebook.imagepipeline.cache.BufferedDiskCache$5 -> com.facebook.imagepipeline.cache.BufferedDiskCache$5:
    334:334:void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache) -> <init>
    334:334:java.lang.Object call() -> call
    337:338:java.lang.Void call() -> call
com.facebook.imagepipeline.cache.BufferedDiskCache$6 -> com.facebook.imagepipeline.cache.BufferedDiskCache$6:
    406:406:void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.image.EncodedImage) -> <init>
    409:409:void write(java.io.OutputStream) -> write
com.facebook.imagepipeline.cache.CountingLruMap -> com.facebook.imagepipeline.cache.CountingLruMap:
    31:32:void <init>(com.facebook.imagepipeline.cache.ValueDescriptor) -> <init>
    81:81:java.lang.Object get(java.lang.Object) -> get
    47:47:int getCount() -> getCount
    58:58:java.lang.Object getFirstKey() -> getFirstKey
    64:70:java.util.ArrayList getMatchingEntries(com.facebook.common.internal.Predicate) -> getMatchingEntries
    52:52:int getSizeInBytes() -> getSizeInBytes
    128:128:int getValueSizeInBytes(java.lang.Object) -> getValueSizeInBytes
    89:93:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    99:101:java.lang.Object remove(java.lang.Object) -> remove
    106:116:java.util.ArrayList removeAll(com.facebook.common.internal.Predicate) -> removeAll
com.facebook.imagepipeline.cache.CountingMemoryCache -> com.facebook.imagepipeline.cache.CountingMemoryCache:
    123:130:void <init>(com.facebook.imagepipeline.cache.ValueDescriptor,com.facebook.imagepipeline.cache.CountingMemoryCache$CacheTrimStrategy,com.facebook.common.internal.Supplier) -> <init>
    40:40:void access$000(com.facebook.imagepipeline.cache.CountingMemoryCache,com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> access$000
    152:152:com.facebook.common.references.CloseableReference cache(java.lang.Object,com.facebook.common.references.CloseableReference) -> cache
    165:187:com.facebook.common.references.CloseableReference cache(java.lang.Object,com.facebook.common.references.CloseableReference,com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver) -> cache
    197:198:boolean canCacheNewValue(java.lang.Object) -> canCacheNewValue
    336:336:boolean contains(com.facebook.common.internal.Predicate) -> contains
    484:487:void decreaseClientCount(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> decreaseClientCount
    210:219:com.facebook.common.references.CloseableReference get(java.lang.Object) -> get
    508:508:int getInUseCount() -> getInUseCount
    513:513:int getInUseSizeInBytes() -> getInUseSizeInBytes
    477:480:void increaseClientCount(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> increaseClientCount
    470:473:void makeOrphan(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> makeOrphan
    462:466:void makeOrphans(java.util.ArrayList) -> makeOrphans
    257:261:boolean maybeAddToExclusives(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> maybeAddToExclusives
    433:434:void maybeClose(java.util.ArrayList) -> maybeClose
    387:396:void maybeEvictEntries() -> maybeEvictEntries
    454:455:void maybeNotifyExclusiveEntryInsertion(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> maybeNotifyExclusiveEntryInsertion
    441:442:void maybeNotifyExclusiveEntryRemoval(java.util.ArrayList) -> maybeNotifyExclusiveEntryRemoval
    448:449:void maybeNotifyExclusiveEntryRemoval(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> maybeNotifyExclusiveEntryRemoval
    371:377:void maybeUpdateCacheParams() -> maybeUpdateCacheParams
    228:229:com.facebook.common.references.CloseableReference newClientReference(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> newClientReference
    492:493:com.facebook.common.references.CloseableReference referenceToClose(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> referenceToClose
    241:248:void releaseClientReference(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> releaseClientReference
    302:306:int removeAll(com.facebook.common.internal.Predicate) -> removeAll
    410:420:java.util.ArrayList trimExclusivelyOwnedEntries(int,int) -> trimExclusivelyOwnedEntries
    135:135:com.facebook.imagepipeline.cache.ValueDescriptor wrapValueDescriptor(com.facebook.imagepipeline.cache.ValueDescriptor) -> wrapValueDescriptor
com.facebook.imagepipeline.cache.CountingMemoryCache$1 -> com.facebook.imagepipeline.cache.CountingMemoryCache$1:
    135:135:void <init>(com.facebook.imagepipeline.cache.CountingMemoryCache,com.facebook.imagepipeline.cache.ValueDescriptor) -> <init>
    135:135:int getSizeInBytes(java.lang.Object) -> getSizeInBytes
    138:138:int getSizeInBytes(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> getSizeInBytes
com.facebook.imagepipeline.cache.CountingMemoryCache$2 -> com.facebook.imagepipeline.cache.CountingMemoryCache$2:
    231:231:void <init>(com.facebook.imagepipeline.cache.CountingMemoryCache,com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> <init>
    234:234:void release(java.lang.Object) -> release
com.facebook.imagepipeline.cache.CountingMemoryCache$Entry -> com.facebook.imagepipeline.cache.CountingMemoryCache$Entry:
    77:82:void <init>(java.lang.Object,com.facebook.common.references.CloseableReference,com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver) -> <init>
    91:91:com.facebook.imagepipeline.cache.CountingMemoryCache$Entry of(java.lang.Object,com.facebook.common.references.CloseableReference,com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver) -> of
com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier -> com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier:
    24:24:void <clinit>() -> <clinit>
    28:29:void <init>(android.app.ActivityManager) -> <init>
    19:19:java.lang.Object get() -> get
    34:35:com.facebook.imagepipeline.cache.MemoryCacheParams get() -> get
    44:56:int getMaxCacheSize() -> getMaxCacheSize
com.facebook.imagepipeline.cache.DefaultCacheKeyFactory -> com.facebook.imagepipeline.cache.DefaultCacheKeyFactory:
    24:24:void <init>() -> <init>
    36:40:com.facebook.cache.common.CacheKey getBitmapCacheKey(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object) -> getBitmapCacheKey
    70:70:com.facebook.cache.common.CacheKey getEncodedCacheKey(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object) -> getEncodedCacheKey
    78:78:com.facebook.cache.common.CacheKey getEncodedCacheKey(com.facebook.imagepipeline.request.ImageRequest,android.net.Uri,java.lang.Object) -> getEncodedCacheKey
    28:31:com.facebook.imagepipeline.cache.DefaultCacheKeyFactory getInstance() -> getInstance
    48:62:com.facebook.cache.common.CacheKey getPostprocessedBitmapCacheKey(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object) -> getPostprocessedBitmapCacheKey
com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier -> com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier:
    22:22:void <clinit>() -> <clinit>
    17:17:void <init>() -> <init>
    17:17:java.lang.Object get() -> get
    26:28:com.facebook.imagepipeline.cache.MemoryCacheParams get() -> get
    38:38:int getMaxCacheSize() -> getMaxCacheSize
com.facebook.imagepipeline.cache.EncodedCountingMemoryCacheFactory -> com.facebook.imagepipeline.cache.EncodedCountingMemoryCacheFactory:
    15:15:void <init>() -> <init>
    21:34:com.facebook.imagepipeline.cache.CountingMemoryCache get(com.facebook.common.internal.Supplier,com.facebook.common.memory.MemoryTrimmableRegistry) -> get
com.facebook.imagepipeline.cache.EncodedCountingMemoryCacheFactory$1 -> com.facebook.imagepipeline.cache.EncodedCountingMemoryCacheFactory$1:
    22:22:void <init>() -> <init>
    22:22:int getSizeInBytes(java.lang.Object) -> getSizeInBytes
    25:25:int getSizeInBytes(com.facebook.common.memory.PooledByteBuffer) -> getSizeInBytes
com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory -> com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory:
    13:13:void <init>() -> <init>
    19:38:com.facebook.imagepipeline.cache.InstrumentedMemoryCache get(com.facebook.imagepipeline.cache.CountingMemoryCache,com.facebook.imagepipeline.cache.ImageCacheStatsTracker) -> get
com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory$1 -> com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory$1:
    21:21:void <init>(com.facebook.imagepipeline.cache.ImageCacheStatsTracker) -> <init>
    21:21:void onCacheHit(java.lang.Object) -> onCacheHit
    24:24:void onCacheHit(com.facebook.cache.common.CacheKey) -> onCacheHit
    29:29:void onCacheMiss() -> onCacheMiss
    34:34:void onCachePut() -> onCachePut
com.facebook.imagepipeline.cache.InstrumentedMemoryCache -> com.facebook.imagepipeline.cache.InstrumentedMemoryCache:
    18:20:void <init>(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.MemoryCacheTracker) -> <init>
    36:37:com.facebook.common.references.CloseableReference cache(java.lang.Object,com.facebook.common.references.CloseableReference) -> cache
    47:47:boolean contains(com.facebook.common.internal.Predicate) -> contains
    25:29:com.facebook.common.references.CloseableReference get(java.lang.Object) -> get
    42:42:int removeAll(com.facebook.common.internal.Predicate) -> removeAll
com.facebook.imagepipeline.cache.MemoryCacheParams -> com.facebook.imagepipeline.cache.MemoryCacheParams:
    66:72:void <init>(int,int,int,int,int,long) -> <init>
com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy -> com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy:
    23:23:void <init>() -> <init>
com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy$1 -> com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy$1:
    27:27:void <clinit>() -> <clinit>
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker -> com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker:
    18:18:void <init>() -> <init>
    22:25:com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker getInstance() -> getInstance
com.facebook.imagepipeline.cache.StagingArea -> com.facebook.imagepipeline.cache.StagingArea:
    29:29:void <clinit>() -> <clinit>
    34:35:void <init>() -> <init>
    63:66:void clearAll() -> clearAll
    162:182:boolean containsKey(com.facebook.cache.common.CacheKey) -> containsKey
    135:155:com.facebook.imagepipeline.image.EncodedImage get(com.facebook.cache.common.CacheKey) -> get
    39:39:com.facebook.imagepipeline.cache.StagingArea getInstance() -> getInstance
    189:190:void logStats() -> logStats
    49:56:void put(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> put
    81:85:boolean remove(com.facebook.cache.common.CacheKey) -> remove
    103:117:boolean remove(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> remove
com.facebook.imagepipeline.common.BytesRange -> com.facebook.imagepipeline.common.BytesRange:
    53:55:void <init>(int,int) -> <init>
    72:72:boolean contains(com.facebook.imagepipeline.common.BytesRange) -> contains
    92:96:boolean equals(java.lang.Object) -> equals
    111:112:com.facebook.imagepipeline.common.BytesRange from(int) -> from
    147:169:com.facebook.imagepipeline.common.BytesRange fromContentRangeHeader(java.lang.String) -> fromContentRangeHeader
    101:101:int hashCode() -> hashCode
    59:59:java.lang.String toHttpRangeHeaderValue() -> toHttpRangeHeaderValue
    122:123:com.facebook.imagepipeline.common.BytesRange toMax(int) -> toMax
    77:77:java.lang.String toString() -> toString
    84:84:java.lang.String valueOrEmpty(int) -> valueOrEmpty
com.facebook.imagepipeline.common.ImageDecodeOptions -> com.facebook.imagepipeline.common.ImageDecodeOptions:
    24:24:void <clinit>() -> <clinit>
    75:84:void <init>(com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder) -> <init>
    93:93:com.facebook.imagepipeline.common.ImageDecodeOptions defaults() -> defaults
    108:119:boolean equals(java.lang.Object) -> equals
    125:133:int hashCode() -> hashCode
    102:102:com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder newBuilder() -> newBuilder
    139:139:java.lang.String toString() -> toString
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder -> com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder:
    31:26:void <init>() -> <init>
    245:245:com.facebook.imagepipeline.common.ImageDecodeOptions build() -> build
    189:189:android.graphics.Bitmap$Config getBitmapConfig() -> getBitmapConfig
    215:215:com.facebook.imagepipeline.transformation.BitmapTransformation getBitmapTransformation() -> getBitmapTransformation
    236:236:android.graphics.ColorSpace getColorSpace() -> getColorSpace
    171:171:com.facebook.imagepipeline.decoder.ImageDecoder getCustomImageDecoder() -> getCustomImageDecoder
    123:123:boolean getDecodeAllFrames() -> getDecodeAllFrames
    92:92:boolean getDecodePreviewFrame() -> getDecodePreviewFrame
    180:180:boolean getForceStaticImage() -> getForceStaticImage
    72:72:int getMinDecodeIntervalMs() -> getMinDecodeIntervalMs
    101:101:boolean getUseLastFrameForPreview() -> getUseLastFrameForPreview
com.facebook.imagepipeline.common.Priority -> com.facebook.imagepipeline.common.Priority:
    24:15:void <clinit>() -> <clinit>
    15:15:void <init>(java.lang.String,int) -> <init>
    51:51:com.facebook.imagepipeline.common.Priority getHigherPriority(com.facebook.imagepipeline.common.Priority,com.facebook.imagepipeline.common.Priority) -> getHigherPriority
    15:15:com.facebook.imagepipeline.common.Priority valueOf(java.lang.String) -> valueOf
    15:15:com.facebook.imagepipeline.common.Priority[] values() -> values
com.facebook.imagepipeline.common.ResizeOptions -> com.facebook.imagepipeline.common.ResizeOptions:
    61:61:void <init>(int,int) -> <init>
    68:68:void <init>(int,int,float) -> <init>
    75:81:void <init>(int,int,float,float) -> <init>
    96:100:boolean equals(java.lang.Object) -> equals
    86:86:int hashCode() -> hashCode
    106:106:java.lang.String toString() -> toString
com.facebook.imagepipeline.common.RotationOptions -> com.facebook.imagepipeline.common.RotationOptions:
    63:69:void <clinit>() -> <clinit>
    114:116:void <init>(int,boolean) -> <init>
    82:82:com.facebook.imagepipeline.common.RotationOptions autoRotate() -> autoRotate
    100:100:com.facebook.imagepipeline.common.RotationOptions autoRotateAtRenderTime() -> autoRotateAtRenderTime
    141:141:boolean canDeferUntilRendered() -> canDeferUntilRendered
    90:90:com.facebook.imagepipeline.common.RotationOptions disableRotation() -> disableRotation
    154:158:boolean equals(java.lang.Object) -> equals
    134:135:int getForcedAngle() -> getForcedAngle
    146:146:int hashCode() -> hashCode
    124:124:boolean rotationEnabled() -> rotationEnabled
    164:164:java.lang.String toString() -> toString
    120:120:boolean useImageMetadata() -> useImageMetadata
com.facebook.imagepipeline.common.TooManyBitmapsException -> com.facebook.imagepipeline.common.TooManyBitmapsException:
    16:16:void <init>() -> <init>
    20:20:void <init>(java.lang.String) -> <init>
com.facebook.imagepipeline.core.CloseableReferenceFactory -> com.facebook.imagepipeline.core.CloseableReferenceFactory:
    24:25:void <init>(com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker) -> <init>
    19:19:java.lang.String access$000(java.lang.Throwable) -> access$000
    48:48:com.facebook.common.references.CloseableReference create(java.io.Closeable) -> create
    52:52:com.facebook.common.references.CloseableReference create(java.lang.Object,com.facebook.common.references.ResourceReleaser) -> create
    64:67:java.lang.String getStackTraceString(java.lang.Throwable) -> getStackTraceString
com.facebook.imagepipeline.core.CloseableReferenceFactory$1 -> com.facebook.imagepipeline.core.CloseableReferenceFactory$1:
    26:26:void <init>(com.facebook.imagepipeline.core.CloseableReferenceFactory,com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker) -> <init>
    30:31:void reportLeak(com.facebook.common.references.SharedReference,java.lang.Throwable) -> reportLeak
    42:42:boolean requiresStacktrace() -> requiresStacktrace
com.facebook.imagepipeline.core.DefaultExecutorSupplier -> com.facebook.imagepipeline.core.DefaultExecutorSupplier:
    30:47:void <init>(int) -> <init>
    71:71:java.util.concurrent.Executor forBackgroundTasks() -> forBackgroundTasks
    66:66:java.util.concurrent.Executor forDecode() -> forDecode
    76:76:java.util.concurrent.Executor forLightweightBackgroundTasks() -> forLightweightBackgroundTasks
    56:56:java.util.concurrent.Executor forLocalStorageRead() -> forLocalStorageRead
    61:61:java.util.concurrent.Executor forLocalStorageWrite() -> forLocalStorageWrite
com.facebook.imagepipeline.core.DiskStorageCacheFactory -> com.facebook.imagepipeline.core.DiskStorageCacheFactory:
    24:25:void <init>(com.facebook.imagepipeline.core.DiskStorageFactory) -> <init>
    31:31:com.facebook.cache.disk.DiskStorageCache buildDiskStorageCache(com.facebook.cache.disk.DiskCacheConfig,com.facebook.cache.disk.DiskStorage) -> buildDiskStorageCache
    38:52:com.facebook.cache.disk.DiskStorageCache buildDiskStorageCache(com.facebook.cache.disk.DiskCacheConfig,com.facebook.cache.disk.DiskStorage,java.util.concurrent.Executor) -> buildDiskStorageCache
    57:57:com.facebook.cache.disk.FileCache get(com.facebook.cache.disk.DiskCacheConfig) -> get
com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory -> com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory:
    16:16:void <init>() -> <init>
    20:24:com.facebook.cache.disk.DiskStorage get(com.facebook.cache.disk.DiskCacheConfig) -> get
com.facebook.imagepipeline.core.ImagePipeline -> com.facebook.imagepipeline.core.ImagePipeline:
    52:52:void <clinit>() -> <clinit>
    81:94:void <init>(com.facebook.imagepipeline.core.ProducerSequenceFactory,java.util.Set,com.facebook.common.internal.Supplier,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue,com.facebook.common.internal.Supplier,com.facebook.common.internal.Supplier,com.facebook.callercontext.CallerContextVerifier) -> <init>
    50:50:com.facebook.imagepipeline.cache.BufferedDiskCache access$000(com.facebook.imagepipeline.core.ImagePipeline) -> access$000
    506:507:void clearCaches() -> clearCaches
    489:490:void clearDiskCaches() -> clearDiskCaches
    474:482:void clearMemoryCaches() -> clearMemoryCaches
    216:216:com.facebook.datasource.DataSource fetchDecodedImage(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object) -> fetchDecodedImage
    250:250:com.facebook.datasource.DataSource fetchDecodedImage(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel) -> fetchDecodedImage
    272:281:com.facebook.datasource.DataSource fetchDecodedImage(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,com.facebook.imagepipeline.listener.RequestListener) -> fetchDecodedImage
    299:299:com.facebook.datasource.DataSource fetchEncodedImage(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object) -> fetchEncodedImage
    315:337:com.facebook.datasource.DataSource fetchEncodedImage(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.listener.RequestListener) -> fetchEncodedImage
    103:103:java.lang.String generateUniqueFutureId() -> generateUniqueFutureId
    528:528:com.facebook.imagepipeline.cache.MemoryCache getBitmapMemoryCache() -> getBitmapMemoryCache
    841:841:com.facebook.imagepipeline.cache.CacheKeyFactory getCacheKeyFactory() -> getCacheKeyFactory
    799:808:com.facebook.imagepipeline.listener.RequestListener getRequestListenerForRequest(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.listener.RequestListener) -> getRequestListenerForRequest
    520:521:boolean isInBitmapMemoryCache(android.net.Uri) -> isInBitmapMemoryCache
    560:561:boolean isInDiskCacheSync(android.net.Uri) -> isInDiskCacheSync
    576:579:boolean isInDiskCacheSync(android.net.Uri,com.facebook.imagepipeline.request.ImageRequest$CacheChoice) -> isInDiskCacheSync
    591:596:boolean isInDiskCacheSync(com.facebook.imagepipeline.request.ImageRequest) -> isInDiskCacheSync
    813:813:com.facebook.common.internal.Predicate predicateForUri(android.net.Uri) -> predicateForUri
    390:390:com.facebook.datasource.DataSource prefetchToDiskCache(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object) -> prefetchToDiskCache
    407:420:com.facebook.datasource.DataSource prefetchToDiskCache(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.common.Priority) -> prefetchToDiskCache
    703:734:com.facebook.datasource.DataSource submitFetchRequest(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,java.lang.Object,com.facebook.imagepipeline.listener.RequestListener) -> submitFetchRequest
    768:792:com.facebook.datasource.DataSource submitPrefetchRequest(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,java.lang.Object,com.facebook.imagepipeline.common.Priority) -> submitPrefetchRequest
com.facebook.imagepipeline.core.ImagePipeline$1 -> com.facebook.imagepipeline.core.ImagePipeline$1:
    119:119:java.lang.Object get() -> get
    122:122:com.facebook.datasource.DataSource get() -> get
    127:129:java.lang.String toString() -> toString
com.facebook.imagepipeline.core.ImagePipeline$2 -> com.facebook.imagepipeline.core.ImagePipeline$2:
    149:149:java.lang.Object get() -> get
    152:152:com.facebook.datasource.DataSource get() -> get
    157:157:java.lang.String toString() -> toString
com.facebook.imagepipeline.core.ImagePipeline$3 -> com.facebook.imagepipeline.core.ImagePipeline$3:
    173:173:java.lang.Object get() -> get
    176:176:com.facebook.datasource.DataSource get() -> get
    181:183:java.lang.String toString() -> toString
com.facebook.imagepipeline.core.ImagePipeline$4 -> com.facebook.imagepipeline.core.ImagePipeline$4:
    475:475:void <init>(com.facebook.imagepipeline.core.ImagePipeline) -> <init>
    475:475:boolean apply(java.lang.Object) -> apply
com.facebook.imagepipeline.core.ImagePipeline$5 -> com.facebook.imagepipeline.core.ImagePipeline$5:
    639:639:java.lang.Object then(bolts.Task) -> then
    642:642:java.lang.Void then(bolts.Task) -> then
com.facebook.imagepipeline.core.ImagePipeline$6 -> com.facebook.imagepipeline.core.ImagePipeline$6:
    629:629:java.lang.Object then(bolts.Task) -> then
    632:635:bolts.Task then(bolts.Task) -> then
com.facebook.imagepipeline.core.ImagePipeline$7 -> com.facebook.imagepipeline.core.ImagePipeline$7:
    813:813:void <init>(com.facebook.imagepipeline.core.ImagePipeline,android.net.Uri) -> <init>
    813:813:boolean apply(java.lang.Object) -> apply
    816:816:boolean apply(com.facebook.cache.common.CacheKey) -> apply
com.facebook.imagepipeline.core.ImagePipeline$8 -> com.facebook.imagepipeline.core.ImagePipeline$8:
    594:594:void <clinit>() -> <clinit>
com.facebook.imagepipeline.core.ImagePipelineConfig -> com.facebook.imagepipeline.core.ImagePipelineConfig:
    104:104:void <clinit>() -> <clinit>
    67:67:void <init>(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder,com.facebook.imagepipeline.core.ImagePipelineConfig$1) -> <init>
    106:220:void <init>(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> <init>
    258:258:android.graphics.Bitmap$Config getBitmapConfig() -> getBitmapConfig
    262:262:com.facebook.common.internal.Supplier getBitmapMemoryCacheParamsSupplier() -> getBitmapMemoryCacheParamsSupplier
    266:266:com.facebook.imagepipeline.cache.CountingMemoryCache$CacheTrimStrategy getBitmapMemoryCacheTrimStrategy() -> getBitmapMemoryCacheTrimStrategy
    270:270:com.facebook.imagepipeline.cache.CacheKeyFactory getCacheKeyFactory() -> getCacheKeyFactory
    374:374:com.facebook.callercontext.CallerContextVerifier getCallerContextVerifier() -> getCallerContextVerifier
    382:382:com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker getCloseableReferenceLeakTracker() -> getCloseableReferenceLeakTracker
    274:274:android.content.Context getContext() -> getContext
    278:278:com.facebook.imagepipeline.core.ImagePipelineConfig$DefaultImageRequestConfig getDefaultImageRequestConfig() -> getDefaultImageRequestConfig
    241:247:com.facebook.cache.disk.DiskCacheConfig getDefaultMainDiskCacheConfig(android.content.Context) -> getDefaultMainDiskCacheConfig
    294:294:com.facebook.common.internal.Supplier getEncodedMemoryCacheParamsSupplier() -> getEncodedMemoryCacheParamsSupplier
    298:298:com.facebook.imagepipeline.core.ExecutorSupplier getExecutorSupplier() -> getExecutorSupplier
    378:378:com.facebook.imagepipeline.core.ImagePipelineExperiments getExperiments() -> getExperiments
    282:282:com.facebook.imagepipeline.core.FileCacheFactory getFileCacheFactory() -> getFileCacheFactory
    302:302:com.facebook.imagepipeline.cache.ImageCacheStatsTracker getImageCacheStatsTracker() -> getImageCacheStatsTracker
    307:307:com.facebook.imagepipeline.decoder.ImageDecoder getImageDecoder() -> getImageDecoder
    369:369:com.facebook.imagepipeline.decoder.ImageDecoderConfig getImageDecoderConfig() -> getImageDecoderConfig
    312:312:com.facebook.imagepipeline.transcoder.ImageTranscoderFactory getImageTranscoderFactory() -> getImageTranscoderFactory
    391:396:com.facebook.imagepipeline.transcoder.ImageTranscoderFactory getImageTranscoderFactory(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> getImageTranscoderFactory
    318:318:java.lang.Integer getImageTranscoderType() -> getImageTranscoderType
    322:322:com.facebook.common.internal.Supplier getIsPrefetchEnabledSupplier() -> getIsPrefetchEnabledSupplier
    326:326:com.facebook.cache.disk.DiskCacheConfig getMainDiskCacheConfig() -> getMainDiskCacheConfig
    335:335:int getMemoryChunkType() -> getMemoryChunkType
    405:407:int getMemoryChunkType(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder,com.facebook.imagepipeline.core.ImagePipelineExperiments) -> getMemoryChunkType
    330:330:com.facebook.common.memory.MemoryTrimmableRegistry getMemoryTrimmableRegistry() -> getMemoryTrimmableRegistry
    339:339:com.facebook.imagepipeline.producers.NetworkFetcher getNetworkFetcher() -> getNetworkFetcher
    348:348:com.facebook.imagepipeline.memory.PoolFactory getPoolFactory() -> getPoolFactory
    352:352:com.facebook.imagepipeline.decoder.ProgressiveJpegConfig getProgressiveJpegConfig() -> getProgressiveJpegConfig
    356:356:java.util.Set getRequestListeners() -> getRequestListeners
    364:364:com.facebook.cache.disk.DiskCacheConfig getSmallImageDiskCacheConfig() -> getSmallImageDiskCacheConfig
    290:290:boolean isDiskCacheEnabled() -> isDiskCacheEnabled
    286:286:boolean isDownsampleEnabled() -> isDownsampleEnabled
    360:360:boolean isResizeAndRotateEnabledForNetwork() -> isResizeAndRotateEnabledForNetwork
    386:386:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder newBuilder(android.content.Context) -> newBuilder
    228:235:void setWebpBitmapFactory(com.facebook.common.webp.WebpBitmapFactory,com.facebook.imagepipeline.core.ImagePipelineExperiments,com.facebook.common.webp.BitmapCreator) -> setWebpBitmapFactory
com.facebook.imagepipeline.core.ImagePipelineConfig$1 -> com.facebook.imagepipeline.core.ImagePipelineConfig$1:
    145:145:void <init>(com.facebook.imagepipeline.core.ImagePipelineConfig) -> <init>
    145:145:java.lang.Object get() -> get
    148:148:java.lang.Boolean get() -> get
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder -> com.facebook.imagepipeline.core.ImagePipelineConfig$Builder:
    433:433:void <init>(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineConfig$1) -> <init>
    468:470:void <init>(android.content.Context) -> <init>
    433:433:com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder access$100(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$100
    433:433:com.facebook.imagepipeline.cache.ImageCacheStatsTracker access$1000(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$1000
    433:433:com.facebook.imagepipeline.decoder.ImageDecoder access$1100(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$1100
    433:433:java.lang.Integer access$1200(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$1200
    433:433:com.facebook.common.internal.Supplier access$1300(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$1300
    433:433:com.facebook.cache.disk.DiskCacheConfig access$1400(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$1400
    433:433:com.facebook.common.memory.MemoryTrimmableRegistry access$1500(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$1500
    433:433:int access$1600(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$1600
    433:433:com.facebook.imagepipeline.producers.NetworkFetcher access$1700(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$1700
    433:433:com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory access$1800(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$1800
    433:433:com.facebook.imagepipeline.memory.PoolFactory access$1900(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$1900
    433:433:com.facebook.common.internal.Supplier access$200(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$200
    433:433:com.facebook.imagepipeline.decoder.ProgressiveJpegConfig access$2000(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$2000
    433:433:java.util.Set access$2100(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$2100
    433:433:boolean access$2200(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$2200
    433:433:com.facebook.cache.disk.DiskCacheConfig access$2300(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$2300
    433:433:com.facebook.imagepipeline.decoder.ImageDecoderConfig access$2400(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$2400
    433:433:com.facebook.imagepipeline.core.ExecutorSupplier access$2500(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$2500
    433:433:boolean access$2600(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$2600
    433:433:com.facebook.callercontext.CallerContextVerifier access$2700(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$2700
    433:433:com.facebook.imagepipeline.debug.CloseableReferenceLeakTracker access$2800(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$2800
    433:433:android.content.Context access$300(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$300
    433:433:com.facebook.imagepipeline.transcoder.ImageTranscoderFactory access$3000(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$3000
    433:433:java.lang.Integer access$3100(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$3100
    433:433:com.facebook.imagepipeline.cache.CountingMemoryCache$CacheTrimStrategy access$400(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$400
    433:433:android.graphics.Bitmap$Config access$500(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$500
    433:433:com.facebook.imagepipeline.cache.CacheKeyFactory access$600(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$600
    433:433:com.facebook.imagepipeline.core.FileCacheFactory access$700(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$700
    433:433:boolean access$800(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$800
    433:433:com.facebook.common.internal.Supplier access$900(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$900
    644:644:com.facebook.imagepipeline.core.ImagePipelineConfig build() -> build
    511:511:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setDownsampleEnabled(boolean) -> setDownsampleEnabled
    589:589:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setNetworkFetcher(com.facebook.imagepipeline.producers.NetworkFetcher) -> setNetworkFetcher
    609:609:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setRequestListeners(java.util.Set) -> setRequestListeners
com.facebook.imagepipeline.core.ImagePipelineConfig$DefaultImageRequestConfig -> com.facebook.imagepipeline.core.ImagePipelineConfig$DefaultImageRequestConfig:
    417:417:void <init>(com.facebook.imagepipeline.core.ImagePipelineConfig$1) -> <init>
    421:419:void <init>() -> <init>
    429:429:boolean isProgressiveRenderingEnabled() -> isProgressiveRenderingEnabled
com.facebook.imagepipeline.core.ImagePipelineExperiments -> com.facebook.imagepipeline.core.ImagePipelineExperiments:
    33:33:void <init>(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder,com.facebook.imagepipeline.core.ImagePipelineExperiments$1) -> <init>
    52:72:void <init>(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> <init>
    125:125:boolean getBitmapPrepareToDrawForPrefetch() -> getBitmapPrepareToDrawForPrefetch
    104:104:int getBitmapPrepareToDrawMaxSizeBytes() -> getBitmapPrepareToDrawMaxSizeBytes
    100:100:int getBitmapPrepareToDrawMinSizeBytes() -> getBitmapPrepareToDrawMinSizeBytes
    129:129:int getMaxBitmapSize() -> getMaxBitmapSize
    116:116:com.facebook.imagepipeline.core.ImagePipelineExperiments$ProducerFactoryMethod getProducerFactoryMethod() -> getProducerFactoryMethod
    96:96:boolean getUseBitmapPrepareToDraw() -> getUseBitmapPrepareToDraw
    76:76:boolean getUseDownsamplingRatioForResizing() -> getUseDownsamplingRatioForResizing
    92:92:com.facebook.common.webp.WebpBitmapFactory getWebpBitmapFactory() -> getWebpBitmapFactory
    88:88:com.facebook.common.webp.WebpBitmapFactory$WebpErrorLogger getWebpErrorLogger() -> getWebpErrorLogger
    84:84:boolean isDecodeCancellationEnabled() -> isDecodeCancellationEnabled
    137:137:boolean isGingerbreadDecoderEnabled() -> isGingerbreadDecoderEnabled
    133:133:com.facebook.common.internal.Supplier isLazyDataSource() -> isLazyDataSource
    108:108:boolean isNativeCodeDisabled() -> isNativeCodeDisabled
    112:112:boolean isPartialImageCachingEnabled() -> isPartialImageCachingEnabled
    80:80:boolean isWebpSupportEnabled() -> isWebpSupportEnabled
    141:141:boolean shouldDownscaleFrameToDrawableDimensions() -> shouldDownscaleFrameToDrawableDimensions
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder -> com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder:
    164:158:void <init>(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> <init>
    144:144:boolean access$000(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$000
    144:144:com.facebook.common.webp.WebpBitmapFactory$WebpErrorLogger access$100(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$100
    144:144:boolean access$1000(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$1000
    144:144:com.facebook.imagepipeline.core.ImagePipelineExperiments$ProducerFactoryMethod access$1100(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$1100
    144:144:boolean access$200(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$200
    144:144:com.facebook.common.webp.WebpBitmapFactory access$300(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$300
    144:144:boolean access$400(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$400
    144:144:boolean access$500(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$500
    144:144:int access$600(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$600
    144:144:int access$700(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$700
    144:144:int access$800(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$800
    144:144:boolean access$900(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$900
    290:290:com.facebook.imagepipeline.core.ImagePipelineExperiments build() -> build
com.facebook.imagepipeline.core.ImagePipelineExperiments$DefaultProducerFactoryMethod -> com.facebook.imagepipeline.core.ImagePipelineExperiments$DefaultProducerFactoryMethod:
    319:319:void <init>() -> <init>
    343:343:com.facebook.imagepipeline.core.ProducerFactory createProducerFactory(android.content.Context,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.decoder.ProgressiveJpegConfig,boolean,boolean,boolean,com.facebook.imagepipeline.core.ExecutorSupplier,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,int,int,boolean,int,com.facebook.imagepipeline.core.CloseableReferenceFactory) -> createProducerFactory
com.facebook.imagepipeline.core.ImagePipelineFactory -> com.facebook.imagepipeline.core.ImagePipelineFactory:
    59:59:void <clinit>() -> <clinit>
    139:150:void <init>(com.facebook.imagepipeline.core.ImagePipelineConfig) -> <init>
    169:170:com.facebook.imagepipeline.drawable.DrawableFactory getAnimatedDrawableFactory(android.content.Context) -> getAnimatedDrawableFactory
    156:164:com.facebook.imagepipeline.animated.factory.AnimatedFactory getAnimatedFactory() -> getAnimatedFactory
    175:182:com.facebook.imagepipeline.cache.CountingMemoryCache getBitmapCountingMemoryCache() -> getBitmapCountingMemoryCache
    186:192:com.facebook.imagepipeline.cache.InstrumentedMemoryCache getBitmapMemoryCache() -> getBitmapMemoryCache
    373:373:com.facebook.imagepipeline.core.CloseableReferenceFactory getCloseableReferenceFactory() -> getCloseableReferenceFactory
    196:201:com.facebook.imagepipeline.cache.CountingMemoryCache getEncodedCountingMemoryCache() -> getEncodedCountingMemoryCache
    205:211:com.facebook.imagepipeline.cache.InstrumentedMemoryCache getEncodedMemoryCache() -> getEncodedMemoryCache
    215:247:com.facebook.imagepipeline.decoder.ImageDecoder getImageDecoder() -> getImageDecoder
    273:289:com.facebook.imagepipeline.core.ImagePipeline getImagePipeline() -> getImagePipeline
    399:414:com.facebook.imagepipeline.transcoder.ImageTranscoderFactory getImageTranscoderFactory() -> getImageTranscoderFactory
    68:68:com.facebook.imagepipeline.core.ImagePipelineFactory getInstance() -> getInstance
    251:261:com.facebook.imagepipeline.cache.BufferedDiskCache getMainBufferedDiskCache() -> getMainBufferedDiskCache
    265:269:com.facebook.cache.disk.FileCache getMainFileCache() -> getMainFileCache
    293:298:com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory getPlatformBitmapFactory() -> getPlatformBitmapFactory
    302:307:com.facebook.imagepipeline.platform.PlatformDecoder getPlatformDecoder() -> getPlatformDecoder
    311:338:com.facebook.imagepipeline.core.ProducerFactory getProducerFactory() -> getProducerFactory
    343:361:com.facebook.imagepipeline.core.ProducerSequenceFactory getProducerSequenceFactory() -> getProducerSequenceFactory
    377:387:com.facebook.imagepipeline.cache.BufferedDiskCache getSmallImageBufferedDiskCache() -> getSmallImageBufferedDiskCache
    365:369:com.facebook.cache.disk.FileCache getSmallImageFileCache() -> getSmallImageFileCache
    83:90:void initialize(android.content.Context) -> initialize
    94:101:void initialize(com.facebook.imagepipeline.core.ImagePipelineConfig) -> initialize
com.facebook.imagepipeline.core.PriorityThreadFactory -> com.facebook.imagepipeline.core.PriorityThreadFactory:
    35:38:void <init>(int,java.lang.String,boolean) -> <init>
    16:16:int access$000(com.facebook.imagepipeline.core.PriorityThreadFactory) -> access$000
    43:60:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.facebook.imagepipeline.core.PriorityThreadFactory$1 -> com.facebook.imagepipeline.core.PriorityThreadFactory$1:
    43:43:void <init>(com.facebook.imagepipeline.core.PriorityThreadFactory,java.lang.Runnable) -> <init>
    47:51:void run() -> run
com.facebook.imagepipeline.core.ProducerFactory -> com.facebook.imagepipeline.core.ProducerFactory:
    125:152:void <init>(android.content.Context,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.decoder.ProgressiveJpegConfig,boolean,boolean,boolean,com.facebook.imagepipeline.core.ExecutorSupplier,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,int,int,boolean,int,com.facebook.imagepipeline.core.CloseableReferenceFactory) -> <init>
    157:157:com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer newAddImageTransformMetaDataProducer(com.facebook.imagepipeline.producers.Producer) -> newAddImageTransformMetaDataProducer
    344:344:com.facebook.imagepipeline.producers.ThreadHandoffProducer newBackgroundThreadHandoffProducer(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue) -> newBackgroundThreadHandoffProducer
    162:162:com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer newBitmapMemoryCacheGetProducer(com.facebook.imagepipeline.producers.Producer) -> newBitmapMemoryCacheGetProducer
    167:167:com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer newBitmapMemoryCacheKeyMultiplexProducer(com.facebook.imagepipeline.producers.Producer) -> newBitmapMemoryCacheKeyMultiplexProducer
    172:172:com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer newBitmapMemoryCacheProducer(com.facebook.imagepipeline.producers.Producer) -> newBitmapMemoryCacheProducer
    367:367:com.facebook.imagepipeline.producers.BitmapPrepareProducer newBitmapPrepareProducer(com.facebook.imagepipeline.producers.Producer) -> newBitmapPrepareProducer
    178:178:com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer newBranchOnSeparateImagesProducer(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.Producer) -> newBranchOnSeparateImagesProducer
    182:182:com.facebook.imagepipeline.producers.DataFetchProducer newDataFetchProducer() -> newDataFetchProducer
    186:188:com.facebook.imagepipeline.producers.DecodeProducer newDecodeProducer(com.facebook.imagepipeline.producers.Producer) -> newDecodeProducer
    201:201:com.facebook.imagepipeline.producers.DiskCacheReadProducer newDiskCacheReadProducer(com.facebook.imagepipeline.producers.Producer) -> newDiskCacheReadProducer
    211:211:com.facebook.imagepipeline.producers.DiskCacheWriteProducer newDiskCacheWriteProducer(com.facebook.imagepipeline.producers.Producer) -> newDiskCacheWriteProducer
    231:231:com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer newEncodedCacheKeyMultiplexProducer(com.facebook.imagepipeline.producers.Producer) -> newEncodedCacheKeyMultiplexProducer
    238:238:com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer newEncodedMemoryCacheProducer(com.facebook.imagepipeline.producers.Producer) -> newEncodedMemoryCacheProducer
    245:246:com.facebook.imagepipeline.producers.LocalAssetFetchProducer newLocalAssetFetchProducer() -> newLocalAssetFetchProducer
    252:253:com.facebook.imagepipeline.producers.LocalContentUriFetchProducer newLocalContentUriFetchProducer() -> newLocalContentUriFetchProducer
    259:260:com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer newLocalContentUriThumbnailFetchProducer() -> newLocalContentUriThumbnailFetchProducer
    266:267:com.facebook.imagepipeline.producers.LocalExifThumbnailProducer newLocalExifThumbnailProducer() -> newLocalExifThumbnailProducer
    278:279:com.facebook.imagepipeline.producers.LocalFileFetchProducer newLocalFileFetchProducer() -> newLocalFileFetchProducer
    291:292:com.facebook.imagepipeline.producers.LocalResourceFetchProducer newLocalResourceFetchProducer() -> newLocalResourceFetchProducer
    298:299:com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer newLocalVideoThumbnailProducer() -> newLocalVideoThumbnailProducer
    304:304:com.facebook.imagepipeline.producers.NetworkFetchProducer newNetworkFetchProducer(com.facebook.imagepipeline.producers.NetworkFetcher) -> newNetworkFetchProducer
    221:221:com.facebook.imagepipeline.producers.PartialDiskCacheProducer newPartialDiskCacheProducer(com.facebook.imagepipeline.producers.Producer) -> newPartialDiskCacheProducer
    316:316:com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer newPostprocessorBitmapMemoryCacheProducer(com.facebook.imagepipeline.producers.Producer) -> newPostprocessorBitmapMemoryCacheProducer
    322:323:com.facebook.imagepipeline.producers.PostprocessorProducer newPostprocessorProducer(com.facebook.imagepipeline.producers.Producer) -> newPostprocessorProducer
    284:285:com.facebook.imagepipeline.producers.QualifiedResourceFetchProducer newQualifiedResourceFetchProducer() -> newQualifiedResourceFetchProducer
    330:331:com.facebook.imagepipeline.producers.ResizeAndRotateProducer newResizeAndRotateProducer(com.facebook.imagepipeline.producers.Producer,boolean,com.facebook.imagepipeline.transcoder.ImageTranscoderFactory) -> newResizeAndRotateProducer
    339:339:com.facebook.imagepipeline.producers.SwallowResultProducer newSwallowResultProducer(com.facebook.imagepipeline.producers.Producer) -> newSwallowResultProducer
    351:353:com.facebook.imagepipeline.producers.ThrottlingProducer newThrottlingProducer(com.facebook.imagepipeline.producers.Producer) -> newThrottlingProducer
    274:274:com.facebook.imagepipeline.producers.ThumbnailBranchProducer newThumbnailBranchProducer(com.facebook.imagepipeline.producers.ThumbnailProducer[]) -> newThumbnailBranchProducer
    359:360:com.facebook.imagepipeline.producers.WebpTranscodeProducer newWebpTranscodeProducer(com.facebook.imagepipeline.producers.Producer) -> newWebpTranscodeProducer
com.facebook.imagepipeline.core.ProducerSequenceFactory -> com.facebook.imagepipeline.core.ProducerSequenceFactory:
    116:130:void <init>(android.content.ContentResolver,com.facebook.imagepipeline.core.ProducerFactory,com.facebook.imagepipeline.producers.NetworkFetcher,boolean,boolean,com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue,boolean,boolean,boolean,boolean,com.facebook.imagepipeline.transcoder.ImageTranscoderFactory) -> <init>
    555:580:com.facebook.imagepipeline.producers.Producer getBackgroundLocalContentUriFetchToEncodeMemorySequence() -> getBackgroundLocalContentUriFetchToEncodeMemorySequence
    521:546:com.facebook.imagepipeline.producers.Producer getBackgroundLocalFileFetchToEncodeMemorySequence() -> getBackgroundLocalFileFetchToEncodeMemorySequence
    407:427:com.facebook.imagepipeline.producers.Producer getBackgroundNetworkFetchToEncodedMemorySequence() -> getBackgroundNetworkFetchToEncodedMemorySequence
    338:372:com.facebook.imagepipeline.producers.Producer getBasicDecodedImageSequence(com.facebook.imagepipeline.request.ImageRequest) -> getBasicDecodedImageSequence
    890:898:com.facebook.imagepipeline.producers.Producer getBitmapPrepareSequence(com.facebook.imagepipeline.producers.Producer) -> getBitmapPrepareSequence
    459:486:com.facebook.imagepipeline.producers.Producer getCommonNetworkFetchToEncodedMemorySequence() -> getCommonNetworkFetchToEncodedMemorySequence
    706:717:com.facebook.imagepipeline.producers.Producer getDataFetchSequence() -> getDataFetchSequence
    298:312:com.facebook.imagepipeline.producers.Producer getDecodedImageProducerSequence(com.facebook.imagepipeline.request.ImageRequest) -> getDecodedImageProducerSequence
    267:271:com.facebook.imagepipeline.producers.Producer getEncodedImagePrefetchProducerSequence(com.facebook.imagepipeline.request.ImageRequest) -> getEncodedImagePrefetchProducerSequence
    143:164:com.facebook.imagepipeline.producers.Producer getEncodedImageProducerSequence(com.facebook.imagepipeline.request.ImageRequest) -> getEncodedImageProducerSequence
    691:697:com.facebook.imagepipeline.producers.Producer getLocalAssetFetchSequence() -> getLocalAssetFetchSequence
    233:253:com.facebook.imagepipeline.producers.Producer getLocalContentUriFetchEncodedImageProducerSequence() -> getLocalContentUriFetchEncodedImageProducerSequence
    629:641:com.facebook.imagepipeline.producers.Producer getLocalContentUriFetchSequence() -> getLocalContentUriFetchSequence
    203:223:com.facebook.imagepipeline.producers.Producer getLocalFileFetchEncodedImageProducerSequence() -> getLocalFileFetchEncodedImageProducerSequence
    494:513:com.facebook.imagepipeline.producers.Producer getLocalFileFetchToEncodedMemoryPrefetchSequence() -> getLocalFileFetchToEncodedMemoryPrefetchSequence
    593:599:com.facebook.imagepipeline.producers.Producer getLocalImageFileFetchSequence() -> getLocalImageFileFetchSequence
    673:679:com.facebook.imagepipeline.producers.Producer getLocalResourceFetchSequence() -> getLocalResourceFetchSequence
    608:614:com.facebook.imagepipeline.producers.Producer getLocalVideoFileFetchSequence() -> getLocalVideoFileFetchSequence
    174:194:com.facebook.imagepipeline.producers.Producer getNetworkFetchEncodedImageProducerSequence() -> getNetworkFetchEncodedImageProducerSequence
    383:399:com.facebook.imagepipeline.producers.Producer getNetworkFetchSequence() -> getNetworkFetchSequence
    435:454:com.facebook.imagepipeline.producers.Producer getNetworkFetchToEncodedMemoryPrefetchSequence() -> getNetworkFetchToEncodedMemoryPrefetchSequence
    862:869:com.facebook.imagepipeline.producers.Producer getPostprocessorSequence(com.facebook.imagepipeline.producers.Producer) -> getPostprocessorSequence
    654:660:com.facebook.imagepipeline.producers.Producer getQualifiedResourceFetchSequence() -> getQualifiedResourceFetchSequence
    902:903:java.lang.String getShortenedUriString(android.net.Uri) -> getShortenedUriString
    813:821:com.facebook.imagepipeline.producers.Producer newBitmapCacheGetToBitmapCacheSequence(com.facebook.imagepipeline.producers.Producer) -> newBitmapCacheGetToBitmapCacheSequence
    756:763:com.facebook.imagepipeline.producers.Producer newBitmapCacheGetToDecodeSequence(com.facebook.imagepipeline.producers.Producer) -> newBitmapCacheGetToDecodeSequence
    728:729:com.facebook.imagepipeline.producers.Producer newBitmapCacheGetToLocalTransformSequence(com.facebook.imagepipeline.producers.Producer) -> newBitmapCacheGetToLocalTransformSequence
    742:745:com.facebook.imagepipeline.producers.Producer newBitmapCacheGetToLocalTransformSequence(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.ThumbnailProducer[]) -> newBitmapCacheGetToLocalTransformSequence
    789:801:com.facebook.imagepipeline.producers.Producer newDiskCacheSequence(com.facebook.imagepipeline.producers.Producer) -> newDiskCacheSequence
    775:784:com.facebook.imagepipeline.producers.Producer newEncodedCacheMultiplexToTranscodeSequence(com.facebook.imagepipeline.producers.Producer) -> newEncodedCacheMultiplexToTranscodeSequence
    851:853:com.facebook.imagepipeline.producers.Producer newLocalThumbnailProducer(com.facebook.imagepipeline.producers.ThumbnailProducer[]) -> newLocalThumbnailProducer
    837:844:com.facebook.imagepipeline.producers.Producer newLocalTransformationsSequence(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.ThumbnailProducer[]) -> newLocalTransformationsSequence
    284:285:void validateEncodedImageRequest(com.facebook.imagepipeline.request.ImageRequest) -> validateEncodedImageRequest
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter -> com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter:
    38:63:void <init>(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener) -> <init>
    29:29:void access$000(com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter,java.lang.Throwable) -> access$000
    29:29:void access$100(com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter) -> access$100
    29:29:boolean access$200(com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter,float) -> access$200
    124:129:boolean close() -> close
    68:68:com.facebook.imagepipeline.producers.Consumer createConsumer() -> createConsumer
    114:115:void onCancellationImpl() -> onCancellationImpl
    104:105:void onFailureImpl(java.lang.Throwable) -> onFailureImpl
    92:95:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter$1 -> com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter$1:
    68:68:void <init>(com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter) -> <init>
    81:81:void onCancellationImpl() -> onCancellationImpl
    76:76:void onFailureImpl(java.lang.Throwable) -> onFailureImpl
    71:71:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    86:86:void onProgressUpdateImpl(float) -> onProgressUpdateImpl
com.facebook.imagepipeline.datasource.BaseBitmapDataSubscriber -> com.facebook.imagepipeline.datasource.BaseBitmapDataSubscriber:
    43:43:void <init>() -> <init>
    48:62:void onNewResultImpl(com.facebook.datasource.DataSource) -> onNewResultImpl
com.facebook.imagepipeline.datasource.BaseBitmapReferenceDataSubscriber -> com.facebook.imagepipeline.datasource.BaseBitmapReferenceDataSubscriber:
    45:45:void <init>() -> <init>
    50:65:void onNewResultImpl(com.facebook.datasource.DataSource) -> onNewResultImpl
com.facebook.imagepipeline.datasource.BaseListBitmapDataSubscriber -> com.facebook.imagepipeline.datasource.BaseListBitmapDataSubscriber:
    43:43:void <init>() -> <init>
    48:70:void onNewResultImpl(com.facebook.datasource.DataSource) -> onNewResultImpl
com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter -> com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter:
    47:47:void <init>(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener) -> <init>
    24:24:void closeResult(java.lang.Object) -> closeResult
    58:58:void closeResult(com.facebook.common.references.CloseableReference) -> closeResult
    32:38:com.facebook.datasource.DataSource create(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener) -> create
    24:24:java.lang.Object getResult() -> getResult
    53:53:com.facebook.common.references.CloseableReference getResult() -> getResult
    24:24:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    63:63:void onNewResultImpl(com.facebook.common.references.CloseableReference,int) -> onNewResultImpl
com.facebook.imagepipeline.datasource.ListDataSource -> com.facebook.imagepipeline.datasource.ListDataSource:
    31:31:void access$100(com.facebook.imagepipeline.datasource.ListDataSource,com.facebook.datasource.DataSource) -> access$100
    31:31:void access$200(com.facebook.imagepipeline.datasource.ListDataSource) -> access$200
    31:31:void access$300(com.facebook.imagepipeline.datasource.ListDataSource) -> access$300
    31:31:void access$400(com.facebook.imagepipeline.datasource.ListDataSource) -> access$400
    76:80:boolean close() -> close
    31:31:java.lang.Object getResult() -> getResult
    59:66:java.util.List getResult() -> getResult
    71:71:boolean hasResult() -> hasResult
    92:92:boolean increaseAndCheckIfLast() -> increaseAndCheckIfLast
    100:100:void onDataSourceCancelled() -> onDataSourceCancelled
    96:96:void onDataSourceFailed(com.facebook.datasource.DataSource) -> onDataSourceFailed
    86:87:void onDataSourceFinished() -> onDataSourceFinished
    105:108:void onDataSourceProgress() -> onDataSourceProgress
com.facebook.imagepipeline.datasource.ListDataSource$InternalDataSubscriber -> com.facebook.imagepipeline.datasource.ListDataSource$InternalDataSubscriber:
    130:130:void onCancellation(com.facebook.datasource.DataSource) -> onCancellation
    125:125:void onFailure(com.facebook.datasource.DataSource) -> onFailure
    135:136:void onNewResult(com.facebook.datasource.DataSource) -> onNewResult
    142:142:void onProgressUpdate(com.facebook.datasource.DataSource) -> onProgressUpdate
    116:120:boolean tryFinish() -> tryFinish
com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter -> com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter:
    39:39:void <init>(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener) -> <init>
    29:29:com.facebook.datasource.DataSource create(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener) -> create
com.facebook.imagepipeline.datasource.SettableDataSource -> com.facebook.imagepipeline.datasource.SettableDataSource:
    33:33:void <init>() -> <init>
    23:23:void closeResult(java.lang.Object) -> closeResult
    90:90:void closeResult(com.facebook.common.references.CloseableReference) -> closeResult
    23:23:java.lang.Object getResult() -> getResult
    85:85:com.facebook.common.references.CloseableReference getResult() -> getResult
com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker -> com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker:
    12:12:void <init>() -> <init>
com.facebook.imagepipeline.decoder.DecodeException -> com.facebook.imagepipeline.decoder.DecodeException:
    17:18:void <init>(java.lang.String,com.facebook.imagepipeline.image.EncodedImage) -> <init>
    27:27:com.facebook.imagepipeline.image.EncodedImage getEncodedImage() -> getEncodedImage
com.facebook.imagepipeline.decoder.DefaultImageDecoder -> com.facebook.imagepipeline.decoder.DefaultImageDecoder:
    77:77:void <init>(com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.platform.PlatformDecoder) -> <init>
    84:88:void <init>(com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.platform.PlatformDecoder,java.util.Map) -> <init>
    106:121:com.facebook.imagepipeline.image.CloseableImage decode(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions) -> decode
    209:209:com.facebook.imagepipeline.image.CloseableImage decodeAnimatedWebp(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions) -> decodeAnimatedWebp
    135:137:com.facebook.imagepipeline.image.CloseableImage decodeGif(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions) -> decodeGif
    180:191:com.facebook.imagepipeline.image.CloseableStaticBitmap decodeJpeg(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions) -> decodeJpeg
    152:163:com.facebook.imagepipeline.image.CloseableStaticBitmap decodeStaticImage(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.ImageDecodeOptions) -> decodeStaticImage
    217:222:void maybeApplyTransformation(com.facebook.imagepipeline.transformation.BitmapTransformation,com.facebook.common.references.CloseableReference) -> maybeApplyTransformation
com.facebook.imagepipeline.decoder.DefaultImageDecoder$1 -> com.facebook.imagepipeline.decoder.DefaultImageDecoder$1:
    49:49:void <init>(com.facebook.imagepipeline.decoder.DefaultImageDecoder) -> <init>
    56:64:com.facebook.imagepipeline.image.CloseableImage decode(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions) -> decode
com.facebook.imagepipeline.decoder.ImageDecoderConfig -> com.facebook.imagepipeline.decoder.ImageDecoderConfig:
    30:30:java.util.Map getCustomImageDecoders() -> getCustomImageDecoders
    34:34:java.util.List getCustomImageFormats() -> getCustomImageFormats
com.facebook.imagepipeline.decoder.ImageDecoderConfig$Builder -> com.facebook.imagepipeline.decoder.ImageDecoderConfig$Builder:
    40:40:void <init>() -> <init>
com.facebook.imagepipeline.decoder.ProgressiveJpegParser -> com.facebook.imagepipeline.decoder.ProgressiveJpegParser:
    93:100:void <init>(com.facebook.common.memory.ByteArrayPool) -> <init>
    151:235:boolean doParseMoreData(java.io.InputStream) -> doParseMoreData
    270:270:int getBestScanEndOffset() -> getBestScanEndOffset
    277:277:int getBestScanNumber() -> getBestScanNumber
    284:284:boolean isEndMarkerRead() -> isEndMarkerRead
    256:259:void newScanOrImageEndFound(int) -> newScanOrImageEndFound
    116:141:boolean parseMoreData(com.facebook.imagepipeline.image.EncodedImage) -> parseMoreData
com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig -> com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig:
    40:40:void <init>() -> <init>
    45:46:void <init>(com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DynamicValueConfig) -> <init>
    51:58:int getNextScanNumberToDecode(int) -> getNextScanNumberToDecode
    66:66:com.facebook.imagepipeline.image.QualityInfo getQualityInfo(int) -> getQualityInfo
com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DefaultDynamicValueConfig -> com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DefaultDynamicValueConfig:
    27:27:void <init>() -> <init>
    27:27:void <init>(com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$1) -> <init>
    29:29:java.util.List getScansToDecode() -> getScansToDecode
com.facebook.imagepipeline.filter.InPlaceRoundFilter -> com.facebook.imagepipeline.filter.InPlaceRoundFilter:
    19:19:void <init>() -> <init>
    29:131:void roundBitmapInPlace(android.graphics.Bitmap) -> roundBitmapInPlace
com.facebook.imagepipeline.filter.IterativeBoxBlurFilter -> com.facebook.imagepipeline.filter.IterativeBoxBlurFilter:
    15:15:void <init>() -> <init>
    37:55:void boxBlurBitmapInPlace(android.graphics.Bitmap,int,int) -> boxBlurBitmapInPlace
    60:101:void fastBoxBlur(android.graphics.Bitmap,int,int) -> fastBoxBlur
    123:136:void internalHorizontalBlur(int[],int[],int,int,int,int[]) -> internalHorizontalBlur
    165:179:void internalVerticalBlur(int[],int[],int,int,int,int,int[]) -> internalVerticalBlur
com.facebook.imagepipeline.filter.RenderScriptBlurFilter -> com.facebook.imagepipeline.filter.RenderScriptBlurFilter:
    19:19:void <init>() -> <init>
    36:58:void blurBitmap(android.graphics.Bitmap,android.graphics.Bitmap,android.content.Context,int) -> blurBitmap
    64:64:boolean canUseRenderScript() -> canUseRenderScript
com.facebook.imagepipeline.filter.XferRoundFilter -> com.facebook.imagepipeline.filter.XferRoundFilter:
    27:27:void <init>() -> <init>
    54:54:boolean canUseXferRoundFilter() -> canUseXferRoundFilter
    31:50:void xferRoundBitmap(android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> xferRoundBitmap
com.facebook.imagepipeline.image.CloseableBitmap -> com.facebook.imagepipeline.image.CloseableBitmap:
    14:14:void <init>() -> <init>
com.facebook.imagepipeline.image.CloseableImage -> com.facebook.imagepipeline.image.CloseableImage:
    16:16:void <init>() -> <init>
    58:69:void finalize() -> finalize
    41:41:com.facebook.imagepipeline.image.QualityInfo getQualityInfo() -> getQualityInfo
com.facebook.imagepipeline.image.CloseableStaticBitmap -> com.facebook.imagepipeline.image.CloseableStaticBitmap:
    48:48:void <init>(android.graphics.Bitmap,com.facebook.common.references.ResourceReleaser,com.facebook.imagepipeline.image.QualityInfo,int) -> <init>
    62:69:void <init>(android.graphics.Bitmap,com.facebook.common.references.ResourceReleaser,com.facebook.imagepipeline.image.QualityInfo,int,int) -> <init>
    95:100:void <init>(com.facebook.common.references.CloseableReference,com.facebook.imagepipeline.image.QualityInfo,int,int) -> <init>
    147:147:com.facebook.common.references.CloseableReference cloneUnderlyingBitmapReference() -> cloneUnderlyingBitmapReference
    108:110:void close() -> close
    115:118:com.facebook.common.references.CloseableReference detachBitmapReference() -> detachBitmapReference
    207:207:int getBitmapHeight(android.graphics.Bitmap) -> getBitmapHeight
    203:203:int getBitmapWidth(android.graphics.Bitmap) -> getBitmapWidth
    219:219:int getExifOrientation() -> getExifOrientation
    194:197:int getHeight() -> getHeight
    225:225:com.facebook.imagepipeline.image.QualityInfo getQualityInfo() -> getQualityInfo
    214:214:int getRotationAngle() -> getRotationAngle
    173:173:int getSizeInBytes() -> getSizeInBytes
    165:165:android.graphics.Bitmap getUnderlyingBitmap() -> getUnderlyingBitmap
    181:184:int getWidth() -> getWidth
    155:155:boolean isClosed() -> isClosed
com.facebook.imagepipeline.image.EncodedImage -> com.facebook.imagepipeline.image.EncodedImage:
    72:75:void <init>(com.facebook.common.references.CloseableReference) -> <init>
    78:81:void <init>(com.facebook.common.internal.Supplier) -> <init>
    85:86:void <init>(com.facebook.common.internal.Supplier,int) -> <init>
    95:95:com.facebook.imagepipeline.image.EncodedImage cloneOrNull(com.facebook.imagepipeline.image.EncodedImage) -> cloneOrNull
    100:109:com.facebook.imagepipeline.image.EncodedImage cloneOrNull() -> cloneOrNull
    123:123:void close() -> close
    443:443:void closeSafely(com.facebook.imagepipeline.image.EncodedImage) -> closeSafely
    416:424:void copyMetaDataFrom(com.facebook.imagepipeline.image.EncodedImage) -> copyMetaDataFrom
    140:140:com.facebook.common.references.CloseableReference getByteBufferRef() -> getByteBufferRef
    274:274:com.facebook.imagepipeline.common.BytesRange getBytesRange() -> getBytesRange
    259:260:android.graphics.ColorSpace getColorSpace() -> getColorSpace
    235:236:int getExifOrientation() -> getExifOrientation
    315:329:java.lang.String getFirstBytesAsHexString(int) -> getFirstBytesAsHexString
    249:250:int getHeight() -> getHeight
    220:221:com.facebook.imageformat.ImageFormat getImageFormat() -> getImageFormat
    150:159:java.io.InputStream getInputStream() -> getInputStream
    229:230:int getRotationAngle() -> getRotationAngle
    269:269:int getSampleSize() -> getSampleSize
    303:306:int getSize() -> getSize
    241:242:int getWidth() -> getWidth
    282:293:boolean isCompleteAt(int) -> isCompleteAt
    431:431:boolean isMetaDataAvailable(com.facebook.imagepipeline.image.EncodedImage) -> isMetaDataAvailable
    131:131:boolean isValid() -> isValid
    452:452:boolean isValid(com.facebook.imagepipeline.image.EncodedImage) -> isValid
    348:369:void parseMetaData() -> parseMetaData
    340:341:void parseMetaDataIfNeeded() -> parseMetaDataIfNeeded
    390:404:com.facebook.imageutils.ImageMetaData readImageMetaData() -> readImageMetaData
    377:380:android.util.Pair readWebPImageSize() -> readWebPImageSize
    213:213:void setBytesRange(com.facebook.imagepipeline.common.BytesRange) -> setBytesRange
    195:195:void setExifOrientation(int) -> setExifOrientation
    176:176:void setHeight(int) -> setHeight
    169:169:void setImageFormat(com.facebook.imageformat.ImageFormat) -> setImageFormat
    190:190:void setRotationAngle(int) -> setRotationAngle
    200:200:void setSampleSize(int) -> setSampleSize
    183:183:void setWidth(int) -> setWidth
com.facebook.imagepipeline.image.ImmutableQualityInfo -> com.facebook.imagepipeline.image.ImmutableQualityInfo:
    15:15:void <clinit>() -> <clinit>
    24:27:void <init>(int,boolean,boolean) -> <init>
    55:59:boolean equals(java.lang.Object) -> equals
    32:32:int getQuality() -> getQuality
    47:47:int hashCode() -> hashCode
    42:42:boolean isOfFullQuality() -> isOfFullQuality
    37:37:boolean isOfGoodEnoughQuality() -> isOfGoodEnoughQuality
    68:68:com.facebook.imagepipeline.image.QualityInfo of(int,boolean,boolean) -> of
com.facebook.imagepipeline.listener.BaseRequestListener -> com.facebook.imagepipeline.listener.BaseRequestListener:
    13:13:void <init>() -> <init>
com.facebook.imagepipeline.listener.ForwardingRequestListener -> com.facebook.imagepipeline.listener.ForwardingRequestListener:
    23:27:void <init>(java.util.Set) -> <init>
    32:36:void <init>(com.facebook.imagepipeline.listener.RequestListener[]) -> <init>
    42:42:void addRequestListener(com.facebook.imagepipeline.listener.RequestListener) -> addRequestListener
    209:209:void onException(java.lang.String,java.lang.Throwable) -> onException
    125:132:void onProducerEvent(java.lang.String,java.lang.String,java.lang.String) -> onProducerEvent
    110:117:void onProducerFinishWithCancellation(java.lang.String,java.lang.String,java.util.Map) -> onProducerFinishWithCancellation
    95:102:void onProducerFinishWithFailure(java.lang.String,java.lang.String,java.lang.Throwable,java.util.Map) -> onProducerFinishWithFailure
    77:84:void onProducerFinishWithSuccess(java.lang.String,java.lang.String,java.util.Map) -> onProducerFinishWithSuccess
    62:69:void onProducerStart(java.lang.String,java.lang.String) -> onProducerStart
    185:192:void onRequestCancellation(java.lang.String) -> onRequestCancellation
    171:178:void onRequestFailure(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.Throwable,boolean) -> onRequestFailure
    48:55:void onRequestStart(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,java.lang.String,boolean) -> onRequestStart
    153:160:void onRequestSuccess(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,boolean) -> onRequestSuccess
    139:146:void onUltimateProducerReached(java.lang.String,java.lang.String,boolean) -> onUltimateProducerReached
    199:201:boolean requiresExtraMap(java.lang.String) -> requiresExtraMap
com.facebook.imagepipeline.listener.RequestLoggingListener -> com.facebook.imagepipeline.listener.RequestLoggingListener:
    30:32:void <init>() -> <init>
    230:230:long getElapsedTime(java.lang.Long,long) -> getElapsedTime
    236:236:long getTime() -> getTime
    137:150:void onProducerEvent(java.lang.String,java.lang.String,java.lang.String) -> onProducerEvent
    118:132:void onProducerFinishWithCancellation(java.lang.String,java.lang.String,java.util.Map) -> onProducerFinishWithCancellation
    95:111:void onProducerFinishWithFailure(java.lang.String,java.lang.String,java.lang.Throwable,java.util.Map) -> onProducerFinishWithFailure
    73:87:void onProducerFinishWithSuccess(java.lang.String,java.lang.String,java.util.Map) -> onProducerFinishWithSuccess
    55:66:void onProducerStart(java.lang.String,java.lang.String) -> onProducerStart
    211:221:void onRequestCancellation(java.lang.String) -> onRequestCancellation
    196:207:void onRequestFailure(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.Throwable,boolean) -> onRequestFailure
    41:51:void onRequestStart(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,java.lang.String,boolean) -> onRequestStart
    178:188:void onRequestSuccess(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,boolean) -> onRequestSuccess
    157:171:void onUltimateProducerReached(java.lang.String,java.lang.String,boolean) -> onUltimateProducerReached
    225:225:boolean requiresExtraMap(java.lang.String) -> requiresExtraMap
com.facebook.imagepipeline.memory.BasePool -> com.facebook.imagepipeline.memory.BasePool:
    165:181:void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker) -> <init>
    736:757:boolean canAllocate(int) -> canAllocate
    451:452:void ensurePoolSizeInvariant() -> ensurePoolSizeInvariant
    509:513:void fillBuckets(android.util.SparseIntArray) -> fillBuckets
    211:259:java.lang.Object get(int) -> get
    689:691:com.facebook.imagepipeline.memory.Bucket getBucket(int) -> getBucket
    678:678:com.facebook.imagepipeline.memory.Bucket getBucketIfPresent(int) -> getBucketIfPresent
    195:195:java.lang.Object getValue(com.facebook.imagepipeline.memory.Bucket) -> getValue
    492:501:void initBuckets() -> initBuckets
    188:189:void initialize() -> initialize
    717:722:boolean isMaxSizeSoftCapExceeded() -> isMaxSizeSoftCapExceeded
    442:442:boolean isReusable(java.lang.Object) -> isReusable
    461:485:void legacyInitBuckets(android.util.SparseIntArray) -> legacyInitBuckets
    766:767:void logStats() -> logStats
    704:705:com.facebook.imagepipeline.memory.Bucket newBucket(int) -> newBucket
    315:374:void release(java.lang.Object) -> release
    628:669:void trimToSize(int) -> trimToSize
    607:610:void trimToSoftCap() -> trimToSoftCap
com.facebook.imagepipeline.memory.BasePool$Counter -> com.facebook.imagepipeline.memory.BasePool$Counter:
    808:808:void <init>() -> <init>
    828:832:void decrement(int) -> decrement
    819:820:void increment(int) -> increment
com.facebook.imagepipeline.memory.BasePool$InvalidSizeException -> com.facebook.imagepipeline.memory.BasePool$InvalidSizeException:
    864:864:void <init>(java.lang.Object) -> <init>
com.facebook.imagepipeline.memory.BasePool$PoolSizeViolationException -> com.facebook.imagepipeline.memory.BasePool$PoolSizeViolationException:
    883:883:void <init>(int,int,int,int) -> <init>
com.facebook.imagepipeline.memory.BitmapCounter -> com.facebook.imagepipeline.memory.BitmapCounter:
    38:43:void <init>(int,int) -> <init>
    78:87:void decrease(android.graphics.Bitmap) -> decrease
    93:93:int getCount() -> getCount
    104:104:int getMaxCount() -> getMaxCount
    108:108:int getMaxSize() -> getMaxSize
    112:112:com.facebook.common.references.ResourceReleaser getReleaser() -> getReleaser
    100:100:long getSize() -> getSize
    63:65:boolean increase(android.graphics.Bitmap) -> increase
com.facebook.imagepipeline.memory.BitmapCounter$1 -> com.facebook.imagepipeline.memory.BitmapCounter$1:
    43:43:void <init>(com.facebook.imagepipeline.memory.BitmapCounter) -> <init>
    43:43:void release(java.lang.Object) -> release
    47:49:void release(android.graphics.Bitmap) -> release
com.facebook.imagepipeline.memory.BitmapCounterConfig$Builder -> com.facebook.imagepipeline.memory.BitmapCounterConfig$Builder:
    33:33:void <init>() -> <init>
com.facebook.imagepipeline.memory.BitmapCounterProvider -> com.facebook.imagepipeline.memory.BitmapCounterProvider:
    26:28:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    51:58:com.facebook.imagepipeline.memory.BitmapCounter get() -> get
    33:37:int getMaxSizeHardCap() -> getMaxSizeHardCap
com.facebook.imagepipeline.memory.BitmapPoolBackend -> com.facebook.imagepipeline.memory.BitmapPoolBackend:
    17:17:void <init>() -> <init>
    17:17:java.lang.Object get(int) -> get
    31:33:android.graphics.Bitmap get(int) -> get
    17:17:int getSize(java.lang.Object) -> getSize
    41:41:int getSize(android.graphics.Bitmap) -> getSize
    48:53:boolean isReusable(android.graphics.Bitmap) -> isReusable
    17:17:void put(java.lang.Object) -> put
    23:24:void put(android.graphics.Bitmap) -> put
com.facebook.imagepipeline.memory.Bucket -> com.facebook.imagepipeline.memory.Bucket:
    61:71:void <init>(int,int,int,boolean) -> <init>
    144:144:void addToFreeList(java.lang.Object) -> addToFreeList
    153:154:void decrementInUseCount() -> decrementInUseCount
    95:97:java.lang.Object get() -> get
    83:83:int getFreeListSize() -> getFreeListSize
    118:118:void incrementInUseCount() -> incrementInUseCount
    79:79:boolean isMaxLengthExceeded() -> isMaxLengthExceeded
    109:109:java.lang.Object pop() -> pop
    126:138:void release(java.lang.Object) -> release
com.facebook.imagepipeline.memory.BucketMap -> com.facebook.imagepipeline.memory.BucketMap:
    20:21:void <init>() -> <init>
    53:60:java.lang.Object acquire(int) -> acquire
    149:151:void maybePrune(com.facebook.imagepipeline.memory.BucketMap$LinkedEntry) -> maybePrune
    119:133:void moveToFront(com.facebook.imagepipeline.memory.BucketMap$LinkedEntry) -> moveToFront
    97:116:void prune(com.facebook.imagepipeline.memory.BucketMap$LinkedEntry) -> prune
    69:78:void release(int,java.lang.Object) -> release
    138:145:java.lang.Object removeFromEnd() -> removeFromEnd
com.facebook.imagepipeline.memory.BucketMap$LinkedEntry -> com.facebook.imagepipeline.memory.BucketMap$LinkedEntry:
    26:26:void <init>(com.facebook.imagepipeline.memory.BucketMap$LinkedEntry,int,java.util.LinkedList,com.facebook.imagepipeline.memory.BucketMap$LinkedEntry,com.facebook.imagepipeline.memory.BucketMap$1) -> <init>
    33:37:void <init>(com.facebook.imagepipeline.memory.BucketMap$LinkedEntry,int,java.util.LinkedList,com.facebook.imagepipeline.memory.BucketMap$LinkedEntry) -> <init>
    42:42:java.lang.String toString() -> toString
com.facebook.imagepipeline.memory.BucketsBitmapPool -> com.facebook.imagepipeline.memory.BucketsBitmapPool:
    42:43:void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker) -> <init>
    29:29:java.lang.Object alloc(int) -> alloc
    54:54:android.graphics.Bitmap alloc(int) -> alloc
    29:29:void free(java.lang.Object) -> free
    66:67:void free(android.graphics.Bitmap) -> free
    29:29:int getBucketedSizeForValue(java.lang.Object) -> getBucketedSizeForValue
    89:90:int getBucketedSizeForValue(android.graphics.Bitmap) -> getBucketedSizeForValue
    29:29:java.lang.Object getValue(com.facebook.imagepipeline.memory.Bucket) -> getValue
    122:124:android.graphics.Bitmap getValue(com.facebook.imagepipeline.memory.Bucket) -> getValue
    29:29:boolean isReusable(java.lang.Object) -> isReusable
    114:116:boolean isReusable(android.graphics.Bitmap) -> isReusable
com.facebook.imagepipeline.memory.BufferMemoryChunk -> com.facebook.imagepipeline.memory.BufferMemoryChunk:
    34:37:void <init>(int) -> <init>
    42:43:void close() -> close
    92:128:void copy(int,com.facebook.imagepipeline.memory.MemoryChunk,int,int) -> copy
    153:154:void doCopy(int,com.facebook.imagepipeline.memory.MemoryChunk,int,int) -> doCopy
    139:139:java.nio.ByteBuffer getByteBuffer() -> getByteBuffer
    133:133:long getNativePtr() -> getNativePtr
    52:52:int getSize() -> getSize
    144:144:long getUniqueId() -> getUniqueId
    47:47:boolean isClosed() -> isClosed
    71:78:int read(int,byte[],int,int) -> read
    83:86:byte read(int) -> read
    58:65:int write(int,byte[],int,int) -> write
com.facebook.imagepipeline.memory.BufferMemoryChunkPool -> com.facebook.imagepipeline.memory.BufferMemoryChunkPool:
    20:20:void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker) -> <init>
    13:13:com.facebook.imagepipeline.memory.MemoryChunk alloc(int) -> alloc
    13:13:java.lang.Object alloc(int) -> alloc
    25:25:com.facebook.imagepipeline.memory.BufferMemoryChunk alloc(int) -> alloc
com.facebook.imagepipeline.memory.DefaultBitmapPoolParams -> com.facebook.imagepipeline.memory.DefaultBitmapPoolParams:
    43:43:void <clinit>() -> <clinit>
    22:22:void <init>() -> <init>
    46:48:com.facebook.imagepipeline.memory.PoolParams get() -> get
    32:36:int getMaxSizeHardCap() -> getMaxSizeHardCap
com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams -> com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams:
    16:16:void <init>() -> <init>
    38:40:com.facebook.imagepipeline.memory.PoolParams get() -> get
com.facebook.imagepipeline.memory.DefaultFlexByteArrayPoolParams -> com.facebook.imagepipeline.memory.DefaultFlexByteArrayPoolParams:
    22:22:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    28:30:android.util.SparseIntArray generateBuckets(int,int,int) -> generateBuckets
    36:39:com.facebook.imagepipeline.memory.PoolParams get() -> get
com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams -> com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams:
    17:17:void <init>() -> <init>
    30:44:com.facebook.imagepipeline.memory.PoolParams get() -> get
    69:73:int getMaxSizeHardCap() -> getMaxSizeHardCap
    54:54:int getMaxSizeSoftCap() -> getMaxSizeSoftCap
com.facebook.imagepipeline.memory.DummyBitmapPool -> com.facebook.imagepipeline.memory.DummyBitmapPool:
    14:14:void <init>() -> <init>
    14:14:java.lang.Object get(int) -> get
    23:23:android.graphics.Bitmap get(int) -> get
    14:14:void release(java.lang.Object) -> release
    31:32:void release(android.graphics.Bitmap) -> release
com.facebook.imagepipeline.memory.DummyTrackingInUseBitmapPool -> com.facebook.imagepipeline.memory.DummyTrackingInUseBitmapPool:
    21:22:void <init>() -> <init>
    16:16:java.lang.Object get(int) -> get
    32:37:android.graphics.Bitmap get(int) -> get
    16:16:void release(java.lang.Object) -> release
    43:45:void release(android.graphics.Bitmap) -> release
com.facebook.imagepipeline.memory.FlexByteArrayPool -> com.facebook.imagepipeline.memory.FlexByteArrayPool:
    32:38:void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams) -> <init>
    47:47:com.facebook.common.references.CloseableReference get(int) -> get
    51:51:void release(byte[]) -> release
com.facebook.imagepipeline.memory.FlexByteArrayPool$1 -> com.facebook.imagepipeline.memory.FlexByteArrayPool$1:
    38:38:void <init>(com.facebook.imagepipeline.memory.FlexByteArrayPool) -> <init>
    38:38:void release(java.lang.Object) -> release
    41:41:void release(byte[]) -> release
com.facebook.imagepipeline.memory.FlexByteArrayPool$SoftRefByteArrayPool -> com.facebook.imagepipeline.memory.FlexByteArrayPool$SoftRefByteArrayPool:
    67:67:void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker) -> <init>
    72:73:com.facebook.imagepipeline.memory.Bucket newBucket(int) -> newBucket
com.facebook.imagepipeline.memory.GenericByteArrayPool -> com.facebook.imagepipeline.memory.GenericByteArrayPool:
    40:46:void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker) -> <init>
    26:26:java.lang.Object alloc(int) -> alloc
    64:64:byte[] alloc(int) -> alloc
    26:26:void free(java.lang.Object) -> free
    73:73:void free(byte[]) -> free
    105:101:int getBucketedSize(int) -> getBucketedSize
    26:26:int getBucketedSizeForValue(java.lang.Object) -> getBucketedSizeForValue
    123:124:int getBucketedSizeForValue(byte[]) -> getBucketedSizeForValue
com.facebook.imagepipeline.memory.LruBitmapPool -> com.facebook.imagepipeline.memory.LruBitmapPool:
    27:32:void <init>(int,int,com.facebook.imagepipeline.memory.PoolStatsTracker,com.facebook.common.memory.MemoryTrimmableRegistry) -> <init>
    71:72:android.graphics.Bitmap alloc(int) -> alloc
    15:15:java.lang.Object get(int) -> get
    56:66:android.graphics.Bitmap get(int) -> get
    15:15:void release(java.lang.Object) -> release
    77:83:void release(android.graphics.Bitmap) -> release
    42:52:void trimTo(int) -> trimTo
com.facebook.imagepipeline.memory.LruBucketsPoolBackend -> com.facebook.imagepipeline.memory.LruBucketsPoolBackend:
    27:25:void <init>() -> <init>
    32:32:java.lang.Object get(int) -> get
    54:56:java.lang.Object maybeRemoveFromCurrentItems(java.lang.Object) -> maybeRemoveFromCurrentItems
    49:49:java.lang.Object pop() -> pop
    38:40:void put(java.lang.Object) -> put
com.facebook.imagepipeline.memory.MemoryChunkPool -> com.facebook.imagepipeline.memory.MemoryChunkPool:
    30:36:void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker) -> <init>
    15:15:java.lang.Object alloc(int) -> alloc
    15:15:void free(java.lang.Object) -> free
    49:50:void free(com.facebook.imagepipeline.memory.MemoryChunk) -> free
    65:61:int getBucketedSize(int) -> getBucketedSize
    15:15:int getBucketedSizeForValue(java.lang.Object) -> getBucketedSizeForValue
    78:79:int getBucketedSizeForValue(com.facebook.imagepipeline.memory.MemoryChunk) -> getBucketedSizeForValue
    41:41:int getMinBufferSize() -> getMinBufferSize
    15:15:boolean isReusable(java.lang.Object) -> isReusable
    84:85:boolean isReusable(com.facebook.imagepipeline.memory.MemoryChunk) -> isReusable
com.facebook.imagepipeline.memory.MemoryChunkUtil -> com.facebook.imagepipeline.memory.MemoryChunkUtil:
    11:11:void <init>() -> <init>
    18:19:int adjustByteCount(int,int,int) -> adjustByteCount
    29:33:void checkBounds(int,int,int,int,int) -> checkBounds
com.facebook.imagepipeline.memory.MemoryPooledByteBuffer -> com.facebook.imagepipeline.memory.MemoryPooledByteBuffer:
    32:36:void <init>(com.facebook.common.references.CloseableReference,int) -> <init>
    92:94:void close() -> close
    104:105:void ensureValid() -> ensureValid
    82:82:boolean isClosed() -> isClosed
    53:56:byte read(int) -> read
    61:65:int read(int,byte[],int,int) -> read
    47:48:int size() -> size
com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory -> com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory:
    30:32:void <init>(com.facebook.imagepipeline.memory.MemoryChunkPool,com.facebook.common.memory.PooledByteStreams) -> <init>
    95:96:com.facebook.imagepipeline.memory.MemoryPooledByteBuffer newByteBuf(java.io.InputStream,com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream) -> newByteBuf
    24:24:com.facebook.common.memory.PooledByteBuffer newByteBuffer(java.io.InputStream) -> newByteBuffer
    24:24:com.facebook.common.memory.PooledByteBuffer newByteBuffer(java.io.InputStream,int) -> newByteBuffer
    24:24:com.facebook.common.memory.PooledByteBuffer newByteBuffer(byte[]) -> newByteBuffer
    48:52:com.facebook.imagepipeline.memory.MemoryPooledByteBuffer newByteBuffer(java.io.InputStream) -> newByteBuffer
    58:66:com.facebook.imagepipeline.memory.MemoryPooledByteBuffer newByteBuffer(byte[]) -> newByteBuffer
    73:78:com.facebook.imagepipeline.memory.MemoryPooledByteBuffer newByteBuffer(java.io.InputStream,int) -> newByteBuffer
    24:24:com.facebook.common.memory.PooledByteBufferOutputStream newOutputStream() -> newOutputStream
    24:24:com.facebook.common.memory.PooledByteBufferOutputStream newOutputStream(int) -> newOutputStream
    101:101:com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream newOutputStream() -> newOutputStream
    106:106:com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream newOutputStream(int) -> newOutputStream
com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream -> com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream:
    33:33:void <init>(com.facebook.imagepipeline.memory.MemoryChunkPool) -> <init>
    46:51:void <init>(com.facebook.imagepipeline.memory.MemoryChunkPool,int) -> <init>
    122:125:void close() -> close
    154:155:void ensureValid() -> ensureValid
    137:145:void realloc(int) -> realloc
    73:73:int size() -> size
    21:21:com.facebook.common.memory.PooledByteBuffer toByteBuffer() -> toByteBuffer
    63:64:com.facebook.imagepipeline.memory.MemoryPooledByteBuffer toByteBuffer() -> toByteBuffer
    86:86:void write(int) -> write
    105:106:void write(byte[],int,int) -> write
com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream$InvalidStreamException -> com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream$InvalidStreamException:
    164:164:void <init>() -> <init>
com.facebook.imagepipeline.memory.NativeMemoryChunk -> com.facebook.imagepipeline.memory.NativeMemoryChunk:
    31:31:void <clinit>() -> <clinit>
    47:51:void <init>(int) -> <init>
    55:58:void <init>() -> <init>
    63:67:void close() -> close
    130:167:void copy(int,com.facebook.imagepipeline.memory.MemoryChunk,int,int) -> copy
    176:177:void doCopy(int,com.facebook.imagepipeline.memory.MemoryChunk,int,int) -> doCopy
    192:205:void finalize() -> finalize
    113:113:long getNativePtr() -> getNativePtr
    76:76:int getSize() -> getSize
    124:124:long getUniqueId() -> getUniqueId
    71:71:boolean isClosed() -> isClosed
    94:100:int read(int,byte[],int,int) -> read
    105:108:byte read(int) -> read
    82:88:int write(int,byte[],int,int) -> write
com.facebook.imagepipeline.memory.NativeMemoryChunkPool -> com.facebook.imagepipeline.memory.NativeMemoryChunkPool:
    20:20:void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker) -> <init>
    13:13:com.facebook.imagepipeline.memory.MemoryChunk alloc(int) -> alloc
    13:13:java.lang.Object alloc(int) -> alloc
    25:25:com.facebook.imagepipeline.memory.NativeMemoryChunk alloc(int) -> alloc
com.facebook.imagepipeline.memory.NoOpPoolStatsTracker -> com.facebook.imagepipeline.memory.NoOpPoolStatsTracker:
    16:16:void <init>() -> <init>
    20:23:com.facebook.imagepipeline.memory.NoOpPoolStatsTracker getInstance() -> getInstance
com.facebook.imagepipeline.memory.OOMSoftReferenceBucket -> com.facebook.imagepipeline.memory.OOMSoftReferenceBucket:
    23:24:void <init>(int,int,int) -> <init>
    38:43:void addToFreeList(java.lang.Object) -> addToFreeList
    29:32:java.lang.Object pop() -> pop
com.facebook.imagepipeline.memory.PoolConfig -> com.facebook.imagepipeline.memory.PoolConfig:
    21:21:void <init>(com.facebook.imagepipeline.memory.PoolConfig$Builder,com.facebook.imagepipeline.memory.PoolConfig$1) -> <init>
    41:87:void <init>(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> <init>
    132:132:int getBitmapPoolMaxBitmapSize() -> getBitmapPoolMaxBitmapSize
    128:128:int getBitmapPoolMaxPoolSize() -> getBitmapPoolMaxPoolSize
    92:92:com.facebook.imagepipeline.memory.PoolParams getBitmapPoolParams() -> getBitmapPoolParams
    96:96:com.facebook.imagepipeline.memory.PoolStatsTracker getBitmapPoolStatsTracker() -> getBitmapPoolStatsTracker
    124:124:java.lang.String getBitmapPoolType() -> getBitmapPoolType
    112:112:com.facebook.imagepipeline.memory.PoolParams getFlexByteArrayPoolParams() -> getFlexByteArrayPoolParams
    104:104:com.facebook.imagepipeline.memory.PoolParams getMemoryChunkPoolParams() -> getMemoryChunkPoolParams
    108:108:com.facebook.imagepipeline.memory.PoolStatsTracker getMemoryChunkPoolStatsTracker() -> getMemoryChunkPoolStatsTracker
    100:100:com.facebook.common.memory.MemoryTrimmableRegistry getMemoryTrimmableRegistry() -> getMemoryTrimmableRegistry
    116:116:com.facebook.imagepipeline.memory.PoolParams getSmallByteArrayPoolParams() -> getSmallByteArrayPoolParams
    120:120:com.facebook.imagepipeline.memory.PoolStatsTracker getSmallByteArrayPoolStatsTracker() -> getSmallByteArrayPoolStatsTracker
    136:136:boolean isRegisterLruBitmapPoolAsMemoryTrimmable() -> isRegisterLruBitmapPoolAsMemoryTrimmable
    140:140:com.facebook.imagepipeline.memory.PoolConfig$Builder newBuilder() -> newBuilder
com.facebook.imagepipeline.memory.PoolConfig$Builder -> com.facebook.imagepipeline.memory.PoolConfig$Builder:
    143:143:void <init>(com.facebook.imagepipeline.memory.PoolConfig$1) -> <init>
    158:158:void <init>() -> <init>
    143:143:com.facebook.imagepipeline.memory.PoolParams access$000(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$000
    143:143:com.facebook.imagepipeline.memory.PoolStatsTracker access$100(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$100
    143:143:int access$1000(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$1000
    143:143:boolean access$1100(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$1100
    143:143:com.facebook.imagepipeline.memory.PoolParams access$200(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$200
    143:143:com.facebook.common.memory.MemoryTrimmableRegistry access$300(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$300
    143:143:com.facebook.imagepipeline.memory.PoolParams access$400(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$400
    143:143:com.facebook.imagepipeline.memory.PoolStatsTracker access$500(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$500
    143:143:com.facebook.imagepipeline.memory.PoolParams access$600(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$600
    143:143:com.facebook.imagepipeline.memory.PoolStatsTracker access$700(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$700
    143:143:java.lang.String access$800(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$800
    143:143:int access$900(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$900
    206:206:com.facebook.imagepipeline.memory.PoolConfig build() -> build
com.facebook.imagepipeline.memory.PoolFactory -> com.facebook.imagepipeline.memory.PoolFactory:
    37:38:void <init>(com.facebook.imagepipeline.memory.PoolConfig) -> <init>
    42:77:com.facebook.imagepipeline.memory.BitmapPool getBitmapPool() -> getBitmapPool
    81:88:com.facebook.imagepipeline.memory.BufferMemoryChunkPool getBufferMemoryChunkPool() -> getBufferMemoryChunkPool
    92:97:com.facebook.imagepipeline.memory.FlexByteArrayPool getFlexByteArrayPool() -> getFlexByteArrayPool
    101:101:int getFlexByteArrayPoolMaxNumThreads() -> getFlexByteArrayPoolMaxNumThreads
    159:157:com.facebook.imagepipeline.memory.MemoryChunkPool getMemoryChunkPool(int) -> getMemoryChunkPool
    105:112:com.facebook.imagepipeline.memory.NativeMemoryChunkPool getNativeMemoryChunkPool() -> getNativeMemoryChunkPool
    116:116:com.facebook.common.memory.PooledByteBufferFactory getPooledByteBufferFactory() -> getPooledByteBufferFactory
    120:125:com.facebook.common.memory.PooledByteBufferFactory getPooledByteBufferFactory(int) -> getPooledByteBufferFactory
    129:132:com.facebook.common.memory.PooledByteStreams getPooledByteStreams() -> getPooledByteStreams
    145:151:com.facebook.common.memory.ByteArrayPool getSmallByteArrayPool() -> getSmallByteArrayPool
com.facebook.imagepipeline.memory.PoolParams -> com.facebook.imagepipeline.memory.PoolParams:
    82:82:void <init>(int,int,android.util.SparseIntArray) -> <init>
    100:107:void <init>(int,int,android.util.SparseIntArray,int,int,int) -> <init>
com.facebook.imagepipeline.memory.SharedByteArray$1 -> com.facebook.imagepipeline.memory.SharedByteArray$1:
    70:70:void release(java.lang.Object) -> release
    73:73:void release(byte[]) -> release
com.facebook.imagepipeline.nativecode.Bitmaps -> com.facebook.imagepipeline.nativecode.Bitmaps:
    24:24:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    40:44:void copyBitmap(android.graphics.Bitmap,android.graphics.Bitmap) -> copyBitmap
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder -> com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder:
    42:45:void <clinit>() -> <clinit>
    50:51:void <init>() -> <init>
    91:102:com.facebook.common.references.CloseableReference decodeFromEncodedImageWithColorSpace(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,android.graphics.ColorSpace) -> decodeFromEncodedImageWithColorSpace
    66:66:com.facebook.common.references.CloseableReference decodeJPEGFromEncodedImage(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,int) -> decodeJPEGFromEncodedImage
    129:140:com.facebook.common.references.CloseableReference decodeJPEGFromEncodedImageWithColorSpace(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,int,android.graphics.ColorSpace) -> decodeJPEGFromEncodedImageWithColorSpace
    187:190:boolean endsWithEOI(com.facebook.common.references.CloseableReference,int) -> endsWithEOI
    170:180:android.graphics.BitmapFactory$Options getBitmapFactoryOptions(int,android.graphics.Bitmap$Config) -> getBitmapFactoryOptions
    211:217:com.facebook.common.references.CloseableReference pinBitmap(android.graphics.Bitmap) -> pinBitmap
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils -> com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder$OreoUtils:
    194:194:void <init>() -> <init>
    197:198:void setColorSpace(android.graphics.BitmapFactory$Options,android.graphics.ColorSpace) -> setColorSpace
com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader -> com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader:
    35:36:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    40:40:void load() -> load
com.facebook.imagepipeline.nativecode.NativeBlurFilter -> com.facebook.imagepipeline.nativecode.NativeBlurFilter:
    21:21:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    45:49:void iterativeBoxBlur(android.graphics.Bitmap,int,int) -> iterativeBoxBlur
com.facebook.imagepipeline.nativecode.NativeFiltersLoader -> com.facebook.imagepipeline.nativecode.NativeFiltersLoader:
    13:13:void <init>() -> <init>
    16:16:void load() -> load
com.facebook.imagepipeline.nativecode.NativeImageTranscoderFactory -> com.facebook.imagepipeline.nativecode.NativeImageTranscoderFactory:
    15:15:void <init>() -> <init>
    21:31:com.facebook.imagepipeline.transcoder.ImageTranscoderFactory getNativeImageTranscoderFactory(int,boolean) -> getNativeImageTranscoderFactory
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder -> com.facebook.imagepipeline.nativecode.NativeJpegTranscoder:
    47:47:void <clinit>() -> <clinit>
    51:54:void <init>(boolean,int,boolean) -> <init>
    63:65:boolean canResize(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions) -> canResize
    72:72:boolean canTranscode(com.facebook.imageformat.ImageFormat) -> canTranscode
    90:126:com.facebook.imagepipeline.transcoder.ImageTranscodeResult transcode(com.facebook.imagepipeline.image.EncodedImage,java.io.OutputStream,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imageformat.ImageFormat,java.lang.Integer) -> transcode
    151:159:void transcodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int) -> transcodeJpeg
    193:202:void transcodeJpegWithExifOrientation(java.io.InputStream,java.io.OutputStream,int,int,int) -> transcodeJpegWithExifOrientation
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory -> com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory:
    23:25:void <init>(int,boolean) -> <init>
    32:35:com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean) -> createImageTranscoder
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderSoLoader -> com.facebook.imagepipeline.nativecode.NativeJpegTranscoderSoLoader:
    13:13:void <init>() -> <init>
    17:31:void ensure() -> ensure
com.facebook.imagepipeline.nativecode.NativeRoundingFilter -> com.facebook.imagepipeline.nativecode.NativeRoundingFilter:
    19:19:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    36:37:void toCircle(android.graphics.Bitmap,boolean) -> toCircle
com.facebook.imagepipeline.nativecode.WebpTranscoderFactory -> com.facebook.imagepipeline.nativecode.WebpTranscoderFactory:
    22:23:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    31:31:com.facebook.imagepipeline.nativecode.WebpTranscoder getWebpTranscoder() -> getWebpTranscoder
com.facebook.imagepipeline.platform.ArtDecoder -> com.facebook.imagepipeline.platform.ArtDecoder:
    24:24:void <init>(com.facebook.imagepipeline.memory.BitmapPool,int,androidx.core.util.Pools$SynchronizedPool) -> <init>
    29:29:int getBitmapSize(int,int,android.graphics.BitmapFactory$Options) -> getBitmapSize
com.facebook.imagepipeline.platform.DefaultDecoder -> com.facebook.imagepipeline.platform.DefaultDecoder:
    39:60:void <clinit>() -> <clinit>
    63:67:void <init>(com.facebook.imagepipeline.memory.BitmapPool,int,androidx.core.util.Pools$SynchronizedPool) -> <init>
    106:115:com.facebook.common.references.CloseableReference decodeFromEncodedImageWithColorSpace(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,android.graphics.ColorSpace) -> decodeFromEncodedImageWithColorSpace
    194:219:com.facebook.common.references.CloseableReference decodeFromStream(java.io.InputStream,android.graphics.BitmapFactory$Options,android.graphics.Rect,android.graphics.ColorSpace) -> decodeFromStream
    83:83:com.facebook.common.references.CloseableReference decodeJPEGFromEncodedImage(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,int) -> decodeJPEGFromEncodedImage
    140:161:com.facebook.common.references.CloseableReference decodeJPEGFromEncodedImageWithColorSpace(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,int,android.graphics.ColorSpace) -> decodeJPEGFromEncodedImageWithColorSpace
    301:308:android.graphics.BitmapFactory$Options getDecodeOptionsForStream(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config) -> getDecodeOptionsForStream
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder -> com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder:
    44:45:void <init>() -> <init>
    82:101:android.os.MemoryFile copyToMemoryFile(com.facebook.common.references.CloseableReference,int,byte[]) -> copyToMemoryFile
    58:58:android.graphics.Bitmap decodeByteArrayAsPurgeable(com.facebook.common.references.CloseableReference,android.graphics.BitmapFactory$Options) -> decodeByteArrayAsPurgeable
    132:144:android.graphics.Bitmap decodeFileDescriptorAsPurgeable(com.facebook.common.references.CloseableReference,int,byte[],android.graphics.BitmapFactory$Options) -> decodeFileDescriptorAsPurgeable
    74:75:android.graphics.Bitmap decodeJPEGByteArrayAsPurgeable(com.facebook.common.references.CloseableReference,int,android.graphics.BitmapFactory$Options) -> decodeJPEGByteArrayAsPurgeable
    106:113:java.lang.reflect.Method getFileDescriptorMethod() -> getFileDescriptorMethod
    118:121:java.io.FileDescriptor getMemoryFileDescriptor(android.os.MemoryFile) -> getMemoryFileDescriptor
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder -> com.facebook.imagepipeline.platform.KitKatPurgeableDecoder:
    34:35:void <init>(com.facebook.imagepipeline.memory.FlexByteArrayPool) -> <init>
    47:60:android.graphics.Bitmap decodeByteArrayAsPurgeable(com.facebook.common.references.CloseableReference,android.graphics.BitmapFactory$Options) -> decodeByteArrayAsPurgeable
    75:94:android.graphics.Bitmap decodeJPEGByteArrayAsPurgeable(com.facebook.common.references.CloseableReference,int,android.graphics.BitmapFactory$Options) -> decodeJPEGByteArrayAsPurgeable
    100:101:void putEOI(byte[],int) -> putEOI
com.facebook.imagepipeline.platform.OreoDecoder -> com.facebook.imagepipeline.platform.OreoDecoder:
    25:25:void <init>(com.facebook.imagepipeline.memory.BitmapPool,int,androidx.core.util.Pools$SynchronizedPool) -> <init>
    33:35:int getBitmapSize(int,int,android.graphics.BitmapFactory$Options) -> getBitmapSize
    40:41:boolean hasColorGamutMismatch(android.graphics.BitmapFactory$Options) -> hasColorGamutMismatch
com.facebook.imagepipeline.platform.PlatformDecoderFactory -> com.facebook.imagepipeline.platform.PlatformDecoderFactory:
    16:16:void <init>() -> <init>
    27:39:com.facebook.imagepipeline.platform.PlatformDecoder buildPlatformDecoder(com.facebook.imagepipeline.memory.PoolFactory,boolean) -> buildPlatformDecoder
com.facebook.imagepipeline.platform.PreverificationHelper -> com.facebook.imagepipeline.platform.PreverificationHelper:
    15:15:void <init>() -> <init>
    19:19:boolean shouldUseHardwareBitmapConfig(android.graphics.Bitmap$Config) -> shouldUseHardwareBitmapConfig
com.facebook.imagepipeline.postprocessors.BlurPostProcessor -> com.facebook.imagepipeline.postprocessors.BlurPostProcessor:
    28:28:void <clinit>() -> <clinit>
    81:90:com.facebook.cache.common.CacheKey getPostprocessorCacheKey() -> getPostprocessorCacheKey
    66:69:void process(android.graphics.Bitmap,android.graphics.Bitmap) -> process
    75:75:void process(android.graphics.Bitmap) -> process
com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor -> com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor:
    33:33:void <init>(int) -> <init>
    36:40:void <init>(int,int) -> <init>
    51:55:com.facebook.cache.common.CacheKey getPostprocessorCacheKey() -> getPostprocessorCacheKey
    45:45:void process(android.graphics.Bitmap) -> process
com.facebook.imagepipeline.postprocessors.RoundAsCirclePostprocessor -> com.facebook.imagepipeline.postprocessors.RoundAsCirclePostprocessor:
    24:24:void <init>() -> <init>
    27:28:void <init>(boolean) -> <init>
    39:46:com.facebook.cache.common.CacheKey getPostprocessorCacheKey() -> getPostprocessorCacheKey
    33:33:void process(android.graphics.Bitmap) -> process
com.facebook.imagepipeline.postprocessors.RoundPostprocessor -> com.facebook.imagepipeline.postprocessors.RoundPostprocessor:
    21:21:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    30:31:void <init>(boolean) -> <init>
    53:60:com.facebook.cache.common.CacheKey getPostprocessorCacheKey() -> getPostprocessorCacheKey
    36:41:void process(android.graphics.Bitmap,android.graphics.Bitmap) -> process
    47:47:void process(android.graphics.Bitmap) -> process
com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer -> com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer:
    21:22:void <init>(com.facebook.imagepipeline.producers.Producer) -> <init>
    27:27:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer -> com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer:
    30:30:void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$1) -> <init>
    34:34:void <init>(com.facebook.imagepipeline.producers.Consumer) -> <init>
    30:30:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    40:46:void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.BaseConsumer -> com.facebook.imagepipeline.producers.BaseConsumer:
    35:36:void <init>() -> <init>
    52:52:boolean isNotLast(int) -> isNotLast
    118:127:void onCancellation() -> onCancellation
    105:114:void onFailure(java.lang.Throwable) -> onFailure
    92:101:void onNewResult(java.lang.Object,int) -> onNewResult
    136:144:void onProgressUpdate(float) -> onProgressUpdate
    171:171:void onUnhandledException(java.lang.Exception) -> onUnhandledException
com.facebook.imagepipeline.producers.BaseNetworkFetcher -> com.facebook.imagepipeline.producers.BaseNetworkFetcher:
    19:19:void <init>() -> <init>
com.facebook.imagepipeline.producers.BaseProducerContext -> com.facebook.imagepipeline.producers.BaseProducerContext:
    46:58:void <init>(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,com.facebook.imagepipeline.producers.ProducerListener,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,boolean,boolean,com.facebook.imagepipeline.common.Priority) -> <init>
    108:113:void addCallbacks(com.facebook.imagepipeline.producers.ProducerContextCallbacks) -> addCallbacks
    208:209:void callOnCancellationRequested(java.util.List) -> callOnCancellationRequested
    235:236:void callOnIsIntermediateResultExpectedChanged(java.util.List) -> callOnIsIntermediateResultExpectedChanged
    221:222:void callOnIsPrefetchChanged(java.util.List) -> callOnIsPrefetchChanged
    247:248:void callOnPriorityChanged(java.util.List) -> callOnPriorityChanged
    124:124:void cancel() -> cancel
    193:197:java.util.List cancelNoCallbacks() -> cancelNoCallbacks
    78:78:java.lang.Object getCallerContext() -> getCallerContext
    68:68:java.lang.String getId() -> getId
    63:63:com.facebook.imagepipeline.request.ImageRequest getImageRequest() -> getImageRequest
    73:73:com.facebook.imagepipeline.producers.ProducerListener getListener() -> getListener
    83:83:com.facebook.imagepipeline.request.ImageRequest$RequestLevel getLowestPermittedRequestLevel() -> getLowestPermittedRequestLevel
    93:93:com.facebook.imagepipeline.common.Priority getPriority() -> getPriority
    98:98:boolean isIntermediateResultExpected() -> isIntermediateResultExpected
    88:88:boolean isPrefetch() -> isPrefetch
    175:179:java.util.List setIsIntermediateResultExpectedNoCallbacks(boolean) -> setIsIntermediateResultExpectedNoCallbacks
    138:142:java.util.List setIsPrefetchNoCallbacks(boolean) -> setIsPrefetchNoCallbacks
    156:160:java.util.List setPriorityNoCallbacks(com.facebook.imagepipeline.common.Priority) -> setPriorityNoCallbacks
com.facebook.imagepipeline.producers.BaseProducerContextCallbacks -> com.facebook.imagepipeline.producers.BaseProducerContextCallbacks:
    13:13:void <init>() -> <init>
com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer -> com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer:
    27:27:void <init>(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer) -> <init>
com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer -> com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer:
    29:30:void <init>(com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer) -> <init>
    20:20:java.io.Closeable cloneOrNull(java.io.Closeable) -> cloneOrNull
    44:44:com.facebook.common.references.CloseableReference cloneOrNull(com.facebook.common.references.CloseableReference) -> cloneOrNull
    20:20:java.lang.Object getKey(com.facebook.imagepipeline.producers.ProducerContext) -> getKey
    35:35:android.util.Pair getKey(com.facebook.imagepipeline.producers.ProducerContext) -> getKey
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer -> com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer:
    35:38:void <init>(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer) -> <init>
    23:23:com.facebook.imagepipeline.cache.MemoryCache access$000(com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer) -> access$000
    46:108:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
    117:117:com.facebook.imagepipeline.producers.Consumer wrapConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.cache.common.CacheKey,boolean) -> wrapConsumer
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer$1 -> com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer$1:
    118:118:void <init>(com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.cache.common.CacheKey,boolean) -> <init>
    118:118:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    123:173:void onNewResultImpl(com.facebook.common.references.CloseableReference,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.BitmapPrepareProducer -> com.facebook.imagepipeline.producers.BitmapPrepareProducer:
    43:48:void <init>(com.facebook.imagepipeline.producers.Producer,int,int,boolean) -> <init>
    56:59:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.BitmapPrepareProducer$BitmapPrepareConsumer -> com.facebook.imagepipeline.producers.BitmapPrepareProducer$BitmapPrepareConsumer:
    75:77:void <init>(com.facebook.imagepipeline.producers.Consumer,int,int) -> <init>
    89:113:void internalPrepareBitmap(com.facebook.common.references.CloseableReference) -> internalPrepareBitmap
    65:65:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    84:85:void onNewResultImpl(com.facebook.common.references.CloseableReference,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer -> com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer:
    25:27:void <init>(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.Producer) -> <init>
    19:19:com.facebook.imagepipeline.producers.Producer access$100(com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer) -> access$100
    34:35:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer -> com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer:
    38:38:void <init>(com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$1) -> <init>
    44:46:void <init>(com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> <init>
    72:72:void onFailureImpl(java.lang.Throwable) -> onFailureImpl
    38:38:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    51:66:void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.DataFetchProducer -> com.facebook.imagepipeline.producers.DataFetchProducer:
    39:39:void <init>(com.facebook.common.memory.PooledByteBufferFactory) -> <init>
    61:69:byte[] getData(java.lang.String) -> getData
    44:45:com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest) -> getEncodedImage
    76:80:boolean isBase64(java.lang.String) -> isBase64
com.facebook.imagepipeline.producers.DecodeProducer -> com.facebook.imagepipeline.producers.DecodeProducer:
    82:92:void <init>(com.facebook.common.memory.ByteArrayPool,java.util.concurrent.Executor,com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.decoder.ProgressiveJpegConfig,boolean,boolean,boolean,com.facebook.imagepipeline.producers.Producer,int,com.facebook.imagepipeline.core.CloseableReferenceFactory) -> <init>
    48:48:boolean access$000(com.facebook.imagepipeline.producers.DecodeProducer) -> access$000
    48:48:boolean access$100(com.facebook.imagepipeline.producers.DecodeProducer) -> access$100
    48:48:java.util.concurrent.Executor access$300(com.facebook.imagepipeline.producers.DecodeProducer) -> access$300
    48:48:com.facebook.imagepipeline.decoder.ImageDecoder access$700(com.facebook.imagepipeline.producers.DecodeProducer) -> access$700
    48:48:com.facebook.imagepipeline.core.CloseableReferenceFactory access$800(com.facebook.imagepipeline.producers.DecodeProducer) -> access$800
    100:123:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.DecodeProducer$LocalImagesProgressiveDecoder -> com.facebook.imagepipeline.producers.DecodeProducer$LocalImagesProgressiveDecoder:
    436:436:void <init>(com.facebook.imagepipeline.producers.DecodeProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,boolean,int) -> <init>
    449:449:int getIntermediateImageEndOffset(com.facebook.imagepipeline.image.EncodedImage) -> getIntermediateImageEndOffset
    454:454:com.facebook.imagepipeline.image.QualityInfo getQualityInfo() -> getQualityInfo
    441:444:boolean updateDecodeJob(com.facebook.imagepipeline.image.EncodedImage,int) -> updateDecodeJob
com.facebook.imagepipeline.producers.DecodeProducer$NetworkImagesProgressiveDecoder -> com.facebook.imagepipeline.producers.DecodeProducer$NetworkImagesProgressiveDecoder:
    471:474:void <init>(com.facebook.imagepipeline.producers.DecodeProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.decoder.ProgressiveJpegParser,com.facebook.imagepipeline.decoder.ProgressiveJpegConfig,boolean,int) -> <init>
    505:505:int getIntermediateImageEndOffset(com.facebook.imagepipeline.image.EncodedImage) -> getIntermediateImageEndOffset
    510:510:com.facebook.imagepipeline.image.QualityInfo getQualityInfo() -> getQualityInfo
    479:500:boolean updateDecodeJob(com.facebook.imagepipeline.image.EncodedImage,int) -> updateDecodeJob
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder -> com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder:
    147:175:void <init>(com.facebook.imagepipeline.producers.DecodeProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,boolean,int) -> <init>
    128:128:void access$200(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder,com.facebook.imagepipeline.image.EncodedImage,int) -> access$200
    128:128:com.facebook.imagepipeline.producers.ProducerContext access$400(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder) -> access$400
    128:128:com.facebook.imagepipeline.producers.JobScheduler access$500(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder) -> access$500
    128:128:void access$600(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder) -> access$600
    241:325:void doDecode(com.facebook.imagepipeline.image.EncodedImage,int) -> doDecode
    338:368:java.util.Map getExtraMap(com.facebook.imagepipeline.image.CloseableImage,long,com.facebook.imagepipeline.image.QualityInfo,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getExtraMap
    420:421:void handleCancellation() -> handleCancellation
    412:413:void handleError(java.lang.Throwable) -> handleError
    398:404:void handleResult(com.facebook.imagepipeline.image.CloseableImage,int) -> handleResult
    376:376:boolean isFinished() -> isFinished
    384:390:void maybeFinish(boolean) -> maybeFinish
    230:230:void onCancellationImpl() -> onCancellationImpl
    225:225:void onFailureImpl(java.lang.Throwable) -> onFailureImpl
    128:128:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    196:213:void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int) -> onNewResultImpl
    220:220:void onProgressUpdateImpl(float) -> onProgressUpdateImpl
    235:235:boolean updateDecodeJob(com.facebook.imagepipeline.image.EncodedImage,int) -> updateDecodeJob
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$1 -> com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$1:
    154:154:void <init>(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder,com.facebook.imagepipeline.producers.DecodeProducer,com.facebook.imagepipeline.producers.ProducerContext,int) -> <init>
    158:170:void run(com.facebook.imagepipeline.image.EncodedImage,int) -> run
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$2 -> com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$2:
    176:176:void <init>(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder,com.facebook.imagepipeline.producers.DecodeProducer,boolean) -> <init>
    186:187:void onCancellationRequested() -> onCancellationRequested
    179:180:void onIsIntermediateResultExpectedChanged() -> onIsIntermediateResultExpectedChanged
com.facebook.imagepipeline.producers.DelegatingConsumer -> com.facebook.imagepipeline.producers.DelegatingConsumer:
    16:17:void <init>(com.facebook.imagepipeline.producers.Consumer) -> <init>
    21:21:com.facebook.imagepipeline.producers.Consumer getConsumer() -> getConsumer
    31:31:void onCancellationImpl() -> onCancellationImpl
    26:26:void onFailureImpl(java.lang.Throwable) -> onFailureImpl
    36:36:void onProgressUpdateImpl(float) -> onProgressUpdateImpl
com.facebook.imagepipeline.producers.DiskCacheReadProducer -> com.facebook.imagepipeline.producers.DiskCacheReadProducer:
    52:56:void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer) -> <init>
    37:37:boolean access$000(bolts.Task) -> access$000
    37:37:com.facebook.imagepipeline.producers.Producer access$100(com.facebook.imagepipeline.producers.DiskCacheReadProducer) -> access$100
    145:155:java.util.Map getExtraMap(com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,boolean,int) -> getExtraMap
    123:124:boolean isTaskCancelled(bolts.Task) -> isTaskCancelled
    130:136:void maybeStartInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> maybeStartInputProducer
    86:88:bolts.Continuation onFinishDiskReads(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> onFinishDiskReads
    62:80:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
    164:164:void subscribeTaskForRequestCancellation(java.util.concurrent.atomic.AtomicBoolean,com.facebook.imagepipeline.producers.ProducerContext) -> subscribeTaskForRequestCancellation
com.facebook.imagepipeline.producers.DiskCacheReadProducer$1 -> com.facebook.imagepipeline.producers.DiskCacheReadProducer$1:
    88:88:void <init>(com.facebook.imagepipeline.producers.DiskCacheReadProducer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> <init>
    88:88:java.lang.Object then(bolts.Task) -> then
    92:114:java.lang.Void then(bolts.Task) -> then
com.facebook.imagepipeline.producers.DiskCacheReadProducer$2 -> com.facebook.imagepipeline.producers.DiskCacheReadProducer$2:
    165:165:void <init>(com.facebook.imagepipeline.producers.DiskCacheReadProducer,java.util.concurrent.atomic.AtomicBoolean) -> <init>
    168:168:void onCancellationRequested() -> onCancellationRequested
com.facebook.imagepipeline.producers.DiskCacheWriteProducer -> com.facebook.imagepipeline.producers.DiskCacheWriteProducer:
    43:47:void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer) -> <init>
    59:76:void maybeStartInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> maybeStartInputProducer
    53:53:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.DiskCacheWriteProducer$DiskCacheWriteConsumer -> com.facebook.imagepipeline.producers.DiskCacheWriteProducer$DiskCacheWriteConsumer:
    86:86:void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.DiskCacheWriteProducer$1) -> <init>
    100:104:void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory) -> <init>
    86:86:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    111:115:void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer -> com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer:
    27:28:void <init>(com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer) -> <init>
    19:19:java.io.Closeable cloneOrNull(java.io.Closeable) -> cloneOrNull
    40:40:com.facebook.imagepipeline.image.EncodedImage cloneOrNull(com.facebook.imagepipeline.image.EncodedImage) -> cloneOrNull
    19:19:java.lang.Object getKey(com.facebook.imagepipeline.producers.ProducerContext) -> getKey
    32:32:android.util.Pair getKey(com.facebook.imagepipeline.producers.ProducerContext) -> getKey
com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer -> com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer:
    36:39:void <init>(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer) -> <init>
    46:106:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer$EncodedMemoryCacheConsumer -> com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer$EncodedMemoryCacheConsumer:
    123:126:void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.cache.common.CacheKey,boolean) -> <init>
    111:111:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    132:176:void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.FetchState -> com.facebook.imagepipeline.producers.FetchState:
    30:33:void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> <init>
    37:37:com.facebook.imagepipeline.producers.Consumer getConsumer() -> getConsumer
    41:41:com.facebook.imagepipeline.producers.ProducerContext getContext() -> getContext
    45:45:java.lang.String getId() -> getId
    57:57:long getLastIntermediateResultTimeMs() -> getLastIntermediateResultTimeMs
    49:49:com.facebook.imagepipeline.producers.ProducerListener getListener() -> getListener
    65:65:int getOnNewResultStatusFlags() -> getOnNewResultStatusFlags
    78:78:com.facebook.imagepipeline.common.BytesRange getResponseBytesRange() -> getResponseBytesRange
    53:53:android.net.Uri getUri() -> getUri
    61:61:void setLastIntermediateResultTimeMs(long) -> setLastIntermediateResultTimeMs
    73:73:void setOnNewResultStatusFlags(int) -> setOnNewResultStatusFlags
    86:86:void setResponseBytesRange(com.facebook.imagepipeline.common.BytesRange) -> setResponseBytesRange
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher -> com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher:
    67:67:void <init>() -> <init>
    71:72:void <init>(int) -> <init>
    76:78:void <init>(com.facebook.common.time.MonotonicClock) -> <init>
    33:33:com.facebook.imagepipeline.producers.FetchState createFetchState(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> createFetchState
    84:84:com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState createFetchState(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> createFetchState
    138:164:java.net.HttpURLConnection downloadFrom(android.net.Uri,int) -> downloadFrom
    199:199:java.lang.String error(java.lang.String,java.lang.Object[]) -> error
    33:33:void fetch(com.facebook.imagepipeline.producers.FetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback) -> fetch
    89:97:void fetch(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback) -> fetch
    113:131:void fetchSync(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback) -> fetchSync
    33:33:java.util.Map getExtraMap(com.facebook.imagepipeline.producers.FetchState,int) -> getExtraMap
    205:209:java.util.Map getExtraMap(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,int) -> getExtraMap
    33:33:void onFetchCompletion(com.facebook.imagepipeline.producers.FetchState,int) -> onFetchCompletion
    176:176:void onFetchCompletion(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,int) -> onFetchCompletion
    170:171:java.net.HttpURLConnection openConnectionTo(android.net.Uri) -> openConnectionTo
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$1 -> com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$1:
    91:91:void <init>(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher,com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback) -> <init>
    94:94:void run() -> run
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$2 -> com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$2:
    98:98:void <init>(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher,java.util.concurrent.Future,com.facebook.imagepipeline.producers.NetworkFetcher$Callback) -> <init>
    101:102:void onCancellationRequested() -> onCancellationRequested
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState -> com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState:
    44:44:void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> <init>
    36:36:long access$000(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState) -> access$000
    36:36:long access$002(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,long) -> access$002
    36:36:long access$100(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState) -> access$100
    36:36:long access$102(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,long) -> access$102
    36:36:long access$200(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState) -> access$200
    36:36:long access$202(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$HttpUrlConnectionNetworkFetchState,long) -> access$202
com.facebook.imagepipeline.producers.JobScheduler -> com.facebook.imagepipeline.producers.JobScheduler:
    66:86:void <init>(java.util.concurrent.Executor,com.facebook.imagepipeline.producers.JobScheduler$JobRunnable,int) -> <init>
    22:22:void access$000(com.facebook.imagepipeline.producers.JobScheduler) -> access$000
    22:22:void access$100(com.facebook.imagepipeline.producers.JobScheduler) -> access$100
    97:101:void clearJob() -> clearJob
    187:197:void doJob() -> doJob
    176:178:void enqueueJob(long) -> enqueueJob
    243:243:long getQueuedTime() -> getQueuedTime
    211:223:void onJobFinished() -> onJobFinished
    140:164:boolean scheduleJob() -> scheduleJob
    232:234:boolean shouldProcess(com.facebook.imagepipeline.image.EncodedImage,int) -> shouldProcess
    183:183:void submitJob() -> submitJob
    115:123:boolean updateJob(com.facebook.imagepipeline.image.EncodedImage,int) -> updateJob
com.facebook.imagepipeline.producers.JobScheduler$1 -> com.facebook.imagepipeline.producers.JobScheduler$1:
    70:70:void <init>(com.facebook.imagepipeline.producers.JobScheduler) -> <init>
    73:73:void run() -> run
com.facebook.imagepipeline.producers.JobScheduler$2 -> com.facebook.imagepipeline.producers.JobScheduler$2:
    76:76:void <init>(com.facebook.imagepipeline.producers.JobScheduler) -> <init>
    79:79:void run() -> run
com.facebook.imagepipeline.producers.JobScheduler$3 -> com.facebook.imagepipeline.producers.JobScheduler$3:
    147:147:void <clinit>() -> <clinit>
com.facebook.imagepipeline.producers.JobScheduler$JobStartExecutorSupplier -> com.facebook.imagepipeline.producers.JobScheduler$JobStartExecutorSupplier:
    27:27:void <init>() -> <init>
    32:35:java.util.concurrent.ScheduledExecutorService get() -> get
com.facebook.imagepipeline.producers.JobScheduler$JobState -> com.facebook.imagepipeline.producers.JobScheduler$JobState:
    50:49:void <clinit>() -> <clinit>
    50:50:void <init>(java.lang.String,int) -> <init>
    49:49:com.facebook.imagepipeline.producers.JobScheduler$JobState valueOf(java.lang.String) -> valueOf
    49:49:com.facebook.imagepipeline.producers.JobScheduler$JobState[] values() -> values
com.facebook.imagepipeline.producers.LocalAssetFetchProducer -> com.facebook.imagepipeline.producers.LocalAssetFetchProducer:
    31:32:void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.res.AssetManager) -> <init>
    66:66:java.lang.String getAssetName(com.facebook.imagepipeline.request.ImageRequest) -> getAssetName
    37:37:com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest) -> getEncodedImage
    45:52:int getLength(com.facebook.imagepipeline.request.ImageRequest) -> getLength
com.facebook.imagepipeline.producers.LocalContentUriFetchProducer -> com.facebook.imagepipeline.producers.LocalContentUriFetchProducer:
    34:34:void <clinit>() -> <clinit>
    45:46:void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.ContentResolver) -> <init>
    88:103:com.facebook.imagepipeline.image.EncodedImage getCameraImage(android.net.Uri) -> getCameraImage
    51:82:com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest) -> getEncodedImage
    109:109:int getLength(java.lang.String) -> getLength
com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer -> com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer:
    35:48:void <clinit>() -> <clinit>
    58:59:void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.ContentResolver) -> <init>
    64:64:boolean canProvideImageForSize(com.facebook.imagepipeline.common.ResizeOptions) -> canProvideImageForSize
    87:107:com.facebook.imagepipeline.image.EncodedImage getCameraImage(android.net.Uri,com.facebook.imagepipeline.common.ResizeOptions) -> getCameraImage
    72:75:com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest) -> getEncodedImage
    168:168:int getLength(java.lang.String) -> getLength
    179:183:int getRotationAngle(java.lang.String) -> getRotationAngle
    117:141:com.facebook.imagepipeline.image.EncodedImage getThumbnail(com.facebook.imagepipeline.common.ResizeOptions,int) -> getThumbnail
    152:157:int getThumbnailKind(com.facebook.imagepipeline.common.ResizeOptions) -> getThumbnailKind
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer -> com.facebook.imagepipeline.producers.LocalExifThumbnailProducer:
    54:57:void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.ContentResolver) -> <init>
    40:40:com.facebook.common.memory.PooledByteBufferFactory access$000(com.facebook.imagepipeline.producers.LocalExifThumbnailProducer) -> access$000
    40:40:com.facebook.imagepipeline.image.EncodedImage access$100(com.facebook.imagepipeline.producers.LocalExifThumbnailProducer,com.facebook.common.memory.PooledByteBuffer,android.media.ExifInterface) -> access$100
    142:152:com.facebook.imagepipeline.image.EncodedImage buildEncodedImage(com.facebook.common.memory.PooledByteBuffer,android.media.ExifInterface) -> buildEncodedImage
    73:73:boolean canProvideImageForSize(com.facebook.imagepipeline.common.ResizeOptions) -> canProvideImageForSize
    171:172:boolean canReadAsFile(java.lang.String) -> canReadAsFile
    125:134:android.media.ExifInterface getExifInterface(android.net.Uri) -> getExifInterface
    164:163:int getRotationAngle(android.media.ExifInterface) -> getRotationAngle
    84:121:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1 -> com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1:
    89:89:void <init>(com.facebook.imagepipeline.producers.LocalExifThumbnailProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,java.lang.String,com.facebook.imagepipeline.request.ImageRequest) -> <init>
    89:89:void disposeResult(java.lang.Object) -> disposeResult
    106:106:void disposeResult(com.facebook.imagepipeline.image.EncodedImage) -> disposeResult
    89:89:java.util.Map getExtraMapOnSuccess(java.lang.Object) -> getExtraMapOnSuccess
    111:111:java.util.Map getExtraMapOnSuccess(com.facebook.imagepipeline.image.EncodedImage) -> getExtraMapOnSuccess
    89:89:java.lang.Object getResult() -> getResult
    92:101:com.facebook.imagepipeline.image.EncodedImage getResult() -> getResult
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$2 -> com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$2:
    115:115:void <init>(com.facebook.imagepipeline.producers.LocalExifThumbnailProducer,com.facebook.imagepipeline.producers.StatefulProducerRunnable) -> <init>
    118:118:void onCancellationRequested() -> onCancellationRequested
com.facebook.imagepipeline.producers.LocalFetchProducer -> com.facebook.imagepipeline.producers.LocalFetchProducer:
    31:33:void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory) -> <init>
    83:90:com.facebook.imagepipeline.image.EncodedImage getByteBufferBackedEncodedImage(java.io.InputStream,int) -> getByteBufferBackedEncodedImage
    97:97:com.facebook.imagepipeline.image.EncodedImage getEncodedImage(java.io.InputStream,int) -> getEncodedImage
    41:73:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.LocalFetchProducer$1 -> com.facebook.imagepipeline.producers.LocalFetchProducer$1:
    46:46:void <init>(com.facebook.imagepipeline.producers.LocalFetchProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,java.lang.String,com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String) -> <init>
    46:46:void disposeResult(java.lang.Object) -> disposeResult
    62:62:void disposeResult(com.facebook.imagepipeline.image.EncodedImage) -> disposeResult
    46:46:java.lang.Object getResult() -> getResult
    50:56:com.facebook.imagepipeline.image.EncodedImage getResult() -> getResult
com.facebook.imagepipeline.producers.LocalFetchProducer$2 -> com.facebook.imagepipeline.producers.LocalFetchProducer$2:
    67:67:void <init>(com.facebook.imagepipeline.producers.LocalFetchProducer,com.facebook.imagepipeline.producers.StatefulProducerRunnable) -> <init>
    70:70:void onCancellationRequested() -> onCancellationRequested
com.facebook.imagepipeline.producers.LocalFileFetchProducer -> com.facebook.imagepipeline.producers.LocalFileFetchProducer:
    27:27:void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory) -> <init>
    32:32:com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest) -> getEncodedImage
com.facebook.imagepipeline.producers.LocalResourceFetchProducer -> com.facebook.imagepipeline.producers.LocalResourceFetchProducer:
    31:32:void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.res.Resources) -> <init>
    37:37:com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest) -> getEncodedImage
    45:52:int getLength(com.facebook.imagepipeline.request.ImageRequest) -> getLength
    66:66:int getResourceId(com.facebook.imagepipeline.request.ImageRequest) -> getResourceId
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer -> com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer:
    49:51:void <init>(java.util.concurrent.Executor,android.content.ContentResolver) -> <init>
    40:40:java.lang.String access$000(com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer,com.facebook.imagepipeline.request.ImageRequest) -> access$000
    40:40:int access$100(com.facebook.imagepipeline.request.ImageRequest) -> access$100
    40:40:android.content.ContentResolver access$200(com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer) -> access$200
    40:40:android.graphics.Bitmap access$300(android.content.ContentResolver,android.net.Uri) -> access$300
    125:125:int calculateKind(com.facebook.imagepipeline.request.ImageRequest) -> calculateKind
    164:169:android.graphics.Bitmap createThumbnailFromContentProvider(android.content.ContentResolver,android.net.Uri) -> createThumbnailFromContentProvider
    132:154:java.lang.String getLocalFilePath(com.facebook.imagepipeline.request.ImageRequest) -> getLocalFilePath
    59:121:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1 -> com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1:
    64:64:void <init>(com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,java.lang.String,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,com.facebook.imagepipeline.request.ImageRequest) -> <init>
    64:64:void disposeResult(java.lang.Object) -> disposeResult
    111:111:void disposeResult(com.facebook.common.references.CloseableReference) -> disposeResult
    64:64:java.util.Map getExtraMapOnSuccess(java.lang.Object) -> getExtraMapOnSuccess
    106:106:java.util.Map getExtraMapOnSuccess(com.facebook.common.references.CloseableReference) -> getExtraMapOnSuccess
    64:64:java.lang.Object getResult() -> getResult
    81:95:com.facebook.common.references.CloseableReference getResult() -> getResult
    73:74:void onFailure(java.lang.Exception) -> onFailure
    64:64:void onSuccess(java.lang.Object) -> onSuccess
    67:68:void onSuccess(com.facebook.common.references.CloseableReference) -> onSuccess
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$2 -> com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$2:
    115:115:void <init>(com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer,com.facebook.imagepipeline.producers.StatefulProducerRunnable) -> <init>
    118:118:void onCancellationRequested() -> onCancellationRequested
com.facebook.imagepipeline.producers.MultiplexProducer -> com.facebook.imagepipeline.producers.MultiplexProducer:
    54:56:void <init>(com.facebook.imagepipeline.producers.Producer) -> <init>
    39:39:com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer access$100(com.facebook.imagepipeline.producers.MultiplexProducer,java.lang.Object) -> access$100
    39:39:void access$700(com.facebook.imagepipeline.producers.MultiplexProducer,java.lang.Object,com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> access$700
    39:39:com.facebook.imagepipeline.producers.Producer access$900(com.facebook.imagepipeline.producers.MultiplexProducer) -> access$900
    101:103:com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer createAndPutNewMultiplexer(java.lang.Object) -> createAndPutNewMultiplexer
    97:97:com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer getExistingMultiplexer(java.lang.Object) -> getExistingMultiplexer
    62:91:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
    107:110:void removeMultiplexer(java.lang.Object,com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> removeMultiplexer
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer -> com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer:
    182:184:void <init>(com.facebook.imagepipeline.producers.MultiplexProducer,java.lang.Object) -> <init>
    130:130:void access$000(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> access$000
    130:130:java.util.concurrent.CopyOnWriteArraySet access$200(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> access$200
    130:130:com.facebook.imagepipeline.producers.BaseProducerContext access$300(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> access$300
    130:130:java.util.List access$400(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> access$400
    130:130:java.util.List access$500(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> access$500
    130:130:java.util.List access$600(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> access$600
    258:258:void addCallbacks(android.util.Pair,com.facebook.imagepipeline.producers.ProducerContext) -> addCallbacks
    200:222:boolean addNewConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> addNewConsumer
    496:499:void closeSafely(java.io.Closeable) -> closeSafely
    377:382:boolean computeIsIntermediateResultExpected() -> computeIsIntermediateResultExpected
    359:364:boolean computeIsPrefetch() -> computeIsPrefetch
    394:398:com.facebook.imagepipeline.common.Priority computePriority() -> computePriority
    458:468:void onCancelled(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer) -> onCancelled
    403:415:void onFailure(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer,java.lang.Throwable) -> onFailure
    430:447:void onNextResult(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer,java.io.Closeable,int) -> onNextResult
    475:483:void onProgressUpdate(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer,float) -> onProgressUpdate
    320:344:void startInputProducerIfHasAttachedConsumers() -> startInputProducerIfHasAttachedConsumers
    369:372:java.util.List updateIsIntermediateResultExpected() -> updateIsIntermediateResultExpected
    352:355:java.util.List updateIsPrefetch() -> updateIsPrefetch
    387:390:java.util.List updatePriority() -> updatePriority
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$1 -> com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$1:
    259:259:void <init>(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer,android.util.Pair) -> <init>
    268:279:void onCancellationRequested() -> onCancellationRequested
    301:301:void onIsIntermediateResultExpectedChanged() -> onIsIntermediateResultExpectedChanged
    296:296:void onIsPrefetchChanged() -> onIsPrefetchChanged
    307:307:void onPriorityChanged() -> onPriorityChanged
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer -> com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer:
    506:506:void <init>(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> <init>
    506:506:void <init>(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer,com.facebook.imagepipeline.producers.MultiplexProducer$1) -> <init>
    538:544:void onCancellationImpl() -> onCancellationImpl
    524:530:void onFailureImpl(java.lang.Throwable) -> onFailureImpl
    506:506:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    510:516:void onNewResultImpl(java.io.Closeable,int) -> onNewResultImpl
    552:558:void onProgressUpdateImpl(float) -> onProgressUpdateImpl
com.facebook.imagepipeline.producers.NetworkFetchProducer -> com.facebook.imagepipeline.producers.NetworkFetchProducer:
    54:57:void <init>(com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.producers.NetworkFetcher) -> <init>
    34:34:void access$000(com.facebook.imagepipeline.producers.NetworkFetchProducer,com.facebook.imagepipeline.producers.FetchState,java.lang.Throwable) -> access$000
    34:34:void access$100(com.facebook.imagepipeline.producers.NetworkFetchProducer,com.facebook.imagepipeline.producers.FetchState) -> access$100
    134:134:float calculateProgress(int,int) -> calculateProgress
    209:212:java.util.Map getExtraMap(com.facebook.imagepipeline.producers.FetchState,int) -> getExtraMap
    156:160:void handleFinalResult(com.facebook.common.memory.PooledByteBufferOutputStream,com.facebook.imagepipeline.producers.FetchState) -> handleFinalResult
    140:146:void maybeHandleIntermediateResult(com.facebook.common.memory.PooledByteBufferOutputStream,com.facebook.imagepipeline.producers.FetchState) -> maybeHandleIntermediateResult
    173:182:void notifyConsumer(com.facebook.common.memory.PooledByteBufferOutputStream,int,com.facebook.imagepipeline.common.BytesRange,com.facebook.imagepipeline.producers.Consumer) -> notifyConsumer
    195:197:void onCancellation(com.facebook.imagepipeline.producers.FetchState) -> onCancellation
    187:191:void onFailure(com.facebook.imagepipeline.producers.FetchState,java.lang.Throwable) -> onFailure
    96:115:void onResponse(com.facebook.imagepipeline.producers.FetchState,java.io.InputStream,int) -> onResponse
    62:65:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
    201:204:boolean shouldPropagateIntermediateResults(com.facebook.imagepipeline.producers.FetchState) -> shouldPropagateIntermediateResults
com.facebook.imagepipeline.producers.NetworkFetchProducer$1 -> com.facebook.imagepipeline.producers.NetworkFetchProducer$1:
    67:67:void <init>(com.facebook.imagepipeline.producers.NetworkFetchProducer,com.facebook.imagepipeline.producers.FetchState) -> <init>
    86:86:void onCancellation() -> onCancellation
    81:81:void onFailure(java.lang.Throwable) -> onFailure
    70:75:void onResponse(java.io.InputStream,int) -> onResponse
com.facebook.imagepipeline.producers.NullProducer -> com.facebook.imagepipeline.producers.NullProducer:
    16:16:void <init>() -> <init>
    25:25:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.PartialDiskCacheProducer -> com.facebook.imagepipeline.producers.PartialDiskCacheProducer:
    65:70:void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.producers.Producer) -> <init>
    49:49:boolean access$000(bolts.Task) -> access$000
    49:49:void access$100(com.facebook.imagepipeline.producers.PartialDiskCacheProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> access$100
    219:221:android.net.Uri createUriForPartialCacheKey(com.facebook.imagepipeline.request.ImageRequest) -> createUriForPartialCacheKey
    190:200:java.util.Map getExtraMap(com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,boolean,int) -> getExtraMap
    179:180:boolean isTaskCancelled(bolts.Task) -> isTaskCancelled
    104:106:bolts.Continuation onFinishDiskReads(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.cache.common.CacheKey) -> onFinishDiskReads
    76:97:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
    167:175:void startInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> startInputProducer
    209:209:void subscribeTaskForRequestCancellation(java.util.concurrent.atomic.AtomicBoolean,com.facebook.imagepipeline.producers.ProducerContext) -> subscribeTaskForRequestCancellation
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$1 -> com.facebook.imagepipeline.producers.PartialDiskCacheProducer$1:
    106:106:void <init>(com.facebook.imagepipeline.producers.PartialDiskCacheProducer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.cache.common.CacheKey) -> <init>
    106:106:java.lang.Object then(bolts.Task) -> then
    110:154:java.lang.Void then(bolts.Task) -> then
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$2 -> com.facebook.imagepipeline.producers.PartialDiskCacheProducer$2:
    210:210:void <init>(com.facebook.imagepipeline.producers.PartialDiskCacheProducer,java.util.concurrent.atomic.AtomicBoolean) -> <init>
    213:213:void onCancellationRequested() -> onCancellationRequested
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer -> com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer:
    233:233:void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.producers.PartialDiskCacheProducer$1) -> <init>
    251:256:void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.image.EncodedImage) -> <init>
    307:322:void copy(java.io.InputStream,java.io.OutputStream,int) -> copy
    293:300:com.facebook.common.memory.PooledByteBufferOutputStream merge(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.image.EncodedImage) -> merge
    233:233:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    261:287:void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int) -> onNewResultImpl
    332:340:void sendFinalResultToConsumer(com.facebook.common.memory.PooledByteBufferOutputStream) -> sendFinalResultToConsumer
com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer -> com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer:
    37:40:void <init>(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer) -> <init>
    48:56:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer$CachedPostprocessorConsumer -> com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer$CachedPostprocessorConsumer:
    102:106:void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.cache.common.CacheKey,boolean,com.facebook.imagepipeline.cache.MemoryCache,boolean) -> <init>
    87:87:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    115:134:void onNewResultImpl(com.facebook.common.references.CloseableReference,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.PostprocessorProducer -> com.facebook.imagepipeline.producers.PostprocessorProducer:
    44:47:void <init>(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,java.util.concurrent.Executor) -> <init>
    32:32:java.util.concurrent.Executor access$800(com.facebook.imagepipeline.producers.PostprocessorProducer) -> access$800
    32:32:com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory access$900(com.facebook.imagepipeline.producers.PostprocessorProducer) -> access$900
    54:67:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer -> com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer:
    98:103:void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,com.facebook.imagepipeline.request.Postprocessor,com.facebook.imagepipeline.producers.ProducerContext) -> <init>
    73:73:void access$200(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer) -> access$200
    73:73:com.facebook.common.references.CloseableReference access$300(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer) -> access$300
    73:73:com.facebook.common.references.CloseableReference access$302(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.common.references.CloseableReference) -> access$302
    73:73:int access$400(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer) -> access$400
    73:73:boolean access$502(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,boolean) -> access$502
    73:73:void access$600(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.common.references.CloseableReference,int) -> access$600
    73:73:void access$700(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer) -> access$700
    187:190:void clearRunningAndStartIfDirty() -> clearRunningAndStartIfDirty
    284:291:boolean close() -> close
    208:228:void doPostprocessing(com.facebook.common.references.CloseableReference,int) -> doPostprocessing
    234:237:java.util.Map getExtraMap(com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,com.facebook.imagepipeline.request.Postprocessor) -> getExtraMap
    279:279:boolean isClosed() -> isClosed
    273:274:void maybeNotifyOnCancellation() -> maybeNotifyOnCancellation
    267:268:void maybeNotifyOnFailure(java.lang.Throwable) -> maybeNotifyOnFailure
    260:262:void maybeNotifyOnNewResult(com.facebook.common.references.CloseableReference,int) -> maybeNotifyOnNewResult
    134:134:void onCancellationImpl() -> onCancellationImpl
    129:129:void onFailureImpl(java.lang.Throwable) -> onFailureImpl
    73:73:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    116:124:void onNewResultImpl(com.facebook.common.references.CloseableReference,int) -> onNewResultImpl
    245:255:com.facebook.common.references.CloseableReference postprocessInternal(com.facebook.imagepipeline.image.CloseableImage) -> postprocessInternal
    197:202:boolean setRunningIfDirtyAndNotRunning() -> setRunningIfDirtyAndNotRunning
    241:241:boolean shouldPostprocess(com.facebook.imagepipeline.image.CloseableImage) -> shouldPostprocess
    159:159:void submitPostprocessing() -> submitPostprocessing
    142:151:void updateSourceImageRef(com.facebook.common.references.CloseableReference,int) -> updateSourceImageRef
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer$1 -> com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer$1:
    104:104:void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.imagepipeline.producers.PostprocessorProducer) -> <init>
    107:107:void onCancellationRequested() -> onCancellationRequested
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer$2 -> com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer$2:
    160:160:void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer) -> <init>
    165:171:void run() -> run
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer -> com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer:
    328:328:void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer,com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.imagepipeline.request.RepeatedPostprocessor,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.producers.PostprocessorProducer$1) -> <init>
    342:344:void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer,com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.imagepipeline.request.RepeatedPostprocessor,com.facebook.imagepipeline.producers.ProducerContext) -> <init>
    328:328:boolean access$1000(com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer) -> access$1000
    415:422:boolean close() -> close
    376:377:void onCancellationImpl() -> onCancellationImpl
    369:370:void onFailureImpl(java.lang.Throwable) -> onFailureImpl
    328:328:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    360:364:void onNewResultImpl(com.facebook.common.references.CloseableReference,int) -> onNewResultImpl
    403:409:void setSourceImageRef(com.facebook.common.references.CloseableReference) -> setSourceImageRef
    388:393:void updateInternal() -> updateInternal
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer$1 -> com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer$1:
    345:345:void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer,com.facebook.imagepipeline.producers.PostprocessorProducer) -> <init>
    348:349:void onCancellationRequested() -> onCancellationRequested
com.facebook.imagepipeline.producers.PostprocessorProducer$SingleUsePostprocessorConsumer -> com.facebook.imagepipeline.producers.PostprocessorProducer$SingleUsePostprocessorConsumer:
    300:300:void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer,com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.imagepipeline.producers.PostprocessorProducer$1) -> <init>
    305:305:void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer,com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer) -> <init>
    300:300:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    312:315:void onNewResultImpl(com.facebook.common.references.CloseableReference,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.ProducerConstants -> com.facebook.imagepipeline.producers.ProducerConstants:
    17:17:void <init>() -> <init>
com.facebook.imagepipeline.producers.QualifiedResourceFetchProducer -> com.facebook.imagepipeline.producers.QualifiedResourceFetchProducer:
    33:34:void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.ContentResolver) -> <init>
    39:42:com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest) -> getEncodedImage
com.facebook.imagepipeline.producers.RemoveImageTransformMetaDataProducer -> com.facebook.imagepipeline.producers.RemoveImageTransformMetaDataProducer:
    25:26:void <init>(com.facebook.imagepipeline.producers.Producer) -> <init>
    33:33:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.RemoveImageTransformMetaDataProducer$RemoveImageTransformMetaDataConsumer -> com.facebook.imagepipeline.producers.RemoveImageTransformMetaDataProducer$RemoveImageTransformMetaDataConsumer:
    36:36:void <init>(com.facebook.imagepipeline.producers.RemoveImageTransformMetaDataProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.RemoveImageTransformMetaDataProducer$1) -> <init>
    41:41:void <init>(com.facebook.imagepipeline.producers.RemoveImageTransformMetaDataProducer,com.facebook.imagepipeline.producers.Consumer) -> <init>
    36:36:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    48:53:void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.ResizeAndRotateProducer -> com.facebook.imagepipeline.producers.ResizeAndRotateProducer:
    66:71:void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.imagepipeline.producers.Producer,boolean,com.facebook.imagepipeline.transcoder.ImageTranscoderFactory) -> <init>
    45:45:java.util.concurrent.Executor access$300(com.facebook.imagepipeline.producers.ResizeAndRotateProducer) -> access$300
    45:45:com.facebook.common.util.TriState access$700(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.transcoder.ImageTranscoder) -> access$700
    45:45:com.facebook.common.memory.PooledByteBufferFactory access$800(com.facebook.imagepipeline.producers.ResizeAndRotateProducer) -> access$800
    78:78:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
    323:325:boolean shouldRotate(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.image.EncodedImage) -> shouldRotate
    330:331:boolean shouldRotateUsingExifOrientation(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.image.EncodedImage) -> shouldRotateUsingExifOrientation
    308:309:com.facebook.common.util.TriState shouldTransform(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.transcoder.ImageTranscoder) -> shouldTransform
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer -> com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer:
    96:124:void <init>(com.facebook.imagepipeline.producers.ResizeAndRotateProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,boolean,com.facebook.imagepipeline.transcoder.ImageTranscoderFactory) -> <init>
    83:83:boolean access$000(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer) -> access$000
    83:83:com.facebook.imagepipeline.transcoder.ImageTranscoderFactory access$100(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer) -> access$100
    83:83:void access$200(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer,com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.transcoder.ImageTranscoder) -> access$200
    83:83:com.facebook.imagepipeline.producers.ProducerContext access$400(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer) -> access$400
    83:83:com.facebook.imagepipeline.producers.JobScheduler access$500(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer) -> access$500
    83:83:boolean access$602(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer,boolean) -> access$602
    219:272:void doTransform(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.transcoder.ImageTranscoder) -> doTransform
    182:187:void forwardNewResult(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imageformat.ImageFormat) -> forwardNewResult
    209:212:com.facebook.imagepipeline.image.EncodedImage getCloneWithRotationApplied(com.facebook.imagepipeline.image.EncodedImage,int) -> getCloneWithRotationApplied
    281:300:java.util.Map getExtraMap(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imagepipeline.transcoder.ImageTranscodeResult,java.lang.String) -> getExtraMap
    191:193:com.facebook.imagepipeline.image.EncodedImage getNewResultForImagesWithoutExifData(com.facebook.imagepipeline.image.EncodedImage) -> getNewResultForImagesWithoutExifData
    199:202:com.facebook.imagepipeline.image.EncodedImage getNewResultsForJpegOrHeif(com.facebook.imagepipeline.image.EncodedImage) -> getNewResultsForJpegOrHeif
    83:83:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    145:176:void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$1 -> com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$1:
    111:111:void <init>(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer,com.facebook.imagepipeline.producers.ResizeAndRotateProducer) -> <init>
    114:114:void run(com.facebook.imagepipeline.image.EncodedImage,int) -> run
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$2 -> com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$2:
    125:125:void <init>(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer,com.facebook.imagepipeline.producers.ResizeAndRotateProducer,com.facebook.imagepipeline.producers.Consumer) -> <init>
    135:138:void onCancellationRequested() -> onCancellationRequested
    128:129:void onIsIntermediateResultExpectedChanged() -> onIsIntermediateResultExpectedChanged
com.facebook.imagepipeline.producers.SettableProducerContext -> com.facebook.imagepipeline.producers.SettableProducerContext:
    35:33:void <init>(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.producers.ProducerContext) -> <init>
    53:53:void <init>(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,com.facebook.imagepipeline.producers.ProducerListener,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,boolean,boolean,com.facebook.imagepipeline.common.Priority) -> <init>
com.facebook.imagepipeline.producers.StatefulProducerRunnable -> com.facebook.imagepipeline.producers.StatefulProducerRunnable:
    32:38:void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,java.lang.String) -> <init>
    62:66:void onCancellation() -> onCancellation
    52:57:void onFailure(java.lang.Exception) -> onFailure
    43:47:void onSuccess(java.lang.Object) -> onSuccess
com.facebook.imagepipeline.producers.SwallowResultProducer -> com.facebook.imagepipeline.producers.SwallowResultProducer:
    18:19:void <init>(com.facebook.imagepipeline.producers.Producer) -> <init>
    24:32:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.SwallowResultProducer$1 -> com.facebook.imagepipeline.producers.SwallowResultProducer$1:
    24:24:void <init>(com.facebook.imagepipeline.producers.SwallowResultProducer,com.facebook.imagepipeline.producers.Consumer) -> <init>
    27:28:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.ThreadHandoffProducer -> com.facebook.imagepipeline.producers.ThreadHandoffProducer:
    24:26:void <init>(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue) -> <init>
    16:16:com.facebook.imagepipeline.producers.Producer access$000(com.facebook.imagepipeline.producers.ThreadHandoffProducer) -> access$000
    16:16:com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue access$100(com.facebook.imagepipeline.producers.ThreadHandoffProducer) -> access$100
    31:57:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.ThreadHandoffProducer$1 -> com.facebook.imagepipeline.producers.ThreadHandoffProducer$1:
    34:34:void <init>(com.facebook.imagepipeline.producers.ThreadHandoffProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,java.lang.String,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> <init>
    37:38:void onSuccess(java.lang.Object) -> onSuccess
com.facebook.imagepipeline.producers.ThreadHandoffProducer$2 -> com.facebook.imagepipeline.producers.ThreadHandoffProducer$2:
    50:50:void <init>(com.facebook.imagepipeline.producers.ThreadHandoffProducer,com.facebook.imagepipeline.producers.StatefulProducerRunnable) -> <init>
    53:54:void onCancellationRequested() -> onCancellationRequested
com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue -> com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue:
    20:22:void <init>(java.util.concurrent.Executor) -> <init>
    26:31:void addToQueueOrExecute(java.lang.Runnable) -> addToQueueOrExecute
    50:51:void remove(java.lang.Runnable) -> remove
com.facebook.imagepipeline.producers.ThrottlingProducer -> com.facebook.imagepipeline.producers.ThrottlingProducer:
    36:41:void <init>(int,java.util.concurrent.Executor,com.facebook.imagepipeline.producers.Producer) -> <init>
    20:20:java.util.concurrent.ConcurrentLinkedQueue access$100(com.facebook.imagepipeline.producers.ThrottlingProducer) -> access$100
    20:20:int access$210(com.facebook.imagepipeline.producers.ThrottlingProducer) -> access$210
    20:20:java.util.concurrent.Executor access$300(com.facebook.imagepipeline.producers.ThrottlingProducer) -> access$300
    46:58:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
    66:68:void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResultsInternal
com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer -> com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer:
    71:71:void <init>(com.facebook.imagepipeline.producers.ThrottlingProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ThrottlingProducer$1) -> <init>
    73:74:void <init>(com.facebook.imagepipeline.producers.ThrottlingProducer,com.facebook.imagepipeline.producers.Consumer) -> <init>
    93:94:void onCancellationImpl() -> onCancellationImpl
    87:88:void onFailureImpl(java.lang.Throwable) -> onFailureImpl
    79:81:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    99:104:void onRequestFinished() -> onRequestFinished
com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1 -> com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1:
    108:108:void <init>(com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer,android.util.Pair) -> <init>
    111:111:void run() -> run
com.facebook.imagepipeline.producers.ThumbnailBranchProducer -> com.facebook.imagepipeline.producers.ThumbnailBranchProducer:
    27:29:void <init>(com.facebook.imagepipeline.producers.ThumbnailProducer[]) -> <init>
    23:23:boolean access$000(com.facebook.imagepipeline.producers.ThumbnailBranchProducer,int,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> access$000
    108:109:int findFirstProducerForSize(int,com.facebook.imagepipeline.common.ResizeOptions) -> findFirstProducerForSize
    36:41:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
    96:103:boolean produceResultsFromThumbnailProducer(int,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResultsFromThumbnailProducer
com.facebook.imagepipeline.producers.ThumbnailBranchProducer$ThumbnailConsumer -> com.facebook.imagepipeline.producers.ThumbnailBranchProducer$ThumbnailConsumer:
    54:58:void <init>(com.facebook.imagepipeline.producers.ThumbnailBranchProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,int) -> <init>
    82:86:void onFailureImpl(java.lang.Throwable) -> onFailureImpl
    46:46:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    64:75:void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.ThumbnailSizeChecker -> com.facebook.imagepipeline.producers.ThumbnailSizeChecker:
    18:18:void <init>() -> <init>
    41:45:boolean isImageBigEnough(int,int,com.facebook.imagepipeline.common.ResizeOptions) -> isImageBigEnough
    54:58:boolean isImageBigEnough(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.ResizeOptions) -> isImageBigEnough
com.facebook.imagepipeline.producers.WebpTranscodeProducer -> com.facebook.imagepipeline.producers.WebpTranscodeProducer:
    46:49:void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.imagepipeline.producers.Producer) -> <init>
    34:34:com.facebook.common.util.TriState access$000(com.facebook.imagepipeline.image.EncodedImage) -> access$000
    34:34:void access$100(com.facebook.imagepipeline.producers.WebpTranscodeProducer,com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> access$100
    34:34:com.facebook.common.memory.PooledByteBufferFactory access$200(com.facebook.imagepipeline.producers.WebpTranscodeProducer) -> access$200
    34:34:void access$300(com.facebook.imagepipeline.image.EncodedImage,com.facebook.common.memory.PooledByteBufferOutputStream) -> access$300
    172:180:void doTranscode(com.facebook.imagepipeline.image.EncodedImage,com.facebook.common.memory.PooledByteBufferOutputStream) -> doTranscode
    54:54:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
    150:166:com.facebook.common.util.TriState shouldTranscode(com.facebook.imagepipeline.image.EncodedImage) -> shouldTranscode
    96:146:void transcodeLastResult(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> transcodeLastResult
com.facebook.imagepipeline.producers.WebpTranscodeProducer$1 -> com.facebook.imagepipeline.producers.WebpTranscodeProducer$1:
    103:103:void <init>(com.facebook.imagepipeline.producers.WebpTranscodeProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,java.lang.String,com.facebook.imagepipeline.image.EncodedImage) -> <init>
    103:103:void disposeResult(java.lang.Object) -> disposeResult
    125:125:void disposeResult(com.facebook.imagepipeline.image.EncodedImage) -> disposeResult
    103:103:java.lang.Object getResult() -> getResult
    106:119:com.facebook.imagepipeline.image.EncodedImage getResult() -> getResult
    142:143:void onCancellation() -> onCancellation
    136:137:void onFailure(java.lang.Exception) -> onFailure
    103:103:void onSuccess(java.lang.Object) -> onSuccess
    130:131:void onSuccess(com.facebook.imagepipeline.image.EncodedImage) -> onSuccess
com.facebook.imagepipeline.producers.WebpTranscodeProducer$WebpTranscodeConsumer -> com.facebook.imagepipeline.producers.WebpTranscodeProducer$WebpTranscodeConsumer:
    63:66:void <init>(com.facebook.imagepipeline.producers.WebpTranscodeProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> <init>
    57:57:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    72:86:void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int) -> onNewResultImpl
com.facebook.imagepipeline.request.BasePostprocessor -> com.facebook.imagepipeline.request.BasePostprocessor:
    30:30:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
    115:122:void internalCopyBitmap(android.graphics.Bitmap,android.graphics.Bitmap) -> internalCopyBitmap
    54:64:com.facebook.common.references.CloseableReference process(android.graphics.Bitmap,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory) -> process
    84:85:void process(android.graphics.Bitmap,android.graphics.Bitmap) -> process
com.facebook.imagepipeline.request.BaseRepeatedPostProcessor -> com.facebook.imagepipeline.request.BaseRepeatedPostProcessor:
    10:10:void <init>() -> <init>
    17:17:void setCallback(com.facebook.imagepipeline.request.RepeatedPostprocessorRunner) -> setCallback
com.facebook.imagepipeline.request.ImageRequest -> com.facebook.imagepipeline.request.ImageRequest:
    117:142:void <init>(com.facebook.imagepipeline.request.ImageRequestBuilder) -> <init>
    239:256:boolean equals(java.lang.Object) -> equals
    183:183:com.facebook.imagepipeline.common.BytesRange getBytesRange() -> getBytesRange
    146:146:com.facebook.imagepipeline.request.ImageRequest$CacheChoice getCacheChoice() -> getCacheChoice
    187:187:com.facebook.imagepipeline.common.ImageDecodeOptions getImageDecodeOptions() -> getImageDecodeOptions
    195:195:boolean getLocalThumbnailPreviewsEnabled() -> getLocalThumbnailPreviewsEnabled
    203:203:com.facebook.imagepipeline.request.ImageRequest$RequestLevel getLowestPermittedRequestLevel() -> getLowestPermittedRequestLevel
    230:230:com.facebook.imagepipeline.request.Postprocessor getPostprocessor() -> getPostprocessor
    162:162:int getPreferredHeight() -> getPreferredHeight
    158:158:int getPreferredWidth() -> getPreferredWidth
    199:199:com.facebook.imagepipeline.common.Priority getPriority() -> getPriority
    191:191:boolean getProgressiveRenderingEnabled() -> getProgressiveRenderingEnabled
    234:234:com.facebook.imagepipeline.listener.RequestListener getRequestListener() -> getRequestListener
    166:166:com.facebook.imagepipeline.common.ResizeOptions getResizeOptions() -> getResizeOptions
    219:219:java.lang.Boolean getResizingAllowedOverride() -> getResizingAllowedOverride
    170:170:com.facebook.imagepipeline.common.RotationOptions getRotationOptions() -> getRotationOptions
    223:226:java.io.File getSourceFile() -> getSourceFile
    150:150:android.net.Uri getSourceUri() -> getSourceUri
    154:154:int getSourceUriType() -> getSourceUriType
    343:359:int getSourceUriType(android.net.Uri) -> getSourceUriType
    261:263:int hashCode() -> hashCode
    207:207:boolean isDiskCacheEnabled() -> isDiskCacheEnabled
    211:211:boolean isMemoryCacheEnabled() -> isMemoryCacheEnabled
    215:215:java.lang.Boolean shouldDecodePrefetches() -> shouldDecodePrefetches
    277:287:java.lang.String toString() -> toString
com.facebook.imagepipeline.request.ImageRequest$CacheChoice -> com.facebook.imagepipeline.request.ImageRequest$CacheChoice:
    296:293:void <clinit>() -> <clinit>
    293:293:void <init>(java.lang.String,int) -> <init>
    293:293:com.facebook.imagepipeline.request.ImageRequest$CacheChoice valueOf(java.lang.String) -> valueOf
    293:293:com.facebook.imagepipeline.request.ImageRequest$CacheChoice[] values() -> values
com.facebook.imagepipeline.request.ImageRequest$RequestLevel -> com.facebook.imagepipeline.request.ImageRequest$RequestLevel:
    308:306:void <clinit>() -> <clinit>
    321:322:void <init>(java.lang.String,int,int) -> <init>
    330:330:com.facebook.imagepipeline.request.ImageRequest$RequestLevel getMax(com.facebook.imagepipeline.request.ImageRequest$RequestLevel,com.facebook.imagepipeline.request.ImageRequest$RequestLevel) -> getMax
    326:326:int getValue() -> getValue
    306:306:com.facebook.imagepipeline.request.ImageRequest$RequestLevel valueOf(java.lang.String) -> valueOf
    306:306:com.facebook.imagepipeline.request.ImageRequest$RequestLevel[] values() -> values
com.facebook.imagepipeline.request.ImageRequestBuilder -> com.facebook.imagepipeline.request.ImageRequestBuilder:
    100:47:void <init>() -> <init>
    339:340:com.facebook.imagepipeline.request.ImageRequest build() -> build
    85:97:com.facebook.imagepipeline.request.ImageRequestBuilder fromRequest(com.facebook.imagepipeline.request.ImageRequest) -> fromRequest
    205:205:com.facebook.imagepipeline.common.BytesRange getBytesRange() -> getBytesRange
    230:230:com.facebook.imagepipeline.request.ImageRequest$CacheChoice getCacheChoice() -> getCacheChoice
    214:214:com.facebook.imagepipeline.common.ImageDecodeOptions getImageDecodeOptions() -> getImageDecodeOptions
    133:133:com.facebook.imagepipeline.request.ImageRequest$RequestLevel getLowestPermittedRequestLevel() -> getLowestPermittedRequestLevel
    312:312:com.facebook.imagepipeline.request.Postprocessor getPostprocessor() -> getPostprocessor
    331:331:com.facebook.imagepipeline.listener.RequestListener getRequestListener() -> getRequestListener
    297:297:com.facebook.imagepipeline.common.Priority getRequestPriority() -> getRequestPriority
    163:163:com.facebook.imagepipeline.common.ResizeOptions getResizeOptions() -> getResizeOptions
    358:358:java.lang.Boolean getResizingAllowedOverride() -> getResizingAllowedOverride
    182:182:com.facebook.imagepipeline.common.RotationOptions getRotationOptions() -> getRotationOptions
    118:118:android.net.Uri getSourceUri() -> getSourceUri
    271:271:boolean isDiskCacheEnabled() -> isDiskCacheEnabled
    260:260:boolean isLocalThumbnailPreviewsEnabled() -> isLocalThumbnailPreviewsEnabled
    282:282:boolean isMemoryCacheEnabled() -> isMemoryCacheEnabled
    245:245:boolean isProgressiveRenderingEnabled() -> isProgressiveRenderingEnabled
    55:55:com.facebook.imagepipeline.request.ImageRequestBuilder newBuilderWithSource(android.net.Uri) -> newBuilderWithSource
    145:147:com.facebook.imagepipeline.request.ImageRequestBuilder setAutoRotateEnabled(boolean) -> setAutoRotateEnabled
    198:198:com.facebook.imagepipeline.request.ImageRequestBuilder setBytesRange(com.facebook.imagepipeline.common.BytesRange) -> setBytesRange
    224:224:com.facebook.imagepipeline.request.ImageRequestBuilder setCacheChoice(com.facebook.imagepipeline.request.ImageRequest$CacheChoice) -> setCacheChoice
    209:209:com.facebook.imagepipeline.request.ImageRequestBuilder setImageDecodeOptions(com.facebook.imagepipeline.common.ImageDecodeOptions) -> setImageDecodeOptions
    254:254:com.facebook.imagepipeline.request.ImageRequestBuilder setLocalThumbnailPreviewsEnabled(boolean) -> setLocalThumbnailPreviewsEnabled
    127:127:com.facebook.imagepipeline.request.ImageRequestBuilder setLowestPermittedRequestLevel(com.facebook.imagepipeline.request.ImageRequest$RequestLevel) -> setLowestPermittedRequestLevel
    306:306:com.facebook.imagepipeline.request.ImageRequestBuilder setPostprocessor(com.facebook.imagepipeline.request.Postprocessor) -> setPostprocessor
    239:239:com.facebook.imagepipeline.request.ImageRequestBuilder setProgressiveRenderingEnabled(boolean) -> setProgressiveRenderingEnabled
    323:323:com.facebook.imagepipeline.request.ImageRequestBuilder setRequestListener(com.facebook.imagepipeline.listener.RequestListener) -> setRequestListener
    291:291:com.facebook.imagepipeline.request.ImageRequestBuilder setRequestPriority(com.facebook.imagepipeline.common.Priority) -> setRequestPriority
    157:157:com.facebook.imagepipeline.request.ImageRequestBuilder setResizeOptions(com.facebook.imagepipeline.common.ResizeOptions) -> setResizeOptions
    176:176:com.facebook.imagepipeline.request.ImageRequestBuilder setRotationOptions(com.facebook.imagepipeline.common.RotationOptions) -> setRotationOptions
    348:348:com.facebook.imagepipeline.request.ImageRequestBuilder setShouldDecodePrefetches(java.lang.Boolean) -> setShouldDecodePrefetches
    110:112:com.facebook.imagepipeline.request.ImageRequestBuilder setSource(android.net.Uri) -> setSource
    344:344:java.lang.Boolean shouldDecodePrefetches() -> shouldDecodePrefetches
    371:372:void validate() -> validate
com.facebook.imagepipeline.request.ImageRequestBuilder$BuilderException -> com.facebook.imagepipeline.request.ImageRequestBuilder$BuilderException:
    364:364:void <init>(java.lang.String) -> <init>
com.facebook.imagepipeline.systrace.DefaultFrescoSystrace -> com.facebook.imagepipeline.systrace.DefaultFrescoSystrace:
    23:23:void <init>() -> <init>
com.facebook.imagepipeline.systrace.FrescoSystrace -> com.facebook.imagepipeline.systrace.FrescoSystrace:
    32:34:void <clinit>() -> <clinit>
    81:81:void <init>() -> <init>
    88:88:void beginSection(java.lang.String) -> beginSection
    96:96:void endSection() -> endSection
    104:111:com.facebook.imagepipeline.systrace.FrescoSystrace$Systrace getInstance() -> getInstance
    100:100:boolean isTracing() -> isTracing
com.facebook.imagepipeline.systrace.FrescoSystrace$NoOpArgsBuilder -> com.facebook.imagepipeline.systrace.FrescoSystrace$NoOpArgsBuilder:
    114:114:void <init>() -> <init>
    114:114:void <init>(com.facebook.imagepipeline.systrace.FrescoSystrace$1) -> <init>
com.facebook.imagepipeline.transcoder.DownsampleUtil -> com.facebook.imagepipeline.transcoder.DownsampleUtil:
    22:22:void <init>() -> <init>
    71:87:float determineDownsampleRatio(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imagepipeline.image.EncodedImage) -> determineDownsampleRatio
    40:57:int determineSampleSize(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imagepipeline.image.EncodedImage,int) -> determineSampleSize
    135:139:int getRotationAngle(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.image.EncodedImage) -> getRotationAngle
    108:109:int ratioToSampleSize(float) -> ratioToSampleSize
    124:124:int ratioToSampleSizeJPEG(float) -> ratioToSampleSizeJPEG
com.facebook.imagepipeline.transcoder.ImageTranscodeResult -> com.facebook.imagepipeline.transcoder.ImageTranscodeResult:
    16:17:void <init>(int) -> <init>
    22:22:int getTranscodeStatus() -> getTranscodeStatus
    27:27:java.lang.String toString() -> toString
com.facebook.imagepipeline.transcoder.JpegTranscoderUtils -> com.facebook.imagepipeline.transcoder.JpegTranscoderUtils:
    34:33:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
    168:168:int calculateDownsampleNumerator(int) -> calculateDownsampleNumerator
    142:149:float determineResizeRatio(com.facebook.imagepipeline.common.ResizeOptions,int,int) -> determineResizeRatio
    235:239:int extractOrientationFromMetadata(com.facebook.imagepipeline.image.EncodedImage) -> extractOrientationFromMetadata
    122:125:int getForceRotatedInvertedExifOrientation(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.image.EncodedImage) -> getForceRotatedInvertedExifOrientation
    103:110:int getRotationAngle(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.image.EncodedImage) -> getRotationAngle
    78:95:int getSoftwareNumerator(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imagepipeline.image.EncodedImage,boolean) -> getSoftwareNumerator
    184:196:android.graphics.Matrix getTransformationMatrix(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.RotationOptions) -> getTransformationMatrix
    211:214:android.graphics.Matrix getTransformationMatrixFromInvertedExif(int) -> getTransformationMatrixFromInvertedExif
    46:46:boolean isRotationAngleAllowed(int) -> isRotationAngleAllowed
com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory -> com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory:
    30:34:void <init>(int,boolean,com.facebook.imagepipeline.transcoder.ImageTranscoderFactory,java.lang.Integer) -> <init>
    40:52:com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean) -> createImageTranscoder
    59:62:com.facebook.imagepipeline.transcoder.ImageTranscoder getCustomImageTranscoder(com.facebook.imageformat.ImageFormat,boolean) -> getCustomImageTranscoder
    82:88:com.facebook.imagepipeline.transcoder.ImageTranscoder getImageTranscoderWithType(com.facebook.imageformat.ImageFormat,boolean) -> getImageTranscoderWithType
    68:70:com.facebook.imagepipeline.transcoder.ImageTranscoder getNativeImageTranscoder(com.facebook.imageformat.ImageFormat,boolean) -> getNativeImageTranscoder
    75:76:com.facebook.imagepipeline.transcoder.ImageTranscoder getSimpleImageTranscoder(com.facebook.imageformat.ImageFormat,boolean) -> getSimpleImageTranscoder
com.facebook.imagepipeline.transcoder.SimpleImageTranscoder -> com.facebook.imagepipeline.transcoder.SimpleImageTranscoder:
    31:33:void <init>(boolean,int) -> <init>
    103:106:boolean canResize(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions) -> canResize
    113:113:boolean canTranscode(com.facebook.imageformat.ImageFormat) -> canTranscode
    145:158:android.graphics.Bitmap$CompressFormat getOutputFormat(com.facebook.imageformat.ImageFormat) -> getOutputFormat
    126:130:int getSampleSize(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions) -> getSampleSize
    45:59:com.facebook.imagepipeline.transcoder.ImageTranscodeResult transcode(com.facebook.imagepipeline.image.EncodedImage,java.io.OutputStream,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imageformat.ImageFormat,java.lang.Integer) -> transcode
com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory -> com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory:
    16:17:void <init>(int) -> <init>
    22:22:com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean) -> createImageTranscoder
com.facebook.imagepipelinebase.BuildConfig -> com.facebook.imagepipelinebase.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.imagepipelinebase.R -> com.facebook.imagepipelinebase.R:
    10:10:void <init>() -> <init>
com.facebook.imageutils.BitmapUtil -> com.facebook.imageutils.BitmapUtil:
    30:30:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    108:123:android.util.Pair decodeDimensions(java.io.InputStream) -> decodeDimensions
    135:152:com.facebook.imageutils.ImageMetaData decodeDimensionsAndColorSpace(java.io.InputStream) -> decodeDimensionsAndColorSpace
    165:177:int getPixelSizeForBitmapConfig(android.graphics.Bitmap$Config) -> getPixelSizeForBitmapConfig
    190:190:int getSizeInByteForBitmap(int,int,android.graphics.Bitmap$Config) -> getSizeInByteForBitmap
    56:69:int getSizeInBytes(android.graphics.Bitmap) -> getSizeInBytes
com.facebook.imageutils.BitmapUtil$1 -> com.facebook.imageutils.BitmapUtil$1:
    165:165:void <clinit>() -> <clinit>
com.facebook.imageutils.HeifExifUtil -> com.facebook.imageutils.HeifExifUtil:
    22:22:void <init>() -> <init>
    27:30:int getOrientation(java.io.InputStream) -> getOrientation
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN -> com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN:
    36:36:void <init>() -> <init>
    41:45:int getOrientation(java.io.InputStream) -> getOrientation
com.facebook.imageutils.ImageMetaData -> com.facebook.imageutils.ImageMetaData:
    20:22:void <init>(int,int,android.graphics.ColorSpace) -> <init>
    30:30:android.graphics.ColorSpace getColorSpace() -> getColorSpace
    26:26:android.util.Pair getDimensions() -> getDimensions
com.facebook.imageutils.JfifUtil -> com.facebook.imageutils.JfifUtil:
    37:37:void <init>() -> <init>
    46:46:int getAutoRotateAngleFromOrientation(int) -> getAutoRotateAngleFromOrientation
    69:73:int getOrientation(java.io.InputStream) -> getOrientation
    150:157:int moveToAPP1EXIF(java.io.InputStream) -> moveToAPP1EXIF
    87:117:boolean moveToMarker(java.io.InputStream,int) -> moveToMarker
com.facebook.imageutils.StreamProcessor -> com.facebook.imageutils.StreamProcessor:
    16:16:void <init>() -> <init>
    30:32:int readPackedInt(java.io.InputStream,int,boolean) -> readPackedInt
com.facebook.imageutils.TiffUtil -> com.facebook.imageutils.TiffUtil:
    20:20:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    166:176:int getOrientationFromTiffEntry(java.io.InputStream,int,boolean) -> getOrientationFromTiffEntry
    139:147:int moveToTiffEntryWithTag(java.io.InputStream,int,boolean,int) -> moveToTiffEntryWithTag
    56:73:int readOrientationFromTIFF(java.io.InputStream,int) -> readOrientationFromTIFF
    99:112:int readTiffHeader(java.io.InputStream,int,com.facebook.imageutils.TiffUtil$TiffHeader) -> readTiffHeader
com.facebook.imageutils.TiffUtil$TiffHeader -> com.facebook.imageutils.TiffUtil$TiffHeader:
    79:79:void <init>() -> <init>
    79:79:void <init>(com.facebook.imageutils.TiffUtil$1) -> <init>
com.facebook.imageutils.WebpUtil -> com.facebook.imageutils.WebpUtil:
    34:34:void <init>() -> <init>
    158:162:boolean compare(byte[],java.lang.String) -> compare
    189:190:int get2BytesAsInt(java.io.InputStream) -> get2BytesAsInt
    208:208:byte getByte(java.io.InputStream) -> getByte
    170:174:java.lang.String getHeader(byte[]) -> getHeader
    178:181:int getInt(java.io.InputStream) -> getInt
    204:204:short getShort(java.io.InputStream) -> getShort
    50:80:android.util.Pair getSize(java.io.InputStream) -> getSize
    97:107:android.util.Pair getVP8Dimension(java.io.InputStream) -> getVP8Dimension
    120:133:android.util.Pair getVP8LDimension(java.io.InputStream) -> getVP8LDimension
    145:147:android.util.Pair getVP8XDimension(java.io.InputStream) -> getVP8XDimension
    195:197:int read3Bytes(java.io.InputStream) -> read3Bytes
com.facebook.infer.annotation.Assertions -> com.facebook.infer.annotation.Assertions:
    16:16:void <init>() -> <init>
    66:66:void assertCondition(boolean) -> assertCondition
    72:72:void assertCondition(boolean,java.lang.String) -> assertCondition
    28:28:java.lang.Object assertNotNull(java.lang.Object) -> assertNotNull
    35:35:java.lang.Object assertNotNull(java.lang.Object,java.lang.String) -> assertNotNull
com.facebook.jni.CppException -> com.facebook.jni.CppException:
    25:25:void <init>(java.lang.String) -> <init>
com.facebook.jni.CppSystemErrorException -> com.facebook.jni.CppSystemErrorException:
    27:27:void <init>(java.lang.String,int) -> <init>
com.facebook.jni.DestructorThread -> com.facebook.jni.DestructorThread:
    67:93:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    33:33:java.lang.ref.ReferenceQueue access$000() -> access$000
    33:33:com.facebook.jni.DestructorThread$DestructorStack access$100() -> access$100
    33:33:com.facebook.jni.DestructorThread$DestructorList access$700() -> access$700
com.facebook.jni.DestructorThread$1 -> com.facebook.jni.DestructorThread$1:
    71:71:void <init>(java.lang.String) -> <init>
    76:85:void run() -> run
com.facebook.jni.DestructorThread$Destructor -> com.facebook.jni.DestructorThread$Destructor:
    40:40:void <init>(com.facebook.jni.DestructorThread$1) -> <init>
    46:47:void <init>(java.lang.Object) -> <init>
    51:51:void <init>() -> <init>
    40:40:com.facebook.jni.DestructorThread$Destructor access$300(com.facebook.jni.DestructorThread$Destructor) -> access$300
    40:40:com.facebook.jni.DestructorThread$Destructor access$302(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor) -> access$302
    40:40:com.facebook.jni.DestructorThread$Destructor access$600(com.facebook.jni.DestructorThread$Destructor) -> access$600
    40:40:com.facebook.jni.DestructorThread$Destructor access$602(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor) -> access$602
com.facebook.jni.DestructorThread$DestructorList -> com.facebook.jni.DestructorThread$DestructorList:
    129:132:void <init>() -> <init>
    126:126:void access$400(com.facebook.jni.DestructorThread$Destructor) -> access$400
    144:145:void drop(com.facebook.jni.DestructorThread$Destructor) -> drop
    136:140:void enqueue(com.facebook.jni.DestructorThread$Destructor) -> enqueue
com.facebook.jni.DestructorThread$DestructorStack -> com.facebook.jni.DestructorThread$DestructorStack:
    104:105:void <init>() -> <init>
    104:104:void <init>(com.facebook.jni.DestructorThread$1) -> <init>
    110:112:void push(com.facebook.jni.DestructorThread$Destructor) -> push
    116:119:void transferAllToList() -> transferAllToList
com.facebook.jni.DestructorThread$Terminus -> com.facebook.jni.DestructorThread$Terminus:
    96:96:void <init>() -> <init>
    96:96:void <init>(com.facebook.jni.DestructorThread$1) -> <init>
    99:99:void destruct() -> destruct
com.facebook.jni.HybridClassBase -> com.facebook.jni.HybridClassBase:
    22:22:void <init>() -> <init>
com.facebook.jni.HybridData -> com.facebook.jni.HybridData:
    34:34:void <clinit>() -> <clinit>
    31:37:void <init>() -> <init>
    48:49:void resetNative() -> resetNative
com.facebook.jni.HybridData$Destructor -> com.facebook.jni.HybridData$Destructor:
    73:73:void <init>(java.lang.Object) -> <init>
    81:82:void destruct() -> destruct
com.facebook.jni.IteratorHelper -> com.facebook.jni.IteratorHelper:
    36:37:void <init>(java.util.Iterator) -> <init>
    41:42:void <init>(java.lang.Iterable) -> <init>
    51:55:boolean hasNext() -> hasNext
com.facebook.jni.MapIteratorHelper -> com.facebook.jni.MapIteratorHelper:
    37:38:void <init>(java.util.Map) -> <init>
    47:54:boolean hasNext() -> hasNext
com.facebook.jni.ThreadScopeSupport -> com.facebook.jni.ThreadScopeSupport:
    25:25:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
    32:32:void runStdFunction(long) -> runStdFunction
com.facebook.jni.UnknownCppException -> com.facebook.jni.UnknownCppException:
    25:25:void <init>() -> <init>
    30:30:void <init>(java.lang.String) -> <init>
com.facebook.nativefilters.BuildConfig -> com.facebook.nativefilters.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.nativefilters.R -> com.facebook.nativefilters.R:
    10:10:void <init>() -> <init>
com.facebook.nativeimagetranscoder.BuildConfig -> com.facebook.nativeimagetranscoder.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.nativeimagetranscoder.R -> com.facebook.nativeimagetranscoder.R:
    10:10:void <init>() -> <init>
com.facebook.perftest.PerfTestConfig -> com.facebook.perftest.PerfTestConfig:
    11:11:void <init>() -> <init>
com.facebook.react.BuildConfig -> com.facebook.react.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.react.CompositeReactPackage -> com.facebook.react.CompositeReactPackage:
    50:75:java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext) -> createNativeModules
    110:117:com.facebook.react.uimanager.ViewManager createViewManager(com.facebook.react.bridge.ReactApplicationContext,java.lang.String) -> createViewManager
    81:87:java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext) -> createViewManagers
    93:103:java.util.List getViewManagerNames(com.facebook.react.bridge.ReactApplicationContext) -> getViewManagerNames
com.facebook.react.CoreModulesPackage -> com.facebook.react.CoreModulesPackage:
    71:75:void <init>(com.facebook.react.ReactInstanceManager,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler,com.facebook.react.uimanager.UIImplementationProvider,boolean,int) -> <init>
    59:59:com.facebook.react.ReactInstanceManager access$000(com.facebook.react.CoreModulesPackage) -> access$000
    167:195:com.facebook.react.uimanager.UIManagerModule createUIManager(com.facebook.react.bridge.ReactApplicationContext) -> createUIManager
    205:205:void endProcessPackage() -> endProcessPackage
    139:141:com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext) -> getModule
    88:122:com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider() -> getReactModuleInfoProvider
    200:200:void startProcessPackage() -> startProcessPackage
com.facebook.react.CoreModulesPackage$1 -> com.facebook.react.CoreModulesPackage$1:
    122:122:void <init>(com.facebook.react.CoreModulesPackage,java.util.Map) -> <init>
    125:125:java.util.Map getReactModuleInfos() -> getReactModuleInfos
com.facebook.react.CoreModulesPackage$2 -> com.facebook.react.CoreModulesPackage$2:
    172:172:void <init>(com.facebook.react.CoreModulesPackage) -> <init>
    175:175:com.facebook.react.uimanager.ViewManager getViewManager(java.lang.String) -> getViewManager
    180:180:java.util.List getViewManagerNames() -> getViewManagerNames
com.facebook.react.DebugCorePackage -> com.facebook.react.DebugCorePackage:
    33:33:void <init>() -> <init>
    37:38:java.util.List getNativeModules(com.facebook.react.bridge.ReactApplicationContext) -> getNativeModules
    52:52:com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider() -> getReactModuleInfoProvider
com.facebook.react.DebugCorePackage$1 -> com.facebook.react.DebugCorePackage$1:
    41:41:void <init>(com.facebook.react.DebugCorePackage,com.facebook.react.bridge.ReactApplicationContext) -> <init>
    41:41:java.lang.Object get() -> get
    44:44:com.facebook.react.bridge.NativeModule get() -> get
com.facebook.react.EagerModuleProvider -> com.facebook.react.EagerModuleProvider:
    14:14:java.lang.Object get() -> get
    24:24:com.facebook.react.bridge.NativeModule get() -> get
com.facebook.react.HeadlessJsTaskService -> com.facebook.react.HeadlessJsTaskService:
    40:42:void <init>() -> <init>
    40:40:void access$000(com.facebook.react.HeadlessJsTaskService,com.facebook.react.bridge.ReactContext,com.facebook.react.jstasks.HeadlessJsTaskConfig) -> access$000
    40:40:java.util.Set access$100(com.facebook.react.HeadlessJsTaskService) -> access$100
    71:78:void acquireWakeLockNow(android.content.Context) -> acquireWakeLockNow
    167:167:com.facebook.react.ReactNativeHost getReactNativeHost() -> getReactNativeHost
    117:120:void invokeStartTask(com.facebook.react.bridge.ReactContext,com.facebook.react.jstasks.HeadlessJsTaskConfig) -> invokeStartTask
    132:144:void onDestroy() -> onDestroy
    153:155:void onHeadlessJsTaskFinish(int) -> onHeadlessJsTaskFinish
    47:49:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    95:111:void startTask(com.facebook.react.jstasks.HeadlessJsTaskConfig) -> startTask
com.facebook.react.HeadlessJsTaskService$1 -> com.facebook.react.HeadlessJsTaskService$1:
    102:102:void <init>(com.facebook.react.HeadlessJsTaskService,com.facebook.react.jstasks.HeadlessJsTaskConfig,com.facebook.react.ReactInstanceManager) -> <init>
    105:106:void onReactContextInitialized(com.facebook.react.bridge.ReactContext) -> onReactContextInitialized
com.facebook.react.HeadlessJsTaskService$2 -> com.facebook.react.HeadlessJsTaskService$2:
    121:121:void <init>(com.facebook.react.HeadlessJsTaskService,com.facebook.react.jstasks.HeadlessJsTaskContext,com.facebook.react.jstasks.HeadlessJsTaskConfig) -> <init>
    124:125:void run() -> run
com.facebook.react.LazyReactPackage -> com.facebook.react.LazyReactPackage:
    34:34:void <init>() -> <init>
    143:155:java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext) -> createNativeModules
    170:172:java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext) -> createViewManagers
    83:86:java.lang.Iterable getNativeModuleIterator(com.facebook.react.bridge.ReactApplicationContext) -> getNativeModuleIterator
    40:48:com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProviderViaReflection(com.facebook.react.LazyReactPackage) -> getReactModuleInfoProviderViaReflection
    165:165:java.util.List getViewManagers(com.facebook.react.bridge.ReactApplicationContext) -> getViewManagers
com.facebook.react.LazyReactPackage$1 -> com.facebook.react.LazyReactPackage$1:
    48:48:void <init>() -> <init>
    51:51:java.util.Map getReactModuleInfos() -> getReactModuleInfos
com.facebook.react.LazyReactPackage$2 -> com.facebook.react.LazyReactPackage$2:
    86:86:void <init>(com.facebook.react.LazyReactPackage,java.util.List,java.util.Map) -> <init>
    90:90:java.util.Iterator iterator() -> iterator
com.facebook.react.LazyReactPackage$2$1 -> com.facebook.react.LazyReactPackage$2$1:
    90:91:void <init>(com.facebook.react.LazyReactPackage$2) -> <init>
    116:116:boolean hasNext() -> hasNext
    90:90:java.lang.Object next() -> next
    95:109:com.facebook.react.bridge.ModuleHolder next() -> next
    121:121:void remove() -> remove
com.facebook.react.MemoryPressureRouter -> com.facebook.react.MemoryPressureRouter:
    23:24:void <init>(android.content.Context) -> <init>
    33:33:void addMemoryPressureListener(com.facebook.react.bridge.MemoryPressureListener) -> addMemoryPressureListener
    28:28:void destroy(android.content.Context) -> destroy
    55:58:void dispatchMemoryPressure(int) -> dispatchMemoryPressure
    43:43:void onTrimMemory(int) -> onTrimMemory
    38:38:void removeMemoryPressureListener(com.facebook.react.bridge.MemoryPressureListener) -> removeMemoryPressureListener
com.facebook.react.NativeModuleRegistryBuilder -> com.facebook.react.NativeModuleRegistryBuilder:
    25:27:void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.ReactInstanceManager) -> <init>
    66:66:com.facebook.react.bridge.NativeModuleRegistry build() -> build
    34:61:void processPackage(com.facebook.react.ReactPackage) -> processPackage
com.facebook.react.R -> com.facebook.react.R:
    10:10:void <init>() -> <init>
com.facebook.react.R$anim -> com.facebook.react.R$anim:
    13:13:void <init>() -> <init>
com.facebook.react.R$attr -> com.facebook.react.R$attr:
    35:35:void <init>() -> <init>
com.facebook.react.R$bool -> com.facebook.react.R$bool:
    333:333:void <init>() -> <init>
com.facebook.react.R$color -> com.facebook.react.R$color:
    340:340:void <init>() -> <init>
com.facebook.react.R$dimen -> com.facebook.react.R$dimen:
    430:430:void <init>() -> <init>
com.facebook.react.R$drawable -> com.facebook.react.R$drawable:
    548:548:void <init>() -> <init>
com.facebook.react.R$id -> com.facebook.react.R$id:
    651:651:void <init>() -> <init>
com.facebook.react.R$integer -> com.facebook.react.R$integer:
    786:786:void <init>() -> <init>
com.facebook.react.R$layout -> com.facebook.react.R$layout:
    797:797:void <init>() -> <init>
com.facebook.react.R$string -> com.facebook.react.R$string:
    844:844:void <init>() -> <init>
com.facebook.react.R$style -> com.facebook.react.R$style:
    931:931:void <init>() -> <init>
com.facebook.react.R$styleable -> com.facebook.react.R$styleable:
    1304:1829:void <clinit>() -> <clinit>
    1302:1302:void <init>() -> <init>
com.facebook.react.R$xml -> com.facebook.react.R$xml:
    1835:1835:void <init>() -> <init>
com.facebook.react.ReactActivity -> com.facebook.react.ReactActivity:
    25:26:void <init>() -> <init>
    39:39:com.facebook.react.ReactActivityDelegate createReactActivityDelegate() -> createReactActivityDelegate
    95:95:void invokeDefaultOnBackPressed() -> invokeDefaultOnBackPressed
    68:68:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    88:89:void onBackPressed() -> onBackPressed
    44:45:void onCreate(android.os.Bundle) -> onCreate
    62:63:void onDestroy() -> onDestroy
    73:73:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    83:83:boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    78:78:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    100:101:void onNewIntent(android.content.Intent) -> onNewIntent
    50:51:void onPause() -> onPause
    114:114:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    56:57:void onResume() -> onResume
    119:120:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    108:108:void requestPermissions(java.lang.String[],int,com.facebook.react.modules.core.PermissionListener) -> requestPermissions
com.facebook.react.ReactActivityDelegate -> com.facebook.react.ReactActivityDelegate:
    42:44:void <init>(com.facebook.react.ReactActivity,java.lang.String) -> <init>
    27:27:com.facebook.react.modules.core.PermissionListener access$000(com.facebook.react.ReactActivityDelegate) -> access$000
    27:27:com.facebook.react.modules.core.PermissionListener access$002(com.facebook.react.ReactActivityDelegate,com.facebook.react.modules.core.PermissionListener) -> access$002
    52:52:com.facebook.react.ReactRootView createRootView() -> createRootView
    180:180:android.content.Context getContext() -> getContext
    71:71:java.lang.String getMainComponentName() -> getMainComponentName
    184:184:android.app.Activity getPlainActivity() -> getPlainActivity
    63:63:com.facebook.react.ReactNativeHost getReactNativeHost() -> getReactNativeHost
    90:91:void loadApp(java.lang.String) -> loadApp
    112:112:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    140:140:boolean onBackPressed() -> onBackPressed
    75:85:void onCreate(android.os.Bundle) -> onCreate
    108:108:void onDestroy() -> onDestroy
    116:119:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    130:133:boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    126:126:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    144:145:boolean onNewIntent(android.content.Intent) -> onNewIntent
    95:95:void onPause() -> onPause
    166:166:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    99:103:void onResume() -> onResume
    152:153:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    160:161:void requestPermissions(java.lang.String[],int,com.facebook.react.modules.core.PermissionListener) -> requestPermissions
com.facebook.react.ReactActivityDelegate$1 -> com.facebook.react.ReactActivityDelegate$1:
    78:78:void <init>(com.facebook.react.ReactActivityDelegate,android.app.Activity,com.facebook.react.ReactNativeHost,java.lang.String,android.os.Bundle) -> <init>
    81:81:com.facebook.react.ReactRootView createRootView() -> createRootView
com.facebook.react.ReactActivityDelegate$2 -> com.facebook.react.ReactActivityDelegate$2:
    167:167:void <init>(com.facebook.react.ReactActivityDelegate,int,java.lang.String[],int[]) -> <init>
    170:173:void invoke(java.lang.Object[]) -> invoke
com.facebook.react.ReactAndroidHWInputDeviceHelper -> com.facebook.react.ReactAndroidHWInputDeviceHelper:
    25:36:void <clinit>() -> <clinit>
    46:47:void <init>(com.facebook.react.ReactRootView) -> <init>
    74:77:void clearFocus() -> clearFocus
    81:81:void dispatchEvent(java.lang.String,int) -> dispatchEvent
    85:91:void dispatchEvent(java.lang.String,int,int) -> dispatchEvent
    52:56:void handleKeyEvent(android.view.KeyEvent) -> handleKeyEvent
    62:69:void onFocusChanged(android.view.View) -> onFocusChanged
com.facebook.react.ReactDelegate -> com.facebook.react.ReactDelegate:
    40:45:void <init>(android.app.Activity,com.facebook.react.ReactNativeHost,java.lang.String,android.os.Bundle) -> <init>
    112:112:com.facebook.react.ReactRootView createRootView() -> createRootView
    141:141:com.facebook.react.ReactNativeHost getReactNativeHost() -> getReactNativeHost
    108:108:com.facebook.react.ReactRootView getReactRootView() -> getReactRootView
    95:95:void loadApp() -> loadApp
    99:100:void loadApp(java.lang.String) -> loadApp
    87:90:void onActivityResult(int,int,android.content.Intent,boolean) -> onActivityResult
    78:79:boolean onBackPressed() -> onBackPressed
    68:73:void onHostDestroy() -> onHostDestroy
    62:63:void onHostPause() -> onHostPause
    49:55:void onHostResume() -> onHostResume
    123:132:boolean shouldShowDevMenuOrReload(int,android.view.KeyEvent) -> shouldShowDevMenuOrReload
com.facebook.react.ReactFragment -> com.facebook.react.ReactFragment:
    37:37:void <init>() -> <init>
    79:79:com.facebook.react.ReactNativeHost getReactNativeHost() -> getReactNativeHost
    110:111:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    57:65:void onCreate(android.os.Bundle) -> onCreate
    85:86:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    103:104:void onDestroy() -> onDestroy
    97:98:void onPause() -> onPause
    140:143:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    91:92:void onResume() -> onResume
    162:163:void requestPermissions(java.lang.String[],int,com.facebook.react.modules.core.PermissionListener) -> requestPermissions
com.facebook.react.ReactFragment$Builder -> com.facebook.react.ReactFragment$Builder:
    172:172:void <init>() -> <init>
com.facebook.react.ReactFragmentActivity -> com.facebook.react.ReactFragmentActivity:
    15:15:void <init>() -> <init>
com.facebook.react.ReactInstanceManager -> com.facebook.react.ReactInstanceManager:
    221:271:void <init>(android.content.Context,android.app.Activity,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler,com.facebook.react.bridge.JavaScriptExecutorFactory,com.facebook.react.bridge.JSBundleLoader,java.lang.String,java.util.List,boolean,com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener,com.facebook.react.common.LifecycleState,com.facebook.react.uimanager.UIImplementationProvider,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.devsupport.RedBoxHandler,boolean,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,int,int,com.facebook.react.bridge.JSIModulePackage,java.util.Map) -> <init>
    132:132:void access$000(com.facebook.react.ReactInstanceManager) -> access$000
    132:132:void access$100(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaJSExecutor$Factory) -> access$100
    132:132:com.facebook.react.bridge.ReactApplicationContext access$1000(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader) -> access$1000
    132:132:java.lang.Thread access$1102(com.facebook.react.ReactInstanceManager,java.lang.Thread) -> access$1102
    132:132:com.facebook.react.ReactInstanceManager$ReactContextInitParams access$1200(com.facebook.react.ReactInstanceManager) -> access$1200
    132:132:com.facebook.react.ReactInstanceManager$ReactContextInitParams access$1202(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams) -> access$1202
    132:132:void access$1300(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams) -> access$1300
    132:132:void access$1400(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.ReactApplicationContext) -> access$1400
    132:132:void access$200(com.facebook.react.ReactInstanceManager) -> access$200
    132:132:void access$300(com.facebook.react.ReactInstanceManager) -> access$300
    132:132:android.app.Activity access$400(com.facebook.react.ReactInstanceManager) -> access$400
    132:132:com.facebook.react.bridge.JavaScriptExecutorFactory access$500(com.facebook.react.ReactInstanceManager) -> access$500
    132:132:com.facebook.react.devsupport.interfaces.DevSupportManager access$600(com.facebook.react.ReactInstanceManager) -> access$600
    132:132:void access$700(com.facebook.react.ReactInstanceManager) -> access$700
    132:132:java.lang.Boolean access$800(com.facebook.react.ReactInstanceManager) -> access$800
    132:132:boolean access$902(com.facebook.react.ReactInstanceManager,boolean) -> access$902
    900:900:void addReactInstanceEventListener(com.facebook.react.ReactInstanceManager$ReactInstanceEventListener) -> addReactInstanceEventListener
    785:796:void attachRootView(com.facebook.react.uimanager.ReactRoot) -> attachRootView
    1104:1143:void attachRootViewToInstance(com.facebook.react.uimanager.ReactRoot) -> attachRootViewToInstance
    199:199:com.facebook.react.ReactInstanceManagerBuilder builder() -> builder
    771:772:void clearReactRoot(com.facebook.react.uimanager.ReactRoot) -> clearReactRoot
    282:282:com.facebook.react.devsupport.ReactInstanceManagerDevHelper createDevHelperInterface() -> createDevHelperInterface
    1184:1213:com.facebook.react.bridge.ReactApplicationContext createReactContext(com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.JSBundleLoader) -> createReactContext
    367:372:void createReactContextInBackground() -> createReactContextInBackground
    845:850:com.facebook.react.uimanager.ViewManager createViewManager(java.lang.String) -> createViewManager
    654:677:void destroy() -> destroy
    807:816:void detachRootView(com.facebook.react.uimanager.ReactRoot) -> detachRootView
    1147:1156:void detachViewFromInstance(com.facebook.react.uimanager.ReactRoot,com.facebook.react.bridge.CatalystInstance) -> detachViewFromInstance
    910:912:com.facebook.react.bridge.ReactContext getCurrentReactContext() -> getCurrentReactContext
    336:336:com.facebook.react.devsupport.interfaces.DevSupportManager getDevSupportManager() -> getDevSupportManager
    332:332:com.facebook.react.bridge.JavaScriptExecutorFactory getJSExecutorFactory() -> getJSExecutorFactory
    920:920:java.lang.String getJsExecutorName() -> getJsExecutorName
    916:916:com.facebook.react.common.LifecycleState getLifecycleState() -> getLifecycleState
    340:340:com.facebook.react.MemoryPressureRouter getMemoryPressureRouter() -> getMemoryPressureRouter
    822:840:java.util.List getOrCreateViewManagers(com.facebook.react.bridge.ReactApplicationContext) -> getOrCreateViewManagers
    344:344:java.util.List getPackages() -> getPackages
    868:875:java.util.List getViewManagerNames() -> getViewManagerNames
    453:453:boolean hasStartedCreatingInitialContext() -> hasStartedCreatingInitialContext
    355:355:void initializeSoLoaderIfNecessary(android.content.Context) -> initializeSoLoaderIfNecessary
    475:477:void invokeDefaultOnBackPressed() -> invokeDefaultOnBackPressed
    729:732:void moveReactContextToCurrentLifecycleState() -> moveReactContextToCurrentLifecycleState
    715:726:void moveToBeforeCreateLifecycleState() -> moveToBeforeCreateLifecycleState
    702:712:void moveToBeforeResumeLifecycleState() -> moveToBeforeResumeLifecycleState
    689:699:void moveToResumedLifecycleState(boolean) -> moveToResumedLifecycleState
    736:738:void onActivityResult(android.app.Activity,int,int,android.content.Intent) -> onActivityResult
    461:470:void onBackPressed() -> onBackPressed
    754:760:void onConfigurationChanged(android.content.Context,android.content.res.Configuration) -> onConfigurationChanged
    627:634:void onHostDestroy() -> onHostDestroy
    646:647:void onHostDestroy(android.app.Activity) -> onHostDestroy
    525:532:void onHostPause() -> onHostPause
    545:554:void onHostPause(android.app.Activity) -> onHostPause
    570:573:void onHostResume(android.app.Activity,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler) -> onHostResume
    579:616:void onHostResume(android.app.Activity) -> onHostResume
    935:941:void onJSBundleLoadedFromServer() -> onJSBundleLoadedFromServer
    484:499:void onNewIntent(android.content.Intent) -> onNewIntent
    925:926:void onReloadWithJSDebugger(com.facebook.react.bridge.JavaJSExecutor$Factory) -> onReloadWithJSDebugger
    744:747:void onWindowFocusChange(boolean) -> onWindowFocusChange
    1292:1303:void processPackage(com.facebook.react.ReactPackage,com.facebook.react.NativeModuleRegistryBuilder) -> processPackage
    1253:1274:com.facebook.react.bridge.NativeModuleRegistry processPackages(com.facebook.react.bridge.ReactApplicationContext,java.util.List,boolean) -> processPackages
    385:389:void recreateReactContextInBackground() -> recreateReactContextInBackground
    947:955:void recreateReactContextInBackground(com.facebook.react.bridge.JavaScriptExecutorFactory,com.facebook.react.bridge.JSBundleLoader) -> recreateReactContextInBackground
    440:445:void recreateReactContextInBackgroundFromBundleLoader() -> recreateReactContextInBackgroundFromBundleLoader
    394:435:void recreateReactContextInBackgroundInner() -> recreateReactContextInBackgroundInner
    905:905:void removeReactInstanceEventListener(com.facebook.react.ReactInstanceManager$ReactInstanceEventListener) -> removeReactInstanceEventListener
    961:970:void runCreateReactContextOnNewThread(com.facebook.react.ReactInstanceManager$ReactContextInitParams) -> runCreateReactContextOnNewThread
    1037:1060:void setupReactContext(com.facebook.react.bridge.ReactApplicationContext) -> setupReactContext
    766:767:void showDevOptionsDialog() -> showDevOptionsDialog
    1161:1171:void tearDownReactContext(com.facebook.react.bridge.ReactContext) -> tearDownReactContext
    504:510:void toggleElementInspector() -> toggleElementInspector
com.facebook.react.ReactInstanceManager$1 -> com.facebook.react.ReactInstanceManager$1:
    258:258:void <init>(com.facebook.react.ReactInstanceManager) -> <init>
    261:261:void invokeDefaultOnBackPressed() -> invokeDefaultOnBackPressed
com.facebook.react.ReactInstanceManager$2 -> com.facebook.react.ReactInstanceManager$2:
    282:282:void <init>(com.facebook.react.ReactInstanceManager) -> <init>
    310:314:android.view.View createRootView(java.lang.String) -> createRootView
    324:325:void destroyRootView(android.view.View) -> destroyRootView
    300:300:android.app.Activity getCurrentActivity() -> getCurrentActivity
    305:305:com.facebook.react.bridge.JavaScriptExecutorFactory getJavaScriptExecutorFactory() -> getJavaScriptExecutorFactory
    290:290:void onJSBundleLoadedFromServer() -> onJSBundleLoadedFromServer
    285:285:void onReloadWithJSDebugger(com.facebook.react.bridge.JavaJSExecutor$Factory) -> onReloadWithJSDebugger
    295:295:void toggleElementInspector() -> toggleElementInspector
com.facebook.react.ReactInstanceManager$3 -> com.facebook.react.ReactInstanceManager$3:
    407:407:void <init>(com.facebook.react.ReactInstanceManager,com.facebook.react.modules.debug.interfaces.DeveloperSettings) -> <init>
    410:410:void onPackagerStatusFetched(boolean) -> onPackagerStatusFetched
com.facebook.react.ReactInstanceManager$3$1 -> com.facebook.react.ReactInstanceManager$3$1:
    411:411:void <init>(com.facebook.react.ReactInstanceManager$3,boolean) -> <init>
    414:424:void run() -> run
com.facebook.react.ReactInstanceManager$4 -> com.facebook.react.ReactInstanceManager$4:
    597:597:void <init>(com.facebook.react.ReactInstanceManager,android.view.View) -> <init>
    601:602:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
com.facebook.react.ReactInstanceManager$5 -> com.facebook.react.ReactInstanceManager$5:
    975:975:void <init>(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactContextInitParams) -> <init>
    978:987:void run() -> run
com.facebook.react.ReactInstanceManager$5$1 -> com.facebook.react.ReactInstanceManager$5$1:
    1003:1003:void <init>(com.facebook.react.ReactInstanceManager$5) -> <init>
    1006:1008:void run() -> run
com.facebook.react.ReactInstanceManager$5$2 -> com.facebook.react.ReactInstanceManager$5$2:
    1013:1013:void <init>(com.facebook.react.ReactInstanceManager$5,com.facebook.react.bridge.ReactApplicationContext) -> <init>
    1017:1019:void run() -> run
com.facebook.react.ReactInstanceManager$6 -> com.facebook.react.ReactInstanceManager$6:
    1070:1070:void <init>(com.facebook.react.ReactInstanceManager,com.facebook.react.ReactInstanceManager$ReactInstanceEventListener[],com.facebook.react.bridge.ReactApplicationContext) -> <init>
    1073:1079:void run() -> run
com.facebook.react.ReactInstanceManager$7 -> com.facebook.react.ReactInstanceManager$7:
    1087:1087:void <init>(com.facebook.react.ReactInstanceManager) -> <init>
    1090:1091:void run() -> run
com.facebook.react.ReactInstanceManager$8 -> com.facebook.react.ReactInstanceManager$8:
    1095:1095:void <init>(com.facebook.react.ReactInstanceManager) -> <init>
    1098:1098:void run() -> run
com.facebook.react.ReactInstanceManager$9 -> com.facebook.react.ReactInstanceManager$9:
    1135:1135:void <init>(com.facebook.react.ReactInstanceManager,int,com.facebook.react.uimanager.ReactRoot) -> <init>
    1138:1140:void run() -> run
com.facebook.react.ReactInstanceManager$ReactContextInitParams -> com.facebook.react.ReactInstanceManager$ReactContextInitParams:
    183:185:void <init>(com.facebook.react.ReactInstanceManager,com.facebook.react.bridge.JavaScriptExecutorFactory,com.facebook.react.bridge.JSBundleLoader) -> <init>
    193:193:com.facebook.react.bridge.JSBundleLoader getJsBundleLoader() -> getJsBundleLoader
    189:189:com.facebook.react.bridge.JavaScriptExecutorFactory getJsExecutorFactory() -> getJsExecutorFactory
com.facebook.react.ReactInstanceManagerBuilder -> com.facebook.react.ReactInstanceManagerBuilder:
    63:59:void <init>() -> <init>
    132:132:com.facebook.react.ReactInstanceManagerBuilder addPackage(com.facebook.react.ReactPackage) -> addPackage
    240:281:com.facebook.react.ReactInstanceManager build() -> build
    296:310:com.facebook.react.bridge.JavaScriptExecutorFactory getDefaultJSExecutorFactory(java.lang.String,java.lang.String,android.content.Context) -> getDefaultJSExecutorFactory
    149:149:com.facebook.react.ReactInstanceManagerBuilder setApplication(android.app.Application) -> setApplication
    90:91:com.facebook.react.ReactInstanceManagerBuilder setBundleAssetName(java.lang.String) -> setBundleAssetName
    180:180:com.facebook.react.ReactInstanceManagerBuilder setInitialLifecycleState(com.facebook.react.common.LifecycleState) -> setInitialLifecycleState
    101:106:com.facebook.react.ReactInstanceManagerBuilder setJSBundleFile(java.lang.String) -> setJSBundleFile
    116:117:com.facebook.react.ReactInstanceManagerBuilder setJSBundleLoader(com.facebook.react.bridge.JSBundleLoader) -> setJSBundleLoader
    74:74:com.facebook.react.ReactInstanceManagerBuilder setJSIModulesPackage(com.facebook.react.bridge.JSIModulePackage) -> setJSIModulesPackage
    127:127:com.facebook.react.ReactInstanceManagerBuilder setJSMainModulePath(java.lang.String) -> setJSMainModulePath
    81:81:com.facebook.react.ReactInstanceManagerBuilder setJavaScriptExecutorFactory(com.facebook.react.bridge.JavaScriptExecutorFactory) -> setJavaScriptExecutorFactory
    196:196:com.facebook.react.ReactInstanceManagerBuilder setRedBoxHandler(com.facebook.react.devsupport.RedBoxHandler) -> setRedBoxHandler
    68:68:com.facebook.react.ReactInstanceManagerBuilder setUIImplementationProvider(com.facebook.react.uimanager.UIImplementationProvider) -> setUIImplementationProvider
    170:170:com.facebook.react.ReactInstanceManagerBuilder setUseDeveloperSupport(boolean) -> setUseDeveloperSupport
com.facebook.react.ReactInstancePackage -> com.facebook.react.ReactInstancePackage:
    23:23:void <init>() -> <init>
    30:30:java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext) -> createNativeModules
com.facebook.react.ReactNativeHost -> com.facebook.react.ReactNativeHost:
    31:32:void <init>(android.app.Application) -> <init>
    65:88:com.facebook.react.ReactInstanceManager createReactInstanceManager() -> createReactInstanceManager
    37:42:com.facebook.react.ReactInstanceManager getReactInstanceManager() -> getReactInstanceManager
    113:113:com.facebook.react.uimanager.UIImplementationProvider getUIImplementationProvider() -> getUIImplementationProvider
    51:51:boolean hasInstance() -> hasInstance
com.facebook.react.ReactPackageHelper -> com.facebook.react.ReactPackageHelper:
    19:19:void <init>() -> <init>
    32:44:java.lang.Iterable getNativeModuleIterator(com.facebook.react.ReactPackage,com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.ReactInstanceManager) -> getNativeModuleIterator
com.facebook.react.ReactPackageHelper$1 -> com.facebook.react.ReactPackageHelper$1:
    44:44:void <init>(java.util.List) -> <init>
    48:48:java.util.Iterator iterator() -> iterator
com.facebook.react.ReactPackageHelper$1$1 -> com.facebook.react.ReactPackageHelper$1$1:
    48:49:void <init>(com.facebook.react.ReactPackageHelper$1) -> <init>
    58:58:boolean hasNext() -> hasNext
    48:48:java.lang.Object next() -> next
    53:53:com.facebook.react.bridge.ModuleHolder next() -> next
    63:63:void remove() -> remove
com.facebook.react.ReactRootView -> com.facebook.react.ReactRootView:
    101:103:void <init>(android.content.Context) -> <init>
    72:72:com.facebook.react.ReactInstanceManager access$000(com.facebook.react.ReactRootView) -> access$000
    72:72:boolean access$100(com.facebook.react.ReactRootView) -> access$100
    612:624:void attachToReactInstanceManager() -> attachToReactInstanceManager
    232:236:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    285:288:void dispatchJSTouchEvent(android.view.MotionEvent) -> dispatchJSTouchEvent
    242:248:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    629:630:void finalize() -> finalize
    534:534:android.os.Bundle getAppProperties() -> getAppProperties
    605:608:com.facebook.react.ReactRootView$CustomGlobalLayoutListener getCustomGlobalLayoutListener() -> getCustomGlobalLayoutListener
    421:421:int getHeightMeasureSpec() -> getHeightMeasureSpec
    539:539:java.lang.String getInitialUITemplate() -> getInitialUITemplate
    529:529:java.lang.String getJSModuleName() -> getJSModuleName
    668:668:com.facebook.react.ReactInstanceManager getReactInstanceManager() -> getReactInstanceManager
    640:640:int getRootViewTag() -> getRootViewTag
    432:433:java.lang.String getSurfaceID() -> getSurfaceID
    663:663:int getUIManagerType() -> getUIManagerType
    416:416:int getWidthMeasureSpec() -> getWidthMeasureSpec
    649:650:void handleException(java.lang.Throwable) -> handleException
    125:125:void init() -> init
    517:519:void onAttachedToReactInstance() -> onAttachedToReactInstance
    323:326:void onAttachedToWindow() -> onAttachedToWindow
    195:198:void onChildStartedNativeGesture(android.view.MotionEvent) -> onChildStartedNativeGesture
    332:334:void onDetachedFromWindow() -> onDetachedFromWindow
    256:262:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    216:217:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    315:316:void onLayout(boolean,int,int,int,int) -> onLayout
    130:190:void onMeasure(int,int) -> onMeasure
    505:505:void onStage(int) -> onStage
    222:223:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    344:350:void onViewAdded(android.view.View) -> onViewAdded
    339:339:void removeOnGlobalLayoutListener() -> removeOnGlobalLayoutListener
    271:277:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    308:309:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    557:591:void runApplication() -> runApplication
    672:676:void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap) -> sendEvent
    467:480:void setAllowImmediateUIOperationExecution(boolean) -> setAllowImmediateUIOperationExecution
    544:547:void setAppProperties(android.os.Bundle) -> setAppProperties
    524:524:void setEventListener(com.facebook.react.ReactRootView$ReactRootViewEventListener) -> setEventListener
    658:658:void setIsFabric(boolean) -> setIsFabric
    644:644:void setRootViewTag(int) -> setRootViewTag
    426:426:void setShouldLogContentAppeared(boolean) -> setShouldLogContentAppeared
    370:370:void startReactApplication(com.facebook.react.ReactInstanceManager,java.lang.String,android.os.Bundle) -> startReactApplication
    385:411:void startReactApplication(com.facebook.react.ReactInstanceManager,java.lang.String,android.os.Bundle,java.lang.String) -> startReactApplication
    491:498:void unmountReactApplication() -> unmountReactApplication
    437:447:void updateRootLayoutSpecs(int,int) -> updateRootLayoutSpecs
com.facebook.react.ReactRootView$CustomGlobalLayoutListener -> com.facebook.react.ReactRootView$CustomGlobalLayoutListener:
    689:692:void <init>(com.facebook.react.ReactRootView) -> <init>
    765:770:boolean areMetricsEqual(android.util.DisplayMetrics,android.util.DisplayMetrics) -> areMetricsEqual
    753:760:void checkForDeviceDimensionsChanges() -> checkForDeviceDimensionsChanges
    740:748:void checkForDeviceOrientationChanges() -> checkForDeviceOrientationChanges
    708:729:void checkForKeyboardEvents() -> checkForKeyboardEvents
    824:834:com.facebook.react.bridge.WritableMap createKeyboardEventPayload(double,double,double,double) -> createKeyboardEventPayload
    807:812:void emitOrientationChanged(int) -> emitOrientationChanged
    816:819:void emitUpdateDimensionsEvent() -> emitUpdateDimensionsEvent
    697:704:void onGlobalLayout() -> onGlobalLayout
com.facebook.react.TurboReactPackage -> com.facebook.react.TurboReactPackage:
    29:29:void <init>() -> <init>
    33:33:java.util.List createNativeModules(com.facebook.react.bridge.ReactApplicationContext) -> createNativeModules
    133:135:java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext) -> createViewManagers
    59:61:java.lang.Iterable getNativeModuleIterator(com.facebook.react.bridge.ReactApplicationContext) -> getNativeModuleIterator
    128:128:java.util.List getViewManagers(com.facebook.react.bridge.ReactApplicationContext) -> getViewManagers
com.facebook.react.TurboReactPackage$1 -> com.facebook.react.TurboReactPackage$1:
    61:61:void <init>(com.facebook.react.TurboReactPackage,java.util.Iterator,com.facebook.react.bridge.ReactApplicationContext) -> <init>
    66:66:java.util.Iterator iterator() -> iterator
com.facebook.react.TurboReactPackage$1$1 -> com.facebook.react.TurboReactPackage$1$1:
    66:67:void <init>(com.facebook.react.TurboReactPackage$1) -> <init>
    70:84:void findNext() -> findNext
    89:92:boolean hasNext() -> hasNext
    66:66:java.lang.Object next() -> next
    97:102:com.facebook.react.bridge.ModuleHolder next() -> next
    116:116:void remove() -> remove
com.facebook.react.TurboReactPackage$ModuleHolderProvider -> com.facebook.react.TurboReactPackage$ModuleHolderProvider:
    152:154:void <init>(com.facebook.react.TurboReactPackage,java.lang.String,com.facebook.react.bridge.ReactApplicationContext) -> <init>
    147:147:java.lang.Object get() -> get
    159:159:com.facebook.react.bridge.NativeModule get() -> get
com.facebook.react.animated.AdditionAnimatedNode -> com.facebook.react.animated.AdditionAnimatedNode:
    24:29:void <init>(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager) -> <init>
    35:41:void update() -> update
com.facebook.react.animated.AnimatedNode -> com.facebook.react.animated.AnimatedNode:
    16:25:void <init>() -> <init>
    28:32:void addChild(com.facebook.react.animated.AnimatedNode) -> addChild
    36:40:void removeChild(com.facebook.react.animated.AnimatedNode) -> removeChild
com.facebook.react.animated.AnimationDriver -> com.facebook.react.animated.AnimationDriver:
    18:20:void <init>() -> <init>
    38:39:void resetConfig(com.facebook.react.bridge.ReadableMap) -> resetConfig
com.facebook.react.animated.DecayAnimation -> com.facebook.react.animated.DecayAnimation:
    27:29:void <init>(com.facebook.react.bridge.ReadableMap) -> <init>
    34:40:void resetConfig(com.facebook.react.bridge.ReadableMap) -> resetConfig
    45:75:void runAnimationStep(long) -> runAnimationStep
com.facebook.react.animated.DiffClampAnimatedNode -> com.facebook.react.animated.DiffClampAnimatedNode:
    22:28:void <init>(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager) -> <init>
    41:43:double getInputNodeValue() -> getInputNodeValue
    33:37:void update() -> update
com.facebook.react.animated.DivisionAnimatedNode -> com.facebook.react.animated.DivisionAnimatedNode:
    24:29:void <init>(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager) -> <init>
    35:49:void update() -> update
com.facebook.react.animated.EventAnimationDriver -> com.facebook.react.animated.EventAnimationDriver:
    22:24:void <init>(java.util.List,com.facebook.react.animated.ValueAnimatedNode) -> <init>
    35:30:void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap) -> receiveEvent
    45:45:void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray) -> receiveTouches
com.facebook.react.animated.FrameBasedAnimationDriver -> com.facebook.react.animated.FrameBasedAnimationDriver:
    31:32:void <init>(com.facebook.react.bridge.ReadableMap) -> <init>
    37:58:void resetConfig(com.facebook.react.bridge.ReadableMap) -> resetConfig
    63:73:void runAnimationStep(long) -> runAnimationStep
com.facebook.react.animated.InterpolationAnimatedNode -> com.facebook.react.animated.InterpolationAnimatedNode:
    31:31:void <clinit>() -> <clinit>
    135:188:void <init>(com.facebook.react.bridge.ReadableMap) -> <init>
    115:116:int findRangeIndex(double,double[]) -> findRangeIndex
    34:36:double[] fromDoubleArray(com.facebook.react.bridge.ReadableArray) -> fromDoubleArray
    53:77:double interpolate(double,double,double,double,double,java.lang.String,java.lang.String) -> interpolate
    102:103:double interpolate(double,double[],double[],java.lang.String,java.lang.String) -> interpolate
    193:194:void onAttachedToNode(com.facebook.react.animated.AnimatedNode) -> onAttachedToNode
    204:205:void onDetachedFromNode(com.facebook.react.animated.AnimatedNode) -> onDetachedFromNode
    212:248:void update() -> update
com.facebook.react.animated.ModulusAnimatedNode -> com.facebook.react.animated.ModulusAnimatedNode:
    20:23:void <init>(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager) -> <init>
    28:33:void update() -> update
com.facebook.react.animated.MultiplicationAnimatedNode -> com.facebook.react.animated.MultiplicationAnimatedNode:
    24:29:void <init>(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager) -> <init>
    35:41:void update() -> update
com.facebook.react.animated.NativeAnimatedModule -> com.facebook.react.animated.NativeAnimatedModule:
    95:98:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    78:78:com.facebook.react.animated.NativeAnimatedNodesManager access$000(com.facebook.react.animated.NativeAnimatedModule) -> access$000
    78:78:com.facebook.react.uimanager.GuardedFrameCallback access$100(com.facebook.react.animated.NativeAnimatedModule) -> access$100
    78:78:com.facebook.react.modules.core.ReactChoreographer access$200(com.facebook.react.animated.NativeAnimatedModule) -> access$200
    78:78:com.facebook.react.bridge.ReactApplicationContext access$300(com.facebook.react.animated.NativeAnimatedModule) -> access$300
    409:409:void addAnimatedEventToView(int,java.lang.String,com.facebook.react.bridge.ReadableMap) -> addAnimatedEventToView
    203:204:void clearFrameCallback() -> clearFrameCallback
    375:375:void connectAnimatedNodeToView(int,int) -> connectAnimatedNodeToView
    353:353:void connectAnimatedNodes(int,int) -> connectAnimatedNodes
    221:221:void createAnimatedNode(int,com.facebook.react.bridge.ReadableMap) -> createAnimatedNode
    386:386:void disconnectAnimatedNodeFromView(int,int) -> disconnectAnimatedNodeFromView
    364:364:void disconnectAnimatedNodes(int,int) -> disconnectAnimatedNodes
    271:271:void dropAnimatedNode(int) -> dropAnimatedNode
    209:210:void enqueueFrameCallback() -> enqueueFrameCallback
    315:315:void extractAnimatedNodeOffset(int) -> extractAnimatedNodeOffset
    304:304:void flattenAnimatedNodeOffset(int) -> flattenAnimatedNodeOffset
    190:199:com.facebook.react.animated.NativeAnimatedNodesManager getNodesManager() -> getNodesManager
    129:134:void initialize() -> initialize
    176:176:void onHostPause() -> onHostPause
    140:140:void onHostResume() -> onHostResume
    421:421:void removeAnimatedEventFromView(int,java.lang.String,int) -> removeAnimatedEventFromView
    397:397:void restoreDefaultValues(int) -> restoreDefaultValues
    293:293:void setAnimatedNodeOffset(int,double) -> setAnimatedNodeOffset
    282:282:void setAnimatedNodeValue(int,double) -> setAnimatedNodeValue
    216:216:void setNodesManager(com.facebook.react.animated.NativeAnimatedNodesManager) -> setNodesManager
    330:330:void startAnimatingNode(int,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback) -> startAnimatingNode
    232:249:void startListeningToAnimatedNodeValue(int) -> startListeningToAnimatedNodeValue
    342:342:void stopAnimation(int) -> stopAnimation
    260:260:void stopListeningToAnimatedNodeValue(int) -> stopListeningToAnimatedNodeValue
    145:162:void willDispatchViewUpdates(com.facebook.react.uimanager.UIManagerModule) -> willDispatchViewUpdates
com.facebook.react.animated.NativeAnimatedModule$1 -> com.facebook.react.animated.NativeAnimatedModule$1:
    99:99:void <init>(com.facebook.react.animated.NativeAnimatedModule,com.facebook.react.bridge.ReactContext) -> <init>
    103:121:void doFrameGuarded(long) -> doFrameGuarded
com.facebook.react.animated.NativeAnimatedModule$10 -> com.facebook.react.animated.NativeAnimatedModule$10:
    294:294:void <init>(com.facebook.react.animated.NativeAnimatedModule,int,double) -> <init>
    297:297:void execute(com.facebook.react.animated.NativeAnimatedNodesManager) -> execute
com.facebook.react.animated.NativeAnimatedModule$11 -> com.facebook.react.animated.NativeAnimatedModule$11:
    305:305:void <init>(com.facebook.react.animated.NativeAnimatedModule,int) -> <init>
    308:308:void execute(com.facebook.react.animated.NativeAnimatedNodesManager) -> execute
com.facebook.react.animated.NativeAnimatedModule$12 -> com.facebook.react.animated.NativeAnimatedModule$12:
    316:316:void <init>(com.facebook.react.animated.NativeAnimatedModule,int) -> <init>
    319:319:void execute(com.facebook.react.animated.NativeAnimatedNodesManager) -> execute
com.facebook.react.animated.NativeAnimatedModule$13 -> com.facebook.react.animated.NativeAnimatedModule$13:
    331:331:void <init>(com.facebook.react.animated.NativeAnimatedModule,int,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback) -> <init>
    334:334:void execute(com.facebook.react.animated.NativeAnimatedNodesManager) -> execute
com.facebook.react.animated.NativeAnimatedModule$14 -> com.facebook.react.animated.NativeAnimatedModule$14:
    343:343:void <init>(com.facebook.react.animated.NativeAnimatedModule,int) -> <init>
    346:346:void execute(com.facebook.react.animated.NativeAnimatedNodesManager) -> execute
com.facebook.react.animated.NativeAnimatedModule$15 -> com.facebook.react.animated.NativeAnimatedModule$15:
    354:354:void <init>(com.facebook.react.animated.NativeAnimatedModule,int,int) -> <init>
    357:357:void execute(com.facebook.react.animated.NativeAnimatedNodesManager) -> execute
com.facebook.react.animated.NativeAnimatedModule$16 -> com.facebook.react.animated.NativeAnimatedModule$16:
    365:365:void <init>(com.facebook.react.animated.NativeAnimatedModule,int,int) -> <init>
    368:368:void execute(com.facebook.react.animated.NativeAnimatedNodesManager) -> execute
com.facebook.react.animated.NativeAnimatedModule$17 -> com.facebook.react.animated.NativeAnimatedModule$17:
    376:376:void <init>(com.facebook.react.animated.NativeAnimatedModule,int,int) -> <init>
    379:379:void execute(com.facebook.react.animated.NativeAnimatedNodesManager) -> execute
com.facebook.react.animated.NativeAnimatedModule$18 -> com.facebook.react.animated.NativeAnimatedModule$18:
    387:387:void <init>(com.facebook.react.animated.NativeAnimatedModule,int,int) -> <init>
    390:390:void execute(com.facebook.react.animated.NativeAnimatedNodesManager) -> execute
com.facebook.react.animated.NativeAnimatedModule$19 -> com.facebook.react.animated.NativeAnimatedModule$19:
    398:398:void <init>(com.facebook.react.animated.NativeAnimatedModule,int) -> <init>
    401:401:void execute(com.facebook.react.animated.NativeAnimatedNodesManager) -> execute
com.facebook.react.animated.NativeAnimatedModule$2 -> com.facebook.react.animated.NativeAnimatedModule$2:
    153:153:void <init>(com.facebook.react.animated.NativeAnimatedModule,java.util.ArrayList) -> <init>
    156:158:void execute(com.facebook.react.uimanager.NativeViewHierarchyManager) -> execute
com.facebook.react.animated.NativeAnimatedModule$20 -> com.facebook.react.animated.NativeAnimatedModule$20:
    410:410:void <init>(com.facebook.react.animated.NativeAnimatedModule,int,java.lang.String,com.facebook.react.bridge.ReadableMap) -> <init>
    413:413:void execute(com.facebook.react.animated.NativeAnimatedNodesManager) -> execute
com.facebook.react.animated.NativeAnimatedModule$21 -> com.facebook.react.animated.NativeAnimatedModule$21:
    422:422:void <init>(com.facebook.react.animated.NativeAnimatedModule,int,java.lang.String,int) -> <init>
    425:425:void execute(com.facebook.react.animated.NativeAnimatedNodesManager) -> execute
com.facebook.react.animated.NativeAnimatedModule$3 -> com.facebook.react.animated.NativeAnimatedModule$3:
    163:163:void <init>(com.facebook.react.animated.NativeAnimatedModule,java.util.ArrayList) -> <init>
    166:168:void execute(com.facebook.react.uimanager.NativeViewHierarchyManager) -> execute
com.facebook.react.animated.NativeAnimatedModule$4 -> com.facebook.react.animated.NativeAnimatedModule$4:
    222:222:void <init>(com.facebook.react.animated.NativeAnimatedModule,int,com.facebook.react.bridge.ReadableMap) -> <init>
    225:225:void execute(com.facebook.react.animated.NativeAnimatedNodesManager) -> execute
com.facebook.react.animated.NativeAnimatedModule$5 -> com.facebook.react.animated.NativeAnimatedModule$5:
    233:233:void <init>(com.facebook.react.animated.NativeAnimatedModule,int) -> <init>
    235:244:void onValueUpdate(double) -> onValueUpdate
com.facebook.react.animated.NativeAnimatedModule$6 -> com.facebook.react.animated.NativeAnimatedModule$6:
    250:250:void <init>(com.facebook.react.animated.NativeAnimatedModule,int,com.facebook.react.animated.AnimatedNodeValueListener) -> <init>
    253:253:void execute(com.facebook.react.animated.NativeAnimatedNodesManager) -> execute
com.facebook.react.animated.NativeAnimatedModule$7 -> com.facebook.react.animated.NativeAnimatedModule$7:
    261:261:void <init>(com.facebook.react.animated.NativeAnimatedModule,int) -> <init>
    264:264:void execute(com.facebook.react.animated.NativeAnimatedNodesManager) -> execute
com.facebook.react.animated.NativeAnimatedModule$8 -> com.facebook.react.animated.NativeAnimatedModule$8:
    272:272:void <init>(com.facebook.react.animated.NativeAnimatedModule,int) -> <init>
    275:275:void execute(com.facebook.react.animated.NativeAnimatedNodesManager) -> execute
com.facebook.react.animated.NativeAnimatedModule$9 -> com.facebook.react.animated.NativeAnimatedModule$9:
    283:283:void <init>(com.facebook.react.animated.NativeAnimatedModule,int,double) -> <init>
    286:286:void execute(com.facebook.react.animated.NativeAnimatedNodesManager) -> execute
com.facebook.react.animated.NativeAnimatedNodesManager -> com.facebook.react.animated.NativeAnimatedNodesManager:
    61:64:void <init>(com.facebook.react.uimanager.UIManagerModule) -> <init>
    47:47:void access$000(com.facebook.react.animated.NativeAnimatedNodesManager,com.facebook.react.uimanager.events.Event) -> access$000
    341:344:void addAnimatedEventToView(int,java.lang.String,com.facebook.react.bridge.ReadableMap) -> addAnimatedEventToView
    289:291:void connectAnimatedNodeToView(int,int) -> connectAnimatedNodeToView
    259:261:void connectAnimatedNodes(int,int) -> connectAnimatedNodes
    77:78:void createAnimatedNode(int,com.facebook.react.bridge.ReadableMap) -> createAnimatedNode
    306:308:void disconnectAnimatedNodeFromView(int,int) -> disconnectAnimatedNodeFromView
    274:276:void disconnectAnimatedNodes(int,int) -> disconnectAnimatedNodes
    116:117:void dropAnimatedNode(int) -> dropAnimatedNode
    169:171:void extractAnimatedNodeOffset(int) -> extractAnimatedNodeOffset
    160:162:void flattenAnimatedNodeOffset(int) -> flattenAnimatedNodeOffset
    69:69:com.facebook.react.animated.AnimatedNode getNodeById(int) -> getNodeById
    407:418:void handleEvent(com.facebook.react.uimanager.events.Event) -> handleEvent
    73:73:boolean hasActiveAnimations() -> hasActiveAnimations
    393:396:void onEventDispatch(com.facebook.react.uimanager.events.Event) -> onEventDispatch
    372:381:void removeAnimatedEventFromView(int,java.lang.String,int) -> removeAnimatedEventFromView
    322:334:void restoreDefaultValues(int) -> restoreDefaultValues
    436:471:void runUpdates(long) -> runUpdates
    150:152:void setAnimatedNodeOffset(int,double) -> setAnimatedNodeOffset
    139:141:void setAnimatedNodeValue(int,double) -> setAnimatedNodeValue
    179:181:void startAnimatingNode(int,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback) -> startAnimatingNode
    121:123:void startListeningToAnimatedNodeValue(int,com.facebook.react.animated.AnimatedNodeValueListener) -> startListeningToAnimatedNodeValue
    239:248:void stopAnimation(int) -> stopAnimation
    219:228:void stopAnimationsForNode(com.facebook.react.animated.AnimatedNode) -> stopAnimationsForNode
    130:132:void stopListeningToAnimatedNodeValue(int) -> stopListeningToAnimatedNodeValue
    486:587:void updateNodes(java.util.List) -> updateNodes
com.facebook.react.animated.NativeAnimatedNodesManager$1 -> com.facebook.react.animated.NativeAnimatedNodesManager$1:
    397:397:void <init>(com.facebook.react.animated.NativeAnimatedNodesManager,com.facebook.react.uimanager.events.Event) -> <init>
    400:400:void run() -> run
com.facebook.react.animated.PropsAnimatedNode -> com.facebook.react.animated.PropsAnimatedNode:
    35:46:void <init>(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager,com.facebook.react.bridge.UIManager) -> <init>
    50:51:void connectToView(int) -> connectToView
    58:59:void disconnectFromView(int) -> disconnectFromView
    68:73:void restoreDefaultValues() -> restoreDefaultValues
    77:99:void updateView() -> updateView
com.facebook.react.animated.SpringAnimation -> com.facebook.react.animated.SpringAnimation:
    53:55:void <init>(com.facebook.react.bridge.ReadableMap) -> <init>
    135:202:void advance(double) -> advance
    109:109:double getDisplacementDistanceForState(com.facebook.react.animated.SpringAnimation$PhysicsState) -> getDisplacementDistanceForState
    118:119:boolean isAtRest() -> isAtRest
    129:129:boolean isOvershooting() -> isOvershooting
    60:72:void resetConfig(com.facebook.react.bridge.ReadableMap) -> resetConfig
    77:95:void runAnimationStep(long) -> runAnimationStep
com.facebook.react.animated.SpringAnimation$PhysicsState -> com.facebook.react.animated.SpringAnimation$PhysicsState:
    25:25:void <init>() -> <init>
    25:25:void <init>(com.facebook.react.animated.SpringAnimation$1) -> <init>
com.facebook.react.animated.StyleAnimatedNode -> com.facebook.react.animated.StyleAnimatedNode:
    25:34:void <init>(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager) -> <init>
    38:41:void collectViewUpdates(com.facebook.react.bridge.JavaOnlyMap) -> collectViewUpdates
com.facebook.react.animated.SubtractionAnimatedNode -> com.facebook.react.animated.SubtractionAnimatedNode:
    24:29:void <init>(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager) -> <init>
    35:45:void update() -> update
com.facebook.react.animated.TrackingAnimatedNode -> com.facebook.react.animated.TrackingAnimatedNode:
    21:26:void <init>(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager) -> <init>
    31:33:void update() -> update
com.facebook.react.animated.TransformAnimatedNode -> com.facebook.react.animated.TransformAnimatedNode:
    38:57:void <init>(com.facebook.react.bridge.ReadableMap,com.facebook.react.animated.NativeAnimatedNodesManager) -> <init>
    61:83:void collectViewUpdates(com.facebook.react.bridge.JavaOnlyMap) -> collectViewUpdates
com.facebook.react.animated.TransformAnimatedNode$AnimatedTransformConfig -> com.facebook.react.animated.TransformAnimatedNode$AnimatedTransformConfig:
    27:27:void <init>(com.facebook.react.animated.TransformAnimatedNode) -> <init>
    27:27:void <init>(com.facebook.react.animated.TransformAnimatedNode,com.facebook.react.animated.TransformAnimatedNode$1) -> <init>
com.facebook.react.animated.TransformAnimatedNode$StaticTransformConfig -> com.facebook.react.animated.TransformAnimatedNode$StaticTransformConfig:
    31:31:void <init>(com.facebook.react.animated.TransformAnimatedNode) -> <init>
    31:31:void <init>(com.facebook.react.animated.TransformAnimatedNode,com.facebook.react.animated.TransformAnimatedNode$1) -> <init>
com.facebook.react.animated.TransformAnimatedNode$TransformConfig -> com.facebook.react.animated.TransformAnimatedNode$TransformConfig:
    23:23:void <init>(com.facebook.react.animated.TransformAnimatedNode) -> <init>
    23:23:void <init>(com.facebook.react.animated.TransformAnimatedNode,com.facebook.react.animated.TransformAnimatedNode$1) -> <init>
com.facebook.react.animated.ValueAnimatedNode -> com.facebook.react.animated.ValueAnimatedNode:
    23:20:void <init>() -> <init>
    27:29:void <init>(com.facebook.react.bridge.ReadableMap) -> <init>
    49:50:void extractOffset() -> extractOffset
    44:45:void flattenOffset() -> flattenOffset
    40:40:java.lang.Object getAnimatedObject() -> getAnimatedObject
    33:36:double getValue() -> getValue
    54:57:void onValueUpdate() -> onValueUpdate
    61:61:void setValueListener(com.facebook.react.animated.AnimatedNodeValueListener) -> setValueListener
com.facebook.react.bridge.Arguments -> com.facebook.react.bridge.Arguments:
    20:20:void <init>() -> <init>
    101:117:void addEntry(com.facebook.react.bridge.WritableNativeMap,java.lang.String,java.lang.Object) -> addEntry
    151:151:com.facebook.react.bridge.WritableArray createArray() -> createArray
    156:156:com.facebook.react.bridge.WritableMap createMap() -> createMap
    199:233:com.facebook.react.bridge.WritableArray fromArray(java.lang.Object) -> fromArray
    291:313:com.facebook.react.bridge.WritableMap fromBundle(android.os.Bundle) -> fromBundle
    160:184:com.facebook.react.bridge.WritableNativeArray fromJavaArgs(java.lang.Object[]) -> fromJavaArgs
    249:268:com.facebook.react.bridge.WritableArray fromList(java.util.List) -> fromList
    51:72:com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.util.List) -> makeNativeArray
    84:88:com.facebook.react.bridge.WritableNativeArray makeNativeArray(java.lang.Object) -> makeNativeArray
    127:132:com.facebook.react.bridge.WritableNativeMap makeNativeMap(java.util.Map) -> makeNativeMap
    139:144:com.facebook.react.bridge.WritableNativeMap makeNativeMap(android.os.Bundle) -> makeNativeMap
    24:28:java.lang.Object makeNativeObject(java.lang.Object) -> makeNativeObject
    381:389:android.os.Bundle toBundle(com.facebook.react.bridge.ReadableMap) -> toBundle
    331:336:java.util.ArrayList toList(com.facebook.react.bridge.ReadableArray) -> toList
com.facebook.react.bridge.Arguments$1 -> com.facebook.react.bridge.Arguments$1:
    89:89:void <init>(java.lang.Object) -> <init>
    95:95:java.lang.Object get(int) -> get
    91:91:int size() -> size
com.facebook.react.bridge.Arguments$2 -> com.facebook.react.bridge.Arguments$2:
    334:334:void <clinit>() -> <clinit>
com.facebook.react.bridge.AssertionException -> com.facebook.react.bridge.AssertionException:
    18:18:void <init>(java.lang.String) -> <init>
com.facebook.react.bridge.BaseActivityEventListener -> com.facebook.react.bridge.BaseActivityEventListener:
    14:14:void <init>() -> <init>
com.facebook.react.bridge.BaseJavaModule -> com.facebook.react.bridge.BaseJavaModule:
    41:41:void <init>() -> <init>
com.facebook.react.bridge.CallbackImpl -> com.facebook.react.bridge.CallbackImpl:
    17:20:void <init>(com.facebook.react.bridge.JSInstance,int) -> <init>
    25:26:void invoke(java.lang.Object[]) -> invoke
com.facebook.react.bridge.CatalystInstanceImpl -> com.facebook.react.bridge.CatalystInstanceImpl:
    50:53:void <clinit>() -> <clinit>
    48:48:void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler,com.facebook.react.bridge.CatalystInstanceImpl$1) -> <init>
    125:155:void <init>(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.JavaScriptExecutor,com.facebook.react.bridge.NativeModuleRegistry,com.facebook.react.bridge.JSBundleLoader,com.facebook.react.bridge.NativeModuleCallExceptionHandler) -> <init>
    48:48:void access$000(com.facebook.react.bridge.CatalystInstanceImpl,java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray) -> access$000
    48:48:com.facebook.jni.HybridData access$1000(com.facebook.react.bridge.CatalystInstanceImpl) -> access$1000
    48:48:boolean access$1102(com.facebook.react.bridge.CatalystInstanceImpl,boolean) -> access$1102
    48:48:boolean access$1202(com.facebook.react.bridge.CatalystInstanceImpl,boolean) -> access$1202
    48:48:void access$1300(com.facebook.react.bridge.CatalystInstanceImpl,java.lang.Exception) -> access$1300
    48:48:com.facebook.react.bridge.NativeModuleRegistry access$200(com.facebook.react.bridge.CatalystInstanceImpl) -> access$200
    48:48:void access$300(com.facebook.react.bridge.CatalystInstanceImpl) -> access$300
    48:48:void access$400(com.facebook.react.bridge.CatalystInstanceImpl) -> access$400
    48:48:com.facebook.react.bridge.JSIModuleRegistry access$500(com.facebook.react.bridge.CatalystInstanceImpl) -> access$500
    48:48:java.util.concurrent.atomic.AtomicInteger access$600(com.facebook.react.bridge.CatalystInstanceImpl) -> access$600
    48:48:java.util.concurrent.CopyOnWriteArrayList access$700(com.facebook.react.bridge.CatalystInstanceImpl) -> access$700
    48:48:com.facebook.react.bridge.JSIModule access$800(com.facebook.react.bridge.CatalystInstanceImpl) -> access$800
    48:48:com.facebook.react.bridge.JavaScriptContextHolder access$900(com.facebook.react.bridge.CatalystInstanceImpl) -> access$900
    635:635:void addBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener) -> addBridgeIdleDebugListener
    657:657:void addJSIModules(java.util.List) -> addJSIModules
    295:295:void callFunction(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray) -> callFunction
    299:313:void callFunction(com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall) -> callFunction
    691:699:void decrementPendingJSCalls() -> decrementPendingJSCalls
    336:342:void destroy() -> destroy
    348:423:void destroyV1() -> destroyV1
    433:518:void destroyV2() -> destroyV2
    202:206:void extendNativeModules(com.facebook.react.bridge.NativeModuleRegistry) -> extendNativeModules
    47:47:com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getJSCallInvokerHolder() -> getJSCallInvokerHolder
    662:662:com.facebook.react.bridge.JSIModule getJSIModule(com.facebook.react.bridge.JSIModuleType) -> getJSIModule
    554:554:com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class) -> getJSModule
    652:652:com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder() -> getJavaScriptContextHolder
    594:597:java.lang.String getNameFromAnnotation(java.lang.Class) -> getNameFromAnnotation
    47:47:com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder getNativeCallInvokerHolder() -> getNativeCallInvokerHolder
    567:567:com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class) -> getNativeModule
    582:590:com.facebook.react.bridge.NativeModule getNativeModule(java.lang.String) -> getNativeModule
    605:610:java.util.Collection getNativeModules() -> getNativeModules
    549:549:com.facebook.react.bridge.queue.ReactQueueConfiguration getReactQueueConfiguration() -> getReactQueueConfiguration
    288:288:java.lang.String getSourceURL() -> getSourceURL
    571:572:com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry getTurboModuleRegistry() -> getTurboModuleRegistry
    621:624:void handleMemoryPressure(int) -> handleMemoryPressure
    559:562:boolean hasNativeModule(java.lang.Class) -> hasNativeModule
    281:283:boolean hasRunJSBundle() -> hasRunJSBundle
    668:673:void incrementPendingJSCalls() -> incrementPendingJSCalls
    530:538:void initialize() -> initialize
    320:325:void invokeCallback(int,com.facebook.react.bridge.NativeArrayInterface) -> invokeCallback
    523:523:boolean isDestroyed() -> isDestroyed
    234:235:void loadScriptFromAssets(android.content.res.AssetManager,java.lang.String,boolean) -> loadScriptFromAssets
    240:241:void loadScriptFromFile(java.lang.String,java.lang.String,boolean) -> loadScriptFromFile
    712:715:void onNativeException(java.lang.Exception) -> onNativeException
    228:228:void registerSegment(int,java.lang.String) -> registerSegment
    644:644:void removeBridgeIdleDebugListener(com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener) -> removeBridgeIdleDebugListener
    256:273:void runJSBundle() -> runJSBundle
    222:223:void setSourceURLs(java.lang.String,java.lang.String) -> setSourceURLs
    686:687:void setTurboModuleManager(com.facebook.react.bridge.JSIModule) -> setTurboModuleManager
com.facebook.react.bridge.CatalystInstanceImpl$1 -> com.facebook.react.bridge.CatalystInstanceImpl$1:
    360:360:void <init>(com.facebook.react.bridge.CatalystInstanceImpl) -> <init>
    363:377:void run() -> run
com.facebook.react.bridge.CatalystInstanceImpl$1$1 -> com.facebook.react.bridge.CatalystInstanceImpl$1$1:
    378:378:void <init>(com.facebook.react.bridge.CatalystInstanceImpl$1) -> <init>
    382:388:void run() -> run
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1 -> com.facebook.react.bridge.CatalystInstanceImpl$1$1$1:
    389:389:void <init>(com.facebook.react.bridge.CatalystInstanceImpl$1$1) -> <init>
    393:393:void run() -> run
com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1 -> com.facebook.react.bridge.CatalystInstanceImpl$1$1$1$1:
    394:394:void <init>(com.facebook.react.bridge.CatalystInstanceImpl$1$1$1) -> <init>
    404:411:void run() -> run
com.facebook.react.bridge.CatalystInstanceImpl$2 -> com.facebook.react.bridge.CatalystInstanceImpl$2:
    447:447:void <init>(com.facebook.react.bridge.CatalystInstanceImpl) -> <init>
    450:467:void run() -> run
com.facebook.react.bridge.CatalystInstanceImpl$3 -> com.facebook.react.bridge.CatalystInstanceImpl$3:
    474:474:void <init>(com.facebook.react.bridge.CatalystInstanceImpl) -> <init>
    477:484:void run() -> run
com.facebook.react.bridge.CatalystInstanceImpl$4 -> com.facebook.react.bridge.CatalystInstanceImpl$4:
    539:539:void <init>(com.facebook.react.bridge.CatalystInstanceImpl) -> <init>
    542:542:void run() -> run
com.facebook.react.bridge.CatalystInstanceImpl$5 -> com.facebook.react.bridge.CatalystInstanceImpl$5:
    674:674:void <init>(com.facebook.react.bridge.CatalystInstanceImpl) -> <init>
    677:678:void run() -> run
com.facebook.react.bridge.CatalystInstanceImpl$6 -> com.facebook.react.bridge.CatalystInstanceImpl$6:
    700:700:void <init>(com.facebook.react.bridge.CatalystInstanceImpl) -> <init>
    703:704:void run() -> run
com.facebook.react.bridge.CatalystInstanceImpl$7 -> com.facebook.react.bridge.CatalystInstanceImpl$7:
    716:716:void <init>(com.facebook.react.bridge.CatalystInstanceImpl) -> <init>
    719:719:void run() -> run
com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback -> com.facebook.react.bridge.CatalystInstanceImpl$BridgeCallback:
    164:165:void <init>(com.facebook.react.bridge.CatalystInstanceImpl) -> <init>
    186:188:void decrementPendingJSCalls() -> decrementPendingJSCalls
    178:180:void incrementPendingJSCalls() -> incrementPendingJSCalls
    170:172:void onBatchComplete() -> onBatchComplete
com.facebook.react.bridge.CatalystInstanceImpl$Builder -> com.facebook.react.bridge.CatalystInstanceImpl$Builder:
    762:762:void <init>() -> <init>
    797:802:com.facebook.react.bridge.CatalystInstanceImpl build() -> build
    782:782:com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSBundleLoader(com.facebook.react.bridge.JSBundleLoader) -> setJSBundleLoader
    787:787:com.facebook.react.bridge.CatalystInstanceImpl$Builder setJSExecutor(com.facebook.react.bridge.JavaScriptExecutor) -> setJSExecutor
    792:792:com.facebook.react.bridge.CatalystInstanceImpl$Builder setNativeModuleCallExceptionHandler(com.facebook.react.bridge.NativeModuleCallExceptionHandler) -> setNativeModuleCallExceptionHandler
    772:772:com.facebook.react.bridge.CatalystInstanceImpl$Builder setReactQueueConfigurationSpec(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec) -> setReactQueueConfigurationSpec
    777:777:com.facebook.react.bridge.CatalystInstanceImpl$Builder setRegistry(com.facebook.react.bridge.NativeModuleRegistry) -> setRegistry
com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener -> com.facebook.react.bridge.CatalystInstanceImpl$JSProfilerTraceListener:
    741:742:void <init>(com.facebook.react.bridge.CatalystInstanceImpl) -> <init>
    747:749:void onTraceStarted() -> onTraceStarted
    755:757:void onTraceStopped() -> onTraceStopped
com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler -> com.facebook.react.bridge.CatalystInstanceImpl$NativeExceptionHandler:
    724:724:void <init>(com.facebook.react.bridge.CatalystInstanceImpl) -> <init>
    724:724:void <init>(com.facebook.react.bridge.CatalystInstanceImpl,com.facebook.react.bridge.CatalystInstanceImpl$1) -> <init>
    730:730:void handleException(java.lang.Exception) -> handleException
com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall -> com.facebook.react.bridge.CatalystInstanceImpl$PendingJSCall:
    61:64:void <init>(java.lang.String,java.lang.String,com.facebook.react.bridge.NativeArray) -> <init>
    68:69:void call(com.facebook.react.bridge.CatalystInstanceImpl) -> call
    73:77:java.lang.String toString() -> toString
com.facebook.react.bridge.ContextBaseJavaModule -> com.facebook.react.bridge.ContextBaseJavaModule:
    19:20:void <init>(android.content.Context) -> <init>
    25:25:android.content.Context getContext() -> getContext
com.facebook.react.bridge.CxxCallbackImpl -> com.facebook.react.bridge.CxxCallbackImpl:
    21:22:void <init>(com.facebook.jni.HybridData) -> <init>
    27:27:void invoke(java.lang.Object[]) -> invoke
com.facebook.react.bridge.CxxModuleWrapper -> com.facebook.react.bridge.CxxModuleWrapper:
    18:18:void <init>(com.facebook.jni.HybridData) -> <init>
    24:26:com.facebook.react.bridge.CxxModuleWrapper makeDso(java.lang.String,java.lang.String) -> makeDso
com.facebook.react.bridge.CxxModuleWrapperBase -> com.facebook.react.bridge.CxxModuleWrapperBase:
    22:22:void <clinit>() -> <clinit>
    46:47:void <init>(com.facebook.jni.HybridData) -> <init>
    42:42:void onCatalystInstanceDestroy() -> onCatalystInstanceDestroy
    52:54:void resetModule(com.facebook.jni.HybridData) -> resetModule
com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler -> com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler:
    11:11:void <init>() -> <init>
    15:20:void handleException(java.lang.Exception) -> handleException
com.facebook.react.bridge.DynamicFromArray -> com.facebook.react.bridge.DynamicFromArray:
    15:15:void <clinit>() -> <clinit>
    21:18:void <init>() -> <init>
    82:83:com.facebook.react.bridge.ReadableArray asArray() -> asArray
    50:51:boolean asBoolean() -> asBoolean
    58:59:double asDouble() -> asDouble
    66:67:int asInt() -> asInt
    90:91:com.facebook.react.bridge.ReadableMap asMap() -> asMap
    74:75:java.lang.String asString() -> asString
    24:29:com.facebook.react.bridge.DynamicFromArray create(com.facebook.react.bridge.ReadableArray,int) -> create
    98:99:com.facebook.react.bridge.ReadableType getType() -> getType
    42:43:boolean isNull() -> isNull
    35:37:void recycle() -> recycle
com.facebook.react.bridge.DynamicFromMap -> com.facebook.react.bridge.DynamicFromMap:
    15:15:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    88:89:com.facebook.react.bridge.ReadableArray asArray() -> asArray
    56:57:boolean asBoolean() -> asBoolean
    64:65:double asDouble() -> asDouble
    72:73:int asInt() -> asInt
    96:97:com.facebook.react.bridge.ReadableMap asMap() -> asMap
    80:81:java.lang.String asString() -> asString
    30:35:com.facebook.react.bridge.DynamicFromMap create(com.facebook.react.bridge.ReadableMap,java.lang.String) -> create
    104:105:com.facebook.react.bridge.ReadableType getType() -> getType
    48:49:boolean isNull() -> isNull
    41:43:void recycle() -> recycle
com.facebook.react.bridge.DynamicFromMap$1 -> com.facebook.react.bridge.DynamicFromMap$1:
    16:16:void <init>() -> <init>
    16:16:java.lang.Object initialValue() -> initialValue
    19:19:androidx.core.util.Pools$SimplePool initialValue() -> initialValue
com.facebook.react.bridge.DynamicFromObject -> com.facebook.react.bridge.DynamicFromObject:
    18:19:void <init>(java.lang.Object) -> <init>
    55:55:com.facebook.react.bridge.ReadableArray asArray() -> asArray
    34:34:boolean asBoolean() -> asBoolean
    39:39:double asDouble() -> asDouble
    45:45:int asInt() -> asInt
    60:60:com.facebook.react.bridge.ReadableMap asMap() -> asMap
    50:50:java.lang.String asString() -> asString
    65:84:com.facebook.react.bridge.ReadableType getType() -> getType
    29:29:boolean isNull() -> isNull
com.facebook.react.bridge.FallbackJSBundleLoader -> com.facebook.react.bridge.FallbackJSBundleLoader:
    35:39:void <init>(java.util.List) -> <init>
    66:81:com.facebook.react.bridge.JSBundleLoader getDelegateLoader() -> getDelegateLoader
    52:55:java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate) -> loadScript
com.facebook.react.bridge.GuardedAsyncTask -> com.facebook.react.bridge.GuardedAsyncTask:
    26:26:void <init>(com.facebook.react.bridge.ReactContext) -> <init>
    29:30:void <init>(com.facebook.react.bridge.NativeModuleCallExceptionHandler) -> <init>
    20:20:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    36:38:java.lang.Void doInBackground(java.lang.Object[]) -> doInBackground
com.facebook.react.bridge.GuardedResultAsyncTask -> com.facebook.react.bridge.GuardedResultAsyncTask:
    23:23:void <init>(com.facebook.react.bridge.ReactContext) -> <init>
    26:27:void <init>(com.facebook.react.bridge.NativeModuleCallExceptionHandler) -> <init>
    17:17:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    33:36:java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    43:45:void onPostExecute(java.lang.Object) -> onPostExecute
com.facebook.react.bridge.GuardedRunnable -> com.facebook.react.bridge.GuardedRunnable:
    21:21:void <init>(com.facebook.react.bridge.ReactContext) -> <init>
    24:25:void <init>(com.facebook.react.bridge.NativeModuleCallExceptionHandler) -> <init>
    31:33:void run() -> run
com.facebook.react.bridge.Inspector -> com.facebook.react.bridge.Inspector:
    21:21:void <clinit>() -> <clinit>
    50:51:void <init>(com.facebook.jni.HybridData) -> <init>
    37:40:com.facebook.react.bridge.Inspector$LocalConnection connect(int,com.facebook.react.bridge.Inspector$RemoteConnection) -> connect
    28:31:java.util.List getPages() -> getPages
com.facebook.react.bridge.Inspector$LocalConnection -> com.facebook.react.bridge.Inspector$LocalConnection:
    102:103:void <init>(com.facebook.jni.HybridData) -> <init>
com.facebook.react.bridge.Inspector$Page -> com.facebook.react.bridge.Inspector$Page:
    78:81:void <init>(int,java.lang.String,java.lang.String) -> <init>
    61:61:int getId() -> getId
    65:65:java.lang.String getTitle() -> getTitle
    69:69:java.lang.String getVM() -> getVM
    74:74:java.lang.String toString() -> toString
com.facebook.react.bridge.InvalidIteratorException -> com.facebook.react.bridge.InvalidIteratorException:
    21:21:void <init>(java.lang.String) -> <init>
com.facebook.react.bridge.JSApplicationCausedNativeException -> com.facebook.react.bridge.JSApplicationCausedNativeException:
    36:36:void <init>(java.lang.String) -> <init>
    41:41:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.facebook.react.bridge.JSApplicationIllegalArgumentException -> com.facebook.react.bridge.JSApplicationIllegalArgumentException:
    14:14:void <init>(java.lang.String) -> <init>
    18:18:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.facebook.react.bridge.JSBundleLoader -> com.facebook.react.bridge.JSBundleLoader:
    17:17:void <init>() -> <init>
    26:26:com.facebook.react.bridge.JSBundleLoader createAssetLoader(android.content.Context,java.lang.String,boolean) -> createAssetLoader
    63:63:com.facebook.react.bridge.JSBundleLoader createCachedBundleFromNetworkLoader(java.lang.String,java.lang.String) -> createCachedBundleFromNetworkLoader
    40:40:com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String) -> createFileLoader
    45:45:com.facebook.react.bridge.JSBundleLoader createFileLoader(java.lang.String,java.lang.String,boolean) -> createFileLoader
    82:82:com.facebook.react.bridge.JSBundleLoader createRemoteDebuggerBundleLoader(java.lang.String,java.lang.String) -> createRemoteDebuggerBundleLoader
com.facebook.react.bridge.JSBundleLoader$1 -> com.facebook.react.bridge.JSBundleLoader$1:
    26:26:void <init>(android.content.Context,java.lang.String,boolean) -> <init>
    29:30:java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate) -> loadScript
com.facebook.react.bridge.JSBundleLoader$2 -> com.facebook.react.bridge.JSBundleLoader$2:
    45:45:void <init>(java.lang.String,java.lang.String,boolean) -> <init>
    48:49:java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate) -> loadScript
com.facebook.react.bridge.JSBundleLoader$3 -> com.facebook.react.bridge.JSBundleLoader$3:
    63:63:void <init>(java.lang.String,java.lang.String) -> <init>
    67:70:java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate) -> loadScript
com.facebook.react.bridge.JSBundleLoader$4 -> com.facebook.react.bridge.JSBundleLoader$4:
    82:82:void <init>(java.lang.String,java.lang.String) -> <init>
    85:86:java.lang.String loadScript(com.facebook.react.bridge.JSBundleLoaderDelegate) -> loadScript
com.facebook.react.bridge.JSCJavaScriptExecutor -> com.facebook.react.bridge.JSCJavaScriptExecutor:
    16:16:void <clinit>() -> <clinit>
    20:20:void <init>(com.facebook.react.bridge.ReadableNativeMap) -> <init>
com.facebook.react.bridge.JSCJavaScriptExecutorFactory -> com.facebook.react.bridge.JSCJavaScriptExecutorFactory:
    14:16:void <init>(java.lang.String,java.lang.String) -> <init>
    21:25:com.facebook.react.bridge.JavaScriptExecutor create() -> create
    30:31:void startSamplingProfiler() -> startSamplingProfiler
    36:37:void stopSamplingProfiler(java.lang.String) -> stopSamplingProfiler
com.facebook.react.bridge.JSIModuleHolder -> com.facebook.react.bridge.JSIModuleHolder:
    15:16:void <init>(com.facebook.react.bridge.JSIModuleSpec) -> <init>
    20:29:com.facebook.react.bridge.JSIModule getJSIModule() -> getJSIModule
    33:34:void notifyJSInstanceDestroy() -> notifyJSInstanceDestroy
com.facebook.react.bridge.JSIModuleRegistry -> com.facebook.react.bridge.JSIModuleRegistry:
    19:17:void <init>() -> <init>
    22:24:com.facebook.react.bridge.JSIModule getModule(com.facebook.react.bridge.JSIModuleType) -> getModule
    36:45:void notifyJSInstanceDestroy() -> notifyJSInstanceDestroy
    30:31:void registerModules(java.util.List) -> registerModules
com.facebook.react.bridge.JSIModuleType -> com.facebook.react.bridge.JSIModuleType:
    15:14:void <clinit>() -> <clinit>
    14:14:void <init>(java.lang.String,int) -> <init>
    14:14:com.facebook.react.bridge.JSIModuleType valueOf(java.lang.String) -> valueOf
    14:14:com.facebook.react.bridge.JSIModuleType[] values() -> values
com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException -> com.facebook.react.bridge.JavaJSExecutor$ProxyExecutorException:
    25:25:void <init>(java.lang.Throwable) -> <init>
com.facebook.react.bridge.JavaMethodWrapper -> com.facebook.react.bridge.JavaMethodWrapper:
    32:137:void <clinit>() -> <clinit>
    211:221:void <init>(com.facebook.react.bridge.JavaModuleWrapper,java.lang.reflect.Method,boolean) -> <init>
    21:21:com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor access$100() -> access$100
    280:281:com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor[] buildArgumentExtractors(java.lang.Class[]) -> buildArgumentExtractors
    258:276:java.lang.String buildSignature(java.lang.reflect.Method,java.lang.Class[],boolean) -> buildSignature
    314:315:int calculateJSArgumentsNeeded() -> calculateJSArgumentsNeeded
    177:193:char commonTypeToChar(java.lang.Class) -> commonTypeToChar
    321:321:java.lang.String getAffectedRange(int,int) -> getAffectedRange
    247:247:java.lang.reflect.Method getMethod() -> getMethod
    251:254:java.lang.String getSignature() -> getSignature
    397:397:java.lang.String getType() -> getType
    328:387:void invoke(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray) -> invoke
    140:155:char paramTypeToChar(java.lang.Class) -> paramTypeToChar
    226:243:void processArguments() -> processArguments
    161:172:char returnTypeToChar(java.lang.Class) -> returnTypeToChar
com.facebook.react.bridge.JavaMethodWrapper$1 -> com.facebook.react.bridge.JavaMethodWrapper$1:
    33:33:void <init>() -> <init>
    33:33:java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int) -> extractArgument
    37:37:java.lang.Boolean extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int) -> extractArgument
com.facebook.react.bridge.JavaMethodWrapper$10 -> com.facebook.react.bridge.JavaMethodWrapper$10:
    119:119:void <init>() -> <init>
    119:119:java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int) -> extractArgument
    129:132:com.facebook.react.bridge.Promise extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int) -> extractArgument
com.facebook.react.bridge.JavaMethodWrapper$2 -> com.facebook.react.bridge.JavaMethodWrapper$2:
    42:42:void <init>() -> <init>
    42:42:java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int) -> extractArgument
    46:46:java.lang.Double extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int) -> extractArgument
com.facebook.react.bridge.JavaMethodWrapper$3 -> com.facebook.react.bridge.JavaMethodWrapper$3:
    51:51:void <init>() -> <init>
    51:51:java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int) -> extractArgument
    55:55:java.lang.Float extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int) -> extractArgument
com.facebook.react.bridge.JavaMethodWrapper$4 -> com.facebook.react.bridge.JavaMethodWrapper$4:
    60:60:void <init>() -> <init>
    60:60:java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int) -> extractArgument
    64:64:java.lang.Integer extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int) -> extractArgument
com.facebook.react.bridge.JavaMethodWrapper$5 -> com.facebook.react.bridge.JavaMethodWrapper$5:
    69:69:void <init>() -> <init>
    69:69:java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int) -> extractArgument
    73:73:java.lang.String extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int) -> extractArgument
com.facebook.react.bridge.JavaMethodWrapper$6 -> com.facebook.react.bridge.JavaMethodWrapper$6:
    78:78:void <init>() -> <init>
    78:78:java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int) -> extractArgument
    82:82:com.facebook.react.bridge.ReadableArray extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int) -> extractArgument
com.facebook.react.bridge.JavaMethodWrapper$7 -> com.facebook.react.bridge.JavaMethodWrapper$7:
    87:87:void <init>() -> <init>
    87:87:java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int) -> extractArgument
    91:91:com.facebook.react.bridge.Dynamic extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int) -> extractArgument
com.facebook.react.bridge.JavaMethodWrapper$8 -> com.facebook.react.bridge.JavaMethodWrapper$8:
    96:96:void <init>() -> <init>
    96:96:java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int) -> extractArgument
    100:100:com.facebook.react.bridge.ReadableMap extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int) -> extractArgument
com.facebook.react.bridge.JavaMethodWrapper$9 -> com.facebook.react.bridge.JavaMethodWrapper$9:
    105:105:void <init>() -> <init>
    105:105:java.lang.Object extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int) -> extractArgument
    109:113:com.facebook.react.bridge.Callback extractArgument(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ReadableArray,int) -> extractArgument
com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor -> com.facebook.react.bridge.JavaMethodWrapper$ArgumentExtractor:
    23:23:void <init>() -> <init>
    23:23:void <init>(com.facebook.react.bridge.JavaMethodWrapper$1) -> <init>
com.facebook.react.bridge.JavaModuleWrapper -> com.facebook.react.bridge.JavaModuleWrapper:
    47:51:void <init>(com.facebook.react.bridge.JSInstance,com.facebook.react.bridge.ModuleHolder) -> <init>
    66:103:void findMethods() -> findMethods
    116:142:com.facebook.react.bridge.NativeMap getConstants() -> getConstants
    108:111:java.util.List getMethodDescriptors() -> getMethodDescriptors
    56:56:com.facebook.react.bridge.BaseJavaModule getModule() -> getModule
    61:61:java.lang.String getName() -> getName
    147:151:void invoke(int,com.facebook.react.bridge.ReadableNativeArray) -> invoke
com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor -> com.facebook.react.bridge.JavaModuleWrapper$MethodDescriptor:
    35:35:void <init>(com.facebook.react.bridge.JavaModuleWrapper) -> <init>
com.facebook.react.bridge.JavaOnlyArray -> com.facebook.react.bridge.JavaOnlyArray:
    67:68:void <init>(java.lang.Object[]) -> <init>
    71:72:void <init>(java.util.List) -> <init>
    75:76:void <init>() -> <init>
    40:45:com.facebook.react.bridge.JavaOnlyArray deepClone(com.facebook.react.bridge.ReadableArray) -> deepClone
    192:196:boolean equals(java.lang.Object) -> equals
    32:32:com.facebook.react.bridge.JavaOnlyArray from(java.util.List) -> from
    106:106:com.facebook.react.bridge.ReadableArray getArray(int) -> getArray
    111:111:boolean getBoolean(int) -> getBoolean
    91:91:double getDouble(int) -> getDouble
    121:121:com.facebook.react.bridge.Dynamic getDynamic(int) -> getDynamic
    96:96:int getInt(int) -> getInt
    116:116:com.facebook.react.bridge.ReadableMap getMap(int) -> getMap
    101:101:java.lang.String getString(int) -> getString
    126:133:com.facebook.react.bridge.ReadableType getType(int) -> getType
    204:204:int hashCode() -> hashCode
    86:86:boolean isNull(int) -> isNull
    36:36:com.facebook.react.bridge.JavaOnlyArray of(java.lang.Object[]) -> of
    166:166:void pushArray(com.facebook.react.bridge.ReadableArray) -> pushArray
    146:146:void pushBoolean(boolean) -> pushBoolean
    151:151:void pushDouble(double) -> pushDouble
    156:156:void pushInt(int) -> pushInt
    171:171:void pushMap(com.facebook.react.bridge.ReadableMap) -> pushMap
    176:176:void pushNull() -> pushNull
    161:161:void pushString(java.lang.String) -> pushString
    81:81:int size() -> size
    181:181:java.util.ArrayList toArrayList() -> toArrayList
    186:186:java.lang.String toString() -> toString
com.facebook.react.bridge.JavaOnlyArray$1 -> com.facebook.react.bridge.JavaOnlyArray$1:
    43:43:void <clinit>() -> <clinit>
com.facebook.react.bridge.JavaOnlyMap -> com.facebook.react.bridge.JavaOnlyMap:
    65:67:void <init>(java.lang.Object[]) -> <init>
    80:81:void <init>() -> <init>
    26:26:java.util.Map access$000(com.facebook.react.bridge.JavaOnlyMap) -> access$000
    211:212:com.facebook.react.bridge.WritableMap copy() -> copy
    35:42:com.facebook.react.bridge.JavaOnlyMap deepClone(com.facebook.react.bridge.ReadableMap) -> deepClone
    234:238:boolean equals(java.lang.Object) -> equals
    121:121:com.facebook.react.bridge.ReadableArray getArray(java.lang.String) -> getArray
    96:96:boolean getBoolean(java.lang.String) -> getBoolean
    101:101:double getDouble(java.lang.String) -> getDouble
    126:126:com.facebook.react.bridge.Dynamic getDynamic(java.lang.String) -> getDynamic
    154:154:java.util.Iterator getEntryIterator() -> getEntryIterator
    106:106:int getInt(java.lang.String) -> getInt
    116:116:com.facebook.react.bridge.ReadableMap getMap(java.lang.String) -> getMap
    111:111:java.lang.String getString(java.lang.String) -> getString
    131:148:com.facebook.react.bridge.ReadableType getType(java.lang.String) -> getType
    86:86:boolean hasKey(java.lang.String) -> hasKey
    246:246:int hashCode() -> hashCode
    91:91:boolean isNull(java.lang.String) -> isNull
    159:159:com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator() -> keySetIterator
    206:206:void merge(com.facebook.react.bridge.ReadableMap) -> merge
    31:31:com.facebook.react.bridge.JavaOnlyMap of(java.lang.Object[]) -> of
    218:218:void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray) -> putArray
    176:176:void putBoolean(java.lang.String,boolean) -> putBoolean
    181:181:void putDouble(java.lang.String,double) -> putDouble
    186:186:void putInt(java.lang.String,int) -> putInt
    201:201:void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap) -> putMap
    196:196:void putNull(java.lang.String) -> putNull
    191:191:void putString(java.lang.String,java.lang.String) -> putString
    223:223:java.util.HashMap toHashMap() -> toHashMap
    228:228:java.lang.String toString() -> toString
com.facebook.react.bridge.JavaOnlyMap$1 -> com.facebook.react.bridge.JavaOnlyMap$1:
    159:160:void <init>(com.facebook.react.bridge.JavaOnlyMap) -> <init>
    164:164:boolean hasNextKey() -> hasNextKey
    169:169:java.lang.String nextKey() -> nextKey
com.facebook.react.bridge.JavaOnlyMap$2 -> com.facebook.react.bridge.JavaOnlyMap$2:
    40:40:void <clinit>() -> <clinit>
com.facebook.react.bridge.JavaScriptContextHolder -> com.facebook.react.bridge.JavaScriptContextHolder:
    21:22:void <init>(long) -> <init>
    31:32:void clear() -> clear
    27:27:long get() -> get
com.facebook.react.bridge.JavaScriptExecutor -> com.facebook.react.bridge.JavaScriptExecutor:
    17:18:void <init>(com.facebook.jni.HybridData) -> <init>
    26:26:void close() -> close
com.facebook.react.bridge.JavaScriptModuleRegistry -> com.facebook.react.bridge.JavaScriptModuleRegistry:
    27:28:void <init>() -> <init>
    33:45:com.facebook.react.bridge.JavaScriptModule getJavaScriptModule(com.facebook.react.bridge.CatalystInstance,java.lang.Class) -> getJavaScriptModule
com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler -> com.facebook.react.bridge.JavaScriptModuleRegistry$JavaScriptModuleInvocationHandler:
    54:56:void <init>(com.facebook.react.bridge.CatalystInstance,java.lang.Class) -> <init>
    73:86:java.lang.String getJSModuleName() -> getJSModuleName
    92:93:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.facebook.react.bridge.JsonWriterHelper -> com.facebook.react.bridge.JsonWriterHelper:
    16:16:void <init>() -> <init>
    34:36:void dynamicValue(android.util.JsonWriter,com.facebook.react.bridge.Dynamic) -> dynamicValue
    135:139:void listValue(android.util.JsonWriter,java.util.List) -> listValue
    126:131:void mapValue(android.util.JsonWriter,java.util.Map) -> mapValue
    144:152:void objectValue(android.util.JsonWriter,java.lang.Object) -> objectValue
    94:122:void readableArrayValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableArray) -> readableArrayValue
    59:90:void readableMapValue(android.util.JsonWriter,com.facebook.react.bridge.ReadableMap) -> readableMapValue
    18:29:void value(android.util.JsonWriter,java.lang.Object) -> value
com.facebook.react.bridge.JsonWriterHelper$1 -> com.facebook.react.bridge.JsonWriterHelper$1:
    34:34:void <clinit>() -> <clinit>
com.facebook.react.bridge.MemoryPressure -> com.facebook.react.bridge.MemoryPressure:
    11:10:void <clinit>() -> <clinit>
    10:10:void <init>(java.lang.String,int) -> <init>
    10:10:com.facebook.react.bridge.MemoryPressure valueOf(java.lang.String) -> valueOf
    10:10:com.facebook.react.bridge.MemoryPressure[] values() -> values
com.facebook.react.bridge.ModuleHolder -> com.facebook.react.bridge.ModuleHolder:
    41:41:void <clinit>() -> <clinit>
    57:62:void <init>(com.facebook.react.module.model.ReactModuleInfo,javax.inject.Provider) -> <init>
    66:80:void <init>(com.facebook.react.bridge.NativeModule) -> <init>
    182:217:com.facebook.react.bridge.NativeModule create() -> create
    109:112:void destroy() -> destroy
    222:247:void doInitialize(com.facebook.react.bridge.NativeModule) -> doInitialize
    120:120:boolean getCanOverrideExistingModule() -> getCanOverrideExistingModule
    136:136:java.lang.String getClassName() -> getClassName
    124:124:boolean getHasConstants() -> getHasConstants
    143:154:com.facebook.react.bridge.NativeModule getModule() -> getModule
    116:116:java.lang.String getName() -> getName
    105:105:boolean hasInstance() -> hasInstance
    132:132:boolean isCxxModule() -> isCxxModule
    128:128:boolean isTurboModule() -> isTurboModule
    91:98:void markInitializable() -> markInitializable
com.facebook.react.bridge.ModuleSpec -> com.facebook.react.bridge.ModuleSpec:
    56:59:void <init>(javax.inject.Provider) -> <init>
    62:65:void <init>(javax.inject.Provider,java.lang.String) -> <init>
    73:73:java.lang.String getName() -> getName
    77:77:javax.inject.Provider getProvider() -> getProvider
    69:69:java.lang.Class getType() -> getType
    32:42:com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.Class,javax.inject.Provider) -> nativeModuleSpec
    48:48:com.facebook.react.bridge.ModuleSpec nativeModuleSpec(java.lang.String,javax.inject.Provider) -> nativeModuleSpec
    27:27:com.facebook.react.bridge.ModuleSpec viewManagerSpec(javax.inject.Provider) -> viewManagerSpec
com.facebook.react.bridge.NativeArgumentsParseException -> com.facebook.react.bridge.NativeArgumentsParseException:
    16:16:void <init>(java.lang.String) -> <init>
    20:20:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.facebook.react.bridge.NativeArray -> com.facebook.react.bridge.NativeArray:
    17:17:void <clinit>() -> <clinit>
    20:21:void <init>(com.facebook.jni.HybridData) -> <init>
com.facebook.react.bridge.NativeMap -> com.facebook.react.bridge.NativeMap:
    17:17:void <clinit>() -> <clinit>
    20:21:void <init>(com.facebook.jni.HybridData) -> <init>
com.facebook.react.bridge.NativeModuleRegistry -> com.facebook.react.bridge.NativeModuleRegistry:
    25:27:void <init>(com.facebook.react.bridge.ReactApplicationContext,java.util.Map) -> <init>
    153:155:java.util.List getAllModules() -> getAllModules
    50:53:java.util.Collection getCxxModules() -> getCxxModules
    40:43:java.util.Collection getJavaModules(com.facebook.react.bridge.JSInstance) -> getJavaModules
    129:132:com.facebook.react.bridge.NativeModule getModule(java.lang.Class) -> getModule
    148:149:com.facebook.react.bridge.NativeModule getModule(java.lang.String) -> getModule
    32:32:java.util.Map getModuleMap() -> getModuleMap
    36:36:com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext() -> getReactApplicationContext
    124:125:boolean hasModule(java.lang.Class) -> hasModule
    144:144:boolean hasModule(java.lang.String) -> hasModule
    80:89:void notifyJSInstanceDestroy() -> notifyJSInstanceDestroy
    93:108:void notifyJSInstanceInitialized() -> notifyJSInstanceInitialized
    117:119:void onBatchComplete() -> onBatchComplete
    64:74:void registerModules(com.facebook.react.bridge.NativeModuleRegistry) -> registerModules
com.facebook.react.bridge.NoSuchKeyException -> com.facebook.react.bridge.NoSuchKeyException:
    18:18:void <init>(java.lang.String) -> <init>
com.facebook.react.bridge.ObjectAlreadyConsumedException -> com.facebook.react.bridge.ObjectAlreadyConsumedException:
    22:22:void <init>(java.lang.String) -> <init>
com.facebook.react.bridge.PromiseImpl -> com.facebook.react.bridge.PromiseImpl:
    43:45:void <init>(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback) -> <init>
    70:70:void reject(java.lang.String,java.lang.String) -> reject
    81:81:void reject(java.lang.String,java.lang.Throwable) -> reject
    93:93:void reject(java.lang.String,java.lang.String,java.lang.Throwable) -> reject
    104:104:void reject(java.lang.Throwable) -> reject
    120:120:void reject(java.lang.Throwable,com.facebook.react.bridge.WritableMap) -> reject
    131:131:void reject(java.lang.String,com.facebook.react.bridge.WritableMap) -> reject
    143:143:void reject(java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap) -> reject
    156:156:void reject(java.lang.String,java.lang.String,com.facebook.react.bridge.WritableMap) -> reject
    173:233:void reject(java.lang.String,java.lang.String,java.lang.Throwable,com.facebook.react.bridge.WritableMap) -> reject
    243:243:void reject(java.lang.String) -> reject
    55:58:void resolve(java.lang.Object) -> resolve
com.facebook.react.bridge.ProxyJavaScriptExecutor -> com.facebook.react.bridge.ProxyJavaScriptExecutor:
    50:50:void <clinit>() -> <clinit>
    62:63:void <init>(com.facebook.react.bridge.JavaJSExecutor) -> <init>
    68:70:void close() -> close
com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory -> com.facebook.react.bridge.ProxyJavaScriptExecutor$Factory:
    27:28:void <init>(com.facebook.react.bridge.JavaJSExecutor$Factory) -> <init>
    33:33:com.facebook.react.bridge.JavaScriptExecutor create() -> create
    38:39:void startSamplingProfiler() -> startSamplingProfiler
    44:45:void stopSamplingProfiler(java.lang.String) -> stopSamplingProfiler
com.facebook.react.bridge.ReactApplicationContext -> com.facebook.react.bridge.ReactApplicationContext:
    21:21:void <init>(android.content.Context) -> <init>
com.facebook.react.bridge.ReactBridge -> com.facebook.react.bridge.ReactBridge:
    16:16:void <init>() -> <init>
    46:46:long getLoadEndTime() -> getLoadEndTime
    42:42:long getLoadStartTime() -> getLoadStartTime
    23:23:boolean isInitialized() -> isInitialized
    27:39:void staticInit() -> staticInit
com.facebook.react.bridge.ReactContext -> com.facebook.react.bridge.ReactContext:
    60:48:void <init>(android.content.Context) -> <init>
    34:34:java.util.concurrent.CopyOnWriteArraySet access$000(com.facebook.react.bridge.ReactContext) -> access$000
    199:199:void addActivityEventListener(com.facebook.react.bridge.ActivityEventListener) -> addActivityEventListener
    166:189:void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener) -> addLifecycleEventListener
    207:207:void addWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener) -> addWindowFocusChangeListener
    336:336:void assertOnJSQueueThread() -> assertOnJSQueueThread
    320:320:void assertOnNativeModulesQueueThread() -> assertOnNativeModulesQueueThread
    324:324:void assertOnNativeModulesQueueThread(java.lang.String) -> assertOnNativeModulesQueueThread
    308:308:void assertOnUiQueueThread() -> assertOnUiQueueThread
    274:279:void destroy() -> destroy
    150:150:com.facebook.react.bridge.CatalystInstance getCatalystInstance() -> getCatalystInstance
    410:413:android.app.Activity getCurrentActivity() -> getCurrentActivity
    382:385:com.facebook.react.bridge.NativeModuleCallExceptionHandler getExceptionHandler() -> getExceptionHandler
    126:127:com.facebook.react.bridge.JavaScriptModule getJSModule(java.lang.Class) -> getJSModule
    423:423:com.facebook.react.bridge.JavaScriptContextHolder getJavaScriptContextHolder() -> getJavaScriptContextHolder
    162:162:com.facebook.react.common.LifecycleState getLifecycleState() -> getLifecycleState
    142:143:com.facebook.react.bridge.NativeModule getNativeModule(java.lang.Class) -> getNativeModule
    113:119:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    353:370:void handleException(java.lang.Exception) -> handleException
    154:154:boolean hasActiveCatalystInstance() -> hasActiveCatalystInstance
    158:158:boolean hasCatalystInstance() -> hasCatalystInstance
    389:389:boolean hasCurrentActivity() -> hasCurrentActivity
    133:134:boolean hasNativeModule(java.lang.Class) -> hasNativeModule
    83:86:void initializeMessageQueueThreads(com.facebook.react.bridge.queue.ReactQueueConfiguration) -> initializeMessageQueueThreads
    68:66:void initializeWithInstance(com.facebook.react.bridge.CatalystInstance) -> initializeWithInstance
    340:340:boolean isOnJSQueueThread() -> isOnJSQueueThread
    328:328:boolean isOnNativeModulesQueueThread() -> isOnNativeModulesQueueThread
    312:312:boolean isOnUiQueueThread() -> isOnUiQueueThread
    286:290:void onActivityResult(android.app.Activity,int,int,android.content.Intent) -> onActivityResult
    259:268:void onHostDestroy() -> onHostDestroy
    244:253:void onHostPause() -> onHostPause
    216:226:void onHostResume(android.app.Activity) -> onHostResume
    231:237:void onNewIntent(android.app.Activity,android.content.Intent) -> onNewIntent
    297:302:void onWindowFocusChange(boolean) -> onWindowFocusChange
    203:203:void removeActivityEventListener(com.facebook.react.bridge.ActivityEventListener) -> removeActivityEventListener
    195:195:void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener) -> removeLifecycleEventListener
    211:211:void removeWindowFocusChangeListener(com.facebook.react.bridge.WindowFocusChangeListener) -> removeWindowFocusChangeListener
    94:98:void resetPerfStats() -> resetPerfStats
    344:344:void runOnJSQueueThread(java.lang.Runnable) -> runOnJSQueueThread
    332:332:void runOnNativeModulesQueueThread(java.lang.Runnable) -> runOnNativeModulesQueueThread
    316:316:void runOnUiQueueThread(java.lang.Runnable) -> runOnUiQueueThread
    104:104:void setNativeModuleCallExceptionHandler(com.facebook.react.bridge.NativeModuleCallExceptionHandler) -> setNativeModuleCallExceptionHandler
    398:400:boolean startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
com.facebook.react.bridge.ReactContext$1 -> com.facebook.react.bridge.ReactContext$1:
    174:174:void <init>(com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.LifecycleEventListener) -> <init>
    177:183:void run() -> run
com.facebook.react.bridge.ReactContext$2 -> com.facebook.react.bridge.ReactContext$2:
    168:168:void <clinit>() -> <clinit>
com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper -> com.facebook.react.bridge.ReactContext$ExceptionHandlerWrapper:
    374:374:void <init>(com.facebook.react.bridge.ReactContext) -> <init>
    377:377:void handleException(java.lang.Exception) -> handleException
com.facebook.react.bridge.ReactContextBaseJavaModule -> com.facebook.react.bridge.ReactContextBaseJavaModule:
    27:28:void <init>() -> <init>
    31:32:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    83:83:android.app.Activity getCurrentActivity() -> getCurrentActivity
    37:37:com.facebook.react.bridge.ReactApplicationContext getReactApplicationContext() -> getReactApplicationContext
    56:67:com.facebook.react.bridge.ReactApplicationContext getReactApplicationContextIfActiveOrWarn() -> getReactApplicationContextIfActiveOrWarn
com.facebook.react.bridge.ReactMarker -> com.facebook.react.bridge.ReactMarker:
    36:41:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
    64:65:void addFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener) -> addFabricListener
    46:47:void addListener(com.facebook.react.bridge.ReactMarker$MarkerListener) -> addListener
    78:78:void clearFabricMarkerListeners() -> clearFabricMarkerListeners
    58:58:void clearMarkerListeners() -> clearMarkerListeners
    85:86:void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int,long) -> logFabricMarker
    94:94:void logFabricMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int) -> logFabricMarker
    99:99:void logMarker(java.lang.String) -> logMarker
    104:104:void logMarker(java.lang.String,int) -> logMarker
    109:109:void logMarker(java.lang.String,java.lang.String) -> logMarker
    114:115:void logMarker(java.lang.String,java.lang.String,int) -> logMarker
    120:120:void logMarker(com.facebook.react.bridge.ReactMarkerConstants) -> logMarker
    125:125:void logMarker(com.facebook.react.bridge.ReactMarkerConstants,int) -> logMarker
    130:130:void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String) -> logMarker
    135:137:void logMarker(com.facebook.react.bridge.ReactMarkerConstants,java.lang.String,int) -> logMarker
    72:72:void removeFabricListener(com.facebook.react.bridge.ReactMarker$FabricMarkerListener) -> removeFabricListener
    53:53:void removeListener(com.facebook.react.bridge.ReactMarker$MarkerListener) -> removeListener
com.facebook.react.bridge.ReactMarkerConstants -> com.facebook.react.bridge.ReactMarkerConstants:
    12:11:void <clinit>() -> <clinit>
    11:11:void <init>(java.lang.String,int) -> <init>
    11:11:com.facebook.react.bridge.ReactMarkerConstants valueOf(java.lang.String) -> valueOf
    11:11:com.facebook.react.bridge.ReactMarkerConstants[] values() -> values
com.facebook.react.bridge.ReactNoCrashSoftException -> com.facebook.react.bridge.ReactNoCrashSoftException:
    17:17:void <init>(java.lang.String) -> <init>
com.facebook.react.bridge.ReactSoftException -> com.facebook.react.bridge.ReactSoftException:
    26:26:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    30:31:void addListener(com.facebook.react.bridge.ReactSoftException$ReactSoftExceptionListener) -> addListener
    42:42:void clearListeners() -> clearListeners
    47:52:void logSoftException(java.lang.String,java.lang.Throwable) -> logSoftException
    37:37:void removeListener(com.facebook.react.bridge.ReactSoftException$ReactSoftExceptionListener) -> removeListener
com.facebook.react.bridge.ReadableNativeArray -> com.facebook.react.bridge.ReadableNativeArray:
    25:36:void <clinit>() -> <clinit>
    29:29:void <init>(com.facebook.jni.HybridData) -> <init>
    132:136:boolean equals(java.lang.Object) -> equals
    22:22:com.facebook.react.bridge.ReadableArray getArray(int) -> getArray
    107:107:com.facebook.react.bridge.ReadableNativeArray getArray(int) -> getArray
    87:87:boolean getBoolean(int) -> getBoolean
    92:92:double getDouble(int) -> getDouble
    122:122:com.facebook.react.bridge.Dynamic getDynamic(int) -> getDynamic
    97:97:int getInt(int) -> getInt
    39:39:int getJNIPassCounter() -> getJNIPassCounter
    43:52:java.lang.Object[] getLocalArray() -> getLocalArray
    59:69:com.facebook.react.bridge.ReadableType[] getLocalTypeArray() -> getLocalTypeArray
    22:22:com.facebook.react.bridge.ReadableMap getMap(int) -> getMap
    112:112:com.facebook.react.bridge.ReadableNativeMap getMap(int) -> getMap
    102:102:java.lang.String getString(int) -> getString
    117:117:com.facebook.react.bridge.ReadableType getType(int) -> getType
    127:127:int hashCode() -> hashCode
    82:82:boolean isNull(int) -> isNull
    77:77:int size() -> size
    141:146:java.util.ArrayList toArrayList() -> toArrayList
com.facebook.react.bridge.ReadableNativeArray$1 -> com.facebook.react.bridge.ReadableNativeArray$1:
    144:144:void <clinit>() -> <clinit>
com.facebook.react.bridge.ReadableNativeMap -> com.facebook.react.bridge.ReadableNativeMap:
    26:26:void <clinit>() -> <clinit>
    30:30:void <init>(com.facebook.jni.HybridData) -> <init>
    24:24:java.util.HashMap access$000(com.facebook.react.bridge.ReadableNativeMap) -> access$000
    133:140:void checkInstance(java.lang.String,java.lang.Object,java.lang.Class) -> checkInstance
    205:209:boolean equals(java.lang.Object) -> equals
    167:167:com.facebook.react.bridge.ReadableArray getArray(java.lang.String) -> getArray
    146:146:boolean getBoolean(java.lang.String) -> getBoolean
    151:151:double getDouble(java.lang.String) -> getDouble
    185:185:com.facebook.react.bridge.Dynamic getDynamic(java.lang.String) -> getDynamic
    190:190:java.util.Iterator getEntryIterator() -> getEntryIterator
    157:157:int getInt(java.lang.String) -> getInt
    39:39:int getJNIPassCounter() -> getJNIPassCounter
    43:60:java.util.HashMap getLocalMap() -> getLocalMap
    69:87:java.util.HashMap getLocalTypeMap() -> getLocalTypeMap
    23:23:com.facebook.react.bridge.ReadableMap getMap(java.lang.String) -> getMap
    172:172:com.facebook.react.bridge.ReadableNativeMap getMap(java.lang.String) -> getMap
    120:123:java.lang.Object getNullableValue(java.lang.String) -> getNullableValue
    127:128:java.lang.Object getNullableValue(java.lang.String,java.lang.Class) -> getNullableValue
    162:162:java.lang.String getString(java.lang.String) -> getString
    177:180:com.facebook.react.bridge.ReadableType getType(java.lang.String) -> getType
    107:110:java.lang.Object getValue(java.lang.String) -> getValue
    114:115:java.lang.Object getValue(java.lang.String,java.lang.Class) -> getValue
    95:95:boolean hasKey(java.lang.String) -> hasKey
    200:200:int hashCode() -> hashCode
    100:103:boolean isNull(java.lang.String) -> isNull
    195:195:com.facebook.react.bridge.ReadableMapKeySetIterator keySetIterator() -> keySetIterator
    216:228:java.util.HashMap toHashMap() -> toHashMap
com.facebook.react.bridge.ReadableNativeMap$1 -> com.facebook.react.bridge.ReadableNativeMap$1:
    221:221:void <clinit>() -> <clinit>
com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator -> com.facebook.react.bridge.ReadableNativeMap$ReadableNativeMapKeySetIterator:
    243:244:void <init>(com.facebook.react.bridge.ReadableNativeMap) -> <init>
    249:249:boolean hasNextKey() -> hasNextKey
    254:254:java.lang.String nextKey() -> nextKey
com.facebook.react.bridge.ReadableType -> com.facebook.react.bridge.ReadableType:
    15:13:void <clinit>() -> <clinit>
    14:14:void <init>(java.lang.String,int) -> <init>
    13:13:com.facebook.react.bridge.ReadableType valueOf(java.lang.String) -> valueOf
    13:13:com.facebook.react.bridge.ReadableType[] values() -> values
com.facebook.react.bridge.SoftAssertions -> com.facebook.react.bridge.SoftAssertions:
    18:18:void <init>() -> <init>
    37:37:void assertCondition(boolean,java.lang.String) -> assertCondition
    47:47:java.lang.Object assertNotNull(java.lang.Object) -> assertNotNull
    27:27:void assertUnreachable(java.lang.String) -> assertUnreachable
com.facebook.react.bridge.UiThreadUtil -> com.facebook.react.bridge.UiThreadUtil:
    15:15:void <init>() -> <init>
    31:31:void assertNotOnUiThread() -> assertNotOnUiThread
    26:26:void assertOnUiThread() -> assertOnUiThread
    21:21:boolean isOnUiThread() -> isOnUiThread
    36:36:void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    41:45:void runOnUiThread(java.lang.Runnable,long) -> runOnUiThread
com.facebook.react.bridge.UnexpectedNativeTypeException -> com.facebook.react.bridge.UnexpectedNativeTypeException:
    21:21:void <init>(java.lang.String) -> <init>
com.facebook.react.bridge.WritableNativeArray -> com.facebook.react.bridge.WritableNativeArray:
    22:22:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    47:49:void pushArray(com.facebook.react.bridge.ReadableArray) -> pushArray
    55:57:void pushMap(com.facebook.react.bridge.ReadableMap) -> pushMap
com.facebook.react.bridge.WritableNativeMap -> com.facebook.react.bridge.WritableNativeMap:
    23:23:void <clinit>() -> <clinit>
    71:71:void <init>() -> <init>
    65:66:com.facebook.react.bridge.WritableMap copy() -> copy
    59:60:void merge(com.facebook.react.bridge.ReadableMap) -> merge
    51:53:void putArray(java.lang.String,com.facebook.react.bridge.ReadableArray) -> putArray
    43:45:void putMap(java.lang.String,com.facebook.react.bridge.ReadableMap) -> putMap
com.facebook.react.bridge.queue.MessageQueueThreadHandler -> com.facebook.react.bridge.queue.MessageQueueThreadHandler:
    20:21:void <init>(android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler) -> <init>
    27:29:void dispatchMessage(android.os.Message) -> dispatchMessage
com.facebook.react.bridge.queue.MessageQueueThreadImpl -> com.facebook.react.bridge.queue.MessageQueueThreadImpl:
    37:37:void <init>(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler) -> <init>
    44:49:void <init>(java.lang.String,android.os.Looper,com.facebook.react.bridge.queue.QueueThreadExceptionHandler,com.facebook.react.bridge.queue.MessageQueueThreadPerfStats) -> <init>
    26:26:com.facebook.react.bridge.queue.MessageQueueThreadPerfStats access$000(com.facebook.react.bridge.queue.MessageQueueThreadImpl) -> access$000
    26:26:void access$100(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long) -> access$100
    103:103:void assertIsOnThread() -> assertIsOnThread
    114:113:void assertIsOnThread(java.lang.String) -> assertIsOnThread
    158:159:void assignToPerfStats(com.facebook.react.bridge.queue.MessageQueueThreadPerfStats,long,long) -> assignToPerfStats
    72:73:java.util.concurrent.Future callOnQueue(java.util.concurrent.Callable) -> callOnQueue
    172:174:com.facebook.react.bridge.queue.MessageQueueThreadImpl create(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler) -> create
    185:192:com.facebook.react.bridge.queue.MessageQueueThreadImpl createForMainThread(java.lang.String,com.facebook.react.bridge.queue.QueueThreadExceptionHandler) -> createForMainThread
    163:163:android.os.Looper getLooper() -> getLooper
    167:167:java.lang.String getName() -> getName
    139:139:com.facebook.react.bridge.queue.MessageQueueThreadPerfStats getPerfStats() -> getPerfStats
    93:93:boolean isOnThread() -> isOnThread
    125:131:void quitSynchronous() -> quitSynchronous
    145:146:void resetPerfStats() -> resetPerfStats
    59:66:void runOnQueue(java.lang.Runnable) -> runOnQueue
    210:234:com.facebook.react.bridge.queue.MessageQueueThreadImpl startNewBackgroundThread(java.lang.String,long,com.facebook.react.bridge.queue.QueueThreadExceptionHandler) -> startNewBackgroundThread
com.facebook.react.bridge.queue.MessageQueueThreadImpl$1 -> com.facebook.react.bridge.queue.MessageQueueThreadImpl$1:
    74:74:void <init>(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.common.futures.SimpleSettableFuture,java.util.concurrent.Callable) -> <init>
    78:80:void run() -> run
com.facebook.react.bridge.queue.MessageQueueThreadImpl$2 -> com.facebook.react.bridge.queue.MessageQueueThreadImpl$2:
    147:147:void <init>(com.facebook.react.bridge.queue.MessageQueueThreadImpl) -> <init>
    150:152:void run() -> run
com.facebook.react.bridge.queue.MessageQueueThreadImpl$3 -> com.facebook.react.bridge.queue.MessageQueueThreadImpl$3:
    193:193:void <init>() -> <init>
    196:196:void run() -> run
com.facebook.react.bridge.queue.MessageQueueThreadImpl$4 -> com.facebook.react.bridge.queue.MessageQueueThreadImpl$4:
    216:216:void <init>(com.facebook.react.common.futures.SimpleSettableFuture) -> <init>
    219:226:void run() -> run
com.facebook.react.bridge.queue.MessageQueueThreadImpl$5 -> com.facebook.react.bridge.queue.MessageQueueThreadImpl$5:
    172:172:void <clinit>() -> <clinit>
com.facebook.react.bridge.queue.MessageQueueThreadPerfStats -> com.facebook.react.bridge.queue.MessageQueueThreadPerfStats:
    11:11:void <init>() -> <init>
com.facebook.react.bridge.queue.MessageQueueThreadSpec -> com.facebook.react.bridge.queue.MessageQueueThreadSpec:
    13:13:void <clinit>() -> <clinit>
    45:45:void <init>(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String) -> <init>
    48:51:void <init>(com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType,java.lang.String,long) -> <init>
    59:59:java.lang.String getName() -> getName
    63:63:long getStackSize() -> getStackSize
    55:55:com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType getThreadType() -> getThreadType
    37:37:com.facebook.react.bridge.queue.MessageQueueThreadSpec mainThreadSpec() -> mainThreadSpec
    29:29:com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String) -> newBackgroundThreadSpec
    33:33:com.facebook.react.bridge.queue.MessageQueueThreadSpec newBackgroundThreadSpec(java.lang.String,long) -> newBackgroundThreadSpec
    25:25:com.facebook.react.bridge.queue.MessageQueueThreadSpec newUIBackgroundTreadSpec(java.lang.String) -> newUIBackgroundTreadSpec
com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType -> com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType:
    20:19:void <clinit>() -> <clinit>
    19:19:void <init>(java.lang.String,int) -> <init>
    19:19:com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType valueOf(java.lang.String) -> valueOf
    19:19:com.facebook.react.bridge.queue.MessageQueueThreadSpec$ThreadType[] values() -> values
com.facebook.react.bridge.queue.NativeRunnable -> com.facebook.react.bridge.queue.NativeRunnable:
    20:21:void <init>(com.facebook.jni.HybridData) -> <init>
com.facebook.react.bridge.queue.ReactQueueConfigurationImpl -> com.facebook.react.bridge.queue.ReactQueueConfigurationImpl:
    23:26:void <init>(com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl,com.facebook.react.bridge.queue.MessageQueueThreadImpl) -> <init>
    59:77:com.facebook.react.bridge.queue.ReactQueueConfigurationImpl create(com.facebook.react.bridge.queue.ReactQueueConfigurationSpec,com.facebook.react.bridge.queue.QueueThreadExceptionHandler) -> create
    49:53:void destroy() -> destroy
    41:41:com.facebook.react.bridge.queue.MessageQueueThread getJSQueueThread() -> getJSQueueThread
    36:36:com.facebook.react.bridge.queue.MessageQueueThread getNativeModulesQueueThread() -> getNativeModulesQueueThread
    31:31:com.facebook.react.bridge.queue.MessageQueueThread getUIQueueThread() -> getUIQueueThread
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec -> com.facebook.react.bridge.queue.ReactQueueConfigurationSpec:
    20:20:void <init>(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$1) -> <init>
    29:31:void <init>(com.facebook.react.bridge.queue.MessageQueueThreadSpec,com.facebook.react.bridge.queue.MessageQueueThreadSpec) -> <init>
    43:43:com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder builder() -> builder
    47:55:com.facebook.react.bridge.queue.ReactQueueConfigurationSpec createDefault() -> createDefault
    39:39:com.facebook.react.bridge.queue.MessageQueueThreadSpec getJSQueueThreadSpec() -> getJSQueueThreadSpec
    35:35:com.facebook.react.bridge.queue.MessageQueueThreadSpec getNativeModulesQueueThreadSpec() -> getNativeModulesQueueThreadSpec
com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder -> com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder:
    58:58:void <init>() -> <init>
    77:79:com.facebook.react.bridge.queue.ReactQueueConfigurationSpec build() -> build
    71:72:com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setJSQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec) -> setJSQueueThreadSpec
    64:66:com.facebook.react.bridge.queue.ReactQueueConfigurationSpec$Builder setNativeModulesQueueThreadSpec(com.facebook.react.bridge.queue.MessageQueueThreadSpec) -> setNativeModulesQueueThreadSpec
com.facebook.react.common.ArrayUtils -> com.facebook.react.common.ArrayUtils:
    13:13:void <init>() -> <init>
com.facebook.react.common.ClearableSynchronizedPool -> com.facebook.react.common.ClearableSynchronizedPool:
    21:22:void <init>(int) -> <init>
    27:34:java.lang.Object acquire() -> acquire
    48:52:void clear() -> clear
    39:44:boolean release(java.lang.Object) -> release
com.facebook.react.common.DebugServerException -> com.facebook.react.common.DebugServerException:
    44:44:void <init>(java.lang.String,java.lang.String,int,int) -> <init>
    48:48:void <init>(java.lang.String) -> <init>
    52:52:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    31:31:com.facebook.react.common.DebugServerException makeGeneric(java.lang.String,java.lang.String,java.lang.Throwable) -> makeGeneric
    36:40:com.facebook.react.common.DebugServerException makeGeneric(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable) -> makeGeneric
    63:77:com.facebook.react.common.DebugServerException parse(java.lang.String,java.lang.String) -> parse
    83:84:java.lang.String shortenFileName(java.lang.String) -> shortenFileName
com.facebook.react.common.JavascriptException -> com.facebook.react.common.JavascriptException:
    22:22:void <init>(java.lang.String) -> <init>
com.facebook.react.common.LifecycleState -> com.facebook.react.common.LifecycleState:
    18:17:void <clinit>() -> <clinit>
    17:17:void <init>(java.lang.String,int) -> <init>
    17:17:com.facebook.react.common.LifecycleState valueOf(java.lang.String) -> valueOf
    17:17:com.facebook.react.common.LifecycleState[] values() -> values
com.facebook.react.common.LongArray -> com.facebook.react.common.LongArray:
    22:24:void <init>(int) -> <init>
    28:29:void add(long) -> add
    19:19:com.facebook.react.common.LongArray createWithInitialCapacity(int) -> createWithInitialCapacity
    56:57:void dropTail(int) -> dropTail
    33:34:long get(int) -> get
    64:69:void growArrayIfNeeded() -> growArrayIfNeeded
    40:41:void set(int,long) -> set
    47:47:int size() -> size
com.facebook.react.common.MapBuilder -> com.facebook.react.common.MapBuilder:
    14:14:void <init>() -> <init>
    100:100:com.facebook.react.common.MapBuilder$Builder builder() -> builder
    18:18:java.util.HashMap newHashMap() -> newHashMap
    23:23:java.util.Map of() -> of
    28:29:java.util.Map of(java.lang.Object,java.lang.Object) -> of
    35:37:java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    43:46:java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    52:56:java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    62:67:java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
com.facebook.react.common.MapBuilder$Builder -> com.facebook.react.common.MapBuilder$Builder:
    103:103:void <init>(com.facebook.react.common.MapBuilder$1) -> <init>
    108:110:void <init>() -> <init>
    122:123:java.util.Map build() -> build
    114:115:com.facebook.react.common.MapBuilder$Builder put(java.lang.Object,java.lang.Object) -> put
com.facebook.react.common.ReactConstants -> com.facebook.react.common.ReactConstants:
    10:10:void <init>() -> <init>
com.facebook.react.common.ShakeDetector -> com.facebook.react.common.ShakeDetector:
    21:24:void <clinit>() -> <clinit>
    90:90:boolean atLeastRequiredForce(float) -> atLeastRequiredForce
    133:139:void maybeDispatchShake(long) -> maybeDispatchShake
    105:126:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    99:100:void recordShake(long) -> recordShake
    76:79:void reset() -> reset
    55:62:void start(android.hardware.SensorManager) -> start
    68:70:void stop() -> stop
com.facebook.react.common.SingleThreadAsserter -> com.facebook.react.common.SingleThreadAsserter:
    14:15:void <init>() -> <init>
    18:22:void assertNow() -> assertNow
com.facebook.react.common.StandardCharsets -> com.facebook.react.common.StandardCharsets:
    19:27:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
com.facebook.react.common.SystemClock -> com.facebook.react.common.SystemClock:
    14:14:void <init>() -> <init>
    17:17:long currentTimeMillis() -> currentTimeMillis
    21:21:long nanoTime() -> nanoTime
    25:25:long uptimeMillis() -> uptimeMillis
com.facebook.react.common.build.ReactBuildConfig -> com.facebook.react.common.build.ReactBuildConfig:
    18:18:void <init>() -> <init>
com.facebook.react.common.futures.SimpleSettableFuture -> com.facebook.react.common.futures.SimpleSettableFuture:
    21:22:void <init>() -> <init>
    48:48:boolean cancel(boolean) -> cancel
    115:116:void checkNotSet() -> checkNotSet
    63:65:java.lang.Object get() -> get
    81:82:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    96:98:java.lang.Object getOrThrow() -> getOrThrow
    58:58:boolean isDone() -> isDone
    31:33:void set(java.lang.Object) -> set
    41:43:void setException(java.lang.Exception) -> setException
com.facebook.react.common.network.OkHttpCallUtil -> com.facebook.react.common.network.OkHttpCallUtil:
    18:18:void <init>() -> <init>
    21:29:void cancelTag(okhttp3.OkHttpClient,java.lang.Object) -> cancelTag
com.facebook.react.config.ReactFeatureFlags -> com.facebook.react.config.ReactFeatureFlags:
    17:17:void <init>() -> <init>
com.facebook.react.devsupport.BundleDownloader -> com.facebook.react.devsupport.BundleDownloader:
    35:35:okhttp3.Call access$000(com.facebook.react.devsupport.BundleDownloader) -> access$000
    35:35:okhttp3.Call access$002(com.facebook.react.devsupport.BundleDownloader,okhttp3.Call) -> access$002
    35:35:void access$100(com.facebook.react.devsupport.BundleDownloader,java.lang.String,okhttp3.Response,java.lang.String,java.io.File,com.facebook.react.devsupport.BundleDownloader$BundleInfo,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener) -> access$100
    35:35:void access$200(com.facebook.react.devsupport.BundleDownloader,java.lang.String,int,okhttp3.Headers,okio.BufferedSource,java.io.File,com.facebook.react.devsupport.BundleDownloader$BundleInfo,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener) -> access$200
    100:100:void downloadBundleFromURL(com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,java.io.File,java.lang.String,com.facebook.react.devsupport.BundleDownloader$BundleInfo) -> downloadBundleFromURL
    112:116:void downloadBundleFromURL(com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,java.io.File,java.lang.String,com.facebook.react.devsupport.BundleDownloader$BundleInfo,okhttp3.Request$Builder) -> downloadBundleFromURL
    313:320:void populateBundleInfo(java.lang.String,okhttp3.Headers,com.facebook.react.devsupport.BundleDownloader$BundleInfo) -> populateBundleInfo
    262:294:void processBundleResult(java.lang.String,int,okhttp3.Headers,okio.BufferedSource,java.io.File,com.facebook.react.devsupport.BundleDownloader$BundleInfo,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener) -> processBundleResult
    182:240:void processMultipartResponse(java.lang.String,okhttp3.Response,java.lang.String,java.io.File,com.facebook.react.devsupport.BundleDownloader$BundleInfo,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener) -> processMultipartResponse
    301:307:boolean storePlainJSInFile(okio.BufferedSource,java.io.File) -> storePlainJSInFile
com.facebook.react.devsupport.BundleDownloader$1 -> com.facebook.react.devsupport.BundleDownloader$1:
    117:117:void <init>(com.facebook.react.devsupport.BundleDownloader,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,java.io.File,com.facebook.react.devsupport.BundleDownloader$BundleInfo) -> <init>
    121:122:void onFailure(okhttp3.Call,java.io.IOException) -> onFailure
    137:138:void onResponse(okhttp3.Call,okhttp3.Response) -> onResponse
com.facebook.react.devsupport.BundleDownloader$2 -> com.facebook.react.devsupport.BundleDownloader$2:
    186:186:void <init>(com.facebook.react.devsupport.BundleDownloader,okhttp3.Response,java.lang.String,java.io.File,com.facebook.react.devsupport.BundleDownloader$BundleInfo,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener) -> <init>
    197:225:void onChunkComplete(java.util.Map,okio.Buffer,boolean) -> onChunkComplete
    233:234:void onChunkProgress(java.util.Map,long,long) -> onChunkProgress
com.facebook.react.devsupport.BundleDownloader$BundleInfo -> com.facebook.react.devsupport.BundleDownloader$BundleInfo:
    45:45:void <init>() -> <init>
    45:45:java.lang.String access$302(com.facebook.react.devsupport.BundleDownloader$BundleInfo,java.lang.String) -> access$302
    45:45:int access$402(com.facebook.react.devsupport.BundleDownloader$BundleInfo,int) -> access$402
    69:75:java.lang.String toJSONString() -> toJSONString
com.facebook.react.devsupport.DebugOverlayController -> com.facebook.react.devsupport.DebugOverlayController:
    95:97:void <init>(com.facebook.react.bridge.ReactContext) -> <init>
    31:31:android.widget.FrameLayout access$000(com.facebook.react.devsupport.DebugOverlayController) -> access$000
    31:31:android.widget.FrameLayout access$002(com.facebook.react.devsupport.DebugOverlayController,android.widget.FrameLayout) -> access$002
    31:31:com.facebook.react.bridge.ReactContext access$100(com.facebook.react.devsupport.DebugOverlayController) -> access$100
    31:31:boolean access$200(android.content.Context) -> access$200
    31:31:android.view.WindowManager access$300(com.facebook.react.devsupport.DebugOverlayController) -> access$300
    86:87:boolean canHandleIntent(android.content.Context,android.content.Intent) -> canHandleIntent
    70:80:boolean hasPermission(android.content.Context,java.lang.String) -> hasPermission
    53:63:boolean permissionCheck(android.content.Context) -> permissionCheck
    34:46:void requestPermission(android.content.Context) -> requestPermission
    101:101:void setFpsDebugViewVisible(boolean) -> setFpsDebugViewVisible
com.facebook.react.devsupport.DebugOverlayController$1 -> com.facebook.react.devsupport.DebugOverlayController$1:
    102:102:void <init>(com.facebook.react.devsupport.DebugOverlayController,boolean) -> <init>
    105:123:void run() -> run
com.facebook.react.devsupport.DevInternalSettings -> com.facebook.react.devsupport.DevInternalSettings:
    49:49:com.facebook.react.packagerconnection.PackagerConnectionSettings getPackagerConnectionSettings() -> getPackagerConnectionSettings
    63:63:boolean isAnimationFpsDebugEnabled() -> isAnimationFpsDebugEnabled
    100:100:boolean isElementInspectorEnabled() -> isElementInspectorEnabled
    54:54:boolean isFpsDebugEnabled() -> isFpsDebugEnabled
    92:92:boolean isHotModuleReplacementEnabled() -> isHotModuleReplacementEnabled
    68:68:boolean isJSDevModeEnabled() -> isJSDevModeEnabled
    77:77:boolean isJSMinifyEnabled() -> isJSMinifyEnabled
    114:114:boolean isRemoteJSDebugEnabled() -> isRemoteJSDebugEnabled
    81:86:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    104:104:void setElementInspectorEnabled(boolean) -> setElementInspectorEnabled
    58:58:void setFpsDebugEnabled(boolean) -> setFpsDebugEnabled
    96:96:void setHotModuleReplacementEnabled(boolean) -> setHotModuleReplacementEnabled
    72:72:void setJSDevModeEnabled(boolean) -> setJSDevModeEnabled
    119:119:void setRemoteJSDebugEnabled(boolean) -> setRemoteJSDebugEnabled
com.facebook.react.devsupport.DevLoadingViewController -> com.facebook.react.devsupport.DevLoadingViewController:
    30:30:void access$000(com.facebook.react.devsupport.DevLoadingViewController,java.lang.String) -> access$000
    30:30:android.widget.TextView access$100(com.facebook.react.devsupport.DevLoadingViewController) -> access$100
    30:30:void access$200(com.facebook.react.devsupport.DevLoadingViewController) -> access$200
    173:173:android.content.Context getContext() -> getContext
    117:121:void hide() -> hide
    165:168:void hideInternal() -> hideInternal
    79:84:void showForRemoteJSEnabled() -> showForRemoteJSEnabled
    60:69:void showForUrl(java.lang.String) -> showForUrl
    131:160:void showInternal(java.lang.String) -> showInternal
    46:50:void showMessage(java.lang.String) -> showMessage
    89:93:void updateProgress(java.lang.String,java.lang.Integer,java.lang.Integer) -> updateProgress
com.facebook.react.devsupport.DevLoadingViewController$1 -> com.facebook.react.devsupport.DevLoadingViewController$1:
    51:51:void <init>(com.facebook.react.devsupport.DevLoadingViewController,java.lang.String) -> <init>
    54:54:void run() -> run
com.facebook.react.devsupport.DevLoadingViewController$2 -> com.facebook.react.devsupport.DevLoadingViewController$2:
    94:94:void <init>(com.facebook.react.devsupport.DevLoadingViewController,java.lang.String,java.lang.Integer,java.lang.Integer) -> <init>
    97:110:void run() -> run
com.facebook.react.devsupport.DevLoadingViewController$3 -> com.facebook.react.devsupport.DevLoadingViewController$3:
    122:122:void <init>(com.facebook.react.devsupport.DevLoadingViewController) -> <init>
    125:125:void run() -> run
com.facebook.react.devsupport.DevServerHelper -> com.facebook.react.devsupport.DevServerHelper:
    62:62:com.facebook.react.packagerconnection.JSPackagerClient access$000(com.facebook.react.devsupport.DevServerHelper) -> access$000
    62:62:com.facebook.react.packagerconnection.JSPackagerClient access$002(com.facebook.react.devsupport.DevServerHelper,com.facebook.react.packagerconnection.JSPackagerClient) -> access$002
    62:62:com.facebook.react.devsupport.DevInternalSettings access$100(com.facebook.react.devsupport.DevServerHelper) -> access$100
    62:62:com.facebook.react.devsupport.InspectorPackagerConnection access$200(com.facebook.react.devsupport.DevServerHelper) -> access$200
    62:62:com.facebook.react.devsupport.InspectorPackagerConnection access$202(com.facebook.react.devsupport.DevServerHelper,com.facebook.react.devsupport.InspectorPackagerConnection) -> access$202
    62:62:java.lang.String access$300(com.facebook.react.devsupport.DevServerHelper) -> access$300
    62:62:java.lang.String access$400(com.facebook.react.devsupport.DevServerHelper) -> access$400
    62:62:com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatusProvider access$500(com.facebook.react.devsupport.DevServerHelper) -> access$500
    62:62:java.lang.String access$600(com.facebook.react.devsupport.DevServerHelper,android.content.Context,java.lang.String) -> access$600
    254:280:void attachDebugger(android.content.Context,java.lang.String) -> attachDebugger
    241:250:void closeInspectorConnection() -> closeInspectorConnection
    205:214:void closePackagerConnection() -> closePackagerConnection
    425:425:java.lang.String createBundleURL(java.lang.String,com.facebook.react.devsupport.DevServerHelper$BundleType,java.lang.String) -> createBundleURL
    436:436:java.lang.String createBundleURL(java.lang.String,com.facebook.react.devsupport.DevServerHelper$BundleType) -> createBundleURL
    517:517:java.lang.String createLaunchJSDevtoolsCommandUrl() -> createLaunchJSDevtoolsCommandUrl
    513:513:java.lang.String createPackagerStatusURL(java.lang.String) -> createPackagerStatusURL
    235:236:void disableDebugger() -> disableDebugger
    388:388:void downloadBundleFromURL(com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,java.io.File,java.lang.String,com.facebook.react.devsupport.BundleDownloader$BundleInfo) -> downloadBundleFromURL
    416:416:boolean getDevMode() -> getDevMode
    453:453:java.lang.String getDevServerBundleURL(java.lang.String) -> getDevServerBundleURL
    404:408:java.lang.String getHostForJSProxy() -> getHostForJSProxy
    374:374:java.lang.String getInspectorAttachUrl(android.content.Context,java.lang.String) -> getInspectorAttachUrl
    365:365:java.lang.String getInspectorDeviceUrl() -> getInspectorDeviceUrl
    555:555:java.lang.String getJSBundleURLForRemoteDebugging(java.lang.String) -> getJSBundleURLForRemoteDebugging
    421:421:boolean getJSMinifyMode() -> getJSMinifyMode
    548:548:java.lang.String getSourceUrl(java.lang.String) -> getSourceUrl
    358:358:java.lang.String getWebsocketProxyURL() -> getWebsocketProxyURL
    460:466:void isPackagerRunning(com.facebook.react.devsupport.interfaces.PackagerStatusCallback) -> isPackagerRunning
    524:527:void launchJSDevtools() -> launchJSDevtools
    218:231:void openInspectorConnection() -> openInspectorConnection
    140:201:void openPackagerConnection(java.lang.String,com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener) -> openPackagerConnection
com.facebook.react.devsupport.DevServerHelper$1 -> com.facebook.react.devsupport.DevServerHelper$1:
    144:144:void <init>(com.facebook.react.devsupport.DevServerHelper,com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener,java.lang.String) -> <init>
    144:144:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    147:197:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
com.facebook.react.devsupport.DevServerHelper$1$1 -> com.facebook.react.devsupport.DevServerHelper$1$1:
    150:150:void <init>(com.facebook.react.devsupport.DevServerHelper$1) -> <init>
    153:153:void onNotification(java.lang.Object) -> onNotification
com.facebook.react.devsupport.DevServerHelper$1$2 -> com.facebook.react.devsupport.DevServerHelper$1$2:
    158:158:void <init>(com.facebook.react.devsupport.DevServerHelper$1) -> <init>
    161:161:void onNotification(java.lang.Object) -> onNotification
com.facebook.react.devsupport.DevServerHelper$1$3 -> com.facebook.react.devsupport.DevServerHelper$1$3:
    166:166:void <init>(com.facebook.react.devsupport.DevServerHelper$1) -> <init>
    169:169:void onRequest(java.lang.Object,com.facebook.react.packagerconnection.Responder) -> onRequest
com.facebook.react.devsupport.DevServerHelper$1$4 -> com.facebook.react.devsupport.DevServerHelper$1$4:
    179:179:void <init>(com.facebook.react.devsupport.DevServerHelper$1) -> <init>
    182:182:void onConnected() -> onConnected
    187:187:void onDisconnected() -> onDisconnected
com.facebook.react.devsupport.DevServerHelper$2 -> com.facebook.react.devsupport.DevServerHelper$2:
    205:205:void <init>(com.facebook.react.devsupport.DevServerHelper) -> <init>
    205:205:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    208:210:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
com.facebook.react.devsupport.DevServerHelper$3 -> com.facebook.react.devsupport.DevServerHelper$3:
    222:222:void <init>(com.facebook.react.devsupport.DevServerHelper) -> <init>
    222:222:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    225:228:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
com.facebook.react.devsupport.DevServerHelper$4 -> com.facebook.react.devsupport.DevServerHelper$4:
    241:241:void <init>(com.facebook.react.devsupport.DevServerHelper) -> <init>
    241:241:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    244:246:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
com.facebook.react.devsupport.DevServerHelper$5 -> com.facebook.react.devsupport.DevServerHelper$5:
    254:254:void <init>(com.facebook.react.devsupport.DevServerHelper,android.content.Context,java.lang.String) -> <init>
    254:254:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    257:257:java.lang.Boolean doInBackground(java.lang.Void[]) -> doInBackground
    262:268:boolean doSync() -> doSync
    254:254:void onPostExecute(java.lang.Object) -> onPostExecute
    275:277:void onPostExecute(java.lang.Boolean) -> onPostExecute
com.facebook.react.devsupport.DevServerHelper$6 -> com.facebook.react.devsupport.DevServerHelper$6:
    305:308:void onFailure(okhttp3.Call,java.io.IOException) -> onFailure
    314:319:void onResponse(okhttp3.Call,okhttp3.Response) -> onResponse
com.facebook.react.devsupport.DevServerHelper$7 -> com.facebook.react.devsupport.DevServerHelper$7:
    345:345:void onFailure(okhttp3.Call,java.io.IOException) -> onFailure
com.facebook.react.devsupport.DevServerHelper$8 -> com.facebook.react.devsupport.DevServerHelper$8:
    467:467:void <init>(com.facebook.react.devsupport.DevServerHelper,com.facebook.react.devsupport.interfaces.PackagerStatusCallback) -> <init>
    470:475:void onFailure(okhttp3.Call,java.io.IOException) -> onFailure
    480:507:void onResponse(okhttp3.Call,okhttp3.Response) -> onResponse
com.facebook.react.devsupport.DevServerHelper$9 -> com.facebook.react.devsupport.DevServerHelper$9:
    528:528:void <init>(com.facebook.react.devsupport.DevServerHelper) -> <init>
com.facebook.react.devsupport.DevServerHelper$BundleType -> com.facebook.react.devsupport.DevServerHelper$BundleType:
    98:97:void <clinit>() -> <clinit>
    103:104:void <init>(java.lang.String,int,java.lang.String) -> <init>
    108:108:java.lang.String typeID() -> typeID
    97:97:com.facebook.react.devsupport.DevServerHelper$BundleType valueOf(java.lang.String) -> valueOf
    97:97:com.facebook.react.devsupport.DevServerHelper$BundleType[] values() -> values
com.facebook.react.devsupport.DevSettingsActivity -> com.facebook.react.devsupport.DevSettingsActivity:
    18:18:void <init>() -> <init>
    22:24:void onCreate(android.os.Bundle) -> onCreate
com.facebook.react.devsupport.DevSupportManagerFactory -> com.facebook.react.devsupport.DevSupportManagerFactory:
    24:24:void <init>() -> <init>
    57:90:com.facebook.react.devsupport.interfaces.DevSupportManager create(android.content.Context,com.facebook.react.devsupport.ReactInstanceManagerDevHelper,java.lang.String,boolean,com.facebook.react.devsupport.RedBoxHandler,com.facebook.react.devsupport.interfaces.DevBundleDownloadListener,int,java.util.Map) -> create
com.facebook.react.devsupport.DevSupportManagerImpl -> com.facebook.react.devsupport.DevSupportManagerImpl:
    94:94:com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatus access$000(com.facebook.react.devsupport.DevSupportManagerImpl) -> access$000
    94:94:java.lang.String access$100(android.content.Context) -> access$100
    94:94:com.facebook.react.devsupport.RedBoxHandler access$1000(com.facebook.react.devsupport.DevSupportManagerImpl) -> access$1000
    94:94:com.facebook.react.devsupport.ReactInstanceManagerDevHelper access$1100(com.facebook.react.devsupport.DevSupportManagerImpl) -> access$1100
    94:94:android.content.Context access$1200(com.facebook.react.devsupport.DevSupportManagerImpl) -> access$1200
    94:94:com.facebook.react.bridge.ReactContext access$1300(com.facebook.react.devsupport.DevSupportManagerImpl) -> access$1300
    94:94:void access$1400(com.facebook.react.devsupport.DevSupportManagerImpl) -> access$1400
    94:94:android.app.AlertDialog access$1502(com.facebook.react.devsupport.DevSupportManagerImpl,android.app.AlertDialog) -> access$1502
    94:94:void access$1600(com.facebook.react.devsupport.DevSupportManagerImpl) -> access$1600
    94:94:void access$1700(com.facebook.react.devsupport.DevSupportManagerImpl,com.facebook.react.packagerconnection.Responder) -> access$1700
    94:94:com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback access$1800(com.facebook.react.devsupport.DevSupportManagerImpl,com.facebook.react.common.futures.SimpleSettableFuture) -> access$1800
    94:94:com.facebook.react.devsupport.DevLoadingViewController access$1900(com.facebook.react.devsupport.DevSupportManagerImpl) -> access$1900
    94:94:com.facebook.react.devsupport.DevInternalSettings access$200(com.facebook.react.devsupport.DevSupportManagerImpl) -> access$200
    94:94:boolean access$2002(com.facebook.react.devsupport.DevSupportManagerImpl,boolean) -> access$2002
    94:94:com.facebook.react.devsupport.interfaces.DevBundleDownloadListener access$2100(com.facebook.react.devsupport.DevSupportManagerImpl) -> access$2100
    94:94:com.facebook.react.devsupport.DevServerHelper access$300(com.facebook.react.devsupport.DevSupportManagerImpl) -> access$300
    94:94:void access$500(com.facebook.react.devsupport.DevSupportManagerImpl,java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[],int,com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType) -> access$500
    94:94:com.facebook.react.devsupport.RedBoxDialog access$600(com.facebook.react.devsupport.DevSupportManagerImpl) -> access$600
    94:94:com.facebook.react.devsupport.RedBoxDialog access$602(com.facebook.react.devsupport.DevSupportManagerImpl,com.facebook.react.devsupport.RedBoxDialog) -> access$602
    94:94:int access$700(com.facebook.react.devsupport.DevSupportManagerImpl) -> access$700
    94:94:android.util.Pair access$800(com.facebook.react.devsupport.DevSupportManagerImpl,android.util.Pair) -> access$800
    94:94:void access$900(com.facebook.react.devsupport.DevSupportManagerImpl,java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[],int,com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType) -> access$900
    312:312:void addCustomDevOption(java.lang.String,com.facebook.react.devsupport.interfaces.DevOptionHandler) -> addCustomDevOption
    382:382:android.view.View createRootView(java.lang.String) -> createRootView
    947:947:java.util.Map customCommandHandlers() -> customCommandHandlers
    386:386:void destroyRootView(android.view.View) -> destroyRootView
    703:703:com.facebook.react.modules.debug.interfaces.DeveloperSettings getDevSettings() -> getDevSettings
    698:698:boolean getDevSupportEnabled() -> getDevSupportEnabled
    746:746:java.lang.String getDownloadedJSBundleFile() -> getDownloadedJSBundleFile
    1010:1010:com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback getExecutorConnectCallback(com.facebook.react.common.futures.SimpleSettableFuture) -> getExecutorConnectCallback
    740:740:java.lang.String getJSBundleURLForRemoteDebugging() -> getJSBundleURLForRemoteDebugging
    897:897:com.facebook.react.devsupport.interfaces.StackFrame[] getLastErrorStack() -> getLastErrorStack
    892:892:java.lang.String getLastErrorTitle() -> getLastErrorTitle
    1241:1241:java.lang.String getReloadAppAction(android.content.Context) -> getReloadAppAction
    731:735:java.lang.String getSourceUrl() -> getSourceUrl
    951:955:void handleCaptureHeap(com.facebook.react.packagerconnection.Responder) -> handleCaptureHeap
    256:263:void handleException(java.lang.Exception) -> handleException
    855:875:void handleReloadJS() -> handleReloadJS
    756:774:boolean hasUpToDateJSBundleInCache() -> hasUpToDateJSBundleInCache
    390:392:void hideDevOptionsDialog() -> hideDevOptionsDialog
    375:377:void hideRedboxDialog() -> hideRedboxDialog
    881:881:void isPackagerRunning(com.facebook.react.devsupport.interfaces.PackagerStatusCallback) -> isPackagerRunning
    936:936:void onCaptureHeapCommand(com.facebook.react.packagerconnection.Responder) -> onCaptureHeapCommand
    849:849:void onInternalSettingsChanged() -> onInternalSettingsChanged
    708:708:void onNewReactContextCreated(com.facebook.react.bridge.ReactContext) -> onNewReactContextCreated
    925:925:void onPackagerDevMenuCommand() -> onPackagerDevMenuCommand
    913:914:void onPackagerReloadCommand() -> onPackagerReloadCommand
    713:716:void onReactInstanceDestroyed(com.facebook.react.bridge.ReactContext) -> onReactInstanceDestroyed
    329:333:android.util.Pair processErrorCustomizers(android.util.Pair) -> processErrorCustomizers
    1179:1235:void reload() -> reload
    1030:1037:void reloadJSFromServer(java.lang.String) -> reloadJSFromServer
    984:1005:void reloadJSInProxyMode() -> reloadJSInProxyMode
    835:838:void reloadSettings() -> reloadSettings
    801:830:void resetCurrentContext(com.facebook.react.bridge.ReactContext) -> resetCurrentContext
    692:693:void setDevSupportEnabled(boolean) -> setDevSupportEnabled
    1149:1153:void setFpsDebugEnabled(boolean) -> setFpsDebugEnabled
    1117:1121:void setHotModuleReplacementEnabled(boolean) -> setHotModuleReplacementEnabled
    1133:1137:void setRemoteJSDebugEnabled(boolean) -> setRemoteJSDebugEnabled
    439:609:void showDevOptionsDialog() -> showDevOptionsDialog
    401:401:void showNewError(java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[],int,com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType) -> showNewError
    317:317:void showNewJSError(java.lang.String,com.facebook.react.bridge.ReadableArray,int) -> showNewJSError
    300:301:void showNewJavaError(java.lang.String,java.lang.Throwable) -> showNewJavaError
    1105:1106:void startInspector() -> startInspector
    1112:1112:void stopInspector() -> stopInspector
    1164:1168:void toggleElementInspector() -> toggleElementInspector
    641:681:void toggleJSSamplingProfiler() -> toggleJSSamplingProfiler
    345:345:void updateJSError(java.lang.String,com.facebook.react.bridge.ReadableArray,int) -> updateJSError
    975:977:void updateLastErrorInfo(java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[],int,com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType) -> updateLastErrorInfo
com.facebook.react.devsupport.DevSupportManagerImpl$1 -> com.facebook.react.devsupport.DevSupportManagerImpl$1:
    187:187:com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatus getBundleStatus() -> getBundleStatus
com.facebook.react.devsupport.DevSupportManagerImpl$10 -> com.facebook.react.devsupport.DevSupportManagerImpl$10:
    524:524:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl) -> <init>
    527:528:void onOptionSelected() -> onOptionSelected
com.facebook.react.devsupport.DevSupportManagerImpl$11 -> com.facebook.react.devsupport.DevSupportManagerImpl$11:
    536:536:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl) -> <init>
    539:555:void onOptionSelected() -> onOptionSelected
com.facebook.react.devsupport.DevSupportManagerImpl$12 -> com.facebook.react.devsupport.DevSupportManagerImpl$12:
    564:564:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl) -> <init>
    567:567:void onOptionSelected() -> onOptionSelected
com.facebook.react.devsupport.DevSupportManagerImpl$13 -> com.facebook.react.devsupport.DevSupportManagerImpl$13:
    575:575:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl) -> <init>
    578:587:void onOptionSelected() -> onOptionSelected
com.facebook.react.devsupport.DevSupportManagerImpl$14 -> com.facebook.react.devsupport.DevSupportManagerImpl$14:
    592:592:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl) -> <init>
    595:597:void onOptionSelected() -> onOptionSelected
com.facebook.react.devsupport.DevSupportManagerImpl$15 -> com.facebook.react.devsupport.DevSupportManagerImpl$15:
    626:626:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl) -> <init>
    629:629:void onCancel(android.content.DialogInterface) -> onCancel
com.facebook.react.devsupport.DevSupportManagerImpl$16 -> com.facebook.react.devsupport.DevSupportManagerImpl$16:
    618:618:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl,com.facebook.react.devsupport.interfaces.DevOptionHandler[]) -> <init>
    621:622:void onClick(android.content.DialogInterface,int) -> onClick
com.facebook.react.devsupport.DevSupportManagerImpl$17 -> com.facebook.react.devsupport.DevSupportManagerImpl$17:
    839:839:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl) -> <init>
    842:842:void run() -> run
com.facebook.react.devsupport.DevSupportManagerImpl$18 -> com.facebook.react.devsupport.DevSupportManagerImpl$18:
    915:915:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl) -> <init>
    918:918:void run() -> run
com.facebook.react.devsupport.DevSupportManagerImpl$19 -> com.facebook.react.devsupport.DevSupportManagerImpl$19:
    926:926:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl) -> <init>
    929:929:void run() -> run
com.facebook.react.devsupport.DevSupportManagerImpl$2 -> com.facebook.react.devsupport.DevSupportManagerImpl$2:
    198:198:void onShake() -> onShake
com.facebook.react.devsupport.DevSupportManagerImpl$20 -> com.facebook.react.devsupport.DevSupportManagerImpl$20:
    937:937:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl,com.facebook.react.packagerconnection.Responder) -> <init>
    940:940:void run() -> run
com.facebook.react.devsupport.DevSupportManagerImpl$21 -> com.facebook.react.devsupport.DevSupportManagerImpl$21:
    957:957:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl,com.facebook.react.packagerconnection.Responder) -> <init>
    965:965:void onFailure(com.facebook.react.devsupport.JSCHeapCapture$CaptureException) -> onFailure
    960:960:void onSuccess(java.io.File) -> onSuccess
com.facebook.react.devsupport.DevSupportManagerImpl$22 -> com.facebook.react.devsupport.DevSupportManagerImpl$22:
    987:987:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl) -> <init>
    990:999:com.facebook.react.bridge.JavaJSExecutor create() -> create
com.facebook.react.devsupport.DevSupportManagerImpl$23 -> com.facebook.react.devsupport.DevSupportManagerImpl$23:
    1010:1010:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl,com.facebook.react.common.futures.SimpleSettableFuture) -> <init>
    1020:1023:void onFailure(java.lang.Throwable) -> onFailure
    1013:1015:void onSuccess() -> onSuccess
com.facebook.react.devsupport.DevSupportManagerImpl$24 -> com.facebook.react.devsupport.DevSupportManagerImpl$24:
    1038:1038:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl,com.facebook.react.devsupport.BundleDownloader$BundleInfo) -> <init>
    1074:1078:void onFailure(java.lang.Exception) -> onFailure
    1066:1068:void onProgress(java.lang.String,java.lang.Integer,java.lang.Integer) -> onProgress
    1041:1046:void onSuccess() -> onSuccess
com.facebook.react.devsupport.DevSupportManagerImpl$24$1 -> com.facebook.react.devsupport.DevSupportManagerImpl$24$1:
    1051:1051:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl$24) -> <init>
    1054:1056:void run() -> run
com.facebook.react.devsupport.DevSupportManagerImpl$24$2 -> com.facebook.react.devsupport.DevSupportManagerImpl$24$2:
    1084:1084:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl$24,java.lang.Exception) -> <init>
    1087:1091:void run() -> run
com.facebook.react.devsupport.DevSupportManagerImpl$25 -> com.facebook.react.devsupport.DevSupportManagerImpl$25:
    1122:1122:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl,boolean) -> <init>
    1125:1126:void run() -> run
com.facebook.react.devsupport.DevSupportManagerImpl$26 -> com.facebook.react.devsupport.DevSupportManagerImpl$26:
    1138:1138:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl,boolean) -> <init>
    1141:1142:void run() -> run
com.facebook.react.devsupport.DevSupportManagerImpl$27 -> com.facebook.react.devsupport.DevSupportManagerImpl$27:
    1154:1154:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl,boolean) -> <init>
    1157:1157:void run() -> run
com.facebook.react.devsupport.DevSupportManagerImpl$28 -> com.facebook.react.devsupport.DevSupportManagerImpl$28:
    1169:1169:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl) -> <init>
    1172:1173:void run() -> run
com.facebook.react.devsupport.DevSupportManagerImpl$3 -> com.facebook.react.devsupport.DevSupportManagerImpl$3:
    210:218:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.facebook.react.devsupport.DevSupportManagerImpl$4 -> com.facebook.react.devsupport.DevSupportManagerImpl$4:
    346:346:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl,int,com.facebook.react.bridge.ReadableArray,java.lang.String) -> <init>
    352:367:void run() -> run
com.facebook.react.devsupport.DevSupportManagerImpl$5 -> com.facebook.react.devsupport.DevSupportManagerImpl$5:
    402:402:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl,java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[],int,com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType) -> <init>
    405:432:void run() -> run
com.facebook.react.devsupport.DevSupportManagerImpl$6 -> com.facebook.react.devsupport.DevSupportManagerImpl$6:
    446:446:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl) -> <init>
    449:458:void onOptionSelected() -> onOptionSelected
com.facebook.react.devsupport.DevSupportManagerImpl$7 -> com.facebook.react.devsupport.DevSupportManagerImpl$7:
    469:469:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl) -> <init>
    472:473:void onOptionSelected() -> onOptionSelected
com.facebook.react.devsupport.DevSupportManagerImpl$8 -> com.facebook.react.devsupport.DevSupportManagerImpl$8:
    479:479:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl) -> <init>
    482:482:void onOptionSelected() -> onOptionSelected
com.facebook.react.devsupport.DevSupportManagerImpl$9 -> com.facebook.react.devsupport.DevSupportManagerImpl$9:
    488:488:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl) -> <init>
    491:493:void onOptionSelected() -> onOptionSelected
com.facebook.react.devsupport.DevSupportManagerImpl$9$1 -> com.facebook.react.devsupport.DevSupportManagerImpl$9$1:
    509:509:void <init>(com.facebook.react.devsupport.DevSupportManagerImpl$9,android.widget.EditText) -> <init>
    512:514:void onClick(android.content.DialogInterface,int) -> onClick
com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType -> com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType:
    104:103:void <clinit>() -> <clinit>
    103:103:void <init>(java.lang.String,int) -> <init>
    103:103:com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType valueOf(java.lang.String) -> valueOf
    103:103:com.facebook.react.devsupport.DevSupportManagerImpl$ErrorType[] values() -> values
com.facebook.react.devsupport.DevSupportManagerImpl$JSExceptionLogger -> com.facebook.react.devsupport.DevSupportManagerImpl$JSExceptionLogger:
    275:293:void log(java.lang.Exception) -> log
com.facebook.react.devsupport.DisabledDevSupportManager -> com.facebook.react.devsupport.DisabledDevSupportManager:
    31:32:void <init>() -> <init>
    156:156:void handleException(java.lang.Exception) -> handleException
com.facebook.react.devsupport.DoubleTapReloadRecognizer -> com.facebook.react.devsupport.DoubleTapReloadRecognizer:
    19:20:void <init>() -> <init>
    19:19:boolean access$002(com.facebook.react.devsupport.DoubleTapReloadRecognizer,boolean) -> access$002
    24:31:boolean didDoubleTapR(int,android.view.View) -> didDoubleTapR
com.facebook.react.devsupport.DoubleTapReloadRecognizer$1 -> com.facebook.react.devsupport.DoubleTapReloadRecognizer$1:
    32:32:void <init>(com.facebook.react.devsupport.DoubleTapReloadRecognizer) -> <init>
    35:35:void run() -> run
com.facebook.react.devsupport.FpsView -> com.facebook.react.devsupport.FpsView:
    34:39:void <init>(com.facebook.react.bridge.ReactContext) -> <init>
    25:25:com.facebook.react.modules.debug.FpsDebugFrameCallback access$100(com.facebook.react.devsupport.FpsView) -> access$100
    25:25:void access$200(com.facebook.react.devsupport.FpsView,double,double,int,int) -> access$200
    44:47:void onAttachedToWindow() -> onAttachedToWindow
    52:54:void onDetachedFromWindow() -> onDetachedFromWindow
    59:68:void setCurrentFPS(double,double,int,int) -> setCurrentFPS
com.facebook.react.devsupport.FpsView$FPSMonitorRunnable -> com.facebook.react.devsupport.FpsView$FPSMonitorRunnable:
    72:76:void <init>(com.facebook.react.devsupport.FpsView) -> <init>
    72:72:void <init>(com.facebook.react.devsupport.FpsView,com.facebook.react.devsupport.FpsView$1) -> <init>
    80:92:void run() -> run
    96:97:void start() -> start
    101:101:void stop() -> stop
com.facebook.react.devsupport.InspectorPackagerConnection -> com.facebook.react.devsupport.InspectorPackagerConnection:
    39:43:void <init>(java.lang.String,java.lang.String,com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatusProvider) -> <init>
    30:30:void access$000(com.facebook.react.devsupport.InspectorPackagerConnection,java.lang.String,java.lang.String) -> access$000
    30:30:java.util.Map access$100(com.facebook.react.devsupport.InspectorPackagerConnection) -> access$100
    30:30:org.json.JSONObject access$200(com.facebook.react.devsupport.InspectorPackagerConnection,java.lang.String) -> access$200
    30:30:void access$300(com.facebook.react.devsupport.InspectorPackagerConnection,java.lang.String,java.lang.Object) -> access$300
    83:86:void closeAllConnections() -> closeAllConnections
    51:51:void closeQuietly() -> closeQuietly
    47:47:void connect() -> connect
    151:162:org.json.JSONArray getPages() -> getPages
    90:93:void handleConnect(org.json.JSONObject) -> handleConnect
    129:135:void handleDisconnect(org.json.JSONObject) -> handleDisconnect
    63:66:void handleProxyMessage(org.json.JSONObject) -> handleProxyMessage
    139:147:void handleWrappedEvent(org.json.JSONObject) -> handleWrappedEvent
    182:183:org.json.JSONObject makePageIdPayload(java.lang.String) -> makePageIdPayload
    175:178:void sendEvent(java.lang.String,java.lang.Object) -> sendEvent
    56:58:void sendEventToAllConnections(java.lang.String) -> sendEventToAllConnections
    168:171:void sendWrappedEvent(java.lang.String,java.lang.String) -> sendWrappedEvent
com.facebook.react.devsupport.InspectorPackagerConnection$1 -> com.facebook.react.devsupport.InspectorPackagerConnection$1:
    101:101:void <init>(com.facebook.react.devsupport.InspectorPackagerConnection,java.lang.String) -> <init>
    114:117:void onDisconnect() -> onDisconnect
    105:107:void onMessage(java.lang.String) -> onMessage
com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatus -> com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatus:
    325:327:void <init>(java.lang.Boolean,long) -> <init>
    331:331:void <init>() -> <init>
com.facebook.react.devsupport.InspectorPackagerConnection$Connection -> com.facebook.react.devsupport.InspectorPackagerConnection$Connection:
    198:200:void <init>(com.facebook.react.devsupport.InspectorPackagerConnection,java.lang.String) -> <init>
    304:306:void abort(java.lang.String,java.lang.Throwable) -> abort
    187:187:boolean access$400(com.facebook.react.devsupport.InspectorPackagerConnection$Connection) -> access$400
    275:282:void close() -> close
    310:316:void closeWebSocketQuietly() -> closeWebSocketQuietly
    237:238:void connect() -> connect
    229:232:void onClosed(okhttp3.WebSocket,int,java.lang.String) -> onClosed
    210:214:void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response) -> onFailure
    221:223:void onMessage(okhttp3.WebSocket,java.lang.String) -> onMessage
    205:205:void onOpen(okhttp3.WebSocket,okhttp3.Response) -> onOpen
    254:255:void reconnect() -> reconnect
    287:300:void send(org.json.JSONObject) -> send
com.facebook.react.devsupport.InspectorPackagerConnection$Connection$1 -> com.facebook.react.devsupport.InspectorPackagerConnection$Connection$1:
    262:262:void <init>(com.facebook.react.devsupport.InspectorPackagerConnection$Connection) -> <init>
    266:267:void run() -> run
com.facebook.react.devsupport.InspectorPackagerConnection$Connection$2 -> com.facebook.react.devsupport.InspectorPackagerConnection$Connection$2:
    287:287:void <init>(com.facebook.react.devsupport.InspectorPackagerConnection$Connection,org.json.JSONObject) -> <init>
    287:287:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    290:296:java.lang.Void doInBackground(okhttp3.WebSocket[]) -> doInBackground
com.facebook.react.devsupport.JSCHeapCapture -> com.facebook.react.devsupport.JSCHeapCapture:
    47:48:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    74:82:void captureComplete(java.lang.String,java.lang.String) -> captureComplete
    52:70:void captureHeap(java.lang.String,com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback) -> captureHeap
com.facebook.react.devsupport.JSCHeapCapture$CaptureException -> com.facebook.react.devsupport.JSCHeapCapture$CaptureException:
    30:30:void <init>(java.lang.String) -> <init>
com.facebook.react.devsupport.JSDebuggerWebSocketClient -> com.facebook.react.devsupport.JSDebuggerWebSocketClient:
    31:45:void <init>() -> <init>
    226:237:void abort(java.lang.String,java.lang.Throwable) -> abort
    132:138:void closeQuietly() -> closeQuietly
    49:50:void connect(java.lang.String,com.facebook.react.devsupport.JSDebuggerWebSocketClient$JSDebuggerCallback) -> connect
    113:127:void executeJSCall(java.lang.String,java.lang.String,com.facebook.react.devsupport.JSDebuggerWebSocketClient$JSDebuggerCallback) -> executeJSCall
    86:108:void loadApplicationScript(java.lang.String,java.util.HashMap,com.facebook.react.devsupport.JSDebuggerWebSocketClient$JSDebuggerCallback) -> loadApplicationScript
    222:222:void onClosed(okhttp3.WebSocket,int,java.lang.String) -> onClosed
    210:210:void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response) -> onFailure
    176:203:void onMessage(okhttp3.WebSocket,java.lang.String) -> onMessage
    215:217:void onOpen(okhttp3.WebSocket,okhttp3.Response) -> onOpen
    65:80:void prepareJSRuntime(com.facebook.react.devsupport.JSDebuggerWebSocketClient$JSDebuggerCallback) -> prepareJSRuntime
    143:151:void sendMessage(int,java.lang.String) -> sendMessage
    156:159:void triggerRequestFailure(int,java.lang.Throwable) -> triggerRequestFailure
    164:167:void triggerRequestSuccess(int,java.lang.String) -> triggerRequestSuccess
com.facebook.react.devsupport.JSDevSupport -> com.facebook.react.devsupport.JSDevSupport:
    35:28:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    50:54:void computeDeepestJSHierarchy(android.view.View,com.facebook.react.devsupport.JSDevSupport$DevSupportCallback) -> computeDeepestJSHierarchy
    92:94:java.util.Map getConstants() -> getConstants
    57:72:void getJSHierarchy(int,com.facebook.react.devsupport.JSDevSupport$DevSupportCallback) -> getJSHierarchy
    85:88:void onFailure(int,java.lang.String) -> onFailure
    77:80:void onSuccess(java.lang.String) -> onSuccess
com.facebook.react.devsupport.JSException -> com.facebook.react.devsupport.JSException:
    22:23:void <init>(java.lang.String,java.lang.String,java.lang.Throwable) -> <init>
    32:32:java.lang.String getStack() -> getStack
com.facebook.react.devsupport.LogBoxDialog -> com.facebook.react.devsupport.LogBoxDialog:
    19:22:void <init>(android.app.Activity,android.view.View) -> <init>
com.facebook.react.devsupport.LogBoxModule -> com.facebook.react.devsupport.LogBoxModule:
    33:36:void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager) -> <init>
    24:24:android.view.View access$000(com.facebook.react.devsupport.LogBoxModule) -> access$000
    24:24:android.view.View access$002(com.facebook.react.devsupport.LogBoxModule,android.view.View) -> access$002
    24:24:com.facebook.react.devsupport.interfaces.DevSupportManager access$100(com.facebook.react.devsupport.LogBoxModule) -> access$100
    24:24:com.facebook.react.devsupport.LogBoxDialog access$200(com.facebook.react.devsupport.LogBoxModule) -> access$200
    24:24:com.facebook.react.devsupport.LogBoxDialog access$202(com.facebook.react.devsupport.LogBoxModule,com.facebook.react.devsupport.LogBoxDialog) -> access$202
    24:24:android.app.Activity access$300(com.facebook.react.devsupport.LogBoxModule) -> access$300
    82:82:void hide() -> hide
    99:99:void onCatalystInstanceDestroy() -> onCatalystInstanceDestroy
    59:59:void show() -> show
com.facebook.react.devsupport.LogBoxModule$1 -> com.facebook.react.devsupport.LogBoxModule$1:
    37:37:void <init>(com.facebook.react.devsupport.LogBoxModule) -> <init>
    40:43:void run() -> run
com.facebook.react.devsupport.LogBoxModule$2 -> com.facebook.react.devsupport.LogBoxModule$2:
    60:60:void <init>(com.facebook.react.devsupport.LogBoxModule) -> <init>
    63:66:void run() -> run
com.facebook.react.devsupport.LogBoxModule$3 -> com.facebook.react.devsupport.LogBoxModule$3:
    83:83:void <init>(com.facebook.react.devsupport.LogBoxModule) -> <init>
    86:91:void run() -> run
com.facebook.react.devsupport.LogBoxModule$4 -> com.facebook.react.devsupport.LogBoxModule$4:
    100:100:void <init>(com.facebook.react.devsupport.LogBoxModule) -> <init>
    103:105:void run() -> run
com.facebook.react.devsupport.MultipartStreamReader -> com.facebook.react.devsupport.MultipartStreamReader:
    35:37:void <init>(okio.BufferedSource,java.lang.String) -> <init>
    60:70:void emitChunk(okio.Buffer,boolean,com.facebook.react.devsupport.MultipartStreamReader$ChunkListener) -> emitChunk
    81:86:void emitProgress(java.util.Map,long,boolean,com.facebook.react.devsupport.MultipartStreamReader$ChunkListener) -> emitProgress
    41:53:java.util.Map parseHeaders(okio.Buffer) -> parseHeaders
    97:163:boolean readAllParts(com.facebook.react.devsupport.MultipartStreamReader$ChunkListener) -> readAllParts
com.facebook.react.devsupport.RedBoxDialog -> com.facebook.react.devsupport.RedBoxDialog:
    240:277:void <init>(android.content.Context,com.facebook.react.devsupport.interfaces.DevSupportManager,com.facebook.react.devsupport.RedBoxHandler) -> <init>
    44:44:boolean access$000(com.facebook.react.devsupport.RedBoxDialog) -> access$000
    44:44:boolean access$002(com.facebook.react.devsupport.RedBoxDialog,boolean) -> access$002
    44:44:android.widget.Button access$100(com.facebook.react.devsupport.RedBoxDialog) -> access$100
    44:44:android.widget.ProgressBar access$200(com.facebook.react.devsupport.RedBoxDialog) -> access$200
    44:44:android.widget.TextView access$300(com.facebook.react.devsupport.RedBoxDialog) -> access$300
    44:44:com.facebook.react.devsupport.RedBoxHandler access$400(com.facebook.react.devsupport.RedBoxDialog) -> access$400
    44:44:android.view.View access$500(com.facebook.react.devsupport.RedBoxDialog) -> access$500
    44:44:com.facebook.react.devsupport.interfaces.DevSupportManager access$600(com.facebook.react.devsupport.RedBoxDialog) -> access$600
    44:44:com.facebook.react.devsupport.RedBoxHandler$ReportCompletedListener access$700(com.facebook.react.devsupport.RedBoxDialog) -> access$700
    300:301:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    308:314:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    287:295:void resetReporting() -> resetReporting
    282:282:void setExceptionDetails(java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[]) -> setExceptionDetails
com.facebook.react.devsupport.RedBoxDialog$1 -> com.facebook.react.devsupport.RedBoxDialog$1:
    60:60:void <init>(com.facebook.react.devsupport.RedBoxDialog) -> <init>
com.facebook.react.devsupport.RedBoxDialog$2 -> com.facebook.react.devsupport.RedBoxDialog$2:
    79:79:void <init>(com.facebook.react.devsupport.RedBoxDialog) -> <init>
    82:96:void onClick(android.view.View) -> onClick
com.facebook.react.devsupport.RedBoxDialog$3 -> com.facebook.react.devsupport.RedBoxDialog$3:
    255:255:void <init>(com.facebook.react.devsupport.RedBoxDialog) -> <init>
    258:258:void onClick(android.view.View) -> onClick
com.facebook.react.devsupport.RedBoxDialog$4 -> com.facebook.react.devsupport.RedBoxDialog$4:
    263:263:void <init>(com.facebook.react.devsupport.RedBoxDialog) -> <init>
    266:266:void onClick(android.view.View) -> onClick
com.facebook.react.devsupport.RedBoxDialog$OpenStackFrameTask -> com.facebook.react.devsupport.RedBoxDialog$OpenStackFrameTask:
    197:197:void <clinit>() -> <clinit>
    196:196:void <init>(com.facebook.react.devsupport.interfaces.DevSupportManager,com.facebook.react.devsupport.RedBoxDialog$1) -> <init>
    201:202:void <init>(com.facebook.react.devsupport.interfaces.DevSupportManager) -> <init>
    196:196:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    208:223:java.lang.Void doInBackground(com.facebook.react.devsupport.interfaces.StackFrame[]) -> doInBackground
    229:230:org.json.JSONObject stackFrameToJson(com.facebook.react.devsupport.interfaces.StackFrame) -> stackFrameToJson
com.facebook.react.devsupport.RedBoxDialog$StackAdapter -> com.facebook.react.devsupport.RedBoxDialog$StackAdapter:
    123:127:void <init>(java.lang.String,com.facebook.react.devsupport.interfaces.StackFrame[]) -> <init>
    142:142:int getCount() -> getCount
    147:147:java.lang.Object getItem(int) -> getItem
    168:190:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.facebook.react.devsupport.RedBoxDialog$StackAdapter$FrameViewHolder -> com.facebook.react.devsupport.RedBoxDialog$StackAdapter$FrameViewHolder:
    113:113:void <init>(android.view.View,com.facebook.react.devsupport.RedBoxDialog$1) -> <init>
    117:119:void <init>(android.view.View) -> <init>
    113:113:android.widget.TextView access$1000(com.facebook.react.devsupport.RedBoxDialog$StackAdapter$FrameViewHolder) -> access$1000
    113:113:android.widget.TextView access$900(com.facebook.react.devsupport.RedBoxDialog$StackAdapter$FrameViewHolder) -> access$900
com.facebook.react.devsupport.RedBoxHandler$ErrorType -> com.facebook.react.devsupport.RedBoxHandler$ErrorType:
    22:21:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int,java.lang.String) -> <init>
    21:21:com.facebook.react.devsupport.RedBoxHandler$ErrorType valueOf(java.lang.String) -> valueOf
    21:21:com.facebook.react.devsupport.RedBoxHandler$ErrorType[] values() -> values
com.facebook.react.devsupport.StackTraceHelper -> com.facebook.react.devsupport.StackTraceHelper:
    30:32:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    205:213:com.facebook.react.devsupport.interfaces.StackFrame[] convertJavaStackTrace(java.lang.Throwable) -> convertJavaStackTrace
    121:141:com.facebook.react.devsupport.interfaces.StackFrame[] convertJsStackTrace(com.facebook.react.bridge.ReadableArray) -> convertJsStackTrace
    152:172:com.facebook.react.devsupport.interfaces.StackFrame[] convertJsStackTrace(org.json.JSONArray) -> convertJsStackTrace
    221:231:java.lang.String formatFrameSource(com.facebook.react.devsupport.interfaces.StackFrame) -> formatFrameSource
com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl -> com.facebook.react.devsupport.StackTraceHelper$StackFrameImpl:
    35:35:void <init>(java.lang.String,java.lang.String,int,int,com.facebook.react.devsupport.StackTraceHelper$1) -> <init>
    35:35:void <init>(java.lang.String,java.lang.String,int,int,boolean,com.facebook.react.devsupport.StackTraceHelper$1) -> <init>
    35:35:void <init>(java.lang.String,java.lang.String,java.lang.String,int,int,com.facebook.react.devsupport.StackTraceHelper$1) -> <init>
    43:49:void <init>(java.lang.String,java.lang.String,int,int,boolean) -> <init>
    53:53:void <init>(java.lang.String,java.lang.String,int,int) -> <init>
    56:62:void <init>(java.lang.String,java.lang.String,java.lang.String,int,int) -> <init>
    87:87:int getColumn() -> getColumn
    72:72:java.lang.String getFile() -> getFile
    97:97:java.lang.String getFileName() -> getFileName
    82:82:int getLine() -> getLine
    77:77:java.lang.String getMethod() -> getMethod
    101:101:boolean isCollapsed() -> isCollapsed
com.facebook.react.devsupport.ViewHierarchyUtil -> com.facebook.react.devsupport.ViewHierarchyUtil:
    17:17:void <init>() -> <init>
    21:34:android.util.Pair getDeepestLeaf(android.view.View) -> getDeepestLeaf
com.facebook.react.devsupport.WebsocketJavaScriptExecutor -> com.facebook.react.devsupport.WebsocketJavaScriptExecutor:
    20:66:void <init>() -> <init>
    20:20:void access$000(com.facebook.react.devsupport.WebsocketJavaScriptExecutor,java.lang.String,com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback) -> access$000
    20:20:com.facebook.react.devsupport.JSDebuggerWebSocketClient access$102(com.facebook.react.devsupport.WebsocketJavaScriptExecutor,com.facebook.react.devsupport.JSDebuggerWebSocketClient) -> access$102
    150:151:void close() -> close
    70:87:void connect(java.lang.String,com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback) -> connect
    92:135:void connectInternal(java.lang.String,com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback) -> connectInternal
    170:175:java.lang.String executeJSCall(java.lang.String,java.lang.String) -> executeJSCall
    157:163:void loadApplicationScript(java.lang.String) -> loadApplicationScript
    182:182:void setGlobalVariable(java.lang.String,java.lang.String) -> setGlobalVariable
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$1 -> com.facebook.react.devsupport.WebsocketJavaScriptExecutor$1:
    72:72:void <init>(com.facebook.react.devsupport.WebsocketJavaScriptExecutor,com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback,java.util.concurrent.atomic.AtomicInteger,java.lang.String) -> <init>
    80:83:void onFailure(java.lang.Throwable) -> onFailure
    75:75:void onSuccess() -> onSuccess
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2 -> com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2:
    96:99:void <init>(com.facebook.react.devsupport.WebsocketJavaScriptExecutor,com.facebook.react.devsupport.JSDebuggerWebSocketClient,android.os.Handler,com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback) -> <init>
    96:96:boolean access$200(com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2) -> access$200
    96:96:boolean access$202(com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2,boolean) -> access$202
    128:131:void onFailure(java.lang.Throwable) -> onFailure
    103:103:void onSuccess(java.lang.String) -> onSuccess
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2$1 -> com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2$1:
    104:104:void <init>(com.facebook.react.devsupport.WebsocketJavaScriptExecutor$2) -> <init>
    117:120:void onFailure(java.lang.Throwable) -> onFailure
    107:111:void onSuccess(java.lang.String) -> onSuccess
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$3 -> com.facebook.react.devsupport.WebsocketJavaScriptExecutor$3:
    136:136:void <init>(com.facebook.react.devsupport.WebsocketJavaScriptExecutor,com.facebook.react.devsupport.JSDebuggerWebSocketClient,com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback) -> <init>
    139:140:void run() -> run
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorCallbackFuture -> com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorCallbackFuture:
    37:40:void <init>() -> <init>
    37:37:void <init>(com.facebook.react.devsupport.WebsocketJavaScriptExecutor$1) -> <init>
    58:60:java.lang.String get() -> get
    52:53:void onFailure(java.lang.Throwable) -> onFailure
    46:47:void onSuccess(java.lang.String) -> onSuccess
com.facebook.react.devsupport.WebsocketJavaScriptExecutor$WebsocketExecutorTimeoutException -> com.facebook.react.devsupport.WebsocketJavaScriptExecutor$WebsocketExecutorTimeoutException:
    33:33:void <init>(java.lang.String) -> <init>
com.facebook.react.devsupport.WindowOverlayCompat -> com.facebook.react.devsupport.WindowOverlayCompat:
    22:26:void <clinit>() -> <clinit>
    17:17:void <init>() -> <init>
com.facebook.react.fabric.Binding -> com.facebook.react.fabric.Binding:
    25:25:void <clinit>() -> <clinit>
    32:33:void <init>() -> <init>
    72:80:void register(com.facebook.react.bridge.JavaScriptContextHolder,com.facebook.react.fabric.FabricUIManager,com.facebook.react.fabric.events.EventBeatManager,com.facebook.react.bridge.queue.MessageQueueThread,com.facebook.react.fabric.ComponentFactoryDelegate,com.facebook.react.fabric.ReactNativeConfig) -> register
    86:86:void unregister() -> unregister
com.facebook.react.fabric.ComponentFactoryDelegate -> com.facebook.react.fabric.ComponentFactoryDelegate:
    18:18:void <clinit>() -> <clinit>
    26:27:void <init>() -> <init>
com.facebook.react.fabric.FabricComponents -> com.facebook.react.fabric.FabricComponents:
    22:40:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
    45:45:java.lang.String getFabricComponentName(java.lang.String) -> getFabricComponentName
com.facebook.react.fabric.FabricJSIModuleProvider -> com.facebook.react.fabric.FabricJSIModuleProvider:
    84:95:com.facebook.react.fabric.FabricUIManager createUIManager(com.facebook.react.fabric.events.EventBeatManager) -> createUIManager
    40:40:com.facebook.react.bridge.JSIModule get() -> get
    60:79:com.facebook.react.bridge.UIManager get() -> get
    102:129:void loadClasses() -> loadClasses
com.facebook.react.fabric.FabricSoLoader -> com.facebook.react.fabric.FabricSoLoader:
    17:17:void <init>() -> <init>
    21:30:void staticInit() -> staticInit
com.facebook.react.fabric.FabricUIManager -> com.facebook.react.fabric.FabricUIManager:
    90:99:void <clinit>() -> <clinit>
    159:165:void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.fabric.events.EventBeatManager) -> <init>
    84:84:boolean access$100(com.facebook.react.fabric.FabricUIManager) -> access$100
    84:84:void access$200(com.facebook.react.fabric.FabricUIManager,long) -> access$200
    84:84:void access$300(com.facebook.react.fabric.FabricUIManager) -> access$300
    84:84:com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback access$400(com.facebook.react.fabric.FabricUIManager) -> access$400
    174:189:int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String) -> addRootView
    762:770:void clearJSResponder() -> clearJSResponder
    418:418:com.facebook.react.fabric.mounting.mountitems.MountItem createBatchMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem[],int,int) -> createBatchMountItem
    317:320:com.facebook.react.fabric.mounting.mountitems.MountItem createMountItem(java.lang.String,com.facebook.react.bridge.ReadableMap,java.lang.Object,int,int,boolean) -> createMountItem
    353:353:com.facebook.react.fabric.mounting.mountitems.MountItem deleteMountItem(int) -> deleteMountItem
    711:713:void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray) -> dispatchCommand
    721:723:void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray) -> dispatchCommand
    578:587:void dispatchMountItems() -> dispatchMountItems
    633:647:void dispatchPreMountItems(long) -> dispatchPreMountItems
    780:787:java.util.Map getPerformanceCounters() -> getPerformanceCounters
    236:237:void initialize() -> initialize
    345:345:com.facebook.react.fabric.mounting.mountitems.MountItem insertMountItem(int,int,int) -> insertMountItem
    433:433:long measure(int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float) -> measure
    456:456:long measure(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,float,float,float) -> measure
    245:277:void onCatalystInstanceDestroy() -> onCatalystInstanceDestroy
    698:699:void onHostPause() -> onHostPause
    692:693:void onHostResume() -> onHostResume
    225:225:void onRequestEventBeat() -> onRequestEventBeat
    291:303:void preallocateView(int,int,java.lang.String,com.facebook.react.bridge.ReadableMap,java.lang.Object,boolean) -> preallocateView
    680:687:void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap) -> receiveEvent
    361:361:com.facebook.react.fabric.mounting.mountitems.MountItem removeDeleteMultiMountItem(int[]) -> removeDeleteMultiMountItem
    337:337:com.facebook.react.fabric.mounting.mountitems.MountItem removeMountItem(int,int,int) -> removeMountItem
    525:537:void scheduleMountItem(com.facebook.react.fabric.mounting.mountitems.MountItem,int,long,long,long,long,long,long,long) -> scheduleMountItem
    730:732:void sendAccessibilityEvent(int,int) -> sendAccessibilityEvent
    500:500:void setAllowImmediateUIOperationExecution(boolean) -> setAllowImmediateUIOperationExecution
    655:655:void setBinding(com.facebook.react.fabric.Binding) -> setBinding
    745:753:void setJSResponder(int,int,boolean) -> setJSResponder
    472:487:void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap) -> synchronouslyUpdateViewOnUIThread
    410:410:com.facebook.react.fabric.mounting.mountitems.MountItem updateEventEmitterMountItem(int,java.lang.Object) -> updateEventEmitterMountItem
    370:370:com.facebook.react.fabric.mounting.mountitems.MountItem updateLayoutMountItem(int,int,int,int,int,int) -> updateLayoutMountItem
    394:394:com.facebook.react.fabric.mounting.mountitems.MountItem updateLocalDataMountItem(int,com.facebook.react.bridge.ReadableMap) -> updateLocalDataMountItem
    378:378:com.facebook.react.fabric.mounting.mountitems.MountItem updatePaddingMountItem(int,int,int,int,int) -> updatePaddingMountItem
    386:386:com.facebook.react.fabric.mounting.mountitems.MountItem updatePropsMountItem(int,com.facebook.react.bridge.ReadableMap) -> updatePropsMountItem
    667:671:void updateRootLayoutSpecs(int,int,int) -> updateRootLayoutSpecs
    402:402:com.facebook.react.fabric.mounting.mountitems.MountItem updateStateMountItem(int,java.lang.Object) -> updateStateMountItem
com.facebook.react.fabric.FabricUIManager$1 -> com.facebook.react.fabric.FabricUIManager$1:
    747:747:void <init>(com.facebook.react.fabric.FabricUIManager,int,int,boolean) -> <init>
    750:750:void execute(com.facebook.react.fabric.mounting.MountingManager) -> execute
com.facebook.react.fabric.FabricUIManager$2 -> com.facebook.react.fabric.FabricUIManager$2:
    764:764:void <init>(com.facebook.react.fabric.FabricUIManager) -> <init>
    767:767:void execute(com.facebook.react.fabric.mounting.MountingManager) -> execute
com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback -> com.facebook.react.fabric.FabricUIManager$DispatchUIFrameCallback:
    791:791:void <init>(com.facebook.react.fabric.FabricUIManager,com.facebook.react.bridge.ReactContext,com.facebook.react.fabric.FabricUIManager$1) -> <init>
    795:793:void <init>(com.facebook.react.fabric.FabricUIManager,com.facebook.react.bridge.ReactContext) -> <init>
    808:809:void doFrameGuarded(long) -> doFrameGuarded
    801:801:void stop() -> stop
com.facebook.react.fabric.GuardedFrameCallback -> com.facebook.react.fabric.GuardedFrameCallback:
    21:21:void <init>(com.facebook.react.bridge.ReactContext) -> <init>
    24:25:void <init>(com.facebook.react.bridge.NativeModuleCallExceptionHandler) -> <init>
    31:33:void doFrame(long) -> doFrame
com.facebook.react.fabric.StateWrapperImpl -> com.facebook.react.fabric.StateWrapperImpl:
    26:26:void <clinit>() -> <clinit>
    33:34:void <init>() -> <init>
    44:44:void updateState(com.facebook.react.bridge.WritableMap) -> updateState
com.facebook.react.fabric.events.EventBeatManager -> com.facebook.react.fabric.events.EventBeatManager:
    25:25:void <clinit>() -> <clinit>
    35:36:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    42:42:void onBatchEventDispatched() -> onBatchEventDispatched
com.facebook.react.fabric.events.EventEmitterWrapper -> com.facebook.react.fabric.events.EventEmitterWrapper:
    28:28:void <clinit>() -> <clinit>
    35:36:void <init>() -> <init>
    48:49:void invoke(java.lang.String,com.facebook.react.bridge.WritableMap) -> invoke
com.facebook.react.fabric.events.FabricEventEmitter -> com.facebook.react.fabric.events.FabricEventEmitter:
    37:38:void <init>(com.facebook.react.fabric.FabricUIManager) -> <init>
    86:88:com.facebook.react.bridge.WritableArray copyWritableArray(com.facebook.react.bridge.WritableArray) -> copyWritableArray
    153:154:com.facebook.react.bridge.WritableMap getWritableMap(com.facebook.react.bridge.ReadableMap) -> getWritableMap
    43:47:void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap) -> receiveEvent
    56:80:void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray) -> receiveTouches
    109:125:android.util.Pair removeTouchesAtIndices(com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray) -> removeTouchesAtIndices
    139:143:android.util.Pair touchSubsequence(com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray) -> touchSubsequence
com.facebook.react.fabric.mounting.LayoutMetricsConversions -> com.facebook.react.fabric.mounting.LayoutMetricsConversions:
    16:16:void <init>() -> <init>
    26:27:float getMaxSize(int) -> getMaxSize
    19:20:float getMinSize(int) -> getMinSize
    45:49:com.facebook.yoga.YogaMeasureMode getYogaMeasureMode(float,float) -> getYogaMeasureMode
    35:39:float getYogaSize(float,float) -> getYogaSize
com.facebook.react.fabric.mounting.MountingManager -> com.facebook.react.fabric.mounting.MountingManager:
    58:60:void <init>(com.facebook.react.uimanager.ViewManagerRegistry) -> <init>
    72:73:void addRootView(int,android.view.View) -> addRootView
    114:120:void addViewAt(int,int,int) -> addViewAt
    490:490:void clearJSResponder() -> clearJSResponder
    242:267:void createView(com.facebook.react.uimanager.ThemedReactContext,java.lang.String,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,boolean) -> createView
    343:358:void deleteView(int) -> deleteView
    87:109:void dropView(android.view.View) -> dropView
    513:514:com.facebook.react.fabric.events.EventEmitterWrapper getEventEmitter(int) -> getEventEmitter
    135:135:com.facebook.react.fabric.mounting.MountingManager$ViewState getNullableViewState(int) -> getNullableViewState
    206:207:com.facebook.react.uimanager.ViewGroupManager getViewGroupManager(com.facebook.react.fabric.mounting.MountingManager$ViewState) -> getViewGroupManager
    127:129:com.facebook.react.fabric.mounting.MountingManager$ViewState getViewState(int) -> getViewState
    505:507:long measure(android.content.Context,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode) -> measure
    425:426:void preallocateView(com.facebook.react.uimanager.ThemedReactContext,java.lang.String,int,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,boolean) -> preallocateView
    140:156:void receiveCommand(int,int,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    168:179:void receiveCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    214:228:void removeViewAt(int,int) -> removeViewAt
    190:193:void sendAccessibilityEvent(int,int) -> sendAccessibilityEvent
    461:482:void setJSResponder(int,int,boolean) -> setJSResponder
    435:437:void updateEventEmitter(int,com.facebook.react.fabric.events.EventEmitterWrapper) -> updateEventEmitter
    290:300:void updateLayout(int,int,int,int,int) -> updateLayout
    364:367:void updateLocalData(int,com.facebook.react.bridge.ReadableMap) -> updateLocalData
    319:329:void updatePadding(int,int,int,int,int) -> updatePadding
    275:281:void updateProps(int,com.facebook.react.bridge.ReadableMap) -> updateProps
    395:407:void updateState(int,com.facebook.react.uimanager.StateWrapper) -> updateState
com.facebook.react.fabric.mounting.MountingManager$ViewState -> com.facebook.react.fabric.mounting.MountingManager$ViewState:
    521:521:void <init>(int,android.view.View,com.facebook.react.uimanager.ViewManager,com.facebook.react.fabric.mounting.MountingManager$1) -> <init>
    521:521:void <init>(int,android.view.View,com.facebook.react.uimanager.ViewManager,boolean,com.facebook.react.fabric.mounting.MountingManager$1) -> <init>
    532:532:void <init>(int,android.view.View,com.facebook.react.uimanager.ViewManager) -> <init>
    535:539:void <init>(int,android.view.View,com.facebook.react.uimanager.ViewManager,boolean) -> <init>
    544:545:java.lang.String toString() -> toString
com.facebook.react.fabric.mounting.mountitems.BatchMountItem -> com.facebook.react.fabric.mounting.mountitems.BatchMountItem:
    35:37:void <init>(com.facebook.react.fabric.mounting.mountitems.MountItem[],int,int) -> <init>
    50:68:void execute(com.facebook.react.fabric.mounting.MountingManager) -> execute
    73:85:java.lang.String toString() -> toString
com.facebook.react.fabric.mounting.mountitems.CreateMountItem -> com.facebook.react.fabric.mounting.mountitems.CreateMountItem:
    34:41:void <init>(com.facebook.react.uimanager.ThemedReactContext,int,int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,boolean) -> <init>
    46:46:void execute(com.facebook.react.fabric.mounting.MountingManager) -> execute
    52:52:java.lang.String toString() -> toString
com.facebook.react.fabric.mounting.mountitems.DeleteMountItem -> com.facebook.react.fabric.mounting.mountitems.DeleteMountItem:
    17:18:void <init>(int) -> <init>
    23:23:void execute(com.facebook.react.fabric.mounting.MountingManager) -> execute
    28:28:java.lang.String toString() -> toString
com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem -> com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem:
    22:25:void <init>(int,int,com.facebook.react.bridge.ReadableArray) -> <init>
    30:30:void execute(com.facebook.react.fabric.mounting.MountingManager) -> execute
    35:35:java.lang.String toString() -> toString
com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem -> com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem:
    22:25:void <init>(int,java.lang.String,com.facebook.react.bridge.ReadableArray) -> <init>
    30:30:void execute(com.facebook.react.fabric.mounting.MountingManager) -> execute
    35:35:java.lang.String toString() -> toString
com.facebook.react.fabric.mounting.mountitems.InsertMountItem -> com.facebook.react.fabric.mounting.mountitems.InsertMountItem:
    19:22:void <init>(int,int,int) -> <init>
    27:27:void execute(com.facebook.react.fabric.mounting.MountingManager) -> execute
    40:40:java.lang.String toString() -> toString
com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem -> com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem:
    40:47:void <init>(com.facebook.react.uimanager.ThemedReactContext,int,int,java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.uimanager.StateWrapper,boolean) -> <init>
    52:55:void execute(com.facebook.react.fabric.mounting.MountingManager) -> execute
    61:79:java.lang.String toString() -> toString
com.facebook.react.fabric.mounting.mountitems.RemoveDeleteMultiMountItem -> com.facebook.react.fabric.mounting.mountitems.RemoveDeleteMultiMountItem:
    35:36:void <init>(int[]) -> <init>
    48:62:void execute(com.facebook.react.fabric.mounting.MountingManager) -> execute
    69:87:java.lang.String toString() -> toString
com.facebook.react.fabric.mounting.mountitems.RemoveMountItem -> com.facebook.react.fabric.mounting.mountitems.RemoveMountItem:
    19:22:void <init>(int,int,int) -> <init>
    27:27:void execute(com.facebook.react.fabric.mounting.MountingManager) -> execute
    40:40:java.lang.String toString() -> toString
com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent -> com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent:
    18:20:void <init>(int,int) -> <init>
    25:25:void execute(com.facebook.react.fabric.mounting.MountingManager) -> execute
    30:30:java.lang.String toString() -> toString
com.facebook.react.fabric.mounting.mountitems.UpdateEventEmitterMountItem -> com.facebook.react.fabric.mounting.mountitems.UpdateEventEmitterMountItem:
    19:21:void <init>(int,com.facebook.react.fabric.events.EventEmitterWrapper) -> <init>
    26:26:void execute(com.facebook.react.fabric.mounting.MountingManager) -> execute
    31:31:java.lang.String toString() -> toString
com.facebook.react.fabric.mounting.mountitems.UpdateLayoutMountItem -> com.facebook.react.fabric.mounting.mountitems.UpdateLayoutMountItem:
    26:32:void <init>(int,int,int,int,int,int) -> <init>
    46:46:int convertLayoutDirection(int) -> convertLayoutDirection
    52:52:void execute(com.facebook.react.fabric.mounting.MountingManager) -> execute
    77:77:java.lang.String toString() -> toString
com.facebook.react.fabric.mounting.mountitems.UpdateLocalDataMountItem -> com.facebook.react.fabric.mounting.mountitems.UpdateLocalDataMountItem:
    21:23:void <init>(int,com.facebook.react.bridge.ReadableMap) -> <init>
    28:28:void execute(com.facebook.react.fabric.mounting.MountingManager) -> execute
    37:44:java.lang.String toString() -> toString
com.facebook.react.fabric.mounting.mountitems.UpdatePaddingMountItem -> com.facebook.react.fabric.mounting.mountitems.UpdatePaddingMountItem:
    27:32:void <init>(int,int,int,int,int) -> <init>
    37:37:void execute(com.facebook.react.fabric.mounting.MountingManager) -> execute
    42:42:java.lang.String toString() -> toString
com.facebook.react.fabric.mounting.mountitems.UpdatePropsMountItem -> com.facebook.react.fabric.mounting.mountitems.UpdatePropsMountItem:
    21:23:void <init>(int,com.facebook.react.bridge.ReadableMap) -> <init>
    28:28:void execute(com.facebook.react.fabric.mounting.MountingManager) -> execute
    33:40:java.lang.String toString() -> toString
com.facebook.react.fabric.mounting.mountitems.UpdateStateMountItem -> com.facebook.react.fabric.mounting.mountitems.UpdateStateMountItem:
    22:24:void <init>(int,com.facebook.react.uimanager.StateWrapper) -> <init>
    29:29:void execute(com.facebook.react.fabric.mounting.MountingManager) -> execute
    34:41:java.lang.String toString() -> toString
com.facebook.react.jscexecutor.JSCExecutor -> com.facebook.react.jscexecutor.JSCExecutor:
    19:19:void <clinit>() -> <clinit>
    23:23:void <init>(com.facebook.react.bridge.ReadableNativeMap) -> <init>
com.facebook.react.jscexecutor.JSCExecutorFactory -> com.facebook.react.jscexecutor.JSCExecutorFactory:
    18:20:void <init>(java.lang.String,java.lang.String) -> <init>
    25:29:com.facebook.react.bridge.JavaScriptExecutor create() -> create
    34:35:void startSamplingProfiler() -> startSamplingProfiler
    40:41:void stopSamplingProfiler(java.lang.String) -> stopSamplingProfiler
com.facebook.react.jstasks.HeadlessJsTaskConfig -> com.facebook.react.jstasks.HeadlessJsTaskConfig:
    80:85:void <init>(java.lang.String,com.facebook.react.bridge.WritableMap,long,boolean,com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy) -> <init>
    88:98:void <init>(com.facebook.react.jstasks.HeadlessJsTaskConfig) -> <init>
    107:107:com.facebook.react.bridge.WritableMap getData() -> getData
    119:119:com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy getRetryPolicy() -> getRetryPolicy
    103:103:java.lang.String getTaskKey() -> getTaskKey
    111:111:long getTimeout() -> getTimeout
    115:115:boolean isAllowedInForeground() -> isAllowedInForeground
com.facebook.react.jstasks.HeadlessJsTaskContext -> com.facebook.react.jstasks.HeadlessJsTaskContext:
    32:32:void <clinit>() -> <clinit>
    60:61:void <init>(com.facebook.react.bridge.ReactContext) -> <init>
    30:30:void access$000(com.facebook.react.jstasks.HeadlessJsTaskContext,com.facebook.react.jstasks.HeadlessJsTaskConfig,int) -> access$000
    30:30:java.util.Set access$100(com.facebook.react.jstasks.HeadlessJsTaskContext) -> access$100
    66:66:void addTaskEventListener(com.facebook.react.jstasks.HeadlessJsTaskEventListener) -> addTaskEventListener
    173:188:void finishTask(int) -> finishTask
    43:46:com.facebook.react.jstasks.HeadlessJsTaskContext getInstance(com.facebook.react.bridge.ReactContext) -> getInstance
    76:76:boolean hasActiveTasks() -> hasActiveTasks
    203:203:boolean isTaskRunning(int) -> isTaskRunning
    71:71:void removeTaskEventListener(com.facebook.react.jstasks.HeadlessJsTaskEventListener) -> removeTaskEventListener
    191:194:void removeTimeout(int) -> removeTimeout
    135:163:boolean retryTask(int) -> retryTask
    207:215:void scheduleTaskTimeout(int,long) -> scheduleTaskTimeout
    86:88:int startTask(com.facebook.react.jstasks.HeadlessJsTaskConfig) -> startTask
    96:125:void startTask(com.facebook.react.jstasks.HeadlessJsTaskConfig,int) -> startTask
com.facebook.react.jstasks.HeadlessJsTaskContext$1 -> com.facebook.react.jstasks.HeadlessJsTaskContext$1:
    155:155:void <init>(com.facebook.react.jstasks.HeadlessJsTaskContext,com.facebook.react.jstasks.HeadlessJsTaskConfig,int) -> <init>
    158:158:void run() -> run
com.facebook.react.jstasks.HeadlessJsTaskContext$2 -> com.facebook.react.jstasks.HeadlessJsTaskContext$2:
    180:180:void <init>(com.facebook.react.jstasks.HeadlessJsTaskContext,int) -> <init>
    183:184:void run() -> run
com.facebook.react.jstasks.HeadlessJsTaskContext$3 -> com.facebook.react.jstasks.HeadlessJsTaskContext$3:
    208:208:void <init>(com.facebook.react.jstasks.HeadlessJsTaskContext,int) -> <init>
    211:211:void run() -> run
com.facebook.react.jstasks.LinearCountingRetryPolicy -> com.facebook.react.jstasks.LinearCountingRetryPolicy:
    15:17:void <init>(int,int) -> <init>
    22:22:boolean canRetry() -> canRetry
    43:43:com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy copy() -> copy
    27:27:int getDelay() -> getDelay
    32:37:com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy update() -> update
com.facebook.react.jstasks.NoRetryPolicy -> com.facebook.react.jstasks.NoRetryPolicy:
    12:12:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
    23:23:int getDelay() -> getDelay
    28:28:com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy update() -> update
com.facebook.react.module.model.ReactModuleInfo -> com.facebook.react.module.model.ReactModuleInfo:
    31:38:void <init>(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean) -> <init>
    50:50:boolean canOverrideExistingModule() -> canOverrideExistingModule
    46:46:java.lang.String className() -> className
    58:58:boolean hasConstants() -> hasConstants
    62:62:boolean isCxxModule() -> isCxxModule
    66:66:boolean isTurboModule() -> isTurboModule
    42:42:java.lang.String name() -> name
    54:54:boolean needsEagerInit() -> needsEagerInit
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule -> com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule:
    76:85:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    35:35:void access$000(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,boolean) -> access$000
    35:35:com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule) -> access$100
    35:35:void access$200(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule) -> access$200
    188:197:void announceForAccessibility(java.lang.String) -> announceForAccessibility
    95:101:boolean getIsReduceMotionEnabledValue() -> getIsReduceMotionEnabledValue
    172:174:void initialize() -> initialize
    106:106:void isReduceMotionEnabled(com.facebook.react.bridge.Callback) -> isReduceMotionEnabled
    111:111:void isTouchExplorationEnabled(com.facebook.react.bridge.Callback) -> isTouchExplorationEnabled
    179:180:void onCatalystInstanceDestroy() -> onCatalystInstanceDestroy
    160:166:void onHostPause() -> onHostPause
    144:155:void onHostResume() -> onHostResume
    115:124:void updateAndSendReduceMotionChangeEvent() -> updateAndSendReduceMotionChangeEvent
    130:137:void updateAndSendTouchExplorationChangeEvent(boolean) -> updateAndSendTouchExplorationChangeEvent
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$1 -> com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$1:
    52:52:void <init>(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,android.os.Handler) -> <init>
    55:55:void onChange(boolean) -> onChange
    60:61:void onChange(boolean,android.net.Uri) -> onChange
com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener -> com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$ReactTouchExplorationStateChangeListener:
    41:41:void <init>(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule) -> <init>
    41:41:void <init>(com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule,com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule$1) -> <init>
    46:46:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
com.facebook.react.modules.appearance.AppearanceModule -> com.facebook.react.modules.appearance.AppearanceModule:
    31:33:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    38:38:java.lang.String colorSchemeForCurrentConfiguration(android.content.Context) -> colorSchemeForCurrentConfiguration
    82:90:void emitAppearanceChanged(java.lang.String) -> emitAppearanceChanged
    56:57:java.lang.String getColorScheme() -> getColorScheme
    73:76:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
com.facebook.react.modules.appstate.AppStateModule -> com.facebook.react.modules.appstate.AppStateModule:
    40:44:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    90:91:com.facebook.react.bridge.WritableMap createAppStateEventMap() -> createAppStateEventMap
    56:57:java.util.Map getConstants() -> getConstants
    63:63:void getCurrentAppState(com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback) -> getCurrentAppState
    74:75:void onHostPause() -> onHostPause
    68:69:void onHostResume() -> onHostResume
    86:86:void onWindowFocusChange(boolean) -> onWindowFocusChange
    104:104:void sendAppStateChangeEvent() -> sendAppStateChangeEvent
    96:99:void sendEvent(java.lang.String,java.lang.Object) -> sendEvent
com.facebook.react.modules.blob.BlobCollector -> com.facebook.react.modules.blob.BlobCollector:
    16:16:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
    14:14:void access$000(java.lang.Object,long) -> access$000
    20:20:void install(com.facebook.react.bridge.ReactContext,com.facebook.react.modules.blob.BlobModule) -> install
com.facebook.react.modules.blob.BlobCollector$1 -> com.facebook.react.modules.blob.BlobCollector$1:
    21:21:void <init>(com.facebook.react.bridge.ReactContext,com.facebook.react.modules.blob.BlobModule) -> <init>
    24:27:void run() -> run
com.facebook.react.modules.blob.BlobModule -> com.facebook.react.modules.blob.BlobModule:
    145:126:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    46:46:byte[] access$000(com.facebook.react.modules.blob.BlobModule,android.net.Uri) -> access$000
    46:46:java.lang.String access$100(com.facebook.react.modules.blob.BlobModule,android.net.Uri) -> access$100
    46:46:java.lang.String access$200(com.facebook.react.modules.blob.BlobModule,android.net.Uri) -> access$200
    46:46:long access$300(com.facebook.react.modules.blob.BlobModule,android.net.Uri) -> access$300
    301:308:void addNetworkingHandler() -> addNetworkingHandler
    314:317:void addWebSocketHandler(int) -> addWebSocketHandler
    348:370:void createFromParts(com.facebook.react.bridge.ReadableArray,java.lang.String) -> createFromParts
    228:231:byte[] getBytesFromUri(android.net.Uri) -> getBytesFromUri
    162:169:java.util.Map getConstants() -> getConstants
    266:267:long getLastModifiedFromUri(android.net.Uri) -> getLastModifiedFromUri
    273:278:java.lang.String getMimeTypeFromUri(android.net.Uri) -> getMimeTypeFromUri
    245:262:java.lang.String getNameFromUri(android.net.Uri) -> getNameFromUri
    290:293:com.facebook.react.modules.websocket.WebSocketModule getWebSocketModule(java.lang.String) -> getWebSocketModule
    150:150:void initialize() -> initialize
    375:375:void release(java.lang.String) -> release
    187:189:void remove(java.lang.String) -> remove
    323:326:void removeWebSocketHandler(int) -> removeWebSocketHandler
    193:204:byte[] resolve(android.net.Uri) -> resolve
    208:220:byte[] resolve(java.lang.String,int,int) -> resolve
    224:224:byte[] resolve(com.facebook.react.bridge.ReadableMap) -> resolve
    332:340:void sendOverSocket(com.facebook.react.bridge.ReadableMap,int) -> sendOverSocket
    174:175:java.lang.String store(byte[]) -> store
    180:182:void store(byte[],java.lang.String) -> store
com.facebook.react.modules.blob.BlobModule$1 -> com.facebook.react.modules.blob.BlobModule$1:
    53:53:void <init>(com.facebook.react.modules.blob.BlobModule) -> <init>
    56:56:void onMessage(java.lang.String,com.facebook.react.bridge.WritableMap) -> onMessage
    61:70:void onMessage(okio.ByteString,com.facebook.react.bridge.WritableMap) -> onMessage
com.facebook.react.modules.blob.BlobModule$2 -> com.facebook.react.modules.blob.BlobModule$2:
    75:75:void <init>(com.facebook.react.modules.blob.BlobModule) -> <init>
    86:96:com.facebook.react.bridge.WritableMap fetch(android.net.Uri) -> fetch
    78:81:boolean supports(android.net.Uri,java.lang.String) -> supports
com.facebook.react.modules.blob.BlobModule$3 -> com.facebook.react.modules.blob.BlobModule$3:
    103:103:void <init>(com.facebook.react.modules.blob.BlobModule) -> <init>
    106:106:boolean supports(com.facebook.react.bridge.ReadableMap) -> supports
    112:122:okhttp3.RequestBody toRequestBody(com.facebook.react.bridge.ReadableMap,java.lang.String) -> toRequestBody
com.facebook.react.modules.blob.BlobModule$4 -> com.facebook.react.modules.blob.BlobModule$4:
    127:127:void <init>(com.facebook.react.modules.blob.BlobModule) -> <init>
    130:130:boolean supports(java.lang.String) -> supports
    135:139:com.facebook.react.bridge.WritableMap toResponseData(okhttp3.ResponseBody) -> toResponseData
com.facebook.react.modules.blob.BlobProvider -> com.facebook.react.modules.blob.BlobProvider:
    24:24:void <init>() -> <init>
    59:60:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
com.facebook.react.modules.blob.FileReaderModule -> com.facebook.react.modules.blob.FileReaderModule:
    25:25:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    34:37:com.facebook.react.modules.blob.BlobModule getBlobModule(java.lang.String) -> getBlobModule
    70:101:void readAsDataURL(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise) -> readAsDataURL
    45:64:void readAsText(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise) -> readAsText
com.facebook.react.modules.camera.CameraRollManager -> com.facebook.react.modules.camera.CameraRollManager:
    72:72:void <clinit>() -> <clinit>
    89:89:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    59:59:java.lang.String[] access$200() -> access$200
    59:59:void access$300(android.content.ContentResolver,android.database.Cursor,com.facebook.react.bridge.WritableMap,int) -> access$300
    59:59:void access$400(android.database.Cursor,com.facebook.react.bridge.WritableMap,int) -> access$400
    228:236:void getPhotos(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise) -> getPhotos
    433:435:void putBasicNodeInfo(android.database.Cursor,com.facebook.react.bridge.WritableMap,int,int,int) -> putBasicNodeInfo
    397:428:void putEdges(android.content.ContentResolver,android.database.Cursor,com.facebook.react.bridge.WritableMap,int) -> putEdges
    447:504:boolean putImageInfo(android.content.ContentResolver,android.database.Cursor,com.facebook.react.bridge.WritableMap,int,int,int,int,int) -> putImageInfo
    517:523:void putLocationInfo(android.database.Cursor,com.facebook.react.bridge.WritableMap,int,int) -> putLocationInfo
    385:392:void putPageInfo(android.database.Cursor,com.facebook.react.bridge.WritableMap,int) -> putPageInfo
    107:108:void saveToCameraRoll(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise) -> saveToCameraRoll
com.facebook.react.modules.camera.CameraRollManager$GetMediaTask -> com.facebook.react.modules.camera.CameraRollManager$GetMediaTask:
    251:251:void <init>(com.facebook.react.bridge.ReactContext,int,java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableArray,java.lang.String,java.lang.Integer,com.facebook.react.bridge.Promise,com.facebook.react.modules.camera.CameraRollManager$1) -> <init>
    270:278:void <init>(com.facebook.react.bridge.ReactContext,int,java.lang.String,java.lang.String,com.facebook.react.bridge.ReadableArray,java.lang.String,java.lang.Integer,com.facebook.react.bridge.Promise) -> <init>
    251:251:void doInBackgroundGuarded(java.lang.Object[]) -> doInBackgroundGuarded
    283:376:void doInBackgroundGuarded(java.lang.Void[]) -> doInBackgroundGuarded
com.facebook.react.modules.camera.CameraRollManager$SaveToCameraRoll -> com.facebook.react.modules.camera.CameraRollManager$SaveToCameraRoll:
    119:122:void <init>(com.facebook.react.bridge.ReactContext,android.net.Uri,com.facebook.react.bridge.Promise) -> <init>
    111:111:com.facebook.react.bridge.Promise access$000(com.facebook.react.modules.camera.CameraRollManager$SaveToCameraRoll) -> access$000
    111:111:void doInBackgroundGuarded(java.lang.Object[]) -> doInBackgroundGuarded
    129:204:void doInBackgroundGuarded(java.lang.Void[]) -> doInBackgroundGuarded
com.facebook.react.modules.camera.CameraRollManager$SaveToCameraRoll$1 -> com.facebook.react.modules.camera.CameraRollManager$SaveToCameraRoll$1:
    177:177:void <init>(com.facebook.react.modules.camera.CameraRollManager$SaveToCameraRoll) -> <init>
    181:183:void onScanCompleted(java.lang.String,android.net.Uri) -> onScanCompleted
com.facebook.react.modules.camera.ImageEditingManager -> com.facebook.react.modules.camera.ImageEditingManager:
    55:63:void <clinit>() -> <clinit>
    93:94:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    51:51:boolean access$200(java.lang.String) -> access$200
    51:51:java.io.File access$300(android.content.Context,java.lang.String) -> access$300
    51:51:void access$400(android.graphics.Bitmap,java.lang.String,java.io.File) -> access$400
    51:51:void access$500(android.content.Context,android.net.Uri,java.io.File) -> access$500
    51:51:int access$600(int,int,int,int) -> access$600
    395:409:void copyExif(android.content.Context,android.net.Uri,java.io.File) -> copyExif
    486:502:java.io.File createTempFile(android.content.Context,java.lang.String) -> createTempFile
    167:175:void cropImage(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback) -> cropImage
    457:463:android.graphics.Bitmap$CompressFormat getCompressFormatForType(java.lang.String) -> getCompressFormatForType
    104:104:java.util.Map getConstants() -> getConstants
    514:516:int getDecodeSampleSize(int,int,int,int) -> getDecodeSampleSize
    447:450:java.lang.String getFileExtensionForType(java.lang.String) -> getFileExtensionForType
    413:430:java.io.File getFileFromUri(android.content.Context,android.net.Uri) -> getFileFromUri
    438:439:boolean isLocalUri(java.lang.String) -> isLocalUri
    109:109:void onCatalystInstanceDestroy() -> onCatalystInstanceDestroy
    468:475:void writeCompressedBitmapToFile(android.graphics.Bitmap,java.lang.String,java.io.File) -> writeCompressedBitmapToFile
com.facebook.react.modules.camera.ImageEditingManager$CleanTask -> com.facebook.react.modules.camera.ImageEditingManager$CleanTask:
    117:117:void <init>(com.facebook.react.bridge.ReactContext,com.facebook.react.modules.camera.ImageEditingManager$1) -> <init>
    121:122:void <init>(com.facebook.react.bridge.ReactContext) -> <init>
    135:145:void cleanDirectory(java.io.File) -> cleanDirectory
    117:117:void doInBackgroundGuarded(java.lang.Object[]) -> doInBackgroundGuarded
    127:130:void doInBackgroundGuarded(java.lang.Void[]) -> doInBackgroundGuarded
com.facebook.react.modules.camera.ImageEditingManager$CleanTask$1 -> com.facebook.react.modules.camera.ImageEditingManager$CleanTask$1:
    137:137:void <init>(com.facebook.react.modules.camera.ImageEditingManager$CleanTask) -> <init>
    140:140:boolean accept(java.io.File,java.lang.String) -> accept
com.facebook.react.modules.camera.ImageEditingManager$CropTask -> com.facebook.react.modules.camera.ImageEditingManager$CropTask:
    199:199:void <init>(com.facebook.react.bridge.ReactContext,java.lang.String,int,int,int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback,com.facebook.react.modules.camera.ImageEditingManager$1) -> <init>
    220:223:void <init>(com.facebook.react.bridge.ReactContext,java.lang.String,int,int,int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback) -> <init>
    297:309:android.graphics.Bitmap crop(android.graphics.BitmapFactory$Options) -> crop
    320:335:android.graphics.Bitmap cropAndResize(int,int,android.graphics.BitmapFactory$Options) -> cropAndResize
    199:199:void doInBackgroundGuarded(java.lang.Object[]) -> doInBackgroundGuarded
    261:287:void doInBackgroundGuarded(java.lang.Void[]) -> doInBackgroundGuarded
    246:253:java.io.InputStream openBitmapInputStream() -> openBitmapInputStream
    240:238:void setTargetSize(int,int) -> setTargetSize
com.facebook.react.modules.camera.ImageStoreManager -> com.facebook.react.modules.camera.ImageStoreManager:
    35:35:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    29:29:com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.camera.ImageStoreManager) -> access$100
    29:29:void access$200(java.io.Closeable) -> access$200
    104:104:void closeQuietly(java.io.Closeable) -> closeQuietly
    88:98:java.lang.String convertInputStreamToBase64OutputStream(java.io.InputStream) -> convertInputStreamToBase64OutputStream
    52:53:void getBase64ForTag(java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback) -> getBase64ForTag
com.facebook.react.modules.camera.ImageStoreManager$GetBase64Task -> com.facebook.react.modules.camera.ImageStoreManager$GetBase64Task:
    56:56:void <init>(com.facebook.react.modules.camera.ImageStoreManager,com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback,com.facebook.react.modules.camera.ImageStoreManager$1) -> <init>
    61:65:void <init>(com.facebook.react.modules.camera.ImageStoreManager,com.facebook.react.bridge.ReactContext,java.lang.String,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback) -> <init>
    56:56:void doInBackgroundGuarded(java.lang.Object[]) -> doInBackgroundGuarded
    71:82:void doInBackgroundGuarded(java.lang.Void[]) -> doInBackgroundGuarded
com.facebook.react.modules.clipboard.ClipboardModule -> com.facebook.react.modules.clipboard.ClipboardModule:
    23:23:void <init>(android.content.Context) -> <init>
    34:34:android.content.ClipboardManager getClipboardService() -> getClipboardService
    40:49:void getString(com.facebook.react.bridge.Promise) -> getString
    55:57:void setString(java.lang.String) -> setString
com.facebook.react.modules.common.ModuleDataCleaner -> com.facebook.react.modules.common.ModuleDataCleaner:
    19:19:void <init>() -> <init>
com.facebook.react.modules.core.ChoreographerCompat -> com.facebook.react.modules.core.ChoreographerCompat:
    36:37:void <init>() -> <init>
    57:57:void choreographerPostFrameCallback(android.view.Choreographer$FrameCallback) -> choreographerPostFrameCallback
    66:66:void choreographerRemoveFrameCallback(android.view.Choreographer$FrameCallback) -> choreographerRemoveFrameCallback
    53:53:android.view.Choreographer getChoreographer() -> getChoreographer
    29:33:com.facebook.react.modules.core.ChoreographerCompat getInstance() -> getInstance
    41:41:void postFrameCallback(com.facebook.react.modules.core.ChoreographerCompat$FrameCallback) -> postFrameCallback
    49:49:void removeFrameCallback(com.facebook.react.modules.core.ChoreographerCompat$FrameCallback) -> removeFrameCallback
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback -> com.facebook.react.modules.core.ChoreographerCompat$FrameCallback:
    74:74:void <init>() -> <init>
    80:89:android.view.Choreographer$FrameCallback getFrameCallback() -> getFrameCallback
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback$1 -> com.facebook.react.modules.core.ChoreographerCompat$FrameCallback$1:
    82:82:void <init>(com.facebook.react.modules.core.ChoreographerCompat$FrameCallback) -> <init>
    85:85:void doFrame(long) -> doFrame
com.facebook.react.modules.core.ChoreographerCompat$FrameCallback$2 -> com.facebook.react.modules.core.ChoreographerCompat$FrameCallback$2:
    98:98:void run() -> run
com.facebook.react.modules.core.DeviceEventManagerModule -> com.facebook.react.modules.core.DeviceEventManagerModule:
    37:38:void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler) -> <init>
    50:55:void emitHardwareBackPressed() -> emitHardwareBackPressed
    61:66:void emitNewIntentReceived(android.net.Uri) -> emitNewIntentReceived
    79:79:void invokeDefaultBackPressHandler() -> invokeDefaultBackPressHandler
com.facebook.react.modules.core.DeviceEventManagerModule$1 -> com.facebook.react.modules.core.DeviceEventManagerModule$1:
    39:39:void <init>(com.facebook.react.modules.core.DeviceEventManagerModule,com.facebook.react.modules.core.DefaultHardwareBackBtnHandler) -> <init>
    42:43:void run() -> run
com.facebook.react.modules.core.ExceptionsManagerModule -> com.facebook.react.modules.core.ExceptionsManagerModule:
    31:32:void <init>(com.facebook.react.devsupport.interfaces.DevSupportManager) -> <init>
    99:100:void dismissRedbox() -> dismissRedbox
    62:80:void reportException(com.facebook.react.bridge.ReadableMap) -> reportException
    42:47:void reportFatalException(java.lang.String,com.facebook.react.bridge.ReadableArray,int) -> reportFatalException
    52:57:void reportSoftException(java.lang.String,com.facebook.react.bridge.ReadableArray,int) -> reportSoftException
    92:93:void updateExceptionMessage(java.lang.String,com.facebook.react.bridge.ReadableArray,int) -> updateExceptionMessage
com.facebook.react.modules.core.HeadlessJsTaskSupportModule -> com.facebook.react.modules.core.HeadlessJsTaskSupportModule:
    28:28:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    55:59:void notifyTaskFinished(int) -> notifyTaskFinished
    39:48:void notifyTaskRetry(int,com.facebook.react.bridge.Promise) -> notifyTaskRetry
com.facebook.react.modules.core.JavaTimerManager -> com.facebook.react.modules.core.JavaTimerManager:
    173:196:void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.core.JavaScriptTimerManager,com.facebook.react.modules.core.ReactChoreographer,com.facebook.react.devsupport.interfaces.DevSupportManager) -> <init>
    29:29:java.util.concurrent.atomic.AtomicBoolean access$000(com.facebook.react.modules.core.JavaTimerManager) -> access$000
    29:29:java.util.concurrent.atomic.AtomicBoolean access$100(com.facebook.react.modules.core.JavaTimerManager) -> access$100
    29:29:com.facebook.react.modules.core.ReactChoreographer access$1000(com.facebook.react.modules.core.JavaTimerManager) -> access$1000
    29:29:com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable access$1100(com.facebook.react.modules.core.JavaTimerManager) -> access$1100
    29:29:com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable access$1102(com.facebook.react.modules.core.JavaTimerManager,com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable) -> access$1102
    29:29:com.facebook.react.bridge.ReactApplicationContext access$1200(com.facebook.react.modules.core.JavaTimerManager) -> access$1200
    29:29:java.lang.Object access$1300(com.facebook.react.modules.core.JavaTimerManager) -> access$1300
    29:29:boolean access$1400(com.facebook.react.modules.core.JavaTimerManager) -> access$1400
    29:29:void access$1800(com.facebook.react.modules.core.JavaTimerManager) -> access$1800
    29:29:void access$1900(com.facebook.react.modules.core.JavaTimerManager) -> access$1900
    29:29:java.lang.Object access$200(com.facebook.react.modules.core.JavaTimerManager) -> access$200
    29:29:java.util.PriorityQueue access$300(com.facebook.react.modules.core.JavaTimerManager) -> access$300
    29:29:android.util.SparseArray access$800(com.facebook.react.modules.core.JavaTimerManager) -> access$800
    29:29:com.facebook.react.modules.core.JavaScriptTimerManager access$900(com.facebook.react.modules.core.JavaTimerManager) -> access$900
    281:284:void clearChoreographerIdleCallback() -> clearChoreographerIdleCallback
    263:268:void clearFrameCallback() -> clearFrameCallback
    319:343:void createAndMaybeCallTimer(int,int,double,boolean) -> createAndMaybeCallTimer
    297:302:void createTimer(int,long,boolean) -> createTimer
    347:354:void deleteTimer(int) -> deleteTimer
    249:250:void maybeIdleCallback() -> maybeIdleCallback
    241:245:void maybeSetChoreographerIdleCallback() -> maybeSetChoreographerIdleCallback
    226:231:void onHeadlessJsTaskFinish(int) -> onHeadlessJsTaskFinish
    219:221:void onHeadlessJsTaskStart(int) -> onHeadlessJsTaskStart
    206:207:void onHostDestroy() -> onHostDestroy
    200:202:void onHostPause() -> onHostPause
    211:215:void onHostResume() -> onHostResume
    236:237:void onInstanceDestroy() -> onInstanceDestroy
    255:258:void setChoreographerCallback() -> setChoreographerCallback
    273:276:void setChoreographerIdleCallback() -> setChoreographerIdleCallback
    358:360:void setSendIdleEvents(boolean) -> setSendIdleEvents
com.facebook.react.modules.core.JavaTimerManager$1 -> com.facebook.react.modules.core.JavaTimerManager$1:
    183:183:void <init>(com.facebook.react.modules.core.JavaTimerManager) -> <init>
    183:183:int compare(java.lang.Object,java.lang.Object) -> compare
    186:186:int compare(com.facebook.react.modules.core.JavaTimerManager$Timer,com.facebook.react.modules.core.JavaTimerManager$Timer) -> compare
com.facebook.react.modules.core.JavaTimerManager$2 -> com.facebook.react.modules.core.JavaTimerManager$2:
    363:363:void <init>(com.facebook.react.modules.core.JavaTimerManager,boolean) -> <init>
    366:372:void run() -> run
com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable -> com.facebook.react.modules.core.JavaTimerManager$IdleCallbackRunnable:
    115:116:void <init>(com.facebook.react.modules.core.JavaTimerManager,long) -> <init>
    148:148:void cancel() -> cancel
    121:138:void run() -> run
com.facebook.react.modules.core.JavaTimerManager$IdleFrameCallback -> com.facebook.react.modules.core.JavaTimerManager$IdleFrameCallback:
    91:91:void <init>(com.facebook.react.modules.core.JavaTimerManager) -> <init>
    91:91:void <init>(com.facebook.react.modules.core.JavaTimerManager,com.facebook.react.modules.core.JavaTimerManager$1) -> <init>
    95:107:void doFrame(long) -> doFrame
com.facebook.react.modules.core.JavaTimerManager$Timer -> com.facebook.react.modules.core.JavaTimerManager$Timer:
    39:39:void <init>(int,long,int,boolean,com.facebook.react.modules.core.JavaTimerManager$1) -> <init>
    45:49:void <init>(int,long,int,boolean) -> <init>
    39:39:long access$400(com.facebook.react.modules.core.JavaTimerManager$Timer) -> access$400
    39:39:long access$402(com.facebook.react.modules.core.JavaTimerManager$Timer,long) -> access$402
    39:39:int access$500(com.facebook.react.modules.core.JavaTimerManager$Timer) -> access$500
    39:39:boolean access$600(com.facebook.react.modules.core.JavaTimerManager$Timer) -> access$600
    39:39:int access$700(com.facebook.react.modules.core.JavaTimerManager$Timer) -> access$700
com.facebook.react.modules.core.JavaTimerManager$TimerFrameCallback -> com.facebook.react.modules.core.JavaTimerManager$TimerFrameCallback:
    53:56:void <init>(com.facebook.react.modules.core.JavaTimerManager) -> <init>
    53:53:void <init>(com.facebook.react.modules.core.JavaTimerManager,com.facebook.react.modules.core.JavaTimerManager$1) -> <init>
    61:80:void doFrame(long) -> doFrame
com.facebook.react.modules.core.ReactChoreographer -> com.facebook.react.modules.core.ReactChoreographer:
    80:86:void <init>() -> <init>
    23:23:void access$100(com.facebook.react.modules.core.ReactChoreographer) -> access$100
    23:23:com.facebook.react.modules.core.ChoreographerCompat access$200(com.facebook.react.modules.core.ReactChoreographer) -> access$200
    23:23:com.facebook.react.modules.core.ChoreographerCompat access$202(com.facebook.react.modules.core.ReactChoreographer,com.facebook.react.modules.core.ChoreographerCompat) -> access$202
    23:23:java.lang.Object access$300(com.facebook.react.modules.core.ReactChoreographer) -> access$300
    23:23:boolean access$402(com.facebook.react.modules.core.ReactChoreographer,boolean) -> access$402
    23:23:java.util.ArrayDeque[] access$500(com.facebook.react.modules.core.ReactChoreographer) -> access$500
    23:23:int access$610(com.facebook.react.modules.core.ReactChoreographer) -> access$610
    23:23:void access$700(com.facebook.react.modules.core.ReactChoreographer) -> access$700
    65:66:com.facebook.react.modules.core.ReactChoreographer getInstance() -> getInstance
    59:60:void initialize() -> initialize
    121:121:void initializeChoreographer(java.lang.Runnable) -> initializeChoreographer
    154:159:void maybeRemoveFrameCallback() -> maybeRemoveFrameCallback
    91:108:void postFrameCallback(com.facebook.react.modules.core.ReactChoreographer$CallbackType,com.facebook.react.modules.core.ChoreographerCompat$FrameCallback) -> postFrameCallback
    116:117:void postFrameCallbackOnChoreographer() -> postFrameCallbackOnChoreographer
    139:146:void removeFrameCallback(com.facebook.react.modules.core.ReactChoreographer$CallbackType,com.facebook.react.modules.core.ChoreographerCompat$FrameCallback) -> removeFrameCallback
com.facebook.react.modules.core.ReactChoreographer$1 -> com.facebook.react.modules.core.ReactChoreographer$1:
    98:98:void <init>(com.facebook.react.modules.core.ReactChoreographer) -> <init>
    101:101:void run() -> run
com.facebook.react.modules.core.ReactChoreographer$2 -> com.facebook.react.modules.core.ReactChoreographer$2:
    122:122:void <init>(com.facebook.react.modules.core.ReactChoreographer,java.lang.Runnable) -> <init>
    125:129:void run() -> run
com.facebook.react.modules.core.ReactChoreographer$CallbackType -> com.facebook.react.modules.core.ReactChoreographer$CallbackType:
    28:25:void <clinit>() -> <clinit>
    47:48:void <init>(java.lang.String,int,int) -> <init>
    52:52:int getOrder() -> getOrder
    25:25:com.facebook.react.modules.core.ReactChoreographer$CallbackType valueOf(java.lang.String) -> valueOf
    25:25:com.facebook.react.modules.core.ReactChoreographer$CallbackType[] values() -> values
com.facebook.react.modules.core.ReactChoreographer$ReactChoreographerDispatcher -> com.facebook.react.modules.core.ReactChoreographer$ReactChoreographerDispatcher:
    163:163:void <init>(com.facebook.react.modules.core.ReactChoreographer) -> <init>
    163:163:void <init>(com.facebook.react.modules.core.ReactChoreographer,com.facebook.react.modules.core.ReactChoreographer$1) -> <init>
    167:183:void doFrame(long) -> doFrame
com.facebook.react.modules.core.TimingModule -> com.facebook.react.modules.core.TimingModule:
    59:65:void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager) -> <init>
    22:22:com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.core.TimingModule) -> access$000
    22:22:com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.core.TimingModule) -> access$100
    22:22:com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.core.TimingModule) -> access$200
    88:88:void createTimer(int,int,double,boolean) -> createTimer
    93:93:void deleteTimer(int) -> deleteTimer
    71:74:void initialize() -> initialize
    129:131:void onCatalystInstanceDestroy() -> onCatalystInstanceDestroy
    123:123:void onHeadlessJsTaskFinish(int) -> onHeadlessJsTaskFinish
    118:118:void onHeadlessJsTaskStart(int) -> onHeadlessJsTaskStart
    113:113:void onHostDestroy() -> onHostDestroy
    108:108:void onHostPause() -> onHostPause
    103:103:void onHostResume() -> onHostResume
    98:98:void setSendIdleEvents(boolean) -> setSendIdleEvents
com.facebook.react.modules.core.TimingModule$BridgeTimerManager -> com.facebook.react.modules.core.TimingModule$BridgeTimerManager:
    25:25:void <init>(com.facebook.react.modules.core.TimingModule) -> <init>
    37:40:void callIdleCallbacks(double) -> callIdleCallbacks
    28:31:void callTimers(com.facebook.react.bridge.WritableArray) -> callTimers
    46:49:void emitTimeDriftWarning(java.lang.String) -> emitTimeDriftWarning
com.facebook.react.modules.datepicker.DatePickerDialogFragment -> com.facebook.react.modules.datepicker.DatePickerDialogFragment:
    27:27:void <init>() -> <init>
    43:132:android.app.Dialog createDialog(android.os.Bundle,android.content.Context,android.app.DatePickerDialog$OnDateSetListener) -> createDialog
    37:38:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    140:142:void onDismiss(android.content.DialogInterface) -> onDismiss
    147:147:void setOnDateSetListener(android.app.DatePickerDialog$OnDateSetListener) -> setOnDateSetListener
    151:151:void setOnDismissListener(android.content.DialogInterface$OnDismissListener) -> setOnDismissListener
com.facebook.react.modules.datepicker.DatePickerDialogFragment$1 -> com.facebook.react.modules.datepicker.DatePickerDialogFragment$1:
    61:61:void <clinit>() -> <clinit>
com.facebook.react.modules.datepicker.DatePickerDialogModule -> com.facebook.react.modules.datepicker.DatePickerDialogModule:
    45:45:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    30:30:com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.datepicker.DatePickerDialogModule) -> access$000
    30:30:com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.datepicker.DatePickerDialogModule) -> access$100
    132:143:android.os.Bundle createFragmentArguments(com.facebook.react.bridge.ReadableMap) -> createFragmentArguments
    105:107:void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise) -> open
com.facebook.react.modules.datepicker.DatePickerDialogModule$DatePickerDialogListener -> com.facebook.react.modules.datepicker.DatePickerDialogModule$DatePickerDialogListener:
    58:59:void <init>(com.facebook.react.modules.datepicker.DatePickerDialogModule,com.facebook.react.bridge.Promise) -> <init>
    64:71:void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
    77:81:void onDismiss(android.content.DialogInterface) -> onDismiss
com.facebook.react.modules.datepicker.DatePickerMode -> com.facebook.react.modules.datepicker.DatePickerMode:
    12:11:void <clinit>() -> <clinit>
    11:11:void <init>(java.lang.String,int) -> <init>
    11:11:com.facebook.react.modules.datepicker.DatePickerMode valueOf(java.lang.String) -> valueOf
    11:11:com.facebook.react.modules.datepicker.DatePickerMode[] values() -> values
com.facebook.react.modules.datepicker.DismissableDatePickerDialog -> com.facebook.react.modules.datepicker.DismissableDatePickerDialog:
    34:35:void <init>(android.content.Context,android.app.DatePickerDialog$OnDateSetListener,int,int,int) -> <init>
    45:46:void <init>(android.content.Context,int,android.app.DatePickerDialog$OnDateSetListener,int,int,int) -> <init>
    118:126:java.lang.reflect.Field findField(java.lang.Class,java.lang.Class,java.lang.String) -> findField
    59:111:void fixSpinner(android.content.Context,int,int,int) -> fixSpinner
    53:54:void onStop() -> onStop
com.facebook.react.modules.debug.AnimationsDebugModule -> com.facebook.react.modules.debug.AnimationsDebugModule:
    36:37:void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.modules.debug.interfaces.DeveloperSettings) -> <init>
    108:110:void onCatalystInstanceDestroy() -> onCatalystInstanceDestroy
    47:52:void startRecordingFps() -> startRecordingFps
    66:103:void stopRecordingFps(double) -> stopRecordingFps
com.facebook.react.modules.debug.DevSettingsModule -> com.facebook.react.modules.debug.DevSettingsModule:
    33:35:void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.devsupport.interfaces.DevSupportManager) -> <init>
    25:25:com.facebook.react.devsupport.interfaces.DevSupportManager access$000(com.facebook.react.modules.debug.DevSettingsModule) -> access$000
    25:25:com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.debug.DevSettingsModule) -> access$100
    88:88:void addMenuItem(java.lang.String) -> addMenuItem
    45:46:void reload() -> reload
    58:58:void reloadWithReason(java.lang.String) -> reloadWithReason
    68:68:void setHotLoadingEnabled(boolean) -> setHotLoadingEnabled
    73:73:void setIsDebuggingRemotely(boolean) -> setIsDebuggingRemotely
    78:78:void setProfilingEnabled(boolean) -> setProfilingEnabled
    83:83:void toggleElementInspector() -> toggleElementInspector
com.facebook.react.modules.debug.DevSettingsModule$1 -> com.facebook.react.modules.debug.DevSettingsModule$1:
    47:47:void <init>(com.facebook.react.modules.debug.DevSettingsModule) -> <init>
    50:50:void run() -> run
com.facebook.react.modules.debug.DevSettingsModule$2 -> com.facebook.react.modules.debug.DevSettingsModule$2:
    90:90:void <init>(com.facebook.react.modules.debug.DevSettingsModule,java.lang.String) -> <init>
    93:102:void onOptionSelected() -> onOptionSelected
com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector -> com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector:
    23:32:void <init>() -> <init>
    154:166:void cleanUp(com.facebook.react.common.LongArray,long) -> cleanUp
    141:147:boolean didEndFrameIdle(long,long) -> didEndFrameIdle
    89:112:boolean getDidJSHitFrameAndCleanup(long,long) -> getDidJSHitFrameAndCleanup
    129:130:long getLastEventBetweenTimestamps(com.facebook.react.common.LongArray,long,long) -> getLastEventBetweenTimestamps
    117:118:boolean hasEventBetweenTimestamps(com.facebook.react.common.LongArray,long,long) -> hasEventBetweenTimestamps
    47:47:void onBridgeDestroyed() -> onBridgeDestroyed
    41:42:void onTransitionToBridgeBusy() -> onTransitionToBridgeBusy
    36:37:void onTransitionToBridgeIdle() -> onTransitionToBridgeIdle
    51:52:void onViewHierarchyUpdateEnqueued() -> onViewHierarchyUpdateEnqueued
    56:57:void onViewHierarchyUpdateFinished() -> onViewHierarchyUpdateFinished
com.facebook.react.modules.debug.FpsDebugFrameCallback -> com.facebook.react.modules.debug.FpsDebugFrameCallback:
    76:79:void <init>(com.facebook.react.bridge.ReactContext) -> <init>
    29:29:com.facebook.react.modules.core.ChoreographerCompat access$000(com.facebook.react.modules.debug.FpsDebugFrameCallback) -> access$000
    29:29:com.facebook.react.modules.core.ChoreographerCompat access$002(com.facebook.react.modules.debug.FpsDebugFrameCallback,com.facebook.react.modules.core.ChoreographerCompat) -> access$002
    84:121:void doFrame(long) -> doFrame
    185:185:int get4PlusFrameStutters() -> get4PlusFrameStutters
    179:180:int getExpectedNumFrames() -> getExpectedNumFrames
    157:160:double getFPS() -> getFPS
    197:202:com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo getFpsInfo(long) -> getFpsInfo
    164:167:double getJSFPS() -> getJSFPS
    171:171:int getNumFrames() -> getNumFrames
    175:175:int getNumJSFrames() -> getNumJSFrames
    189:189:int getTotalTimeMS() -> getTotalTimeMS
    206:212:void reset() -> reset
    126:132:void start() -> start
    143:145:void startAndRecordFpsAtEachFrame() -> startAndRecordFpsAtEachFrame
    149:153:void stop() -> stop
com.facebook.react.modules.debug.FpsDebugFrameCallback$1 -> com.facebook.react.modules.debug.FpsDebugFrameCallback$1:
    133:133:void <init>(com.facebook.react.modules.debug.FpsDebugFrameCallback,com.facebook.react.modules.debug.FpsDebugFrameCallback) -> <init>
    136:137:void run() -> run
com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo -> com.facebook.react.modules.debug.FpsDebugFrameCallback$FpsInfo:
    48:55:void <init>(int,int,int,int,double,double,int) -> <init>
com.facebook.react.modules.debug.SourceCodeModule -> com.facebook.react.modules.debug.SourceCodeModule:
    26:26:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    36:43:java.util.Map getTypedExportedConstants() -> getTypedExportedConstants
com.facebook.react.modules.deviceinfo.DeviceInfoModule -> com.facebook.react.modules.deviceinfo.DeviceInfoModule:
    35:39:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    43:46:void <init>(android.content.Context) -> <init>
    81:90:void emitUpdateDimensionsEvent() -> emitUpdateDimensionsEvent
    56:57:java.util.Map getConstants() -> getConstants
    63:70:void onHostResume() -> onHostResume
com.facebook.react.modules.dialog.AlertFragment -> com.facebook.react.modules.dialog.AlertFragment:
    31:32:void <init>() -> <init>
    36:38:void <init>(com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener,android.os.Bundle) -> <init>
    43:64:android.app.Dialog createDialog(android.content.Context,android.os.Bundle,android.content.DialogInterface$OnClickListener) -> createDialog
    74:75:void onClick(android.content.DialogInterface,int) -> onClick
    69:69:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    81:83:void onDismiss(android.content.DialogInterface) -> onDismiss
com.facebook.react.modules.dialog.DialogModule -> com.facebook.react.modules.dialog.DialogModule:
    55:52:void <clinit>() -> <clinit>
    62:62:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    34:34:boolean access$000(com.facebook.react.modules.dialog.DialogModule) -> access$000
    34:34:com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.dialog.DialogModule) -> access$100
    34:34:com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.dialog.DialogModule) -> access$200
    153:153:java.util.Map getConstants() -> getConstants
    236:240:com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper getFragmentManagerHelper() -> getFragmentManagerHelper
    158:158:void initialize() -> initialize
    164:164:void onHostPause() -> onHostPause
    172:178:void onHostResume() -> onHostResume
    185:219:void showAlert(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback) -> showAlert
com.facebook.react.modules.dialog.DialogModule$1 -> com.facebook.react.modules.dialog.DialogModule$1:
    220:220:void <init>(com.facebook.react.modules.dialog.DialogModule,com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper,android.os.Bundle,com.facebook.react.bridge.Callback) -> <init>
    223:223:void run() -> run
com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener -> com.facebook.react.modules.dialog.DialogModule$AlertFragmentListener:
    126:127:void <init>(com.facebook.react.modules.dialog.DialogModule,com.facebook.react.bridge.Callback) -> <init>
    132:135:void onClick(android.content.DialogInterface,int) -> onClick
    142:145:void onDismiss(android.content.DialogInterface) -> onDismiss
com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper -> com.facebook.react.modules.dialog.DialogModule$FragmentManagerHelper:
    75:76:void <init>(com.facebook.react.modules.dialog.DialogModule,androidx.fragment.app.FragmentManager) -> <init>
    92:97:void dismissExisting() -> dismissExisting
    102:116:void showNewAlert(android.os.Bundle,com.facebook.react.bridge.Callback) -> showNewAlert
    80:88:void showPendingAlert() -> showPendingAlert
com.facebook.react.modules.fresco.FrescoModule -> com.facebook.react.modules.fresco.FrescoModule:
    53:53:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    65:65:void <init>(com.facebook.react.bridge.ReactApplicationContext,boolean) -> <init>
    83:85:void <init>(com.facebook.react.bridge.ReactApplicationContext,boolean,com.facebook.imagepipeline.core.ImagePipelineConfig) -> <init>
    116:116:void clearSensitiveData() -> clearSensitiveData
    131:131:com.facebook.imagepipeline.core.ImagePipelineConfig getDefaultConfig(com.facebook.react.bridge.ReactContext) -> getDefaultConfig
    141:155:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder getDefaultConfigBuilder(com.facebook.react.bridge.ReactContext) -> getDefaultConfigBuilder
    127:127:boolean hasBeenInitialized() -> hasBeenInitialized
    90:105:void initialize() -> initialize
    169:170:void onHostDestroy() -> onHostDestroy
com.facebook.react.modules.fresco.ReactNetworkImageRequest -> com.facebook.react.modules.fresco.ReactNetworkImageRequest:
    26:27:void <init>(com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap) -> <init>
    22:22:com.facebook.react.modules.fresco.ReactNetworkImageRequest fromBuilderWithHeaders(com.facebook.imagepipeline.request.ImageRequestBuilder,com.facebook.react.bridge.ReadableMap) -> fromBuilderWithHeaders
    31:31:com.facebook.react.bridge.ReadableMap getHeaders() -> getHeaders
com.facebook.react.modules.fresco.ReactOkHttpNetworkFetcher -> com.facebook.react.modules.fresco.ReactOkHttpNetworkFetcher:
    34:36:void <init>(okhttp3.OkHttpClient) -> <init>
    25:25:void fetch(com.facebook.imagepipeline.producers.FetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback) -> fetch
    57:76:void fetch(com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher$OkHttpNetworkFetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback) -> fetch
    43:48:java.util.Map getHeaders(com.facebook.react.bridge.ReadableMap) -> getHeaders
com.facebook.react.modules.fresco.SystraceRequestListener -> com.facebook.react.modules.fresco.SystraceRequestListener:
    18:22:void <init>() -> <init>
    84:95:void onProducerEvent(java.lang.String,java.lang.String,java.lang.String) -> onProducerEvent
    71:78:void onProducerFinishWithCancellation(java.lang.String,java.lang.String,java.util.Map) -> onProducerFinishWithCancellation
    57:64:void onProducerFinishWithFailure(java.lang.String,java.lang.String,java.lang.Throwable,java.util.Map) -> onProducerFinishWithFailure
    43:50:void onProducerFinishWithSuccess(java.lang.String,java.lang.String,java.util.Map) -> onProducerFinishWithSuccess
    26:37:void onProducerStart(java.lang.String,java.lang.String) -> onProducerStart
    145:152:void onRequestCancellation(java.lang.String) -> onRequestCancellation
    132:139:void onRequestFailure(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.Throwable,boolean) -> onRequestFailure
    102:113:void onRequestStart(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,java.lang.String,boolean) -> onRequestStart
    118:125:void onRequestSuccess(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,boolean) -> onRequestSuccess
com.facebook.react.modules.i18nmanager.I18nManagerModule -> com.facebook.react.modules.i18nmanager.I18nManagerModule:
    28:25:void <init>(android.content.Context) -> <init>
    51:51:void allowRTL(boolean) -> allowRTL
    56:56:void forceRTL(boolean) -> forceRTL
    38:45:java.util.Map getConstants() -> getConstants
    61:61:void swapLeftAndRightInRTL(boolean) -> swapLeftAndRightInRTL
com.facebook.react.modules.i18nmanager.I18nUtil -> com.facebook.react.modules.i18nmanager.I18nUtil:
    25:25:void <init>() -> <init>
    61:61:void allowRTL(android.content.Context,boolean) -> allowRTL
    65:65:boolean doLeftAndRightSwapInRTL(android.content.Context) -> doLeftAndRightSwapInRTL
    78:78:void forceRTL(android.content.Context,boolean) -> forceRTL
    30:33:com.facebook.react.modules.i18nmanager.I18nUtil getInstance() -> getInstance
    83:83:boolean isDevicePreferredLanguageRTL() -> isDevicePreferredLanguageRTL
    88:89:boolean isPrefSet(android.content.Context,java.lang.String,boolean) -> isPrefSet
    45:48:boolean isRTL(android.content.Context) -> isRTL
    57:57:boolean isRTLAllowed(android.content.Context) -> isRTLAllowed
    74:74:boolean isRTLForced(android.content.Context) -> isRTLForced
    94:96:void setPref(android.content.Context,java.lang.String,boolean) -> setPref
    69:69:void swapLeftAndRightInRTL(android.content.Context,boolean) -> swapLeftAndRightInRTL
com.facebook.react.modules.image.ImageLoaderModule -> com.facebook.react.modules.image.ImageLoaderModule:
    51:52:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    56:57:void <init>(com.facebook.react.bridge.ReactApplicationContext,java.lang.Object) -> <init>
    236:238:void abortRequest(double) -> abortRequest
    38:38:com.facebook.datasource.DataSource access$000(com.facebook.react.modules.image.ImageLoaderModule,int) -> access$000
    74:75:void getSize(java.lang.String,com.facebook.react.bridge.Promise) -> getSize
    132:133:void getSizeWithHeaders(java.lang.String,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise) -> getSizeWithHeaders
    287:295:void onHostDestroy() -> onHostDestroy
    195:196:void prefetchImage(java.lang.String,double,com.facebook.react.bridge.Promise) -> prefetchImage
    245:261:void queryCache(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise) -> queryCache
    265:267:void registerRequest(int,com.facebook.datasource.DataSource) -> registerRequest
    271:275:com.facebook.datasource.DataSource removeRequest(int) -> removeRequest
com.facebook.react.modules.image.ImageLoaderModule$1 -> com.facebook.react.modules.image.ImageLoaderModule$1:
    86:86:void <init>(com.facebook.react.modules.image.ImageLoaderModule,com.facebook.react.bridge.Promise) -> <init>
    115:115:void onFailureImpl(com.facebook.datasource.DataSource) -> onFailureImpl
    90:109:void onNewResultImpl(com.facebook.datasource.DataSource) -> onNewResultImpl
com.facebook.react.modules.image.ImageLoaderModule$2 -> com.facebook.react.modules.image.ImageLoaderModule$2:
    147:147:void <init>(com.facebook.react.modules.image.ImageLoaderModule,com.facebook.react.bridge.Promise) -> <init>
    176:176:void onFailureImpl(com.facebook.datasource.DataSource) -> onFailureImpl
    151:170:void onNewResultImpl(com.facebook.datasource.DataSource) -> onNewResultImpl
com.facebook.react.modules.image.ImageLoaderModule$3 -> com.facebook.react.modules.image.ImageLoaderModule$3:
    206:206:void <init>(com.facebook.react.modules.image.ImageLoaderModule,int,com.facebook.react.bridge.Promise) -> <init>
    223:227:void onFailureImpl(com.facebook.datasource.DataSource) -> onFailureImpl
    209:217:void onNewResultImpl(com.facebook.datasource.DataSource) -> onNewResultImpl
com.facebook.react.modules.image.ImageLoaderModule$4 -> com.facebook.react.modules.image.ImageLoaderModule$4:
    245:245:void <init>(com.facebook.react.modules.image.ImageLoaderModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise) -> <init>
    245:245:void doInBackgroundGuarded(java.lang.Object[]) -> doInBackgroundGuarded
    248:259:void doInBackgroundGuarded(java.lang.Void[]) -> doInBackgroundGuarded
com.facebook.react.modules.intent.IntentModule -> com.facebook.react.modules.intent.IntentModule:
    35:35:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    126:127:void canOpenURL(java.lang.String,com.facebook.react.bridge.Promise) -> canOpenURL
    51:68:void getInitialURL(com.facebook.react.bridge.Promise) -> getInitialURL
    154:168:void openSettings(com.facebook.react.bridge.Promise) -> openSettings
    84:85:void openURL(java.lang.String,com.facebook.react.bridge.Promise) -> openURL
    187:188:void sendIntent(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise) -> sendIntent
com.facebook.react.modules.intent.IntentModule$1 -> com.facebook.react.modules.intent.IntentModule$1:
    208:208:void <clinit>() -> <clinit>
com.facebook.react.modules.network.CountingOutputStream -> com.facebook.react.modules.network.CountingOutputStream:
    39:40:void <init>(java.io.OutputStream) -> <init>
    65:65:void close() -> close
    45:45:long getCount() -> getCount
    50:51:void write(byte[],int,int) -> write
    56:57:void write(int) -> write
com.facebook.react.modules.network.ForwardingCookieHandler -> com.facebook.react.modules.network.ForwardingCookieHandler:
    44:44:void <clinit>() -> <clinit>
    50:52:void <init>(com.facebook.react.bridge.ReactContext) -> <init>
    38:38:android.webkit.CookieManager access$000(com.facebook.react.modules.network.ForwardingCookieHandler) -> access$000
    38:38:com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver access$100(com.facebook.react.modules.network.ForwardingCookieHandler) -> access$100
    38:38:boolean access$200() -> access$200
    38:38:void access$400(com.facebook.react.modules.network.ForwardingCookieHandler,java.lang.Runnable) -> access$400
    153:155:void addCookieAsync(java.lang.String,java.lang.String) -> addCookieAsync
    128:147:void addCookies(java.lang.String,java.util.List) -> addCookies
    81:99:void clearCookies(com.facebook.react.bridge.Callback) -> clearCookies
    104:106:void clearCookiesAsync(com.facebook.react.bridge.Callback) -> clearCookiesAsync
    118:123:void destroy() -> destroy
    58:66:java.util.Map get(java.net.URI,java.util.Map) -> get
    177:206:android.webkit.CookieManager getCookieManager() -> getCookieManager
    160:160:boolean isCookieHeader(java.lang.String) -> isCookieHeader
    210:215:void possiblyWorkaroundSyncManager(android.content.Context) -> possiblyWorkaroundSyncManager
    71:75:void put(java.net.URI,java.util.Map) -> put
    164:169:void runInBackground(java.lang.Runnable) -> runInBackground
com.facebook.react.modules.network.ForwardingCookieHandler$1 -> com.facebook.react.modules.network.ForwardingCookieHandler$1:
    82:82:void <init>(com.facebook.react.modules.network.ForwardingCookieHandler,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback) -> <init>
    82:82:java.lang.Object doInBackgroundGuarded() -> doInBackgroundGuarded
    85:90:java.lang.Boolean doInBackgroundGuarded() -> doInBackgroundGuarded
    82:82:void onPostExecuteGuarded(java.lang.Object) -> onPostExecuteGuarded
    95:95:void onPostExecuteGuarded(java.lang.Boolean) -> onPostExecuteGuarded
com.facebook.react.modules.network.ForwardingCookieHandler$2 -> com.facebook.react.modules.network.ForwardingCookieHandler$2:
    107:107:void <init>(com.facebook.react.modules.network.ForwardingCookieHandler,com.facebook.react.bridge.Callback) -> <init>
    107:107:void onReceiveValue(java.lang.Object) -> onReceiveValue
    110:111:void onReceiveValue(java.lang.Boolean) -> onReceiveValue
com.facebook.react.modules.network.ForwardingCookieHandler$3 -> com.facebook.react.modules.network.ForwardingCookieHandler$3:
    133:133:void <init>(com.facebook.react.modules.network.ForwardingCookieHandler,java.util.List,android.webkit.CookieManager,java.lang.String) -> <init>
    136:139:void run() -> run
com.facebook.react.modules.network.ForwardingCookieHandler$4 -> com.facebook.react.modules.network.ForwardingCookieHandler$4:
    164:164:void <init>(com.facebook.react.modules.network.ForwardingCookieHandler,com.facebook.react.bridge.ReactContext,java.lang.Runnable) -> <init>
    164:164:void doInBackgroundGuarded(java.lang.Object[]) -> doInBackgroundGuarded
    167:167:void doInBackgroundGuarded(java.lang.Void[]) -> doInBackgroundGuarded
com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver -> com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver:
    230:233:void <init>(com.facebook.react.modules.network.ForwardingCookieHandler) -> <init>
    223:223:void access$300(com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver) -> access$300
    271:273:void flush() -> flush
    248:249:void onCookiesModified() -> onCookiesModified
    254:255:void persistCookies() -> persistCookies
com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver$1 -> com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver$1:
    234:234:void <init>(com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver,com.facebook.react.modules.network.ForwardingCookieHandler) -> <init>
    237:238:boolean handleMessage(android.os.Message) -> handleMessage
com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver$2 -> com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver$2:
    256:256:void <init>(com.facebook.react.modules.network.ForwardingCookieHandler$CookieSaver) -> <init>
    259:263:void run() -> run
com.facebook.react.modules.network.HeaderUtil -> com.facebook.react.modules.network.HeaderUtil:
    16:16:void <init>() -> <init>
    19:29:java.lang.String stripHeaderName(java.lang.String) -> stripHeaderName
    33:43:java.lang.String stripHeaderValue(java.lang.String) -> stripHeaderValue
com.facebook.react.modules.network.NetworkingModule -> com.facebook.react.modules.network.NetworkingModule:
    116:130:void <init>(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient,java.util.List) -> <init>
    141:141:void <init>(com.facebook.react.bridge.ReactApplicationContext,java.lang.String,okhttp3.OkHttpClient) -> <init>
    146:146:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    156:156:void <init>(com.facebook.react.bridge.ReactApplicationContext,java.util.List) -> <init>
    165:165:void <init>(com.facebook.react.bridge.ReactApplicationContext,java.lang.String) -> <init>
    652:653:void abortRequest(double) -> abortRequest
    54:54:boolean access$000(long,long) -> access$000
    54:54:boolean access$100(com.facebook.react.modules.network.NetworkingModule) -> access$100
    54:54:void access$200(com.facebook.react.modules.network.NetworkingModule,int) -> access$200
    54:54:com.facebook.react.bridge.WritableMap access$300(okhttp3.Headers) -> access$300
    54:54:java.util.List access$400(com.facebook.react.modules.network.NetworkingModule) -> access$400
    54:54:void access$500(com.facebook.react.modules.network.NetworkingModule,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,okhttp3.ResponseBody) -> access$500
    54:54:okhttp3.OkHttpClient access$600(com.facebook.react.modules.network.NetworkingModule) -> access$600
    620:621:void addRequest(int) -> addRequest
    210:210:void addRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler) -> addRequestBodyHandler
    214:214:void addResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler) -> addResponseHandler
    206:206:void addUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler) -> addUriHandler
    177:178:void applyCustomBuilder(okhttp3.OkHttpClient$Builder) -> applyCustomBuilder
    628:632:void cancelAllRequests() -> cancelAllRequests
    659:664:void cancelRequest(int) -> cancelRequest
    669:669:void clearCookies(com.facebook.react.bridge.Callback) -> clearCookies
    680:726:okhttp3.MultipartBody$Builder constructMultipartBody(com.facebook.react.bridge.ReadableArray,java.lang.String,int) -> constructMultipartBody
    740:763:okhttp3.Headers extractHeaders(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap) -> extractHeaders
    767:770:com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter getEventEmitter(java.lang.String) -> getEventEmitter
    184:184:void initialize() -> initialize
    194:202:void onCatalystInstanceDestroy() -> onCatalystInstanceDestroy
    585:612:void readWithProgress(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,okhttp3.ResponseBody) -> readWithProgress
    624:625:void removeRequest(int) -> removeRequest
    222:222:void removeRequestBodyHandler(com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler) -> removeRequestBodyHandler
    226:226:void removeResponseHandler(com.facebook.react.modules.network.NetworkingModule$ResponseHandler) -> removeResponseHandler
    218:218:void removeUriHandler(com.facebook.react.modules.network.NetworkingModule$UriHandler) -> removeUriHandler
    243:257:void sendRequest(java.lang.String,java.lang.String,double,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,double,boolean) -> sendRequest
    273:288:void sendRequestInternal(java.lang.String,java.lang.String,int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,java.lang.String,boolean,int,boolean) -> sendRequestInternal
    169:169:void setCustomClientBuilder(com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder) -> setCustomClientBuilder
    635:646:com.facebook.react.bridge.WritableMap translateHeaders(okhttp3.Headers) -> translateHeaders
    563:563:okhttp3.RequestBody wrapRequestBodyWithProgressEmitter(okhttp3.RequestBody,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int) -> wrapRequestBodyWithProgressEmitter
com.facebook.react.modules.network.NetworkingModule$1 -> com.facebook.react.modules.network.NetworkingModule$1:
    316:316:void <init>(com.facebook.react.modules.network.NetworkingModule,java.lang.String,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int) -> <init>
    319:344:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
com.facebook.react.modules.network.NetworkingModule$1$1 -> com.facebook.react.modules.network.NetworkingModule$1$1:
    323:324:void <init>(com.facebook.react.modules.network.NetworkingModule$1) -> <init>
    329:341:void onProgress(long,long,boolean) -> onProgress
com.facebook.react.modules.network.NetworkingModule$2 -> com.facebook.react.modules.network.NetworkingModule$2:
    454:454:void <init>(com.facebook.react.modules.network.NetworkingModule,int,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,java.lang.String,boolean) -> <init>
    457:465:void onFailure(okhttp3.Call,java.io.IOException) -> onFailure
    470:550:void onResponse(okhttp3.Call,okhttp3.Response) -> onResponse
com.facebook.react.modules.network.NetworkingModule$3 -> com.facebook.react.modules.network.NetworkingModule$3:
    565:566:void <init>(com.facebook.react.modules.network.NetworkingModule,com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int) -> <init>
    570:573:void onProgress(long,long,boolean) -> onProgress
com.facebook.react.modules.network.NetworkingModule$4 -> com.facebook.react.modules.network.NetworkingModule$4:
    659:659:void <init>(com.facebook.react.modules.network.NetworkingModule,com.facebook.react.bridge.ReactContext,int) -> <init>
    659:659:void doInBackgroundGuarded(java.lang.Object[]) -> doInBackgroundGuarded
    662:662:void doInBackgroundGuarded(java.lang.Void[]) -> doInBackgroundGuarded
com.facebook.react.modules.network.OkHttpClientProvider -> com.facebook.react.modules.network.OkHttpClientProvider:
    29:29:void <init>() -> <init>
    49:52:okhttp3.OkHttpClient createClient() -> createClient
    56:59:okhttp3.OkHttpClient createClient(android.content.Context) -> createClient
    64:76:okhttp3.OkHttpClient$Builder createClientBuilder() -> createClientBuilder
    82:82:okhttp3.OkHttpClient$Builder createClientBuilder(android.content.Context) -> createClientBuilder
    86:95:okhttp3.OkHttpClient$Builder createClientBuilder(android.content.Context,int) -> createClientBuilder
    104:120:okhttp3.OkHttpClient$Builder enableTls12OnPreLollipop(okhttp3.OkHttpClient$Builder) -> enableTls12OnPreLollipop
com.facebook.react.modules.network.ProgressRequestBody -> com.facebook.react.modules.network.ProgressRequestBody:
    23:25:void <init>(okhttp3.RequestBody,com.facebook.react.modules.network.ProgressListener) -> <init>
    17:17:com.facebook.react.modules.network.ProgressListener access$000(com.facebook.react.modules.network.ProgressRequestBody) -> access$000
    35:38:long contentLength() -> contentLength
    30:30:okhttp3.MediaType contentType() -> contentType
    57:57:okio.Sink outputStreamSink(okio.BufferedSink) -> outputStreamSink
    46:53:void writeTo(okio.BufferedSink) -> writeTo
com.facebook.react.modules.network.ProgressRequestBody$1 -> com.facebook.react.modules.network.ProgressRequestBody$1:
    58:58:void <init>(com.facebook.react.modules.network.ProgressRequestBody,java.io.OutputStream) -> <init>
    72:74:void sendProgressUpdate() -> sendProgressUpdate
    61:62:void write(byte[],int,int) -> write
    67:68:void write(int) -> write
com.facebook.react.modules.network.ProgressResponseBody -> com.facebook.react.modules.network.ProgressResponseBody:
    27:30:void <init>(okhttp3.ResponseBody,com.facebook.react.modules.network.ProgressListener) -> <init>
    20:20:long access$000(com.facebook.react.modules.network.ProgressResponseBody) -> access$000
    20:20:long access$002(com.facebook.react.modules.network.ProgressResponseBody,long) -> access$002
    20:20:okhttp3.ResponseBody access$100(com.facebook.react.modules.network.ProgressResponseBody) -> access$100
    20:20:com.facebook.react.modules.network.ProgressListener access$200(com.facebook.react.modules.network.ProgressResponseBody) -> access$200
    40:40:long contentLength() -> contentLength
    35:35:okhttp3.MediaType contentType() -> contentType
    49:52:okio.BufferedSource source() -> source
    56:56:okio.Source source(okio.Source) -> source
    44:44:long totalBytesRead() -> totalBytesRead
com.facebook.react.modules.network.ProgressResponseBody$1 -> com.facebook.react.modules.network.ProgressResponseBody$1:
    56:56:void <init>(com.facebook.react.modules.network.ProgressResponseBody,okio.Source) -> <init>
    59:62:long read(okio.Buffer,long) -> read
com.facebook.react.modules.network.ProgressiveStringDecoder -> com.facebook.react.modules.network.ProgressiveStringDecoder:
    35:36:void <init>(java.nio.charset.Charset) -> <init>
    49:83:java.lang.String decodeNext(byte[],int) -> decodeNext
com.facebook.react.modules.network.ReactCookieJarContainer -> com.facebook.react.modules.network.ReactCookieJarContainer:
    20:22:void <init>() -> <init>
    43:56:java.util.List loadForRequest(okhttp3.HttpUrl) -> loadForRequest
    31:31:void removeCookieJar() -> removeCookieJar
    36:37:void saveFromResponse(okhttp3.HttpUrl,java.util.List) -> saveFromResponse
    26:26:void setCookieJar(okhttp3.CookieJar) -> setCookieJar
com.facebook.react.modules.network.RequestBodyUtil -> com.facebook.react.modules.network.RequestBodyUtil:
    38:38:void <init>() -> <init>
    113:113:okhttp3.RequestBody create(okhttp3.MediaType,java.io.InputStream) -> create
    100:108:okhttp3.RequestBody createGzip(okhttp3.MediaType,java.lang.String) -> createGzip
    144:144:com.facebook.react.modules.network.ProgressRequestBody createProgressRequest(okhttp3.RequestBody,com.facebook.react.modules.network.ProgressListener) -> createProgressRequest
    74:95:java.io.InputStream getDownloadFileInputStream(android.content.Context,android.net.Uri) -> getDownloadFileInputStream
    149:150:okhttp3.RequestBody getEmptyBody(java.lang.String) -> getEmptyBody
    56:63:java.io.InputStream getFileInputStream(android.content.Context,java.lang.String) -> getFileInputStream
    46:46:boolean isGzipEncoding(java.lang.String) -> isGzipEncoding
com.facebook.react.modules.network.RequestBodyUtil$1 -> com.facebook.react.modules.network.RequestBodyUtil$1:
    113:113:void <init>(okhttp3.MediaType,java.io.InputStream) -> <init>
    122:122:long contentLength() -> contentLength
    116:116:okhttp3.MediaType contentType() -> contentType
    132:136:void writeTo(okio.BufferedSink) -> writeTo
com.facebook.react.modules.network.ResponseUtil -> com.facebook.react.modules.network.ResponseUtil:
    18:18:void <init>() -> <init>
    61:66:void onDataReceived(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,java.lang.String) -> onDataReceived
    72:77:void onDataReceived(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,com.facebook.react.bridge.WritableMap) -> onDataReceived
    49:55:void onDataReceivedProgress(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,long,long) -> onDataReceivedProgress
    21:26:void onDataSend(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,long,long) -> onDataSend
    36:43:void onIncrementalDataReceived(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,java.lang.String,long,long) -> onIncrementalDataReceived
    83:92:void onRequestError(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,java.lang.String,java.lang.Throwable) -> onRequestError
    97:102:void onRequestSuccess(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int) -> onRequestSuccess
    112:119:void onResponseReceived(com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter,int,int,com.facebook.react.bridge.WritableMap,java.lang.String) -> onResponseReceived
com.facebook.react.modules.network.TLSSocketFactory -> com.facebook.react.modules.network.TLSSocketFactory:
    28:31:void <init>() -> <init>
    47:47:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    52:52:java.net.Socket createSocket(java.lang.String,int) -> createSocket
    58:58:java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    63:63:java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    69:69:java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    73:74:java.net.Socket enableTLSOnSocket(java.net.Socket) -> enableTLSOnSocket
    36:36:java.lang.String[] getDefaultCipherSuites() -> getDefaultCipherSuites
    41:41:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
com.facebook.react.modules.permissions.PermissionsModule -> com.facebook.react.modules.permissions.PermissionsModule:
    42:43:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    57:64:void checkPermission(java.lang.String,com.facebook.react.bridge.Promise) -> checkPermission
    214:216:com.facebook.react.modules.core.PermissionAwareActivity getPermissionAwareActivity() -> getPermissionAwareActivity
    208:210:boolean onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    142:200:void requestMultiplePermissions(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Promise) -> requestMultiplePermissions
    97:136:void requestPermission(java.lang.String,com.facebook.react.bridge.Promise) -> requestPermission
    77:85:void shouldShowRequestPermissionRationale(java.lang.String,com.facebook.react.bridge.Promise) -> shouldShowRequestPermissionRationale
com.facebook.react.modules.permissions.PermissionsModule$1 -> com.facebook.react.modules.permissions.PermissionsModule$1:
    116:116:void <init>(com.facebook.react.modules.permissions.PermissionsModule,com.facebook.react.bridge.Promise,java.lang.String) -> <init>
    119:127:void invoke(java.lang.Object[]) -> invoke
com.facebook.react.modules.permissions.PermissionsModule$2 -> com.facebook.react.modules.permissions.PermissionsModule$2:
    176:176:void <init>(com.facebook.react.modules.permissions.PermissionsModule,java.util.ArrayList,com.facebook.react.bridge.WritableMap,com.facebook.react.bridge.Promise) -> <init>
    179:193:void invoke(java.lang.Object[]) -> invoke
com.facebook.react.modules.share.ShareModule -> com.facebook.react.modules.share.ShareModule:
    31:31:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    50:79:void share(com.facebook.react.bridge.ReadableMap,java.lang.String,com.facebook.react.bridge.Promise) -> share
com.facebook.react.modules.sound.SoundManagerModule -> com.facebook.react.modules.sound.SoundManagerModule:
    25:25:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    36:38:void playTouchSound() -> playTouchSound
com.facebook.react.modules.statusbar.StatusBarModule -> com.facebook.react.modules.statusbar.StatusBarModule:
    43:43:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    53:69:java.util.Map getConstants() -> getConstants
    75:85:void setColor(int,boolean) -> setColor
    161:168:void setHidden(boolean) -> setHidden
    185:194:void setStyle(java.lang.String) -> setStyle
    119:128:void setTranslucent(boolean) -> setTranslucent
com.facebook.react.modules.statusbar.StatusBarModule$1 -> com.facebook.react.modules.statusbar.StatusBarModule$1:
    86:86:void <init>(com.facebook.react.modules.statusbar.StatusBarModule,com.facebook.react.bridge.ReactContext,android.app.Activity,boolean,int) -> <init>
    90:110:void runGuarded() -> runGuarded
com.facebook.react.modules.statusbar.StatusBarModule$1$1 -> com.facebook.react.modules.statusbar.StatusBarModule$1$1:
    99:99:void <init>(com.facebook.react.modules.statusbar.StatusBarModule$1) -> <init>
    102:104:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.facebook.react.modules.statusbar.StatusBarModule$2 -> com.facebook.react.modules.statusbar.StatusBarModule$2:
    129:129:void <init>(com.facebook.react.modules.statusbar.StatusBarModule,com.facebook.react.bridge.ReactContext,android.app.Activity,boolean) -> <init>
    135:153:void runGuarded() -> runGuarded
com.facebook.react.modules.statusbar.StatusBarModule$2$1 -> com.facebook.react.modules.statusbar.StatusBarModule$2$1:
    138:138:void <init>(com.facebook.react.modules.statusbar.StatusBarModule$2) -> <init>
    141:142:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
com.facebook.react.modules.statusbar.StatusBarModule$3 -> com.facebook.react.modules.statusbar.StatusBarModule$3:
    169:169:void <init>(com.facebook.react.modules.statusbar.StatusBarModule,boolean,android.app.Activity) -> <init>
    172:177:void run() -> run
com.facebook.react.modules.statusbar.StatusBarModule$4 -> com.facebook.react.modules.statusbar.StatusBarModule$4:
    195:195:void <init>(com.facebook.react.modules.statusbar.StatusBarModule,android.app.Activity,java.lang.String) -> <init>
    199:206:void run() -> run
com.facebook.react.modules.storage.AsyncLocalStorageUtil -> com.facebook.react.modules.storage.AsyncLocalStorageUtil:
    26:26:void <init>() -> <init>
    33:35:java.lang.String buildKeySelection(int) -> buildKeySelection
    43:45:java.lang.String[] buildKeySelectionArgs(com.facebook.react.bridge.ReadableArray,int,int) -> buildKeySelectionArgs
    111:121:void deepMergeInto(org.json.JSONObject,org.json.JSONObject) -> deepMergeInto
    56:66:java.lang.String getItemImpl(android.database.sqlite.SQLiteDatabase,java.lang.String) -> getItemImpl
    90:102:boolean mergeImpl(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String) -> mergeImpl
    71:76:boolean setItemImpl(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String) -> setItemImpl
com.facebook.react.modules.storage.AsyncStorageErrorUtil -> com.facebook.react.modules.storage.AsyncStorageErrorUtil:
    15:15:void <init>() -> <init>
    36:36:com.facebook.react.bridge.WritableMap getDBError(java.lang.String) -> getDBError
    19:22:com.facebook.react.bridge.WritableMap getError(java.lang.String,java.lang.String) -> getError
    28:28:com.facebook.react.bridge.WritableMap getInvalidKeyError(java.lang.String) -> getInvalidKeyError
    32:32:com.facebook.react.bridge.WritableMap getInvalidValueError(java.lang.String) -> getInvalidValueError
com.facebook.react.modules.storage.AsyncStorageModule -> com.facebook.react.modules.storage.AsyncStorageModule:
    85:85:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    90:92:void <init>(com.facebook.react.bridge.ReactApplicationContext,java.util.concurrent.Executor) -> <init>
    36:36:boolean access$000(com.facebook.react.modules.storage.AsyncStorageModule) -> access$000
    36:36:com.facebook.react.modules.storage.ReactDatabaseSupplier access$100(com.facebook.react.modules.storage.AsyncStorageModule) -> access$100
    378:393:void clear(com.facebook.react.bridge.Callback) -> clear
    116:116:void clearSensitiveData() -> clearSensitiveData
    432:432:boolean ensureDatabase() -> ensureDatabase
    399:427:void getAllKeys(com.facebook.react.bridge.Callback) -> getAllKeys
    102:103:void initialize() -> initialize
    126:191:void multiGet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback) -> multiGet
    318:372:void multiMerge(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback) -> multiMerge
    264:309:void multiRemove(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback) -> multiRemove
    201:258:void multiSet(com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback) -> multiSet
    108:108:void onCatalystInstanceDestroy() -> onCatalystInstanceDestroy
com.facebook.react.modules.storage.AsyncStorageModule$1 -> com.facebook.react.modules.storage.AsyncStorageModule$1:
    130:130:void <init>(com.facebook.react.modules.storage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback,com.facebook.react.bridge.ReadableArray) -> <init>
    130:130:void doInBackgroundGuarded(java.lang.Object[]) -> doInBackgroundGuarded
    133:189:void doInBackgroundGuarded(java.lang.Void[]) -> doInBackgroundGuarded
com.facebook.react.modules.storage.AsyncStorageModule$2 -> com.facebook.react.modules.storage.AsyncStorageModule$2:
    206:206:void <init>(com.facebook.react.modules.storage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback,com.facebook.react.bridge.ReadableArray) -> <init>
    206:206:void doInBackgroundGuarded(java.lang.Object[]) -> doInBackgroundGuarded
    209:251:void doInBackgroundGuarded(java.lang.Void[]) -> doInBackgroundGuarded
com.facebook.react.modules.storage.AsyncStorageModule$3 -> com.facebook.react.modules.storage.AsyncStorageModule$3:
    269:269:void <init>(com.facebook.react.modules.storage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback,com.facebook.react.bridge.ReadableArray) -> <init>
    269:269:void doInBackgroundGuarded(java.lang.Object[]) -> doInBackgroundGuarded
    272:302:void doInBackgroundGuarded(java.lang.Void[]) -> doInBackgroundGuarded
com.facebook.react.modules.storage.AsyncStorageModule$4 -> com.facebook.react.modules.storage.AsyncStorageModule$4:
    318:318:void <init>(com.facebook.react.modules.storage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback,com.facebook.react.bridge.ReadableArray) -> <init>
    318:318:void doInBackgroundGuarded(java.lang.Object[]) -> doInBackgroundGuarded
    321:365:void doInBackgroundGuarded(java.lang.Void[]) -> doInBackgroundGuarded
com.facebook.react.modules.storage.AsyncStorageModule$5 -> com.facebook.react.modules.storage.AsyncStorageModule$5:
    378:378:void <init>(com.facebook.react.modules.storage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback) -> <init>
    378:378:void doInBackgroundGuarded(java.lang.Object[]) -> doInBackgroundGuarded
    381:390:void doInBackgroundGuarded(java.lang.Void[]) -> doInBackgroundGuarded
com.facebook.react.modules.storage.AsyncStorageModule$6 -> com.facebook.react.modules.storage.AsyncStorageModule$6:
    399:399:void <init>(com.facebook.react.modules.storage.AsyncStorageModule,com.facebook.react.bridge.ReactContext,com.facebook.react.bridge.Callback) -> <init>
    399:399:void doInBackgroundGuarded(java.lang.Object[]) -> doInBackgroundGuarded
    402:424:void doInBackgroundGuarded(java.lang.Void[]) -> doInBackgroundGuarded
com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor -> com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor:
    55:56:void <init>(com.facebook.react.modules.storage.AsyncStorageModule,java.util.concurrent.Executor) -> <init>
    60:73:void execute(java.lang.Runnable) -> execute
    76:79:void scheduleNext() -> scheduleNext
com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor$1 -> com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor$1:
    61:61:void <init>(com.facebook.react.modules.storage.AsyncStorageModule$SerialExecutor,java.lang.Runnable) -> <init>
    64:67:void run() -> run
com.facebook.react.modules.storage.ReactDatabaseSupplier -> com.facebook.react.modules.storage.ReactDatabaseSupplier:
    51:52:void <init>(android.content.Context) -> <init>
    133:134:void clear() -> clear
    118:128:void clearAndCloseDatabase() -> clearAndCloseDatabase
    153:157:void closeDatabase() -> closeDatabase
    148:149:boolean deleteDatabase() -> deleteDatabase
    77:101:boolean ensureDatabase() -> ensureDatabase
    112:113:android.database.sqlite.SQLiteDatabase get() -> get
    56:59:com.facebook.react.modules.storage.ReactDatabaseSupplier getInstance(android.content.Context) -> getInstance
    64:64:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    70:71:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.facebook.react.modules.systeminfo.AndroidInfoHelpers -> com.facebook.react.modules.systeminfo.AndroidInfoHelpers:
    20:20:void <init>() -> <init>
    47:47:java.lang.String getAdbReverseTcpCommand(java.lang.Integer) -> getAdbReverseTcpCommand
    51:51:java.lang.String getAdbReverseTcpCommand(android.content.Context) -> getAdbReverseTcpCommand
    70:71:java.lang.Integer getDevServerPort(android.content.Context) -> getDevServerPort
    61:65:java.lang.String getFriendlyDeviceName() -> getFriendlyDeviceName
    55:55:java.lang.String getInspectorProxyHost(android.content.Context) -> getInspectorProxyHost
    75:76:java.lang.Integer getInspectorProxyPort(android.content.Context) -> getInspectorProxyPort
    101:132:java.lang.String getMetroHostPropValue() -> getMetroHostPropValue
    39:39:java.lang.String getServerHost(java.lang.Integer) -> getServerHost
    43:43:java.lang.String getServerHost(android.content.Context) -> getServerHost
    84:95:java.lang.String getServerIpAddress(int) -> getServerIpAddress
    31:31:boolean isRunningOnGenymotion() -> isRunningOnGenymotion
    35:35:boolean isRunningOnStockEmulator() -> isRunningOnStockEmulator
com.facebook.react.modules.systeminfo.AndroidInfoModule -> com.facebook.react.modules.systeminfo.AndroidInfoModule:
    37:37:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    88:88:java.lang.String getAndroidID() -> getAndroidID
    70:82:java.util.Map getConstants() -> getConstants
    104:108:java.lang.String getServerHost() -> getServerHost
    96:99:java.lang.Boolean isRunningScreenshotTest() -> isRunningScreenshotTest
    46:47:java.lang.String uiMode() -> uiMode
com.facebook.react.modules.systeminfo.ReactNativeVersion -> com.facebook.react.modules.systeminfo.ReactNativeVersion:
    18:17:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
com.facebook.react.modules.timepicker.DismissableTimePickerDialog -> com.facebook.react.modules.timepicker.DismissableTimePickerDialog:
    31:31:void <init>(android.content.Context,android.app.TimePickerDialog$OnTimeSetListener,int,int,boolean) -> <init>
    41:41:void <init>(android.content.Context,int,android.app.TimePickerDialog$OnTimeSetListener,int,int,boolean) -> <init>
    46:47:void onStop() -> onStop
com.facebook.react.modules.timepicker.TimePickerDialogFragment -> com.facebook.react.modules.timepicker.TimePickerDialogFragment:
    24:24:void <init>() -> <init>
    37:81:android.app.Dialog createDialog(android.os.Bundle,android.content.Context,android.app.TimePickerDialog$OnTimeSetListener) -> createDialog
    31:32:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    87:89:void onDismiss(android.content.DialogInterface) -> onDismiss
    94:94:void setOnDismissListener(android.content.DialogInterface$OnDismissListener) -> setOnDismissListener
    98:98:void setOnTimeSetListener(android.app.TimePickerDialog$OnTimeSetListener) -> setOnTimeSetListener
com.facebook.react.modules.timepicker.TimePickerDialogModule -> com.facebook.react.modules.timepicker.TimePickerDialogModule:
    50:50:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    36:36:com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.timepicker.TimePickerDialogModule) -> access$000
    36:36:com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.timepicker.TimePickerDialogModule) -> access$100
    122:133:android.os.Bundle createFragmentArguments(com.facebook.react.bridge.ReadableMap) -> createFragmentArguments
    93:95:void open(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Promise) -> open
com.facebook.react.modules.timepicker.TimePickerDialogModule$TimePickerDialogListener -> com.facebook.react.modules.timepicker.TimePickerDialogModule$TimePickerDialogListener:
    63:64:void <init>(com.facebook.react.modules.timepicker.TimePickerDialogModule,com.facebook.react.bridge.Promise) -> <init>
    81:85:void onDismiss(android.content.DialogInterface) -> onDismiss
    69:75:void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
com.facebook.react.modules.timepicker.TimePickerMode -> com.facebook.react.modules.timepicker.TimePickerMode:
    11:10:void <clinit>() -> <clinit>
    10:10:void <init>(java.lang.String,int) -> <init>
    10:10:com.facebook.react.modules.timepicker.TimePickerMode valueOf(java.lang.String) -> valueOf
    10:10:com.facebook.react.modules.timepicker.TimePickerMode[] values() -> values
com.facebook.react.modules.toast.ToastModule -> com.facebook.react.modules.toast.ToastModule:
    34:34:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    23:23:com.facebook.react.bridge.ReactApplicationContext access$000(com.facebook.react.modules.toast.ToastModule) -> access$000
    23:23:com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.modules.toast.ToastModule) -> access$100
    23:23:com.facebook.react.bridge.ReactApplicationContext access$200(com.facebook.react.modules.toast.ToastModule) -> access$200
    44:49:java.util.Map getConstants() -> getConstants
    55:55:void show(java.lang.String,int) -> show
    66:66:void showWithGravity(java.lang.String,int,int) -> showWithGravity
    84:84:void showWithGravityAndOffset(java.lang.String,int,int,int,int) -> showWithGravityAndOffset
com.facebook.react.modules.toast.ToastModule$1 -> com.facebook.react.modules.toast.ToastModule$1:
    56:56:void <init>(com.facebook.react.modules.toast.ToastModule,java.lang.String,int) -> <init>
    59:59:void run() -> run
com.facebook.react.modules.toast.ToastModule$2 -> com.facebook.react.modules.toast.ToastModule$2:
    67:67:void <init>(com.facebook.react.modules.toast.ToastModule,java.lang.String,int,int) -> <init>
    70:72:void run() -> run
com.facebook.react.modules.toast.ToastModule$3 -> com.facebook.react.modules.toast.ToastModule$3:
    85:85:void <init>(com.facebook.react.modules.toast.ToastModule,java.lang.String,int,int,int,int) -> <init>
    88:90:void run() -> run
com.facebook.react.modules.vibration.VibrationModule -> com.facebook.react.modules.vibration.VibrationModule:
    26:26:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    58:60:void cancel() -> cancel
    38:40:void vibrate(double) -> vibrate
    46:52:void vibrateByPattern(com.facebook.react.bridge.ReadableArray,int) -> vibrateByPattern
com.facebook.react.modules.websocket.WebSocketModule -> com.facebook.react.modules.websocket.WebSocketModule:
    57:58:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    40:40:java.util.Map access$000(com.facebook.react.modules.websocket.WebSocketModule) -> access$000
    40:40:void access$100(com.facebook.react.modules.websocket.WebSocketModule,java.lang.String,com.facebook.react.bridge.WritableMap) -> access$100
    40:40:void access$200(com.facebook.react.modules.websocket.WebSocketModule,int,java.lang.String) -> access$200
    40:40:java.util.Map access$300(com.facebook.react.modules.websocket.WebSocketModule) -> access$300
    216:227:void close(double,java.lang.String,double) -> close
    91:210:void connect(java.lang.String,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableMap,double) -> connect
    388:398:java.lang.String getCookie(java.lang.String) -> getCookie
    351:376:java.lang.String getDefaultOrigin(java.lang.String) -> getDefaultOrigin
    334:337:void notifyWebSocketFailed(int,java.lang.String) -> notifyWebSocketFailed
    310:329:void ping(double) -> ping
    234:253:void send(java.lang.String,double) -> send
    260:279:void sendBinary(java.lang.String,double) -> sendBinary
    284:303:void sendBinary(okio.ByteString,int) -> sendBinary
    62:67:void sendEvent(java.lang.String,com.facebook.react.bridge.WritableMap) -> sendEvent
    78:80:void setContentHandler(int,com.facebook.react.modules.websocket.WebSocketModule$ContentHandler) -> setContentHandler
com.facebook.react.modules.websocket.WebSocketModule$1 -> com.facebook.react.modules.websocket.WebSocketModule$1:
    145:145:void <init>(com.facebook.react.modules.websocket.WebSocketModule,int) -> <init>
    163:167:void onClosed(okhttp3.WebSocket,int,java.lang.String) -> onClosed
    158:158:void onClosing(okhttp3.WebSocket,int,java.lang.String) -> onClosing
    172:172:void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response) -> onFailure
    177:187:void onMessage(okhttp3.WebSocket,java.lang.String) -> onMessage
    192:205:void onMessage(okhttp3.WebSocket,okio.ByteString) -> onMessage
    149:153:void onOpen(okhttp3.WebSocket,okhttp3.Response) -> onOpen
com.facebook.react.packagerconnection.FileIoHandler -> com.facebook.react.packagerconnection.FileIoHandler:
    24:24:void <clinit>() -> <clinit>
    61:121:void <init>() -> <init>
    23:23:java.util.Map access$000(com.facebook.react.packagerconnection.FileIoHandler) -> access$000
    23:23:int access$100(com.facebook.react.packagerconnection.FileIoHandler,java.lang.String) -> access$100
    159:162:int addOpenFile(java.lang.String) -> addOpenFile
    155:155:java.util.Map handlers() -> handlers
    170:186:void run() -> run
com.facebook.react.packagerconnection.FileIoHandler$1 -> com.facebook.react.packagerconnection.FileIoHandler$1:
    68:68:void <init>(com.facebook.react.packagerconnection.FileIoHandler) -> <init>
    71:94:void onRequest(java.lang.Object,com.facebook.react.packagerconnection.Responder) -> onRequest
com.facebook.react.packagerconnection.FileIoHandler$2 -> com.facebook.react.packagerconnection.FileIoHandler$2:
    99:99:void <init>(com.facebook.react.packagerconnection.FileIoHandler) -> <init>
    102:118:void onRequest(java.lang.Object,com.facebook.react.packagerconnection.Responder) -> onRequest
com.facebook.react.packagerconnection.FileIoHandler$3 -> com.facebook.react.packagerconnection.FileIoHandler$3:
    123:123:void <init>(com.facebook.react.packagerconnection.FileIoHandler) -> <init>
    126:149:void onRequest(java.lang.Object,com.facebook.react.packagerconnection.Responder) -> onRequest
com.facebook.react.packagerconnection.FileIoHandler$TtlFileInputStream -> com.facebook.react.packagerconnection.FileIoHandler$TtlFileInputStream:
    31:33:void <init>(java.lang.String) -> <init>
    52:52:void close() -> close
    41:41:boolean expiredTtl() -> expiredTtl
    37:37:void extendTtl() -> extendTtl
    45:48:java.lang.String read(int) -> read
com.facebook.react.packagerconnection.JSPackagerClient -> com.facebook.react.packagerconnection.JSPackagerClient:
    72:85:void <init>(java.lang.String,com.facebook.react.packagerconnection.PackagerConnectionSettings,java.util.Map,com.facebook.react.packagerconnection.ReconnectingWebSocket$ConnectionCallback) -> <init>
    140:143:void abortOnMessage(java.lang.Object,java.lang.String) -> abortOnMessage
    19:19:com.facebook.react.packagerconnection.ReconnectingWebSocket access$000(com.facebook.react.packagerconnection.JSPackagerClient) -> access$000
    19:19:java.lang.String access$100() -> access$100
    93:93:void close() -> close
    89:89:void init() -> init
    99:129:void onMessage(java.lang.String) -> onMessage
    135:135:void onMessage(okio.ByteString) -> onMessage
com.facebook.react.packagerconnection.JSPackagerClient$ResponderImpl -> com.facebook.react.packagerconnection.JSPackagerClient$ResponderImpl:
    28:29:void <init>(com.facebook.react.packagerconnection.JSPackagerClient,java.lang.Object) -> <init>
    46:52:void error(java.lang.Object) -> error
    34:40:void respond(java.lang.Object) -> respond
com.facebook.react.packagerconnection.NotificationOnlyHandler -> com.facebook.react.packagerconnection.NotificationOnlyHandler:
    14:14:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    17:18:void onRequest(java.lang.Object,com.facebook.react.packagerconnection.Responder) -> onRequest
com.facebook.react.packagerconnection.PackagerConnectionSettings -> com.facebook.react.packagerconnection.PackagerConnectionSettings:
    36:45:java.lang.String getDebugServerHost() -> getDebugServerHost
    61:61:java.lang.String getInspectorServerHost() -> getInspectorServerHost
    65:65:java.lang.String getPackageName() -> getPackageName
    57:57:void setDebugServerHost(java.lang.String) -> setDebugServerHost
com.facebook.react.packagerconnection.ReconnectingWebSocket -> com.facebook.react.packagerconnection.ReconnectingWebSocket:
    52:56:void <init>(java.lang.String,com.facebook.react.packagerconnection.ReconnectingWebSocket$MessageCallback,com.facebook.react.packagerconnection.ReconnectingWebSocket$ConnectionCallback) -> <init>
    124:125:void abort(java.lang.String,java.lang.Throwable) -> abort
    25:25:void access$000(com.facebook.react.packagerconnection.ReconnectingWebSocket) -> access$000
    103:108:void closeQuietly() -> closeQuietly
    113:119:void closeWebSocketQuietly() -> closeWebSocketQuietly
    60:61:void connect() -> connect
    77:80:void delayedReconnect() -> delayedReconnect
    167:174:void onClosed(okhttp3.WebSocket,int,java.lang.String) -> onClosed
    140:149:void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response) -> onFailure
    153:156:void onMessage(okhttp3.WebSocket,java.lang.String) -> onMessage
    160:163:void onMessage(okhttp3.WebSocket,okio.ByteString) -> onMessage
    130:136:void onOpen(okhttp3.WebSocket,okhttp3.Response) -> onOpen
    83:84:void reconnect() -> reconnect
    177:180:void sendMessage(java.lang.String) -> sendMessage
com.facebook.react.packagerconnection.ReconnectingWebSocket$1 -> com.facebook.react.packagerconnection.ReconnectingWebSocket$1:
    93:93:void <init>(com.facebook.react.packagerconnection.ReconnectingWebSocket) -> <init>
    96:96:void run() -> run
com.facebook.react.packagerconnection.RequestOnlyHandler -> com.facebook.react.packagerconnection.RequestOnlyHandler:
    14:14:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    19:19:void onNotification(java.lang.Object) -> onNotification
com.facebook.react.shell.MainPackageConfig -> com.facebook.react.shell.MainPackageConfig:
    22:22:com.facebook.imagepipeline.core.ImagePipelineConfig getFrescoConfig() -> getFrescoConfig
com.facebook.react.shell.MainPackageConfig$Builder -> com.facebook.react.shell.MainPackageConfig$Builder:
    25:25:void <init>() -> <init>
com.facebook.react.shell.MainReactPackage -> com.facebook.react.shell.MainReactPackage:
    106:106:void <init>() -> <init>
    175:202:java.util.List createViewManagers(com.facebook.react.bridge.ReactApplicationContext) -> createViewManagers
    115:117:com.facebook.react.bridge.NativeModule getModule(java.lang.String,com.facebook.react.bridge.ReactApplicationContext) -> getModule
    211:261:com.facebook.react.module.model.ReactModuleInfoProvider getReactModuleInfoProvider() -> getReactModuleInfoProvider
com.facebook.react.shell.MainReactPackage$1 -> com.facebook.react.shell.MainReactPackage$1:
    261:261:void <init>(com.facebook.react.shell.MainReactPackage,java.util.Map) -> <init>
    264:264:java.util.Map getReactModuleInfos() -> getReactModuleInfos
com.facebook.react.touch.JSResponderHandler -> com.facebook.react.touch.JSResponderHandler:
    24:28:void <init>() -> <init>
    48:49:void clearJSResponder() -> clearJSResponder
    53:55:void maybeUnblockNativeResponder() -> maybeUnblockNativeResponder
    61:69:boolean onInterceptTouchEvent(android.view.ViewGroup,android.view.MotionEvent) -> onInterceptTouchEvent
    34:43:void setJSResponder(int,android.view.ViewParent) -> setJSResponder
com.facebook.react.turbomodule.core.CallInvokerHolderImpl -> com.facebook.react.turbomodule.core.CallInvokerHolderImpl:
    21:21:void <clinit>() -> <clinit>
com.facebook.react.turbomodule.core.ReactPackageTurboModuleManagerDelegate -> com.facebook.react.turbomodule.core.ReactPackageTurboModuleManagerDelegate:
    113:119:java.util.List getEagerInitModuleNames() -> getEagerInitModuleNames
    60:69:com.facebook.react.bridge.CxxModuleWrapper getLegacyCxxModule(java.lang.String) -> getLegacyCxxModule
    44:49:com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String) -> getModule
    73:108:com.facebook.react.turbomodule.core.interfaces.TurboModule resolveModule(java.lang.String) -> resolveModule
com.facebook.react.turbomodule.core.ReactPackageTurboModuleManagerDelegate$Builder -> com.facebook.react.turbomodule.core.ReactPackageTurboModuleManagerDelegate$Builder:
    126:126:void <init>() -> <init>
com.facebook.react.turbomodule.core.TurboModuleManager -> com.facebook.react.turbomodule.core.TurboModuleManager:
    29:29:void <clinit>() -> <clinit>
    55:55:java.util.List getEagerInitModuleNames() -> getEagerInitModuleNames
    61:75:com.facebook.react.turbomodule.core.interfaces.TurboModule getJavaModule(java.lang.String) -> getJavaModule
    80:80:com.facebook.react.turbomodule.core.interfaces.TurboModule getModule(java.lang.String) -> getModule
    84:84:java.util.Collection getModules() -> getModules
    88:88:boolean hasModule(java.lang.String) -> hasModule
    108:116:void onCatalystInstanceDestroy() -> onCatalystInstanceDestroy
com.facebook.react.turbomodule.core.TurboModuleManagerDelegate -> com.facebook.react.turbomodule.core.TurboModuleManagerDelegate:
    20:20:void <clinit>() -> <clinit>
    27:28:void <init>() -> <init>
    46:46:java.util.List getEagerInitModuleNames() -> getEagerInitModuleNames
com.facebook.react.uimanager.BaseViewManager -> com.facebook.react.uimanager.BaseViewManager:
    43:54:void <clinit>() -> <clinit>
    39:39:void <init>() -> <init>
    408:410:java.util.Map getExportedCustomDirectEventTypeConstants() -> getExportedCustomDirectEventTypeConstants
    439:439:void logUnsupportedPropertyWarning(java.lang.String) -> logUnsupportedPropertyWarning
    402:403:void onAfterUpdateTransaction(android.view.View) -> onAfterUpdateTransaction
    386:393:void resetTransformProperty(android.view.View) -> resetTransformProperty
    378:382:float sanitizeFloatPropertyValue(float) -> sanitizeFloatPropertyValue
    240:240:void setAccessibilityActions(android.view.View,com.facebook.react.bridge.ReadableArray) -> setAccessibilityActions
    140:141:void setAccessibilityHint(android.view.View,java.lang.String) -> setAccessibilityHint
    133:134:void setAccessibilityLabel(android.view.View,java.lang.String) -> setAccessibilityLabel
    309:310:void setAccessibilityLiveRegion(android.view.View,java.lang.String) -> setAccessibilityLiveRegion
    150:150:void setAccessibilityRole(android.view.View,java.lang.String) -> setAccessibilityRole
    249:251:void setAccessibilityValue(android.view.View,com.facebook.react.bridge.ReadableMap) -> setAccessibilityValue
    72:72:void setBackgroundColor(android.view.View,int) -> setBackgroundColor
    420:420:void setBorderBottomLeftRadius(android.view.View,float) -> setBorderBottomLeftRadius
    425:425:void setBorderBottomRightRadius(android.view.View,float) -> setBorderBottomRightRadius
    415:415:void setBorderRadius(android.view.View,float) -> setBorderRadius
    430:430:void setBorderTopLeftRadius(android.view.View,float) -> setBorderTopLeftRadius
    435:435:void setBorderTopRightRadius(android.view.View,float) -> setBorderTopRightRadius
    94:94:void setElevation(android.view.View,float) -> setElevation
    259:260:void setImportantForAccessibility(android.view.View,java.lang.String) -> setImportantForAccessibility
    126:127:void setNativeId(android.view.View,java.lang.String) -> setNativeId
    88:88:void setOpacity(android.view.View,float) -> setOpacity
    111:111:void setRenderToHardwareTexture(android.view.View,boolean) -> setRenderToHardwareTexture
    275:275:void setRotation(android.view.View,float) -> setRotation
    282:282:void setScaleX(android.view.View,float) -> setScaleX
    289:289:void setScaleY(android.view.View,float) -> setScaleY
    117:120:void setTestId(android.view.View,java.lang.String) -> setTestId
    79:81:void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray) -> setTransform
    319:358:void setTransformProperty(android.view.View,com.facebook.react.bridge.ReadableArray) -> setTransformProperty
    296:296:void setTranslateX(android.view.View,float) -> setTranslateX
    303:303:void setTranslateY(android.view.View,float) -> setTranslateY
    159:174:void setViewState(android.view.View,com.facebook.react.bridge.ReadableMap) -> setViewState
    100:104:void setZIndex(android.view.View,float) -> setZIndex
    397:397:void updateViewAccessibility(android.view.View) -> updateViewAccessibility
    188:229:void updateViewContentDescription(android.view.View) -> updateViewContentDescription
com.facebook.react.uimanager.BaseViewManagerAdapter -> com.facebook.react.uimanager.BaseViewManagerAdapter:
    16:16:void <init>() -> <init>
com.facebook.react.uimanager.BaseViewManagerDelegate -> com.facebook.react.uimanager.BaseViewManagerDelegate:
    24:25:void <init>(com.facebook.react.uimanager.BaseViewManagerInterface) -> <init>
    30:32:void setProperty(android.view.View,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.uimanager.DisplayMetricsHolder -> com.facebook.react.uimanager.DisplayMetricsHolder:
    31:31:void <init>() -> <init>
    107:112:java.util.Map getDisplayMetricsMap(double) -> getDisplayMetricsMap
    117:123:com.facebook.react.bridge.WritableNativeMap getDisplayMetricsNativeMap(double) -> getDisplayMetricsNativeMap
    130:135:java.util.Map getPhysicalPixelsMap(android.util.DisplayMetrics,double) -> getPhysicalPixelsMap
    141:146:com.facebook.react.bridge.WritableNativeMap getPhysicalPixelsNativeMap(android.util.DisplayMetrics,double) -> getPhysicalPixelsNativeMap
    103:103:android.util.DisplayMetrics getScreenDisplayMetrics() -> getScreenDisplayMetrics
    95:95:android.util.DisplayMetrics getWindowDisplayMetrics() -> getWindowDisplayMetrics
    52:83:void initDisplayMetrics(android.content.Context) -> initDisplayMetrics
    45:48:void initDisplayMetricsIfNotInitialized(android.content.Context) -> initDisplayMetricsIfNotInitialized
    99:99:void setScreenDisplayMetrics(android.util.DisplayMetrics) -> setScreenDisplayMetrics
    41:41:void setWindowDisplayMetrics(android.util.DisplayMetrics) -> setWindowDisplayMetrics
com.facebook.react.uimanager.FloatUtil -> com.facebook.react.uimanager.FloatUtil:
    10:10:void <init>() -> <init>
    15:16:boolean floatsEqual(float,float) -> floatsEqual
com.facebook.react.uimanager.GuardedFrameCallback -> com.facebook.react.uimanager.GuardedFrameCallback:
    22:23:void <init>(com.facebook.react.bridge.ReactContext) -> <init>
    29:31:void doFrame(long) -> doFrame
com.facebook.react.uimanager.IllegalViewOperationException -> com.facebook.react.uimanager.IllegalViewOperationException:
    20:20:void <init>(java.lang.String) -> <init>
    24:24:void <init>(java.lang.String,android.view.View,java.lang.Throwable) -> <init>
com.facebook.react.uimanager.JSTouchDispatcher -> com.facebook.react.uimanager.JSTouchDispatcher:
    35:36:void <init>(android.view.ViewGroup) -> <init>
    170:182:void dispatchCancelEvent(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher) -> dispatchCancelEvent
    163:162:int findTargetTagAndSetCoordinates(android.view.MotionEvent) -> findTargetTagAndSetCoordinates
    61:154:void handleTouchEvent(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher) -> handleTouchEvent
    41:50:void onChildStartedNativeGesture(android.view.MotionEvent,com.facebook.react.uimanager.events.EventDispatcher) -> onChildStartedNativeGesture
com.facebook.react.uimanager.LayoutShadowNode -> com.facebook.react.uimanager.LayoutShadowNode:
    74:75:void <init>() -> <init>
    756:756:int maybeTransformLeftRightToStartEnd(int) -> maybeTransformLeftRightToStartEnd
    460:472:void setAlignContent(java.lang.String) -> setAlignContent
    400:412:void setAlignItems(java.lang.String) -> setAlignItems
    340:352:void setAlignSelf(java.lang.String) -> setAlignSelf
    260:260:void setAspectRatio(float) -> setAspectRatio
    714:718:void setBorderWidths(int,float) -> setBorderWidths
    604:616:void setDisplay(java.lang.String) -> setDisplay
    213:216:void setFlex(float) -> setFlex
    237:255:void setFlexBasis(com.facebook.react.bridge.Dynamic) -> setFlexBasis
    265:277:void setFlexDirection(java.lang.String) -> setFlexDirection
    221:224:void setFlexGrow(float) -> setFlexGrow
    229:232:void setFlexShrink(float) -> setFlexShrink
    305:317:void setFlexWrap(java.lang.String) -> setFlexWrap
    150:168:void setHeight(com.facebook.react.bridge.Dynamic) -> setHeight
    520:532:void setJustifyContent(java.lang.String) -> setJustifyContent
    644:665:void setMargins(int,com.facebook.react.bridge.Dynamic) -> setMargins
    193:208:void setMaxHeight(com.facebook.react.bridge.Dynamic) -> setMaxHeight
    130:145:void setMaxWidth(com.facebook.react.bridge.Dynamic) -> setMaxWidth
    173:188:void setMinHeight(com.facebook.react.bridge.Dynamic) -> setMinHeight
    103:118:void setMinWidth(com.facebook.react.bridge.Dynamic) -> setMinWidth
    570:581:void setOverflow(java.lang.String) -> setOverflow
    681:699:void setPaddings(int,com.facebook.react.bridge.Dynamic) -> setPaddings
    772:784:void setPosition(java.lang.String) -> setPosition
    731:752:void setPositionValues(int,com.facebook.react.bridge.Dynamic) -> setPositionValues
    803:803:void setShouldNotifyOnLayout(boolean) -> setShouldNotifyOnLayout
    80:98:void setWidth(com.facebook.react.bridge.Dynamic) -> setWidth
com.facebook.react.uimanager.LayoutShadowNode$1 -> com.facebook.react.uimanager.LayoutShadowNode$1:
    85:85:void <clinit>() -> <clinit>
com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue -> com.facebook.react.uimanager.LayoutShadowNode$MutableYogaValue:
    39:39:void <init>(com.facebook.react.uimanager.LayoutShadowNode$1) -> <init>
    43:43:void <init>() -> <init>
    51:67:void setFromDynamic(com.facebook.react.bridge.Dynamic) -> setFromDynamic
com.facebook.react.uimanager.MatrixMathHelper -> com.facebook.react.uimanager.MatrixMathHelper:
    16:16:void <init>() -> <init>
    488:488:void applyPerspective(double[],double) -> applyPerspective
    523:526:void applyRotateX(double[],double) -> applyRotateX
    530:533:void applyRotateY(double[],double) -> applyRotateY
    538:541:void applyRotateZ(double[],double) -> applyRotateZ
    492:492:void applyScaleX(double[],double) -> applyScaleX
    496:496:void applyScaleY(double[],double) -> applyScaleY
    515:515:void applySkewX(double[],double) -> applySkewX
    519:519:void applySkewY(double[],double) -> applySkewY
    504:505:void applyTranslate2D(double[],double,double) -> applyTranslate2D
    509:511:void applyTranslate3D(double[],double,double,double) -> applyTranslate3D
    103:214:void decomposeMatrix(double[],com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext) -> decomposeMatrix
    218:233:double determinant(double[]) -> determinant
    267:286:double[] inverse(double[]) -> inverse
    43:46:boolean isZero(double) -> isZero
    50:98:void multiplyInto(double[],double[],double[]) -> multiplyInto
    415:419:void multiplyVectorByMatrix(double[],double[],double[]) -> multiplyVectorByMatrix
    476:484:void resetIdentityMatrix(double[]) -> resetIdentityMatrix
    462:462:double roundTo3Places(double) -> roundTo3Places
    405:405:double[] transpose(double[]) -> transpose
    446:446:double[] v3Combine(double[],double[],double,double) -> v3Combine
    456:456:double[] v3Cross(double[],double[]) -> v3Cross
    438:438:double v3Dot(double[],double[]) -> v3Dot
    424:424:double v3Length(double[]) -> v3Length
    429:430:double[] v3Normalize(double[],double) -> v3Normalize
com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext -> com.facebook.react.uimanager.MatrixMathHelper$MatrixDecompositionContext:
    20:25:void <init>() -> <init>
    34:38:void reset() -> reset
    28:29:void resetArray(double[]) -> resetArray
com.facebook.react.uimanager.MeasureSpecAssertions -> com.facebook.react.uimanager.MeasureSpecAssertions:
    13:13:void <init>() -> <init>
    16:20:void assertExplicitMeasureSpec(int,int) -> assertExplicitMeasureSpec
com.facebook.react.uimanager.NativeKind -> com.facebook.react.uimanager.NativeKind:
    19:14:void <clinit>() -> <clinit>
    14:14:void <init>(java.lang.String,int) -> <init>
    14:14:com.facebook.react.uimanager.NativeKind valueOf(java.lang.String) -> valueOf
    14:14:com.facebook.react.uimanager.NativeKind[] values() -> values
com.facebook.react.uimanager.NativeViewHierarchyManager -> com.facebook.react.uimanager.NativeViewHierarchyManager:
    87:87:void <init>(com.facebook.react.uimanager.ViewManagerRegistry) -> <init>
    90:95:void <init>(com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.RootViewManager) -> <init>
    568:569:void addRootView(int,android.view.View) -> addRootView
    572:587:void addRootViewGroup(int,android.view.View) -> addRootViewGroup
    526:526:boolean arrayContains(int[],int) -> arrayContains
    590:591:void cacheDroppedTag(int) -> cacheDroppedTag
    766:766:void clearJSResponder() -> clearJSResponder
    774:774:void clearLayoutAnimation() -> clearLayoutAnimation
    669:675:void computeBoundingBox(android.view.View,int[]) -> computeBoundingBox
    770:770:void configureLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback) -> configureLayoutAnimation
    292:351:java.lang.String constructManageChildrenErrorMessage(android.view.ViewGroup,com.facebook.react.uimanager.ViewGroupManager,int[],com.facebook.react.uimanager.ViewAtIndex[],int[]) -> constructManageChildrenErrorMessage
    540:544:java.lang.String constructSetChildrenErrorMessage(android.view.ViewGroup,com.facebook.react.uimanager.ViewGroupManager,com.facebook.react.bridge.ReadableArray) -> constructSetChildrenErrorMessage
    261:283:void createView(com.facebook.react.uimanager.ThemedReactContext,int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap) -> createView
    837:838:void dismissPopupMenu() -> dismissPopupMenu
    780:783:void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray) -> dispatchCommand
    793:796:void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray) -> dispatchCommand
    596:630:void dropView(android.view.View) -> dropView
    735:738:int findTargetTagForTouch(int,float,float) -> findTargetTagForTouch
    371:374:android.util.SparseIntArray getOrCreatePendingIndicesToDelete(int) -> getOrCreatePendingIndicesToDelete
    876:878:com.facebook.react.uimanager.ThemedReactContext getReactContextForView(int) -> getReactContextForView
    393:404:void manageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[],int[]) -> manageChildren
    679:699:void mapRectFromViewToWindowCoords(android.view.View,android.graphics.RectF) -> mapRectFromViewToWindowCoords
    648:651:void measure(int,int[]) -> measure
    712:715:void measureInWindow(int,int[]) -> measureInWindow
    361:361:int normalizeIndex(int,android.util.SparseIntArray) -> normalizeIndex
    633:641:void removeRootView(int) -> removeRootView
    99:101:android.view.View resolveView(int) -> resolveView
    108:119:com.facebook.react.uimanager.ViewManager resolveViewManager(int) -> resolveViewManager
    884:886:void sendAccessibilityEvent(int,int) -> sendAccessibilityEvent
    549:564:void setChildren(int,com.facebook.react.bridge.ReadableArray) -> setChildren
    746:763:void setJSResponder(int,int,boolean) -> setJSResponder
    125:125:void setLayoutAnimationEnabled(boolean) -> setLayoutAnimationEnabled
    815:833:void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback) -> showPopupMenu
    129:136:void updateInstanceHandle(int,long) -> updateInstanceHandle
    231:232:void updateInstanceHandle(android.view.View,long) -> updateInstanceHandle
    163:227:void updateLayout(int,int,int,int,int,int) -> updateLayout
    249:252:void updateLayout(android.view.View,int,int,int,int) -> updateLayout
    139:151:void updateProperties(int,com.facebook.react.uimanager.ReactStylesDiffMap) -> updateProperties
    154:159:void updateViewExtraData(int,java.lang.Object) -> updateViewExtraData
com.facebook.react.uimanager.NativeViewHierarchyManager$1 -> com.facebook.react.uimanager.NativeViewHierarchyManager$1:
    484:484:void <init>(com.facebook.react.uimanager.NativeViewHierarchyManager,com.facebook.react.uimanager.ViewGroupManager,android.view.ViewGroup,android.view.View,android.util.SparseIntArray,int) -> <init>
    489:495:void onAnimationEnd() -> onAnimationEnd
com.facebook.react.uimanager.NativeViewHierarchyManager$PopupMenuCallbackHandler -> com.facebook.react.uimanager.NativeViewHierarchyManager$PopupMenuCallbackHandler:
    842:842:void <init>(com.facebook.react.bridge.Callback,com.facebook.react.uimanager.NativeViewHierarchyManager$1) -> <init>
    848:849:void <init>(com.facebook.react.bridge.Callback) -> <init>
    854:856:void onDismiss(android.widget.PopupMenu) -> onDismiss
    862:864:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.facebook.react.uimanager.NativeViewHierarchyOptimizer -> com.facebook.react.uimanager.NativeViewHierarchyOptimizer:
    75:77:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ShadowNodeRegistry) -> <init>
    312:327:void addGrandchildren(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int) -> addGrandchildren
    298:307:void addNativeChild(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int) -> addNativeChild
    247:262:void addNodeToNode(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int) -> addNodeToNode
    294:294:void addNonNativeChild(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int) -> addNonNativeChild
    333:361:void applyLayoutBase(com.facebook.react.uimanager.ReactShadowNode) -> applyLayoutBase
    365:391:void applyLayoutRecursive(com.facebook.react.uimanager.ReactShadowNode,int,int) -> applyLayoutRecursive
    94:99:void handleCreateView(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap) -> handleCreateView
    215:216:void handleForceViewToBeNonLayoutOnly(com.facebook.react.uimanager.ReactShadowNode) -> handleForceViewToBeNonLayoutOnly
    156:172:void handleManageChildren(com.facebook.react.uimanager.ReactShadowNode,int[],int[],com.facebook.react.uimanager.ViewAtIndex[],int[],int[]) -> handleManageChildren
    106:106:void handleRemoveNode(com.facebook.react.uimanager.ReactShadowNode) -> handleRemoveNode
    187:189:void handleSetChildren(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.bridge.ReadableArray) -> handleSetChildren
    211:211:void handleUpdateLayout(com.facebook.react.uimanager.ReactShadowNode) -> handleUpdateLayout
    121:125:void handleUpdateView(com.facebook.react.uimanager.ReactShadowNode,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap) -> handleUpdateView
    440:446:boolean isLayoutOnlyAndCollapsable(com.facebook.react.uimanager.ReactStylesDiffMap) -> isLayoutOnlyAndCollapsable
    225:225:void onBatchComplete() -> onBatchComplete
    272:283:void removeNodeFromParent(com.facebook.react.uimanager.ReactShadowNode,boolean) -> removeNodeFromParent
    397:432:void transitionLayoutOnlyViewToNativeView(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactStylesDiffMap) -> transitionLayoutOnlyViewToNativeView
    230:243:com.facebook.react.uimanager.NativeViewHierarchyOptimizer$NodeIndexPair walkUpUntilNativeKindIsParent(com.facebook.react.uimanager.ReactShadowNode,int) -> walkUpUntilNativeKindIsParent
com.facebook.react.uimanager.NativeViewHierarchyOptimizer$NodeIndexPair -> com.facebook.react.uimanager.NativeViewHierarchyOptimizer$NodeIndexPair:
    53:55:void <init>(com.facebook.react.uimanager.ReactShadowNode,int) -> <init>
com.facebook.react.uimanager.NoSuchNativeViewException -> com.facebook.react.uimanager.NoSuchNativeViewException:
    17:17:void <init>(java.lang.String) -> <init>
com.facebook.react.uimanager.OnLayoutEvent -> com.facebook.react.uimanager.OnLayoutEvent:
    19:19:void <clinit>() -> <clinit>
    38:38:void <init>() -> <init>
    55:65:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    41:45:void init(int,int,int,int,int) -> init
    25:29:com.facebook.react.uimanager.OnLayoutEvent obtain(int,int,int,int,int) -> obtain
    35:35:void onDispose() -> onDispose
com.facebook.react.uimanager.PixelUtil -> com.facebook.react.uimanager.PixelUtil:
    14:14:void <init>() -> <init>
    61:61:float getDisplayMetricDensity() -> getDisplayMetricDensity
    56:56:float toDIPFromPixel(float) -> toDIPFromPixel
    19:18:float toPixelFromDIP(float) -> toPixelFromDIP
    24:24:float toPixelFromDIP(double) -> toPixelFromDIP
    34:34:float toPixelFromSP(float) -> toPixelFromSP
    39:41:float toPixelFromSP(float,float) -> toPixelFromSP
    29:29:float toSPFromPixel(float) -> toSPFromPixel
com.facebook.react.uimanager.PointerEvents -> com.facebook.react.uimanager.PointerEvents:
    17:14:void <clinit>() -> <clinit>
    14:14:void <init>(java.lang.String,int) -> <init>
    14:14:com.facebook.react.uimanager.PointerEvents valueOf(java.lang.String) -> valueOf
    14:14:com.facebook.react.uimanager.PointerEvents[] values() -> values
com.facebook.react.uimanager.ReactAccessibilityDelegate -> com.facebook.react.uimanager.ReactAccessibilityDelegate:
    49:55:void <clinit>() -> <clinit>
    173:175:void <init>() -> <init>
    249:271:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    187:241:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    279:307:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    66:70:void scheduleAccessibilityEventSender(android.view.View) -> scheduleAccessibilityEventSender
    407:411:void setDelegate(android.view.View) -> setDelegate
    340:399:void setRole(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole,android.content.Context) -> setRole
    312:325:void setState(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,com.facebook.react.bridge.ReadableMap,android.content.Context) -> setState
com.facebook.react.uimanager.ReactAccessibilityDelegate$1 -> com.facebook.react.uimanager.ReactAccessibilityDelegate$1:
    176:176:void <init>(com.facebook.react.uimanager.ReactAccessibilityDelegate) -> <init>
    179:180:void handleMessage(android.os.Message) -> handleMessage
com.facebook.react.uimanager.ReactAccessibilityDelegate$2 -> com.facebook.react.uimanager.ReactAccessibilityDelegate$2:
    109:109:void <clinit>() -> <clinit>
com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole -> com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole:
    80:79:void <clinit>() -> <clinit>
    79:79:void <init>(java.lang.String,int) -> <init>
    155:160:com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole fromValue(java.lang.String) -> fromValue
    109:150:java.lang.String getValue(com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole) -> getValue
    79:79:com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole valueOf(java.lang.String) -> valueOf
    79:79:com.facebook.react.uimanager.ReactAccessibilityDelegate$AccessibilityRole[] values() -> values
com.facebook.react.uimanager.ReactClippingViewGroupHelper -> com.facebook.react.uimanager.ReactClippingViewGroupHelper:
    25:25:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    36:58:void calculateClippingRect(android.view.View,android.graphics.Rect) -> calculateClippingRect
    67:103:boolean getChildVisibleRectHelper(android.view.View,android.graphics.Rect,android.graphics.Point,android.view.View,java.lang.String) -> getChildVisibleRectHelper
com.facebook.react.uimanager.ReactRootViewTagGenerator -> com.facebook.react.uimanager.ReactRootViewTagGenerator:
    11:11:void <init>() -> <init>
    20:22:int getNextRootViewTag() -> getNextRootViewTag
com.facebook.react.uimanager.ReactShadowNodeImpl -> com.facebook.react.uimanager.ReactShadowNodeImpl:
    61:61:void <clinit>() -> <clinit>
    90:98:void <init>() -> <init>
    55:55:void addChildAt(com.facebook.react.uimanager.ReactShadowNode,int) -> addChildAt
    206:232:void addChildAt(com.facebook.react.uimanager.ReactShadowNodeImpl,int) -> addChildAt
    55:55:void addNativeChildAt(com.facebook.react.uimanager.ReactShadowNode,int) -> addNativeChildAt
    486:494:void addNativeChildAt(com.facebook.react.uimanager.ReactShadowNodeImpl,int) -> addNativeChildAt
    460:460:void calculateLayout() -> calculateLayout
    465:465:void calculateLayout(float,float) -> calculateLayout
    1047:1047:java.lang.Iterable calculateLayoutOnChildren() -> calculateLayoutOnChildren
    182:195:void dirty() -> dirty
    346:379:boolean dispatchUpdates(float,float,com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.NativeViewHierarchyOptimizer) -> dispatchUpdates
    1023:1025:void dispose() -> dispose
    55:55:com.facebook.react.uimanager.ReactShadowNode getChildAt(int) -> getChildAt
    262:263:com.facebook.react.uimanager.ReactShadowNodeImpl getChildAt(int) -> getChildAt
    257:257:int getChildCount() -> getChildCount
    1042:1042:java.lang.Integer getHeightMeasureSpec() -> getHeightMeasureSpec
    694:694:com.facebook.yoga.YogaDirection getLayoutDirection() -> getLayoutDirection
    665:665:float getLayoutHeight() -> getLayoutHeight
    55:55:com.facebook.react.uimanager.ReactShadowNode getLayoutParent() -> getLayoutParent
    429:429:com.facebook.react.uimanager.ReactShadowNodeImpl getLayoutParent() -> getLayoutParent
    660:660:float getLayoutWidth() -> getLayoutWidth
    650:650:float getLayoutX() -> getLayoutX
    655:655:float getLayoutY() -> getLayoutY
    517:517:int getNativeChildCount() -> getNativeChildCount
    550:550:com.facebook.react.uimanager.NativeKind getNativeKind() -> getNativeKind
    55:55:int getNativeOffsetForChild(com.facebook.react.uimanager.ReactShadowNode) -> getNativeOffsetForChild
    633:643:int getNativeOffsetForChild(com.facebook.react.uimanager.ReactShadowNodeImpl) -> getNativeOffsetForChild
    55:55:com.facebook.react.uimanager.ReactShadowNode getNativeParent() -> getNativeParent
    528:528:com.facebook.react.uimanager.ReactShadowNodeImpl getNativeParent() -> getNativeParent
    874:874:float getPadding(int) -> getPadding
    55:55:com.facebook.react.uimanager.ReactShadowNode getParent() -> getParent
    423:423:com.facebook.react.uimanager.ReactShadowNodeImpl getParent() -> getParent
    397:397:int getReactTag() -> getReactTag
    407:408:int getRootTag() -> getRootTag
    689:689:int getScreenHeight() -> getScreenHeight
    683:683:int getScreenWidth() -> getScreenWidth
    671:671:int getScreenX() -> getScreenX
    677:677:int getScreenY() -> getScreenY
    744:744:com.facebook.yoga.YogaValue getStyleHeight() -> getStyleHeight
    704:704:com.facebook.yoga.YogaValue getStyleWidth() -> getStyleWidth
    445:445:com.facebook.react.uimanager.ThemedReactContext getThemedContext() -> getThemedContext
    579:580:int getTotalNativeNodeContributionToParent() -> getTotalNativeNodeContributionToParent
    147:147:java.lang.String getViewClass() -> getViewClass
    1037:1037:java.lang.Integer getWidthMeasureSpec() -> getWidthMeasureSpec
    470:470:boolean hasNewLayout() -> hasNewLayout
    152:152:boolean hasUpdates() -> hasUpdates
    55:55:int indexOf(com.facebook.react.uimanager.ReactShadowNode) -> indexOf
    271:271:int indexOf(com.facebook.react.uimanager.ReactShadowNodeImpl) -> indexOf
    55:55:int indexOfNativeChild(com.facebook.react.uimanager.ReactShadowNode) -> indexOfNativeChild
    522:523:int indexOfNativeChild(com.facebook.react.uimanager.ReactShadowNodeImpl) -> indexOfNativeChild
    55:55:boolean isDescendantOf(com.facebook.react.uimanager.ReactShadowNode) -> isDescendantOf
    562:571:boolean isDescendantOf(com.facebook.react.uimanager.ReactShadowNodeImpl) -> isDescendantOf
    201:201:boolean isDirty() -> isDirty
    545:545:boolean isLayoutOnly() -> isLayoutOnly
    973:973:boolean isMeasureDefined() -> isMeasureDefined
    131:131:boolean isYogaLeafNode() -> isYogaLeafNode
    475:476:void markLayoutSeen() -> markLayoutSeen
    157:159:void markUpdateSeen() -> markUpdateSeen
    165:171:void markUpdated() -> markUpdated
    507:511:void removeAllNativeChildren() -> removeAllNativeChildren
    276:294:void removeAndDisposeAllChildren() -> removeAndDisposeAllChildren
    55:55:com.facebook.react.uimanager.ReactShadowNode removeChildAt(int) -> removeChildAt
    237:238:com.facebook.react.uimanager.ReactShadowNodeImpl removeChildAt(int) -> removeChildAt
    55:55:com.facebook.react.uimanager.ReactShadowNode removeNativeChildAt(int) -> removeNativeChildAt
    499:501:com.facebook.react.uimanager.ReactShadowNodeImpl removeNativeChildAt(int) -> removeNativeChildAt
    839:839:void setAlignContent(com.facebook.yoga.YogaAlign) -> setAlignContent
    834:834:void setAlignItems(com.facebook.yoga.YogaAlign) -> setAlignItems
    829:829:void setAlignSelf(com.facebook.yoga.YogaAlign) -> setAlignSelf
    938:938:void setBorder(int,float) -> setBorder
    884:885:void setDefaultPadding(int,float) -> setDefaultPadding
    854:854:void setDisplay(com.facebook.yoga.YogaDisplay) -> setDisplay
    784:784:void setFlex(float) -> setFlex
    799:799:void setFlexBasis(float) -> setFlexBasis
    804:804:void setFlexBasisAuto() -> setFlexBasisAuto
    809:809:void setFlexBasisPercent(float) -> setFlexBasisPercent
    819:819:void setFlexDirection(com.facebook.yoga.YogaFlexDirection) -> setFlexDirection
    789:789:void setFlexGrow(float) -> setFlexGrow
    794:794:void setFlexShrink(float) -> setFlexShrink
    824:824:void setFlexWrap(com.facebook.yoga.YogaWrap) -> setFlexWrap
    537:540:void setIsLayoutOnly(boolean) -> setIsLayoutOnly
    844:844:void setJustifyContent(com.facebook.yoga.YogaJustify) -> setJustifyContent
    699:699:void setLayoutDirection(com.facebook.yoga.YogaDirection) -> setLayoutDirection
    55:55:void setLayoutParent(com.facebook.react.uimanager.ReactShadowNode) -> setLayoutParent
    434:434:void setLayoutParent(com.facebook.react.uimanager.ReactShadowNodeImpl) -> setLayoutParent
    859:859:void setMargin(int,float) -> setMargin
    869:869:void setMarginAuto(int) -> setMarginAuto
    864:864:void setMarginPercent(int,float) -> setMarginPercent
    968:968:void setMeasureFunction(com.facebook.yoga.YogaMeasureFunction) -> setMeasureFunction
    1031:1032:void setMeasureSpecs(int,int) -> setMeasureSpecs
    849:849:void setOverflow(com.facebook.yoga.YogaOverflow) -> setOverflow
    890:892:void setPadding(int,float) -> setPadding
    897:899:void setPaddingPercent(int,float) -> setPaddingPercent
    943:943:void setPosition(int,float) -> setPosition
    948:948:void setPositionPercent(int,float) -> setPositionPercent
    953:953:void setPositionType(com.facebook.yoga.YogaPositionType) -> setPositionType
    402:402:void setReactTag(int) -> setReactTag
    413:413:void setRootTag(int) -> setRootTag
    958:958:void setShouldNotifyOnLayout(boolean) -> setShouldNotifyOnLayout
    814:814:void setStyleAspectRatio(float) -> setStyleAspectRatio
    749:749:void setStyleHeight(float) -> setStyleHeight
    759:759:void setStyleHeightAuto() -> setStyleHeightAuto
    754:754:void setStyleHeightPercent(float) -> setStyleHeightPercent
    774:774:void setStyleMaxHeight(float) -> setStyleMaxHeight
    779:779:void setStyleMaxHeightPercent(float) -> setStyleMaxHeightPercent
    734:734:void setStyleMaxWidth(float) -> setStyleMaxWidth
    739:739:void setStyleMaxWidthPercent(float) -> setStyleMaxWidthPercent
    764:764:void setStyleMinHeight(float) -> setStyleMinHeight
    769:769:void setStyleMinHeightPercent(float) -> setStyleMinHeightPercent
    724:724:void setStyleMinWidth(float) -> setStyleMinWidth
    729:729:void setStyleMinWidthPercent(float) -> setStyleMinWidthPercent
    709:709:void setStyleWidth(float) -> setStyleWidth
    719:719:void setStyleWidthAuto() -> setStyleWidthAuto
    714:714:void setStyleWidthPercent(float) -> setStyleWidthPercent
    450:450:void setThemedContext(com.facebook.react.uimanager.ThemedReactContext) -> setThemedContext
    418:418:void setViewClassName(java.lang.String) -> setViewClassName
    455:455:boolean shouldNotifyOnLayout() -> shouldNotifyOnLayout
    587:587:java.lang.String toString() -> toString
    298:305:void updateNativeChildrenCountInParent(int) -> updateNativeChildrenCountInParent
    922:931:void updatePadding() -> updatePadding
    320:321:void updateProperties(com.facebook.react.uimanager.ReactStylesDiffMap) -> updateProperties
com.facebook.react.uimanager.ReactStylesDiffMap -> com.facebook.react.uimanager.ReactStylesDiffMap:
    39:40:void <init>(com.facebook.react.bridge.ReadableMap) -> <init>
    80:80:com.facebook.react.bridge.ReadableArray getArray(java.lang.String) -> getArray
    56:56:boolean getBoolean(java.lang.String,boolean) -> getBoolean
    64:66:float getFloat(java.lang.String,float) -> getFloat
    70:70:int getInt(java.lang.String,int) -> getInt
    85:85:com.facebook.react.bridge.ReadableMap getMap(java.lang.String) -> getMap
    75:75:java.lang.String getString(java.lang.String) -> getString
    48:48:boolean hasKey(java.lang.String) -> hasKey
    95:95:java.lang.String toString() -> toString
com.facebook.react.uimanager.ReactYogaConfigProvider -> com.facebook.react.uimanager.ReactYogaConfigProvider:
    13:13:void <init>() -> <init>
    18:23:com.facebook.yoga.YogaConfig get() -> get
com.facebook.react.uimanager.RootViewManager -> com.facebook.react.uimanager.RootViewManager:
    14:14:void <init>() -> <init>
    14:14:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    25:25:android.view.ViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
com.facebook.react.uimanager.RootViewUtil -> com.facebook.react.uimanager.RootViewUtil:
    14:14:void <init>() -> <init>
    20:28:com.facebook.react.uimanager.RootView getRootView(android.view.View) -> getRootView
com.facebook.react.uimanager.ShadowNodeRegistry -> com.facebook.react.uimanager.ShadowNodeRegistry:
    25:28:void <init>() -> <init>
    55:56:void addNode(com.facebook.react.uimanager.ReactShadowNode) -> addNode
    32:35:void addRootNode(com.facebook.react.uimanager.ReactShadowNode) -> addRootNode
    69:70:com.facebook.react.uimanager.ReactShadowNode getNode(int) -> getNode
    79:80:int getRootNodeCount() -> getRootNodeCount
    84:85:int getRootTag(int) -> getRootTag
    74:75:boolean isRootNode(int) -> isRootNode
    60:62:void removeNode(int) -> removeNode
    39:46:void removeRootNode(int) -> removeRootNode
com.facebook.react.uimanager.SimpleViewManager -> com.facebook.react.uimanager.SimpleViewManager:
    20:20:void <init>() -> <init>
    20:20:com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    25:25:com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    30:30:java.lang.Class getShadowNodeClass() -> getShadowNodeClass
com.facebook.react.uimanager.Spacing -> com.facebook.react.uimanager.Spacing:
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    65:67:void <init>(float) -> <init>
    113:129:float get(int) -> get
    144:144:float getRaw(int) -> getRaw
    167:167:float[] newFullSpacingArray() -> newFullSpacingArray
    87:96:boolean set(int,float) -> set
com.facebook.react.uimanager.ThemedReactContext -> com.facebook.react.uimanager.ThemedReactContext:
    36:40:void <init>(com.facebook.react.bridge.ReactApplicationContext,android.content.Context,java.lang.String) -> <init>
    46:46:void addLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener) -> addLifecycleEventListener
    61:61:android.app.Activity getCurrentActivity() -> getCurrentActivity
    56:56:boolean hasCurrentActivity() -> hasCurrentActivity
    51:51:void removeLifecycleEventListener(com.facebook.react.bridge.LifecycleEventListener) -> removeLifecycleEventListener
com.facebook.react.uimanager.TouchTargetHelper -> com.facebook.react.uimanager.TouchTargetHelper:
    27:30:void <clinit>() -> <clinit>
    25:25:void <init>() -> <init>
    97:98:android.view.View findClosestReactAncestor(android.view.View) -> findClosestReactAncestor
    78:90:int findTargetTagAndCoordinatesForTouch(float,float,android.view.ViewGroup,float[],int[]) -> findTargetTagAndCoordinatesForTouch
    42:42:int findTargetTagForTouch(float,float,android.view.ViewGroup) -> findTargetTagForTouch
    115:139:android.view.View findTouchTargetView(float[],android.view.ViewGroup) -> findTouchTargetView
    193:256:android.view.View findTouchTargetViewWithPointerEvents(float[],android.view.View) -> findTouchTargetViewWithPointerEvents
    261:266:int getTouchTargetForView(android.view.View,float,float) -> getTouchTargetForView
    152:179:boolean isTransformedTouchPointInView(float,float,android.view.ViewGroup,android.view.View,android.graphics.PointF) -> isTransformedTouchPointInView
com.facebook.react.uimanager.TransformHelper -> com.facebook.react.uimanager.TransformHelper:
    21:21:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    32:44:double convertToRadians(com.facebook.react.bridge.ReadableMap,java.lang.String) -> convertToRadians
    48:96:void processTransform(com.facebook.react.bridge.ReadableArray,double[]) -> processTransform
com.facebook.react.uimanager.TransformHelper$1 -> com.facebook.react.uimanager.TransformHelper$1:
    22:22:void <init>() -> <init>
    22:22:java.lang.Object initialValue() -> initialValue
com.facebook.react.uimanager.UIImplementation -> com.facebook.react.uimanager.UIImplementation:
    89:89:void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.EventDispatcher,int) -> <init>
    103:109:void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.events.EventDispatcher) -> <init>
    933:933:void addUIBlock(com.facebook.react.uimanager.UIBlock) -> addUIBlock
    898:929:void applyUpdatesRecursive(com.facebook.react.uimanager.ReactShadowNode,float,float) -> applyUpdatesRecursive
    847:854:void assertNodeDoesNotNeedCustomLayoutForChildren(com.facebook.react.uimanager.ReactShadowNode) -> assertNodeDoesNotNeedCustomLayoutForChildren
    835:836:void assertViewExists(int,java.lang.String) -> assertViewExists
    877:894:void calculateRootLayout(com.facebook.react.uimanager.ReactShadowNode) -> calculateRootLayout
    707:707:void clearJSResponder() -> clearJSResponder
    688:688:void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback) -> configureNextLayoutAnimation
    113:118:com.facebook.react.uimanager.ReactShadowNode createRootShadowNode() -> createRootShadowNode
    123:124:com.facebook.react.uimanager.ReactShadowNode createShadowNode(java.lang.String) -> createShadowNode
    236:254:void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap) -> createView
    739:739:void dismissPopupMenu() -> dismissPopupMenu
    713:714:void dispatchViewManagerCommand(int,int,com.facebook.react.bridge.ReadableArray) -> dispatchViewManagerCommand
    719:720:void dispatchViewManagerCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray) -> dispatchViewManagerCommand
    594:605:void dispatchViewUpdates(int) -> dispatchViewUpdates
    614:615:void dispatchViewUpdatesIfNeeded() -> dispatchViewUpdatesIfNeeded
    514:514:void findSubviewIn(int,float,float,com.facebook.react.bridge.Callback) -> findSubviewIn
    231:231:java.util.Map getProfiledBatchPerfCounters() -> getProfiledBatchPerfCounters
    136:136:com.facebook.react.uimanager.UIViewOperationQueue getUIViewOperationQueue() -> getUIViewOperationQueue
    259:260:void handleCreateView(com.facebook.react.uimanager.ReactShadowNode,int,com.facebook.react.uimanager.ReactStylesDiffMap) -> handleCreateView
    295:296:void handleUpdateView(com.facebook.react.uimanager.ReactShadowNode,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap) -> handleUpdateView
    316:418:void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray) -> manageChildren
    543:543:void measure(int,com.facebook.react.bridge.Callback) -> measure
    552:552:void measureInWindow(int,com.facebook.react.bridge.Callback) -> measureInWindow
    564:571:void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback) -> measureLayout
    776:779:void measureLayout(int,int,int[]) -> measureLayout
    581:588:void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback) -> measureLayoutRelativeToParent
    798:800:void measureLayoutRelativeToParent(int,int[]) -> measureLayoutRelativeToParent
    815:831:void measureLayoutRelativeToVerifiedAncestor(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactShadowNode,int[]) -> measureLayoutRelativeToVerifiedAncestor
    867:873:void notifyOnBeforeLayoutRecursive(com.facebook.react.uimanager.ReactShadowNode) -> notifyOnBeforeLayoutRecursive
    751:751:void onHostPause() -> onHostPause
    747:747:void onHostResume() -> onHostResume
    937:937:void prependUIBlock(com.facebook.react.uimanager.UIBlock) -> prependUIBlock
    227:227:void profileNextBatch() -> profileNextBatch
    166:181:void registerRootView(android.view.View,int,com.facebook.react.uimanager.ThemedReactContext) -> registerRootView
    192:194:void removeRootShadowNode(int) -> removeRootShadowNode
    186:187:void removeRootView(int) -> removeRootView
    762:763:void removeShadowNode(com.facebook.react.uimanager.ReactShadowNode) -> removeShadowNode
    767:772:void removeShadowNodeRecursive(com.facebook.react.uimanager.ReactShadowNode) -> removeShadowNodeRecursive
    487:489:void removeSubviewsFromContainerWithID(int) -> removeSubviewsFromContainerWithID
    449:450:void replaceExistingNonRootView(int,int) -> replaceExistingNonRootView
    941:950:int resolveRootTagFromReactTag(int) -> resolveRootTagFromReactTag
    128:128:com.facebook.react.uimanager.ReactShadowNode resolveShadowNode(int) -> resolveShadowNode
    132:132:com.facebook.react.uimanager.ViewManager resolveViewManager(java.lang.String) -> resolveViewManager
    743:743:void sendAccessibilityEvent(int,int) -> sendAccessibilityEvent
    429:442:void setChildren(int,com.facebook.react.bridge.ReadableArray) -> setChildren
    692:703:void setJSResponder(int,boolean) -> setJSResponder
    672:672:void setLayoutAnimationEnabledExperimental(boolean) -> setLayoutAnimationEnabledExperimental
    758:758:void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener) -> setViewHierarchyUpdateDebugListener
    214:223:void setViewLocalData(int,java.lang.Object) -> setViewLocalData
    734:735:void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback) -> showPopupMenu
    289:290:void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.uimanager.ReactStylesDiffMap) -> synchronouslyUpdateViewOnUIThread
    202:210:void updateNodeSize(int,int,int) -> updateNodeSize
    144:149:void updateRootView(int,int,int) -> updateRootView
    158:158:void updateRootView(com.facebook.react.uimanager.ReactShadowNode,int,int) -> updateRootView
    266:268:void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap) -> updateView
    620:657:void updateViewHierarchy() -> updateViewHierarchy
    525:528:void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback) -> viewIsDescendantOf
com.facebook.react.uimanager.UIImplementation$1 -> com.facebook.react.uimanager.UIImplementation$1:
    172:172:void <init>(com.facebook.react.uimanager.UIImplementation,com.facebook.react.uimanager.ReactShadowNode) -> <init>
    175:175:void run() -> run
com.facebook.react.uimanager.UIImplementationProvider -> com.facebook.react.uimanager.UIImplementationProvider:
    16:16:void <init>() -> <init>
    44:44:com.facebook.react.uimanager.UIImplementation createUIImplementation(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.ViewManagerRegistry,com.facebook.react.uimanager.events.EventDispatcher,int) -> createUIImplementation
com.facebook.react.uimanager.UIManagerHelper -> com.facebook.react.uimanager.UIManagerHelper:
    22:22:void <init>() -> <init>
    33:42:com.facebook.react.bridge.UIManager getUIManager(com.facebook.react.bridge.ReactContext,int) -> getUIManager
com.facebook.react.uimanager.UIManagerModule -> com.facebook.react.uimanager.UIManagerModule:
    113:113:void <clinit>() -> <clinit>
    132:132:void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver,int) -> <init>
    144:144:void <init>(com.facebook.react.bridge.ReactApplicationContext,java.util.List,int) -> <init>
    157:170:void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver,com.facebook.react.uimanager.UIImplementationProvider,int) -> <init>
    179:192:void <init>(com.facebook.react.bridge.ReactApplicationContext,java.util.List,com.facebook.react.uimanager.UIImplementationProvider,int) -> <init>
    85:85:java.util.Map access$100(com.facebook.react.uimanager.UIManagerModule) -> access$100
    85:85:com.facebook.react.uimanager.UIImplementation access$200(com.facebook.react.uimanager.UIManagerModule) -> access$200
    381:381:int addRootView(android.view.View) -> addRootView
    416:424:int addRootView(android.view.View,com.facebook.react.bridge.WritableMap,java.lang.String) -> addRootView
    849:849:void addUIBlock(com.facebook.react.uimanager.UIBlock) -> addUIBlock
    863:863:void addUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener) -> addUIManagerListener
    675:675:void clearJSResponder() -> clearJSResponder
    326:347:com.facebook.react.bridge.WritableMap computeConstantsForViewManager(java.lang.String) -> computeConstantsForViewManager
    774:774:void configureNextLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback) -> configureNextLayoutAnimation
    255:264:java.util.Map createConstants(com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver) -> createConstants
    271:281:java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map) -> createConstants
    463:469:void createView(int,java.lang.String,int,com.facebook.react.bridge.ReadableMap) -> createView
    742:742:void dismissPopupMenu() -> dismissPopupMenu
    706:706:void dispatchCommand(int,int,com.facebook.react.bridge.ReadableArray) -> dispatchCommand
    711:711:void dispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray) -> dispatchCommand
    683:697:void dispatchViewManagerCommand(int,com.facebook.react.bridge.Dynamic,com.facebook.react.bridge.ReadableArray) -> dispatchViewManagerCommand
    649:649:void findSubviewIn(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback) -> findSubviewIn
    210:210:java.util.Map getConstants() -> getConstants
    312:321:com.facebook.react.bridge.WritableMap getConstantsForViewManager(java.lang.String) -> getConstantsForViewManager
    352:352:com.facebook.react.bridge.WritableMap getDefaultEventTypes() -> getDefaultEventTypes
    357:357:com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver getDirectEventNamesResolver() -> getDirectEventNamesResolver
    815:815:com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher() -> getEventDispatcher
    377:377:java.util.Map getPerformanceCounters() -> getPerformanceCounters
    200:200:com.facebook.react.uimanager.UIImplementation getUIImplementation() -> getUIImplementation
    251:251:com.facebook.react.uimanager.ViewManagerRegistry getViewManagerRegistry_DO_NOT_USE() -> getViewManagerRegistry_DO_NOT_USE
    215:216:void initialize() -> initialize
    885:893:void invalidateNodeLayout(int) -> invalidateNodeLayout
    520:537:void manageChildren(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.ReadableArray) -> manageChildren
    590:590:void measure(int,com.facebook.react.bridge.Callback) -> measure
    600:600:void measureInWindow(int,com.facebook.react.bridge.Callback) -> measureInWindow
    616:616:void measureLayout(int,int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback) -> measureLayout
    632:632:void measureLayoutRelativeToParent(int,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback) -> measureLayoutRelativeToParent
    793:806:void onBatchComplete() -> onBatchComplete
    237:242:void onCatalystInstanceDestroy() -> onCatalystInstanceDestroy
    232:232:void onHostDestroy() -> onHostDestroy
    227:227:void onHostPause() -> onHostPause
    222:222:void onHostResume() -> onHostResume
    719:721:void playTouchSound() -> playTouchSound
    292:307:void preComputeConstantsForViewManager(java.util.List) -> preComputeConstantsForViewManager
    859:859:void prependUIBlock(com.facebook.react.uimanager.UIBlock) -> prependUIBlock
    372:372:void profileNextBatch() -> profileNextBatch
    431:431:void removeRootView(int) -> removeRootView
    581:581:void removeSubviewsFromContainerWithID(int) -> removeSubviewsFromContainerWithID
    867:867:void removeUIManagerListener(com.facebook.react.uimanager.UIManagerModuleListener) -> removeUIManagerListener
    568:568:void replaceExistingNonRootView(int,int) -> replaceExistingNonRootView
    878:880:int resolveRootTagFromReactTag(int) -> resolveRootTagFromReactTag
    931:935:android.view.View resolveView(int) -> resolveView
    820:828:void sendAccessibilityEvent(int,int) -> sendAccessibilityEvent
    550:555:void setChildren(int,com.facebook.react.bridge.ReadableArray) -> setChildren
    670:670:void setJSResponder(int,boolean) -> setJSResponder
    758:758:void setLayoutAnimationEnabledExperimental(boolean) -> setLayoutAnimationEnabledExperimental
    811:811:void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener) -> setViewHierarchyUpdateDebugListener
    448:452:void setViewLocalData(int,java.lang.Object) -> setViewLocalData
    737:737:void showPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback) -> showPopupMenu
    392:400:void synchronouslyUpdateViewOnUIThread(int,com.facebook.react.bridge.ReadableMap) -> synchronouslyUpdateViewOnUIThread
    435:437:void updateNodeSize(int,int,int) -> updateNodeSize
    902:903:void updateRootLayoutSpecs(int,int,int) -> updateRootLayoutSpecs
    474:497:void updateView(int,java.lang.String,com.facebook.react.bridge.ReadableMap) -> updateView
    665:665:void viewIsDescendantOf(int,int,com.facebook.react.bridge.Callback) -> viewIsDescendantOf
com.facebook.react.uimanager.UIManagerModule$1 -> com.facebook.react.uimanager.UIManagerModule$1:
    357:357:void <init>(com.facebook.react.uimanager.UIManagerModule) -> <init>
    360:363:java.lang.String resolveCustomEventName(java.lang.String) -> resolveCustomEventName
com.facebook.react.uimanager.UIManagerModule$2 -> com.facebook.react.uimanager.UIManagerModule$2:
    453:453:void <init>(com.facebook.react.uimanager.UIManagerModule,com.facebook.react.bridge.ReactContext,int,java.lang.Object) -> <init>
    456:456:void runGuarded() -> runGuarded
com.facebook.react.uimanager.UIManagerModule$3 -> com.facebook.react.uimanager.UIManagerModule$3:
    488:488:void <init>(com.facebook.react.uimanager.UIManagerModule,com.facebook.react.bridge.UIManager,int,com.facebook.react.bridge.ReadableMap) -> <init>
    491:491:void run() -> run
com.facebook.react.uimanager.UIManagerModule$4 -> com.facebook.react.uimanager.UIManagerModule$4:
    904:904:void <init>(com.facebook.react.uimanager.UIManagerModule,com.facebook.react.bridge.ReactContext,int,int,int) -> <init>
    907:908:void runGuarded() -> runGuarded
com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback -> com.facebook.react.uimanager.UIManagerModule$MemoryTrimCallback:
    914:914:void <init>(com.facebook.react.uimanager.UIManagerModule) -> <init>
    914:914:void <init>(com.facebook.react.uimanager.UIManagerModule,com.facebook.react.uimanager.UIManagerModule$1) -> <init>
    919:919:void onTrimMemory(int) -> onTrimMemory
com.facebook.react.uimanager.UIManagerModuleConstants -> com.facebook.react.uimanager.UIManagerModuleConstants:
    17:17:void <init>() -> <init>
    23:54:java.util.Map getBubblingEventTypeConstants() -> getBubblingEventTypeConstants
    79:111:java.util.Map getConstants() -> getConstants
    59:75:java.util.Map getDirectEventTypeConstants() -> getDirectEventTypeConstants
com.facebook.react.uimanager.UIManagerModuleConstantsHelper -> com.facebook.react.uimanager.UIManagerModuleConstantsHelper:
    23:23:void <init>() -> <init>
    37:41:java.util.Map createConstants(com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver) -> createConstants
    65:105:java.util.Map createConstants(java.util.List,java.util.Map,java.util.Map) -> createConstants
    115:145:java.util.Map createConstantsForViewManager(com.facebook.react.uimanager.ViewManager,java.util.Map,java.util.Map,java.util.Map,java.util.Map) -> createConstantsForViewManager
    47:46:java.util.Map getDefaultExportableEventTypes() -> getDefaultExportableEventTypes
    153:163:void recursiveMerge(java.util.Map,java.util.Map) -> recursiveMerge
com.facebook.react.uimanager.UIViewOperationQueue -> com.facebook.react.uimanager.UIViewOperationQueue:
    553:561:void <init>(com.facebook.react.bridge.ReactApplicationContext,com.facebook.react.uimanager.NativeViewHierarchyManager,int) -> <init>
    43:43:com.facebook.react.uimanager.NativeViewHierarchyManager access$000(com.facebook.react.uimanager.UIViewOperationQueue) -> access$000
    43:43:com.facebook.react.bridge.ReactApplicationContext access$100(com.facebook.react.uimanager.UIViewOperationQueue) -> access$100
    43:43:boolean access$1400(com.facebook.react.uimanager.UIViewOperationQueue) -> access$1400
    43:43:long access$1500(com.facebook.react.uimanager.UIViewOperationQueue) -> access$1500
    43:43:long access$1502(com.facebook.react.uimanager.UIViewOperationQueue,long) -> access$1502
    43:43:long access$1600(com.facebook.react.uimanager.UIViewOperationQueue) -> access$1600
    43:43:long access$1602(com.facebook.react.uimanager.UIViewOperationQueue,long) -> access$1602
    43:43:long access$1702(com.facebook.react.uimanager.UIViewOperationQueue,long) -> access$1702
    43:43:long access$1800(com.facebook.react.uimanager.UIViewOperationQueue) -> access$1800
    43:43:long access$1802(com.facebook.react.uimanager.UIViewOperationQueue,long) -> access$1802
    43:43:long access$1900(com.facebook.react.uimanager.UIViewOperationQueue) -> access$1900
    43:43:long access$1902(com.facebook.react.uimanager.UIViewOperationQueue,long) -> access$1902
    43:43:int[] access$200(com.facebook.react.uimanager.UIViewOperationQueue) -> access$200
    43:43:long access$2002(com.facebook.react.uimanager.UIViewOperationQueue,long) -> access$2002
    43:43:long access$2102(com.facebook.react.uimanager.UIViewOperationQueue,long) -> access$2102
    43:43:com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener access$2200(com.facebook.react.uimanager.UIViewOperationQueue) -> access$2200
    43:43:boolean access$2300(com.facebook.react.uimanager.UIViewOperationQueue) -> access$2300
    43:43:boolean access$2302(com.facebook.react.uimanager.UIViewOperationQueue,boolean) -> access$2302
    43:43:void access$2400(com.facebook.react.uimanager.UIViewOperationQueue) -> access$2400
    43:43:java.lang.Object access$2500(com.facebook.react.uimanager.UIViewOperationQueue) -> access$2500
    43:43:java.util.ArrayDeque access$2600(com.facebook.react.uimanager.UIViewOperationQueue) -> access$2600
    43:43:long access$2700(com.facebook.react.uimanager.UIViewOperationQueue) -> access$2700
    43:43:long access$2702(com.facebook.react.uimanager.UIViewOperationQueue,long) -> access$2702
    601:601:void addRootView(int,android.view.View) -> addRootView
    740:867:void dispatchViewUpdates(int,long,long) -> dispatchViewUpdates
    625:625:void enqueueClearJSResponder() -> enqueueClearJSResponder
    705:705:void enqueueConfigureLayoutAnimation(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback) -> enqueueConfigureLayoutAnimation
    657:661:void enqueueCreateView(com.facebook.react.uimanager.ThemedReactContext,int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap) -> enqueueCreateView
    649:649:void enqueueDismissPopupMenu() -> enqueueDismissPopupMenu
    631:631:void enqueueDispatchCommand(int,int,com.facebook.react.bridge.ReadableArray) -> enqueueDispatchCommand
    636:636:void enqueueDispatchCommand(int,java.lang.String,com.facebook.react.bridge.ReadableArray) -> enqueueDispatchCommand
    718:718:void enqueueFindTargetForTouch(int,float,float,com.facebook.react.bridge.Callback) -> enqueueFindTargetForTouch
    727:727:void enqueueLayoutUpdateFinished(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener) -> enqueueLayoutUpdateFinished
    690:690:void enqueueManageChildren(int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[],int[]) -> enqueueManageChildren
    709:709:void enqueueMeasure(int,com.facebook.react.bridge.Callback) -> enqueueMeasure
    713:713:void enqueueMeasureInWindow(int,com.facebook.react.bridge.Callback) -> enqueueMeasureInWindow
    614:614:void enqueueRemoveRootView(int) -> enqueueRemoveRootView
    722:722:void enqueueSendAccessibilityEvent(int,int) -> enqueueSendAccessibilityEvent
    618:618:void enqueueSetJSResponder(int,int,boolean) -> enqueueSetJSResponder
    700:700:void enqueueSetLayoutAnimationEnabled(boolean) -> enqueueSetLayoutAnimationEnabled
    645:645:void enqueueShowPopupMenu(int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback) -> enqueueShowPopupMenu
    731:731:void enqueueUIBlock(com.facebook.react.uimanager.UIBlock) -> enqueueUIBlock
    640:640:void enqueueUpdateExtraData(int,java.lang.Object) -> enqueueUpdateExtraData
    681:681:void enqueueUpdateLayout(int,int,int,int,int,int) -> enqueueUpdateLayout
    669:670:void enqueueUpdateProperties(int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap) -> enqueueUpdateProperties
    884:899:void flushPendingBatches() -> flushPendingBatches
    565:565:com.facebook.react.uimanager.NativeViewHierarchyManager getNativeViewHierarchyManager() -> getNativeViewHierarchyManager
    581:592:java.util.Map getProfiledBatchPerfCounters() -> getProfiledBatchPerfCounters
    597:597:boolean isEmpty() -> isEmpty
    877:880:void pauseFrameCallback() -> pauseFrameCallback
    735:735:void prependUIBlock(com.facebook.react.uimanager.UIBlock) -> prependUIBlock
    574:577:void profileNextBatch() -> profileNextBatch
    871:873:void resumeFrameCallback() -> resumeFrameCallback
    570:570:void setViewHierarchyUpdateDebugListener(com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener) -> setViewHierarchyUpdateDebugListener
com.facebook.react.uimanager.UIViewOperationQueue$1 -> com.facebook.react.uimanager.UIViewOperationQueue$1:
    773:773:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,java.util.ArrayDeque,java.util.ArrayList,long,long,long,long) -> <init>
    776:838:void run() -> run
com.facebook.react.uimanager.UIViewOperationQueue$2 -> com.facebook.react.uimanager.UIViewOperationQueue$2:
    858:858:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReactContext) -> <init>
    861:861:void runGuarded() -> runGuarded
com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation -> com.facebook.react.uimanager.UIViewOperationQueue$ChangeJSResponderOperation:
    248:252:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,int,boolean,boolean) -> <init>
    257:260:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation -> com.facebook.react.uimanager.UIViewOperationQueue$ConfigureLayoutAnimationOperation:
    349:349:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback,com.facebook.react.uimanager.UIViewOperationQueue$1) -> <init>
    354:356:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback) -> <init>
    361:361:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation -> com.facebook.react.uimanager.UIViewOperationQueue$CreateViewOperation:
    169:174:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ThemedReactContext,int,java.lang.String,com.facebook.react.uimanager.ReactStylesDiffMap) -> <init>
    179:180:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$DismissPopupMenuOperation -> com.facebook.react.uimanager.UIViewOperationQueue$DismissPopupMenuOperation:
    319:319:void <init>(com.facebook.react.uimanager.UIViewOperationQueue) -> <init>
    319:319:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.UIViewOperationQueue$1) -> <init>
    322:322:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation -> com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation:
    271:274:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,int,com.facebook.react.bridge.ReadableArray) -> <init>
    279:279:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation -> com.facebook.react.uimanager.UIViewOperationQueue$DispatchStringCommandOperation:
    288:291:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,java.lang.String,com.facebook.react.bridge.ReadableArray) -> <init>
    296:296:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback -> com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback:
    936:936:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReactContext,int,com.facebook.react.uimanager.UIViewOperationQueue$1) -> <init>
    942:944:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.bridge.ReactContext,int) -> <init>
    971:983:void dispatchPendingNonBatchedOperations(long) -> dispatchPendingNonBatchedOperations
    949:961:void doFrameGuarded(long) -> doFrameGuarded
com.facebook.react.uimanager.UIViewOperationQueue$EmitOnLayoutEventOperation -> com.facebook.react.uimanager.UIViewOperationQueue$EmitOnLayoutEventOperation:
    110:113:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation -> com.facebook.react.uimanager.UIViewOperationQueue$FindTargetForTouchOperation:
    425:425:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,float,float,com.facebook.react.bridge.Callback,com.facebook.react.uimanager.UIViewOperationQueue$1) -> <init>
    433:438:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,float,float,com.facebook.react.bridge.Callback) -> <init>
    444:446:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation -> com.facebook.react.uimanager.UIViewOperationQueue$LayoutUpdateFinishedOperation:
    473:473:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener,com.facebook.react.uimanager.UIViewOperationQueue$1) -> <init>
    479:481:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener) -> <init>
    486:486:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation -> com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation:
    196:201:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,int[],com.facebook.react.uimanager.ViewAtIndex[],int[],int[]) -> <init>
    206:206:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation -> com.facebook.react.uimanager.UIViewOperationQueue$MeasureInWindowOperation:
    395:395:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.Callback,com.facebook.react.uimanager.UIViewOperationQueue$1) -> <init>
    400:403:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.Callback) -> <init>
    409:413:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation -> com.facebook.react.uimanager.UIViewOperationQueue$MeasureOperation:
    365:365:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.Callback,com.facebook.react.uimanager.UIViewOperationQueue$1) -> <init>
    370:373:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.Callback) -> <init>
    379:383:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$RemoveRootViewOperation -> com.facebook.react.uimanager.UIViewOperationQueue$RemoveRootViewOperation:
    67:68:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int) -> <init>
    73:73:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$SendAccessibilityEvent -> com.facebook.react.uimanager.UIViewOperationQueue$SendAccessibilityEvent:
    503:503:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,int,com.facebook.react.uimanager.UIViewOperationQueue$1) -> <init>
    507:509:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,int) -> <init>
    514:514:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$SetChildrenOperation -> com.facebook.react.uimanager.UIViewOperationQueue$SetChildrenOperation:
    222:222:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$SetLayoutAnimationEnabledOperation -> com.facebook.react.uimanager.UIViewOperationQueue$SetLayoutAnimationEnabledOperation:
    336:336:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,boolean,com.facebook.react.uimanager.UIViewOperationQueue$1) -> <init>
    339:340:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,boolean) -> <init>
    345:345:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$ShowPopupMenuOperation -> com.facebook.react.uimanager.UIViewOperationQueue$ShowPopupMenuOperation:
    306:310:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.bridge.ReadableArray,com.facebook.react.bridge.Callback,com.facebook.react.bridge.Callback) -> <init>
    315:315:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$UIBlockOperation -> com.facebook.react.uimanager.UIViewOperationQueue$UIBlockOperation:
    493:494:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,com.facebook.react.uimanager.UIBlock) -> <init>
    499:499:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$UpdateInstanceHandleOperation -> com.facebook.react.uimanager.UIViewOperationQueue$UpdateInstanceHandleOperation:
    129:129:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation -> com.facebook.react.uimanager.UIViewOperationQueue$UpdateLayoutOperation:
    142:149:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,int,int,int,int,int) -> <init>
    154:155:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$UpdatePropertiesOperation -> com.facebook.react.uimanager.UIViewOperationQueue$UpdatePropertiesOperation:
    77:77:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.UIViewOperationQueue$1) -> <init>
    81:83:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,com.facebook.react.uimanager.ReactStylesDiffMap) -> <init>
    88:88:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$UpdateViewExtraData -> com.facebook.react.uimanager.UIViewOperationQueue$UpdateViewExtraData:
    230:232:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int,java.lang.Object) -> <init>
    237:237:void execute() -> execute
com.facebook.react.uimanager.UIViewOperationQueue$ViewOperation -> com.facebook.react.uimanager.UIViewOperationQueue$ViewOperation:
    60:61:void <init>(com.facebook.react.uimanager.UIViewOperationQueue,int) -> <init>
com.facebook.react.uimanager.ViewAtIndex -> com.facebook.react.uimanager.ViewAtIndex:
    17:17:void <clinit>() -> <clinit>
    28:30:void <init>(int,int) -> <init>
    35:39:boolean equals(java.lang.Object) -> equals
    44:44:java.lang.String toString() -> toString
com.facebook.react.uimanager.ViewAtIndex$1 -> com.facebook.react.uimanager.ViewAtIndex$1:
    18:18:void <init>() -> <init>
    18:18:int compare(java.lang.Object,java.lang.Object) -> compare
    21:21:int compare(com.facebook.react.uimanager.ViewAtIndex,com.facebook.react.uimanager.ViewAtIndex) -> compare
com.facebook.react.uimanager.ViewDefaults -> com.facebook.react.uimanager.ViewDefaults:
    11:11:void <init>() -> <init>
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper -> com.facebook.react.uimanager.ViewGroupDrawingOrderHelper:
    23:24:void <init>(android.view.ViewGroup) -> <init>
    68:99:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    33:37:void handleAddView(android.view.View) -> handleAddView
    47:51:void handleRemoveView(android.view.View) -> handleRemoveView
    60:60:boolean shouldEnableCustomDrawingOrder() -> shouldEnableCustomDrawingOrder
    104:110:void update() -> update
com.facebook.react.uimanager.ViewGroupDrawingOrderHelper$1 -> com.facebook.react.uimanager.ViewGroupDrawingOrderHelper$1:
    76:76:void <init>(com.facebook.react.uimanager.ViewGroupDrawingOrderHelper) -> <init>
    76:76:int compare(java.lang.Object,java.lang.Object) -> compare
    79:89:int compare(android.view.View,android.view.View) -> compare
com.facebook.react.uimanager.ViewGroupManager -> com.facebook.react.uimanager.ViewGroupManager:
    21:21:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    37:37:void addView(android.view.ViewGroup,android.view.View,int) -> addView
    48:51:void addViews(android.view.ViewGroup,java.util.List) -> addViews
    18:18:com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    25:25:com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    68:68:android.view.View getChildAt(android.view.ViewGroup,int) -> getChildAt
    64:64:int getChildCount(android.view.ViewGroup) -> getChildCount
    30:30:java.lang.Class getShadowNodeClass() -> getShadowNodeClass
    60:60:java.lang.Integer getViewZIndex(android.view.View) -> getViewZIndex
    89:92:void removeAllViews(android.view.ViewGroup) -> removeAllViews
    78:82:void removeView(android.view.ViewGroup,android.view.View) -> removeView
    72:74:void removeViewAt(android.view.ViewGroup,int) -> removeViewAt
    56:56:void setViewZIndex(android.view.View,int) -> setViewZIndex
    18:18:void updateExtraData(android.view.View,java.lang.Object) -> updateExtraData
com.facebook.react.uimanager.ViewHierarchyDumper -> com.facebook.react.uimanager.ViewHierarchyDumper:
    17:17:void <init>() -> <init>
com.facebook.react.uimanager.ViewManager -> com.facebook.react.uimanager.ViewManager:
    33:33:void <init>() -> <init>
    102:102:com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    106:106:com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance(com.facebook.react.bridge.ReactApplicationContext) -> createShadowNodeInstance
    74:74:android.view.View createView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.touch.JSResponderHandler) -> createView
    83:85:android.view.View createView(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper,com.facebook.react.touch.JSResponderHandler) -> createView
    139:147:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper) -> createViewInstance
    273:273:java.util.Map getNativeProps() -> getNativeProps
    46:51:void updateProperties(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap) -> updateProperties
com.facebook.react.uimanager.ViewManagerPropertyUpdater -> com.facebook.react.uimanager.ViewManagerPropertyUpdater:
    31:33:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    36:38:void clear() -> clear
    110:116:java.lang.Object findGeneratedSetter(java.lang.Class) -> findGeneratedSetter
    81:88:com.facebook.react.uimanager.ViewManagerPropertyUpdater$ViewManagerSetter findManagerSetter(java.lang.Class) -> findManagerSetter
    97:103:com.facebook.react.uimanager.ViewManagerPropertyUpdater$ShadowNodeSetter findNodeSetter(java.lang.Class) -> findNodeSetter
    72:74:java.util.Map getNativeProps(java.lang.Class,java.lang.Class) -> getNativeProps
    43:46:void updateProps(com.facebook.react.uimanager.ViewManagerDelegate,android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap) -> updateProps
    52:56:void updateProps(com.facebook.react.uimanager.ViewManager,android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap) -> updateProps
    61:65:void updateProps(com.facebook.react.uimanager.ReactShadowNode,com.facebook.react.uimanager.ReactStylesDiffMap) -> updateProps
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackShadowNodeSetter -> com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackShadowNodeSetter:
    148:148:void <init>(java.lang.Class,com.facebook.react.uimanager.ViewManagerPropertyUpdater$1) -> <init>
    152:154:void <init>(java.lang.Class) -> <init>
    167:168:void getProperties(java.util.Map) -> getProperties
    159:161:void setProperty(com.facebook.react.uimanager.ReactShadowNode,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackViewManagerSetter -> com.facebook.react.uimanager.ViewManagerPropertyUpdater$FallbackViewManagerSetter:
    123:123:void <init>(java.lang.Class,com.facebook.react.uimanager.ViewManagerPropertyUpdater$1) -> <init>
    127:129:void <init>(java.lang.Class) -> <init>
    142:143:void getProperties(java.util.Map) -> getProperties
    134:136:void setProperty(com.facebook.react.uimanager.ViewManager,android.view.View,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.uimanager.ViewManagerRegistry -> com.facebook.react.uimanager.ViewManagerRegistry:
    24:26:void <init>(com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver) -> <init>
    29:36:void <init>(java.util.List) -> <init>
    52:61:com.facebook.react.uimanager.ViewManager get(java.lang.String) -> get
    66:68:com.facebook.react.uimanager.ViewManager getViewManagerFromResolver(java.lang.String) -> getViewManagerFromResolver
    81:86:com.facebook.react.uimanager.ViewManager getViewManagerIfExists(java.lang.String) -> getViewManagerIfExists
com.facebook.react.uimanager.ViewManagersPropertyCache -> com.facebook.react.uimanager.ViewManagersPropertyCache:
    31:32:void <clinit>() -> <clinit>
    29:29:void <init>() -> <init>
    35:36:void clear() -> clear
    377:404:com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter createPropSetter(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,java.lang.Class) -> createPropSetter
    413:442:void createPropSetters(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,java.lang.Class,java.util.Map) -> createPropSetters
    499:518:void extractPropSettersFromShadowNodeClassDefinition(java.lang.Class,java.util.Map) -> extractPropSettersFromShadowNodeClassDefinition
    448:476:void extractPropSettersFromViewManagerClassDefinition(java.lang.Class,java.util.Map) -> extractPropSettersFromViewManagerClassDefinition
    356:371:java.util.Map getNativePropSettersForShadowNodeClass(java.lang.Class) -> getNativePropSettersForShadowNodeClass
    330:344:java.util.Map getNativePropSettersForViewManagerClass(java.lang.Class) -> getNativePropSettersForViewManagerClass
com.facebook.react.uimanager.ViewManagersPropertyCache$ArrayPropSetter -> com.facebook.react.uimanager.ViewManagersPropertyCache$ArrayPropSetter:
    232:232:void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method) -> <init>
    237:237:java.lang.Object getValueOrDefault(java.lang.Object) -> getValueOrDefault
com.facebook.react.uimanager.ViewManagersPropertyCache$BooleanPropSetter -> com.facebook.react.uimanager.ViewManagersPropertyCache$BooleanPropSetter:
    197:198:void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,boolean) -> <init>
    203:204:java.lang.Object getValueOrDefault(java.lang.Object) -> getValueOrDefault
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedBooleanPropSetter -> com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedBooleanPropSetter:
    268:268:void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method) -> <init>
    274:274:java.lang.Object getValueOrDefault(java.lang.Object) -> getValueOrDefault
com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedIntPropSetter -> com.facebook.react.uimanager.ViewManagersPropertyCache$BoxedIntPropSetter:
    283:283:void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method) -> <init>
    287:287:void <init>(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int) -> <init>
    293:296:java.lang.Object getValueOrDefault(java.lang.Object) -> getValueOrDefault
com.facebook.react.uimanager.ViewManagersPropertyCache$DoublePropSetter -> com.facebook.react.uimanager.ViewManagersPropertyCache$DoublePropSetter:
    177:178:void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,double) -> <init>
    182:183:void <init>(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int,double) -> <init>
    188:188:java.lang.Object getValueOrDefault(java.lang.Object) -> getValueOrDefault
com.facebook.react.uimanager.ViewManagersPropertyCache$DynamicPropSetter -> com.facebook.react.uimanager.ViewManagersPropertyCache$DynamicPropSetter:
    134:134:void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method) -> <init>
    138:138:void <init>(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int) -> <init>
    143:146:java.lang.Object getValueOrDefault(java.lang.Object) -> getValueOrDefault
com.facebook.react.uimanager.ViewManagersPropertyCache$FloatPropSetter -> com.facebook.react.uimanager.ViewManagersPropertyCache$FloatPropSetter:
    213:214:void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,float) -> <init>
    218:219:void <init>(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int,float) -> <init>
    225:225:java.lang.Object getValueOrDefault(java.lang.Object) -> getValueOrDefault
com.facebook.react.uimanager.ViewManagersPropertyCache$IntPropSetter -> com.facebook.react.uimanager.ViewManagersPropertyCache$IntPropSetter:
    156:157:void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method,int) -> <init>
    161:162:void <init>(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.reflect.Method,int,int) -> <init>
    168:168:java.lang.Object getValueOrDefault(java.lang.Object) -> getValueOrDefault
com.facebook.react.uimanager.ViewManagersPropertyCache$MapPropSetter -> com.facebook.react.uimanager.ViewManagersPropertyCache$MapPropSetter:
    244:244:void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method) -> <init>
    249:249:java.lang.Object getValueOrDefault(java.lang.Object) -> getValueOrDefault
com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter -> com.facebook.react.uimanager.ViewManagersPropertyCache$PropSetter:
    49:52:void <clinit>() -> <clinit>
    39:39:void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.String,java.lang.reflect.Method,com.facebook.react.uimanager.ViewManagersPropertyCache$1) -> <init>
    39:39:void <init>(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.String,java.lang.reflect.Method,int,com.facebook.react.uimanager.ViewManagersPropertyCache$1) -> <init>
    54:59:void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.String,java.lang.reflect.Method) -> <init>
    62:69:void <init>(com.facebook.react.uimanager.annotations.ReactPropGroup,java.lang.String,java.lang.reflect.Method,int) -> <init>
    73:73:java.lang.String getPropName() -> getPropName
    77:77:java.lang.String getPropType() -> getPropType
    107:123:void updateShadowNodeProp(com.facebook.react.uimanager.ReactShadowNode,java.lang.Object) -> updateShadowNodeProp
    82:100:void updateViewProp(com.facebook.react.uimanager.ViewManager,android.view.View,java.lang.Object) -> updateViewProp
com.facebook.react.uimanager.ViewManagersPropertyCache$StringPropSetter -> com.facebook.react.uimanager.ViewManagersPropertyCache$StringPropSetter:
    256:256:void <init>(com.facebook.react.uimanager.annotations.ReactProp,java.lang.reflect.Method) -> <init>
    261:261:java.lang.Object getValueOrDefault(java.lang.Object) -> getValueOrDefault
com.facebook.react.uimanager.ViewProps -> com.facebook.react.uimanager.ViewProps:
    163:189:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    243:254:boolean isLayoutOnly(com.facebook.react.bridge.ReadableMap,java.lang.String) -> isLayoutOnly
com.facebook.react.uimanager.YogaNodePool -> com.facebook.react.uimanager.YogaNodePool:
    16:16:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
    20:29:com.facebook.react.common.ClearableSynchronizedPool get() -> get
com.facebook.react.uimanager.common.ViewUtil -> com.facebook.react.uimanager.common.ViewUtil:
    13:13:void <init>() -> <init>
    23:23:int getUIManagerType(int) -> getUIManagerType
    33:33:boolean isRootTag(int) -> isRootTag
com.facebook.react.uimanager.events.ContentSizeChangeEvent -> com.facebook.react.uimanager.events.ContentSizeChangeEvent:
    35:38:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
com.facebook.react.uimanager.events.Event -> com.facebook.react.uimanager.events.Event:
    28:26:void <init>() -> <init>
    30:31:void <init>(int) -> <init>
    68:68:com.facebook.react.uimanager.events.Event coalesce(com.facebook.react.uimanager.events.Event) -> coalesce
    96:97:void dispose() -> dispose
    51:51:long getTimestampMs() -> getTimestampMs
    82:82:int getUniqueID() -> getUniqueID
    43:43:int getViewTag() -> getViewTag
    36:38:void init(int) -> init
    92:92:boolean isInitialized() -> isInitialized
com.facebook.react.uimanager.events.EventDispatcher -> com.facebook.react.uimanager.events.EventDispatcher:
    59:59:void <clinit>() -> <clinit>
    103:106:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    57:57:java.lang.Object access$1000(com.facebook.react.uimanager.events.EventDispatcher) -> access$1000
    57:57:int access$1100(com.facebook.react.uimanager.events.EventDispatcher) -> access$1100
    57:57:com.facebook.react.uimanager.events.Event[] access$1200(com.facebook.react.uimanager.events.EventDispatcher) -> access$1200
    57:57:java.util.Comparator access$1300() -> access$1300
    57:57:void access$1400(com.facebook.react.uimanager.events.EventDispatcher) -> access$1400
    57:57:android.util.LongSparseArray access$1500(com.facebook.react.uimanager.events.EventDispatcher) -> access$1500
    57:57:java.util.List access$1600(com.facebook.react.uimanager.events.EventDispatcher) -> access$1600
    57:57:void access$200(com.facebook.react.uimanager.events.EventDispatcher) -> access$200
    57:57:void access$300(com.facebook.react.uimanager.events.EventDispatcher) -> access$300
    57:57:boolean access$400(com.facebook.react.uimanager.events.EventDispatcher) -> access$400
    57:57:boolean access$402(com.facebook.react.uimanager.events.EventDispatcher,boolean) -> access$402
    57:57:java.util.concurrent.atomic.AtomicInteger access$500(com.facebook.react.uimanager.events.EventDispatcher) -> access$500
    57:57:com.facebook.react.uimanager.events.EventDispatcher$DispatchEventsRunnable access$600(com.facebook.react.uimanager.events.EventDispatcher) -> access$600
    57:57:com.facebook.react.bridge.ReactApplicationContext access$700(com.facebook.react.uimanager.events.EventDispatcher) -> access$700
    57:57:com.facebook.react.uimanager.events.EventDispatcher$ScheduleDispatchFrameCallback access$800(com.facebook.react.uimanager.events.EventDispatcher) -> access$800
    57:57:com.facebook.react.uimanager.events.ReactEventEmitter access$900(com.facebook.react.uimanager.events.EventDispatcher) -> access$900
    153:153:void addBatchEventDispatchedListener(com.facebook.react.uimanager.events.BatchEventDispatchedListener) -> addBatchEventDispatchedListener
    379:382:void addEventToEventsToDispatch(com.facebook.react.uimanager.events.Event) -> addEventToEventsToDispatch
    144:144:void addListener(com.facebook.react.uimanager.events.EventDispatcherListener) -> addListener
    386:387:void clearEventsToDispatch() -> clearEventsToDispatch
    126:126:void dispatchAllEvents() -> dispatchAllEvents
    111:121:void dispatchEvent(com.facebook.react.uimanager.events.Event) -> dispatchEvent
    244:251:long getEventCookie(int,java.lang.String,short) -> getEventCookie
    130:133:void maybePostFrameCallbackFromNonUI() -> maybePostFrameCallbackFromNonUI
    197:239:void moveStagedEventsToDispatchQueue() -> moveStagedEventsToDispatchQueue
    176:176:void onCatalystInstanceDestroyed() -> onCatalystInstanceDestroyed
    172:172:void onHostDestroy() -> onHostDestroy
    167:167:void onHostPause() -> onHostPause
    162:162:void onHostResume() -> onHostResume
    261:261:void registerEventEmitter(int,com.facebook.react.uimanager.events.RCTEventEmitter) -> registerEventEmitter
    157:157:void removeBatchEventDispatchedListener(com.facebook.react.uimanager.events.BatchEventDispatchedListener) -> removeBatchEventDispatchedListener
    186:187:void stopFrameCallback() -> stopFrameCallback
    265:265:void unregisterEventEmitter(int) -> unregisterEventEmitter
com.facebook.react.uimanager.events.EventDispatcher$1 -> com.facebook.react.uimanager.events.EventDispatcher$1:
    60:60:void <init>() -> <init>
    60:60:int compare(java.lang.Object,java.lang.Object) -> compare
    73:73:int compare(com.facebook.react.uimanager.events.Event,com.facebook.react.uimanager.events.Event) -> compare
com.facebook.react.uimanager.events.EventDispatcher$2 -> com.facebook.react.uimanager.events.EventDispatcher$2:
    177:177:void <init>(com.facebook.react.uimanager.events.EventDispatcher) -> <init>
    180:180:void run() -> run
com.facebook.react.uimanager.events.EventDispatcher$DispatchEventsRunnable -> com.facebook.react.uimanager.events.EventDispatcher$DispatchEventsRunnable:
    335:335:void <init>(com.facebook.react.uimanager.events.EventDispatcher) -> <init>
    335:335:void <init>(com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.uimanager.events.EventDispatcher$1) -> <init>
    339:374:void run() -> run
com.facebook.react.uimanager.events.EventDispatcher$ScheduleDispatchFrameCallback -> com.facebook.react.uimanager.events.EventDispatcher$ScheduleDispatchFrameCallback:
    268:270:void <init>(com.facebook.react.uimanager.events.EventDispatcher) -> <init>
    268:268:void <init>(com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.uimanager.events.EventDispatcher$1) -> <init>
    274:296:void doFrame(long) -> doFrame
    304:306:void maybePost() -> maybePost
    316:324:void maybePostFromNonUI() -> maybePostFromNonUI
    311:312:void post() -> post
    300:300:void stop() -> stop
com.facebook.react.uimanager.events.EventDispatcher$ScheduleDispatchFrameCallback$1 -> com.facebook.react.uimanager.events.EventDispatcher$ScheduleDispatchFrameCallback$1:
    325:325:void <init>(com.facebook.react.uimanager.events.EventDispatcher$ScheduleDispatchFrameCallback) -> <init>
    328:328:void run() -> run
com.facebook.react.uimanager.events.NativeGestureUtil -> com.facebook.react.uimanager.events.NativeGestureUtil:
    15:15:void <init>() -> <init>
    26:26:void notifyNativeGestureStarted(android.view.View,android.view.MotionEvent) -> notifyNativeGestureStarted
com.facebook.react.uimanager.events.ReactEventEmitter -> com.facebook.react.uimanager.events.ReactEventEmitter:
    30:31:void <init>(com.facebook.react.bridge.ReactApplicationContext) -> <init>
    58:65:com.facebook.react.uimanager.events.RCTEventEmitter getEventEmitter(int) -> getEventEmitter
    44:44:void receiveEvent(int,java.lang.String,com.facebook.react.bridge.WritableMap) -> receiveEvent
    51:54:void receiveTouches(java.lang.String,com.facebook.react.bridge.WritableArray,com.facebook.react.bridge.WritableArray) -> receiveTouches
    35:35:void register(int,com.facebook.react.uimanager.events.RCTEventEmitter) -> register
    39:39:void unregister(int) -> unregister
com.facebook.react.uimanager.events.TouchEvent -> com.facebook.react.uimanager.events.TouchEvent:
    28:28:void <clinit>() -> <clinit>
    64:64:void <init>() -> <init>
    124:132:boolean canCoalesce() -> canCoalesce
    143:143:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    138:138:short getCoalescingKey() -> getCoalescingKey
    116:116:java.lang.String getEventName() -> getEventName
    148:149:android.view.MotionEvent getMotionEvent() -> getMotionEvent
    153:153:float getViewX() -> getViewX
    157:157:float getViewY() -> getViewY
    74:104:void init(int,com.facebook.react.uimanager.events.TouchEventType,android.view.MotionEvent,long,float,float,com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper) -> init
    41:45:com.facebook.react.uimanager.events.TouchEvent obtain(int,com.facebook.react.uimanager.events.TouchEventType,android.view.MotionEvent,long,float,float,com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper) -> obtain
    109:111:void onDispose() -> onDispose
com.facebook.react.uimanager.events.TouchEvent$1 -> com.facebook.react.uimanager.events.TouchEvent$1:
    124:124:void <clinit>() -> <clinit>
com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper -> com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper:
    44:46:void <init>() -> <init>
    50:50:void addCoalescingKey(long) -> addCoalescingKey
    64:66:short getCoalescingKey(long) -> getCoalescingKey
    77:77:boolean hasCoalescingKey(long) -> hasCoalescingKey
    55:57:void incrementCoalescingKey(long) -> incrementCoalescingKey
    73:73:void removeCoalescingKey(long) -> removeCoalescingKey
com.facebook.react.uimanager.events.TouchEventType -> com.facebook.react.uimanager.events.TouchEventType:
    12:11:void <clinit>() -> <clinit>
    11:11:void <init>(java.lang.String,int) -> <init>
    18:28:java.lang.String getJSEventName(com.facebook.react.uimanager.events.TouchEventType) -> getJSEventName
    11:11:com.facebook.react.uimanager.events.TouchEventType valueOf(java.lang.String) -> valueOf
    11:11:com.facebook.react.uimanager.events.TouchEventType[] values() -> values
com.facebook.react.uimanager.events.TouchEventType$1 -> com.facebook.react.uimanager.events.TouchEventType$1:
    18:18:void <clinit>() -> <clinit>
com.facebook.react.uimanager.events.TouchesHelper -> com.facebook.react.uimanager.events.TouchesHelper:
    17:17:void <init>() -> <init>
    38:66:com.facebook.react.bridge.WritableArray createsPointersArray(int,com.facebook.react.uimanager.events.TouchEvent) -> createsPointersArray
    87:103:void sendTouchEvent(com.facebook.react.uimanager.events.RCTEventEmitter,com.facebook.react.uimanager.events.TouchEventType,int,com.facebook.react.uimanager.events.TouchEvent) -> sendTouchEvent
com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation -> com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation:
    42:43:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    90:98:android.view.animation.Animation createAnimation(android.view.View,int,int,int,int) -> createAnimation
    105:112:android.view.animation.Interpolator getInterpolator(com.facebook.react.uimanager.layoutanimation.InterpolatorType,com.facebook.react.bridge.ReadableMap) -> getInterpolator
    64:70:void initializeFromConfig(com.facebook.react.bridge.ReadableMap,int) -> initializeFromConfig
    56:59:void reset() -> reset
com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType -> com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType:
    15:14:void <clinit>() -> <clinit>
    14:14:void <init>(java.lang.String,int) -> <init>
    21:23:com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType fromString(java.lang.String) -> fromString
    14:14:com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType valueOf(java.lang.String) -> valueOf
    14:14:com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType[] values() -> values
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation -> com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation:
    16:16:void <init>() -> <init>
    27:82:android.view.animation.Animation createAnimationImpl(android.view.View,int,int,int,int) -> createAnimationImpl
    22:22:boolean isValid() -> isValid
com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation$1 -> com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation$1:
    28:28:void <clinit>() -> <clinit>
com.facebook.react.uimanager.layoutanimation.InterpolatorType -> com.facebook.react.uimanager.layoutanimation.InterpolatorType:
    16:15:void <clinit>() -> <clinit>
    15:15:void <init>(java.lang.String,int) -> <init>
    23:25:com.facebook.react.uimanager.layoutanimation.InterpolatorType fromString(java.lang.String) -> fromString
    15:15:com.facebook.react.uimanager.layoutanimation.InterpolatorType valueOf(java.lang.String) -> valueOf
    15:15:com.facebook.react.uimanager.layoutanimation.InterpolatorType[] values() -> values
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController -> com.facebook.react.uimanager.layoutanimation.LayoutAnimationController:
    28:36:void <init>() -> <init>
    28:28:android.util.SparseArray access$000(com.facebook.react.uimanager.layoutanimation.LayoutAnimationController) -> access$000
    107:156:void applyLayoutUpdate(android.view.View,int,int,int,int) -> applyLayoutUpdate
    169:200:void deleteView(android.view.View,com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener) -> deleteView
    206:210:void disableUserInteractions(android.view.View) -> disableUserInteractions
    44:67:void initializeFromConfig(com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.Callback) -> initializeFromConfig
    78:83:void reset() -> reset
    216:222:void scheduleCompletionCallback(long) -> scheduleCompletionCallback
    91:92:boolean shouldAnimateLayout(android.view.View) -> shouldAnimateLayout
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$1 -> com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$1:
    68:68:void <init>(com.facebook.react.uimanager.layoutanimation.LayoutAnimationController,com.facebook.react.bridge.Callback) -> <init>
    71:71:void run() -> run
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$2 -> com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$2:
    131:131:void <init>(com.facebook.react.uimanager.layoutanimation.LayoutAnimationController,int) -> <init>
    139:139:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    134:134:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$3 -> com.facebook.react.uimanager.layoutanimation.LayoutAnimationController$3:
    179:179:void <init>(com.facebook.react.uimanager.layoutanimation.LayoutAnimationController,com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener) -> <init>
    188:188:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType -> com.facebook.react.uimanager.layoutanimation.LayoutAnimationType:
    14:13:void <clinit>() -> <clinit>
    13:13:void <init>(java.lang.String,int) -> <init>
    19:27:java.lang.String toString(com.facebook.react.uimanager.layoutanimation.LayoutAnimationType) -> toString
    13:13:com.facebook.react.uimanager.layoutanimation.LayoutAnimationType valueOf(java.lang.String) -> valueOf
    13:13:com.facebook.react.uimanager.layoutanimation.LayoutAnimationType[] values() -> values
com.facebook.react.uimanager.layoutanimation.LayoutAnimationType$1 -> com.facebook.react.uimanager.layoutanimation.LayoutAnimationType$1:
    19:19:void <clinit>() -> <clinit>
com.facebook.react.uimanager.layoutanimation.LayoutCreateAnimation -> com.facebook.react.uimanager.layoutanimation.LayoutCreateAnimation:
    14:14:void <init>() -> <init>
com.facebook.react.uimanager.layoutanimation.LayoutDeleteAnimation -> com.facebook.react.uimanager.layoutanimation.LayoutDeleteAnimation:
    14:14:void <init>() -> <init>
com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation -> com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation:
    19:19:void <init>() -> <init>
    33:44:android.view.animation.Animation createAnimationImpl(android.view.View,int,int,int,int) -> createAnimationImpl
    27:27:boolean isValid() -> isValid
com.facebook.react.uimanager.layoutanimation.OpacityAnimation -> com.facebook.react.uimanager.layoutanimation.OpacityAnimation:
    53:58:void <init>(android.view.View,float,float) -> <init>
    63:63:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener -> com.facebook.react.uimanager.layoutanimation.OpacityAnimation$OpacityAnimationListener:
    25:26:void <init>(android.view.View) -> <init>
    39:40:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    31:33:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation -> com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation:
    26:28:void <init>(android.view.View,int,int,int,int) -> <init>
    33:37:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    57:65:void calculateAnimation(int,int,int,int) -> calculateAnimation
    48:48:void onLayoutUpdate(int,int,int,int) -> onLayoutUpdate
com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator -> com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator:
    30:31:void <init>() -> <init>
    34:35:void <init>(float) -> <init>
    45:46:float getInterpolation(float) -> getInterpolation
    23:24:float getSpringDamping(com.facebook.react.bridge.ReadableMap) -> getSpringDamping
com.facebook.react.uimanager.util.ReactFindViewUtil -> com.facebook.react.uimanager.util.ReactFindViewUtil:
    24:26:void <clinit>() -> <clinit>
    22:22:void <init>() -> <init>
    139:140:java.lang.String getNativeId(android.view.View) -> getNativeId
    116:133:void notifyViewRendered(android.view.View) -> notifyViewRendered
com.facebook.react.util.ExceptionDataHelper -> com.facebook.react.util.ExceptionDataHelper:
    19:19:void <init>() -> <init>
    23:32:java.lang.String getExtraDataAsJson(com.facebook.react.bridge.ReadableMap) -> getExtraDataAsJson
com.facebook.react.util.JSStackTrace -> com.facebook.react.util.JSStackTrace:
    20:20:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    26:47:java.lang.String format(java.lang.String,com.facebook.react.bridge.ReadableArray) -> format
    58:65:java.lang.String parseFileId(com.facebook.react.bridge.ReadableMap) -> parseFileId
com.facebook.react.viewmanagers.ActivityIndicatorViewManagerDelegate -> com.facebook.react.viewmanagers.ActivityIndicatorViewManagerDelegate:
    24:26:void setProperty(android.view.View,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.viewmanagers.AndroidDialogPickerManagerDelegate -> com.facebook.react.viewmanagers.AndroidDialogPickerManagerDelegate:
    21:21:void <init>(com.facebook.react.uimanager.BaseViewManagerInterface) -> <init>
    25:27:void setProperty(android.view.View,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerDelegate -> com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerDelegate:
    21:21:void <init>(com.facebook.react.uimanager.BaseViewManagerInterface) -> <init>
    25:27:void setProperty(android.view.View,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.viewmanagers.AndroidDropdownPickerManagerDelegate -> com.facebook.react.viewmanagers.AndroidDropdownPickerManagerDelegate:
    21:21:void <init>(com.facebook.react.uimanager.BaseViewManagerInterface) -> <init>
    25:27:void setProperty(android.view.View,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.viewmanagers.AndroidProgressBarManagerDelegate -> com.facebook.react.viewmanagers.AndroidProgressBarManagerDelegate:
    20:20:void <init>(com.facebook.react.uimanager.BaseViewManagerInterface) -> <init>
    24:26:void setProperty(android.view.View,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerDelegate -> com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerDelegate:
    21:21:void <init>(com.facebook.react.uimanager.BaseViewManagerInterface) -> <init>
    25:27:void setProperty(android.view.View,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.viewmanagers.AndroidSwitchManagerDelegate -> com.facebook.react.viewmanagers.AndroidSwitchManagerDelegate:
    21:21:void <init>(com.facebook.react.uimanager.BaseViewManagerInterface) -> <init>
    25:27:void setProperty(android.view.View,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.viewmanagers.AndroidViewPagerManagerDelegate -> com.facebook.react.viewmanagers.AndroidViewPagerManagerDelegate:
    21:21:void <init>(com.facebook.react.uimanager.BaseViewManagerInterface) -> <init>
    25:27:void setProperty(android.view.View,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.viewmanagers.InputAccessoryViewManagerDelegate -> com.facebook.react.viewmanagers.InputAccessoryViewManagerDelegate:
    24:26:void setProperty(android.view.View,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.viewmanagers.MaskedViewManagerDelegate -> com.facebook.react.viewmanagers.MaskedViewManagerDelegate:
    24:24:void setProperty(android.view.View,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.viewmanagers.ModalHostViewManagerDelegate -> com.facebook.react.viewmanagers.ModalHostViewManagerDelegate:
    21:21:void <init>(com.facebook.react.uimanager.BaseViewManagerInterface) -> <init>
    25:27:void setProperty(android.view.View,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.viewmanagers.ProgressViewManagerDelegate -> com.facebook.react.viewmanagers.ProgressViewManagerDelegate:
    25:27:void setProperty(android.view.View,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.viewmanagers.PullToRefreshViewManagerDelegate -> com.facebook.react.viewmanagers.PullToRefreshViewManagerDelegate:
    25:27:void setProperty(android.view.View,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.viewmanagers.SafeAreaViewManagerDelegate -> com.facebook.react.viewmanagers.SafeAreaViewManagerDelegate:
    24:26:void setProperty(android.view.View,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.viewmanagers.SegmentedControlManagerDelegate -> com.facebook.react.viewmanagers.SegmentedControlManagerDelegate:
    25:27:void setProperty(android.view.View,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.viewmanagers.SliderManagerDelegate -> com.facebook.react.viewmanagers.SliderManagerDelegate:
    21:21:void <init>(com.facebook.react.uimanager.BaseViewManagerInterface) -> <init>
    25:27:void setProperty(android.view.View,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.viewmanagers.SwitchManagerDelegate -> com.facebook.react.viewmanagers.SwitchManagerDelegate:
    24:26:void setProperty(android.view.View,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.viewmanagers.UnimplementedNativeViewManagerDelegate -> com.facebook.react.viewmanagers.UnimplementedNativeViewManagerDelegate:
    24:26:void setProperty(android.view.View,java.lang.String,java.lang.Object) -> setProperty
com.facebook.react.views.art.ARTGroupShadowNode -> com.facebook.react.views.art.ARTGroupShadowNode:
    23:23:void <init>() -> <init>
    69:70:android.graphics.RectF createClipping(float[]) -> createClipping
    40:58:void draw(android.graphics.Canvas,android.graphics.Paint,float) -> draw
    27:30:void setClipping(com.facebook.react.bridge.ReadableArray) -> setClipping
com.facebook.react.views.art.ARTGroupViewManager -> com.facebook.react.views.art.ARTGroupViewManager:
    17:17:void <init>() -> <init>
com.facebook.react.views.art.ARTRenderableViewManager -> com.facebook.react.views.art.ARTRenderableViewManager:
    40:41:void <init>(java.lang.String) -> <init>
    29:29:com.facebook.react.views.art.ARTRenderableViewManager createARTGroupViewManager() -> createARTGroupViewManager
    33:33:com.facebook.react.views.art.ARTRenderableViewManager createARTShapeViewManager() -> createARTShapeViewManager
    37:37:com.facebook.react.views.art.ARTRenderableViewManager createARTTextViewManager() -> createARTTextViewManager
    51:58:com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    77:77:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    46:46:java.lang.String getName() -> getName
    64:71:java.lang.Class getShadowNodeClass() -> getShadowNodeClass
    82:82:void updateExtraData(android.view.View,java.lang.Object) -> updateExtraData
com.facebook.react.views.art.ARTShapeShadowNode -> com.facebook.react.views.art.ARTShapeShadowNode:
    57:55:void <init>() -> <init>
    265:272:android.graphics.Path createPath(float[]) -> createPath
    104:118:void draw(android.graphics.Canvas,android.graphics.Paint,float) -> draw
    80:81:void setFill(com.facebook.react.bridge.ReadableArray) -> setFill
    61:63:void setShapePath(com.facebook.react.bridge.ReadableArray) -> setShapePath
    68:69:void setStroke(com.facebook.react.bridge.ReadableArray) -> setStroke
    92:93:void setStrokeCap(int) -> setStrokeCap
    74:75:void setStrokeDash(com.facebook.react.bridge.ReadableArray) -> setStrokeDash
    98:99:void setStrokeJoin(int) -> setStrokeJoin
    86:87:void setStrokeWidth(float) -> setStrokeWidth
    177:184:boolean setupFillPaint(android.graphics.Paint,float) -> setupFillPaint
    126:167:boolean setupStrokePaint(android.graphics.Paint,float) -> setupStrokePaint
com.facebook.react.views.art.ARTShapeViewManager -> com.facebook.react.views.art.ARTShapeViewManager:
    17:17:void <init>() -> <init>
com.facebook.react.views.art.ARTSurfaceView -> com.facebook.react.views.art.ARTSurfaceView:
    16:17:void <init>(android.content.Context) -> <init>
com.facebook.react.views.art.ARTSurfaceViewManager -> com.facebook.react.views.art.ARTSurfaceViewManager:
    27:27:void <clinit>() -> <clinit>
    22:22:void <init>() -> <init>
    21:21:com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    47:48:com.facebook.react.views.art.ARTSurfaceViewShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    21:21:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    59:59:com.facebook.react.views.art.ARTSurfaceView createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    54:54:java.lang.Class getShadowNodeClass() -> getShadowNodeClass
    21:21:void setBackgroundColor(android.view.View,int) -> setBackgroundColor
    21:21:void updateExtraData(android.view.View,java.lang.Object) -> updateExtraData
    64:65:void updateExtraData(com.facebook.react.views.art.ARTSurfaceView,java.lang.Object) -> updateExtraData
com.facebook.react.views.art.ARTSurfaceViewManager$1 -> com.facebook.react.views.art.ARTSurfaceViewManager$1:
    28:28:void <init>() -> <init>
    36:36:long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode) -> measure
com.facebook.react.views.art.ARTSurfaceViewShadowNode -> com.facebook.react.views.art.ARTSurfaceViewShadowNode:
    30:30:void <init>() -> <init>
    120:122:void dispose() -> dispose
    61:62:void drawOutput(boolean) -> drawOutput
    103:106:void markChildrenUpdatesSeen(com.facebook.react.uimanager.ReactShadowNode) -> markChildrenUpdatesSeen
    55:57:void onCollectExtraUpdates(com.facebook.react.uimanager.UIViewOperationQueue) -> onCollectExtraUpdates
    128:128:void onHostResume() -> onHostResume
    139:140:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    145:146:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    39:40:void setBackgroundColor(java.lang.Integer) -> setBackgroundColor
    112:114:void setThemedContext(com.facebook.react.uimanager.ThemedReactContext) -> setThemedContext
    94:98:void setupSurfaceTextureListener(com.facebook.react.views.art.ARTSurfaceView) -> setupSurfaceTextureListener
com.facebook.react.views.art.ARTTextShadowNode -> com.facebook.react.views.art.ARTTextShadowNode:
    39:37:void <init>() -> <init>
    96:132:void applyTextPropertiesToPaint(android.graphics.Paint) -> applyTextPropertiesToPaint
    53:92:void draw(android.graphics.Canvas,android.graphics.Paint,float) -> draw
    48:48:void setAlignment(int) -> setAlignment
    43:43:void setFrame(com.facebook.react.bridge.ReadableMap) -> setFrame
com.facebook.react.views.art.ARTTextViewManager -> com.facebook.react.views.art.ARTTextViewManager:
    17:17:void <init>() -> <init>
com.facebook.react.views.art.ARTVirtualNode -> com.facebook.react.views.art.ARTVirtualNode:
    28:29:void <clinit>() -> <clinit>
    36:37:void <init>() -> <init>
    70:70:void restoreCanvas(android.graphics.Canvas) -> restoreCanvas
    57:59:void saveAndSetupCanvas(android.graphics.Canvas) -> saveAndSetupCanvas
    75:76:void setOpacity(float) -> setOpacity
    82:91:void setTransform(com.facebook.react.bridge.ReadableArray) -> setTransform
    95:107:void setupMatrix() -> setupMatrix
com.facebook.react.views.art.PropHelper -> com.facebook.react.views.art.PropHelper:
    14:14:void <init>() -> <init>
    24:25:float[] toFloatArray(com.facebook.react.bridge.ReadableArray) -> toFloatArray
    42:46:int toFloatArray(com.facebook.react.bridge.ReadableArray,float[]) -> toFloatArray
com.facebook.react.views.checkbox.ReactCheckBox -> com.facebook.react.views.checkbox.ReactCheckBox:
    19:20:void <init>(android.content.Context) -> <init>
    25:27:void setChecked(boolean) -> setChecked
    33:36:void setOn(boolean) -> setOn
com.facebook.react.views.checkbox.ReactCheckBoxEvent -> com.facebook.react.views.checkbox.ReactCheckBoxEvent:
    23:24:void <init>(int,boolean) -> <init>
    44:44:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    28:28:boolean getIsChecked() -> getIsChecked
    48:50:com.facebook.react.bridge.WritableMap serializeEventData() -> serializeEventData
com.facebook.react.views.checkbox.ReactCheckBoxManager -> com.facebook.react.views.checkbox.ReactCheckBoxManager:
    32:32:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    28:28:void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View) -> addEventEmitters
    62:62:void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.checkbox.ReactCheckBox) -> addEventEmitters
    28:28:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    67:67:com.facebook.react.views.checkbox.ReactCheckBox createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    109:109:int getIdentifier(android.content.Context,java.lang.String) -> getIdentifier
    98:100:int getThemeColor(android.content.Context,java.lang.String) -> getThemeColor
    28:28:void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    88:91:void receiveCommand(com.facebook.react.views.checkbox.ReactCheckBox,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    73:73:void setEnabled(com.facebook.react.views.checkbox.ReactCheckBox,boolean) -> setEnabled
    80:82:void setOn(com.facebook.react.views.checkbox.ReactCheckBox,boolean) -> setOn
    116:135:void setTintColors(com.facebook.react.views.checkbox.ReactCheckBox,com.facebook.react.bridge.ReadableMap) -> setTintColors
com.facebook.react.views.checkbox.ReactCheckBoxManager$1 -> com.facebook.react.views.checkbox.ReactCheckBoxManager$1:
    33:33:void <init>() -> <init>
    45:49:com.facebook.react.bridge.ReactContext getReactContext(android.widget.CompoundButton) -> getReactContext
    36:40:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.facebook.react.views.common.ContextUtils -> com.facebook.react.views.common.ContextUtils:
    17:17:void <init>() -> <init>
    30:32:java.lang.Object findContextOfType(android.content.Context,java.lang.Class) -> findContextOfType
com.facebook.react.views.drawer.ReactDrawerLayout -> com.facebook.react.views.drawer.ReactDrawerLayout:
    30:27:void <init>(com.facebook.react.bridge.ReactContext) -> <init>
    55:55:void closeDrawer() -> closeDrawer
    36:44:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    51:51:void openDrawer() -> openDrawer
    59:60:void setDrawerPosition(int) -> setDrawerPosition
    70:76:void setDrawerProperties() -> setDrawerProperties
    64:65:void setDrawerWidth(int) -> setDrawerWidth
com.facebook.react.views.drawer.ReactDrawerLayoutManager -> com.facebook.react.views.drawer.ReactDrawerLayoutManager:
    48:49:void <init>() -> <init>
    37:37:void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View) -> addEventEmitters
    59:59:void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.drawer.ReactDrawerLayout) -> addEventEmitters
    37:37:void addView(android.view.ViewGroup,android.view.View,int) -> addView
    223:224:void addView(com.facebook.react.views.drawer.ReactDrawerLayout,android.view.View,int) -> addView
    37:37:void closeDrawer(android.view.View) -> closeDrawer
    148:148:void closeDrawer(com.facebook.react.views.drawer.ReactDrawerLayout) -> closeDrawer
    37:37:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    66:66:com.facebook.react.views.drawer.ReactDrawerLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    173:173:java.util.Map getCommandsMap() -> getCommandsMap
    237:237:com.facebook.react.uimanager.ViewManagerDelegate getDelegate() -> getDelegate
    210:209:java.util.Map getExportedCustomDirectEventTypeConstants() -> getExportedCustomDirectEventTypeConstants
    204:203:java.util.Map getExportedViewConstants() -> getExportedViewConstants
    37:37:void openDrawer(android.view.View) -> openDrawer
    143:143:void openDrawer(com.facebook.react.views.drawer.ReactDrawerLayout) -> openDrawer
    37:37:void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    37:37:void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    183:180:void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,int,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    191:193:void receiveCommand(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    37:37:void setDrawerBackgroundColor(android.view.View,java.lang.Integer) -> setDrawerBackgroundColor
    37:37:void setDrawerLockMode(android.view.View,java.lang.String) -> setDrawerLockMode
    130:131:void setDrawerLockMode(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String) -> setDrawerLockMode
    37:37:void setDrawerPosition(android.view.View,java.lang.String) -> setDrawerPosition
    72:74:void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String) -> setDrawerPosition
    80:94:void setDrawerPosition(com.facebook.react.views.drawer.ReactDrawerLayout,com.facebook.react.bridge.Dynamic) -> setDrawerPosition
    99:104:void setDrawerPositionInternal(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.String) -> setDrawerPositionInternal
    37:37:void setDrawerWidth(android.view.View,java.lang.Float) -> setDrawerWidth
    112:115:void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,float) -> setDrawerWidth
    123:124:void setDrawerWidth(com.facebook.react.views.drawer.ReactDrawerLayout,java.lang.Float) -> setDrawerWidth
    37:37:void setElevation(android.view.View,float) -> setElevation
    162:162:void setElevation(com.facebook.react.views.drawer.ReactDrawerLayout,float) -> setElevation
    37:37:void setKeyboardDismissMode(android.view.View,java.lang.String) -> setKeyboardDismissMode
    37:37:void setStatusBarBackgroundColor(android.view.View,java.lang.Integer) -> setStatusBarBackgroundColor
com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter -> com.facebook.react.views.drawer.ReactDrawerLayoutManager$DrawerEventEmitter:
    245:247:void <init>(androidx.drawerlayout.widget.DrawerLayout,com.facebook.react.uimanager.events.EventDispatcher) -> <init>
    262:262:void onDrawerClosed(android.view.View) -> onDrawerClosed
    257:257:void onDrawerOpened(android.view.View) -> onDrawerOpened
    252:252:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    267:267:void onDrawerStateChanged(int) -> onDrawerStateChanged
com.facebook.react.views.drawer.events.DrawerClosedEvent -> com.facebook.react.views.drawer.events.DrawerClosedEvent:
    19:19:void <init>(int) -> <init>
    35:35:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
com.facebook.react.views.drawer.events.DrawerOpenedEvent -> com.facebook.react.views.drawer.events.DrawerOpenedEvent:
    19:19:void <init>(int) -> <init>
    35:35:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
com.facebook.react.views.drawer.events.DrawerSlideEvent -> com.facebook.react.views.drawer.events.DrawerSlideEvent:
    23:24:void <init>(int,float) -> <init>
    44:44:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    28:28:float getOffset() -> getOffset
    48:49:com.facebook.react.bridge.WritableMap serializeEventData() -> serializeEventData
com.facebook.react.views.drawer.events.DrawerStateChangedEvent -> com.facebook.react.views.drawer.events.DrawerStateChangedEvent:
    22:23:void <init>(int,int) -> <init>
    43:43:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    27:27:int getDrawerState() -> getDrawerState
    47:48:com.facebook.react.bridge.WritableMap serializeEventData() -> serializeEventData
com.facebook.react.views.image.ImageLoadEvent -> com.facebook.react.views.image.ImageLoadEvent:
    39:39:void <init>(int,int) -> <init>
    43:43:void <init>(int,int,boolean,java.lang.String) -> <init>
    47:47:void <init>(int,int,java.lang.String) -> <init>
    52:52:void <init>(int,int,java.lang.String,int,int) -> <init>
    62:67:void <init>(int,int,java.lang.String,int,int,java.lang.String) -> <init>
    103:123:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    83:83:java.lang.String eventNameForType(int) -> eventNameForType
    96:96:short getCoalescingKey() -> getCoalescingKey
    89:89:java.lang.String getEventName() -> getEventName
com.facebook.react.views.image.ImageResizeMethod -> com.facebook.react.views.image.ImageResizeMethod:
    11:10:void <clinit>() -> <clinit>
    10:10:void <init>(java.lang.String,int) -> <init>
    10:10:com.facebook.react.views.image.ImageResizeMethod valueOf(java.lang.String) -> valueOf
    10:10:com.facebook.react.views.image.ImageResizeMethod[] values() -> values
com.facebook.react.views.image.ImageResizeMode -> com.facebook.react.views.image.ImageResizeMode:
    16:16:void <init>() -> <init>
    72:72:android.graphics.Shader$TileMode defaultTileMode() -> defaultTileMode
    68:68:com.facebook.drawee.drawable.ScalingUtils$ScaleType defaultValue() -> defaultValue
    22:42:com.facebook.drawee.drawable.ScalingUtils$ScaleType toScaleType(java.lang.String) -> toScaleType
    48:52:android.graphics.Shader$TileMode toTileMode(java.lang.String) -> toTileMode
com.facebook.react.views.image.MultiPostprocessor -> com.facebook.react.views.image.MultiPostprocessor:
    33:34:void <init>(java.util.List) -> <init>
    23:27:com.facebook.imagepipeline.request.Postprocessor from(java.util.List) -> from
    39:48:java.lang.String getName() -> getName
    53:57:com.facebook.cache.common.CacheKey getPostprocessorCacheKey() -> getPostprocessorCacheKey
    66:74:com.facebook.common.references.CloseableReference process(android.graphics.Bitmap,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory) -> process
com.facebook.react.views.image.ReactImageManager -> com.facebook.react.views.image.ReactImageManager:
    52:52:void <init>(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object) -> <init>
    63:67:void <init>(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object) -> <init>
    73:73:void <init>(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.ReactCallerContextFactory) -> <init>
    79:83:void <init>(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,com.facebook.react.views.image.ReactCallerContextFactory) -> <init>
    86:90:void <init>() -> <init>
    29:29:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    108:113:com.facebook.react.views.image.ReactImageView createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    103:103:java.lang.Object getCallerContext() -> getCallerContext
    94:97:com.facebook.drawee.controller.AbstractDraweeControllerBuilder getDraweeControllerBuilder() -> getDraweeControllerBuilder
    235:234:java.util.Map getExportedCustomDirectEventTypeConstants() -> getExportedCustomDirectEventTypeConstants
    29:29:void onAfterUpdateTransaction(android.view.View) -> onAfterUpdateTransaction
    247:248:void onAfterUpdateTransaction(com.facebook.react.views.image.ReactImageView) -> onAfterUpdateTransaction
    124:124:void setBlurRadius(com.facebook.react.views.image.ReactImageView,float) -> setBlurRadius
    142:144:void setBorderColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer) -> setBorderColor
    172:179:void setBorderRadius(com.facebook.react.views.image.ReactImageView,int,float) -> setBorderRadius
    159:159:void setBorderWidth(com.facebook.react.views.image.ReactImageView,float) -> setBorderWidth
    130:130:void setDefaultSource(com.facebook.react.views.image.ReactImageView,java.lang.String) -> setDefaultSource
    219:219:void setFadeDuration(com.facebook.react.views.image.ReactImageView,int) -> setFadeDuration
    229:229:void setHeaders(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableMap) -> setHeaders
    224:224:void setLoadHandlersRegistered(com.facebook.react.views.image.ReactImageView,boolean) -> setLoadHandlersRegistered
    136:136:void setLoadingIndicatorSource(com.facebook.react.views.image.ReactImageView,java.lang.String) -> setLoadingIndicatorSource
    151:153:void setOverlayColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer) -> setOverlayColor
    214:214:void setProgressiveRenderingEnabled(com.facebook.react.views.image.ReactImageView,boolean) -> setProgressiveRenderingEnabled
    191:192:void setResizeMethod(com.facebook.react.views.image.ReactImageView,java.lang.String) -> setResizeMethod
    185:186:void setResizeMode(com.facebook.react.views.image.ReactImageView,java.lang.String) -> setResizeMode
    119:119:void setSource(com.facebook.react.views.image.ReactImageView,com.facebook.react.bridge.ReadableArray) -> setSource
    206:208:void setTintColor(com.facebook.react.views.image.ReactImageView,java.lang.Integer) -> setTintColor
com.facebook.react.views.image.ReactImageView -> com.facebook.react.views.image.ReactImageView:
    76:150:void <clinit>() -> <clinit>
    217:224:void <init>(android.content.Context,com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.react.views.image.GlobalImageLoadListener,java.lang.Object) -> <init>
    69:69:android.graphics.Matrix access$000() -> access$000
    69:69:com.facebook.drawee.drawable.ScalingUtils$ScaleType access$100(com.facebook.react.views.image.ReactImageView) -> access$100
    69:69:android.graphics.Matrix access$200() -> access$200
    69:69:float[] access$300() -> access$300
    69:69:void access$400(com.facebook.react.views.image.ReactImageView,float[]) -> access$400
    69:69:android.graphics.Matrix access$500() -> access$500
    69:69:android.graphics.Shader$TileMode access$600(com.facebook.react.views.image.ReactImageView) -> access$600
    69:69:com.facebook.react.views.imagehelper.ImageSource access$900(com.facebook.react.views.image.ReactImageView) -> access$900
    207:209:com.facebook.drawee.generic.GenericDraweeHierarchy buildHierarchy(android.content.Context) -> buildHierarchy
    395:410:void cornerRadii(float[]) -> cornerRadii
    583:583:boolean hasMultipleSources() -> hasMultipleSources
    587:587:boolean isTiled() -> isTiled
    420:557:void maybeUpdateView() -> maybeUpdateView
    569:572:void onSizeChanged(int,int,int,int) -> onSizeChanged
    282:285:void setBackgroundColor(int) -> setBackgroundColor
    271:277:void setBlurRadius(float) -> setBlurRadius
    290:291:void setBorderColor(int) -> setBorderColor
    305:307:void setBorderRadius(float) -> setBorderRadius
    312:319:void setBorderRadius(float,int) -> setBorderRadius
    300:301:void setBorderWidth(float) -> setBorderWidth
    562:564:void setControllerListener(com.facebook.drawee.controller.ControllerListener) -> setControllerListener
    372:373:void setDefaultSource(java.lang.String) -> setDefaultSource
    390:390:void setFadeDuration(int) -> setFadeDuration
    416:416:void setHeaders(com.facebook.react.bridge.ReadableMap) -> setHeaders
    378:381:void setLoadingIndicatorSource(java.lang.String) -> setLoadingIndicatorSource
    295:296:void setOverlayColor(int) -> setOverlayColor
    385:385:void setProgressiveRenderingEnabled(boolean) -> setProgressiveRenderingEnabled
    334:335:void setResizeMethod(com.facebook.react.views.image.ImageResizeMethod) -> setResizeMethod
    324:325:void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setScaleType
    229:267:void setShouldNotifyLoadEvents(boolean) -> setShouldNotifyLoadEvents
    339:367:void setSource(com.facebook.react.bridge.ReadableArray) -> setSource
    591:603:void setSourceImage() -> setSourceImage
    329:330:void setTileMode(android.graphics.Shader$TileMode) -> setTileMode
    610:613:boolean shouldResize(com.facebook.react.views.imagehelper.ImageSource) -> shouldResize
com.facebook.react.views.image.ReactImageView$1 -> com.facebook.react.views.image.ReactImageView$1:
    235:235:void <init>(com.facebook.react.views.image.ReactImageView,com.facebook.react.uimanager.events.EventDispatcher) -> <init>
    260:260:void onFailure(java.lang.String,java.lang.Throwable) -> onFailure
    235:235:void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable) -> onFinalImageSet
    246:253:void onFinalImageSet(java.lang.String,com.facebook.imagepipeline.image.ImageInfo,android.graphics.drawable.Animatable) -> onFinalImageSet
    238:238:void onSubmit(java.lang.String,java.lang.Object) -> onSubmit
com.facebook.react.views.image.ReactImageView$RoundedCornerPostprocessor -> com.facebook.react.views.image.ReactImageView$RoundedCornerPostprocessor:
    93:93:void <init>(com.facebook.react.views.image.ReactImageView) -> <init>
    93:93:void <init>(com.facebook.react.views.image.ReactImageView,com.facebook.react.views.image.ReactImageView$1) -> <init>
    96:115:void getRadii(android.graphics.Bitmap,float[],float[]) -> getRadii
    120:144:void process(android.graphics.Bitmap,android.graphics.Bitmap) -> process
com.facebook.react.views.image.ReactImageView$TilePostprocessor -> com.facebook.react.views.image.ReactImageView$TilePostprocessor:
    152:152:void <init>(com.facebook.react.views.image.ReactImageView) -> <init>
    152:152:void <init>(com.facebook.react.views.image.ReactImageView,com.facebook.react.views.image.ReactImageView$1) -> <init>
    155:173:com.facebook.common.references.CloseableReference process(android.graphics.Bitmap,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory) -> process
com.facebook.react.views.image.ScaleTypeStartInside -> com.facebook.react.views.image.ScaleTypeStartInside:
    15:15:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
    27:31:void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float) -> getTransformImpl
com.facebook.react.views.imagehelper.ImageSource -> com.facebook.react.views.imagehelper.ImageSource:
    23:29:void <init>(android.content.Context,java.lang.String,double,double) -> <init>
    33:33:void <init>(android.content.Context,java.lang.String) -> <init>
    67:68:android.net.Uri computeLocalUri(android.content.Context) -> computeLocalUri
    58:62:android.net.Uri computeUri(android.content.Context) -> computeUri
    48:48:double getSize() -> getSize
    38:38:java.lang.String getSource() -> getSource
    43:43:android.net.Uri getUri() -> getUri
    53:53:boolean isResource() -> isResource
com.facebook.react.views.imagehelper.MultiSourceHelper -> com.facebook.react.views.imagehelper.MultiSourceHelper:
    16:16:void <init>() -> <init>
    48:48:com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult getBestSourceForSize(int,int,java.util.List) -> getBestSourceForSize
    64:76:com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult getBestSourceForSize(int,int,java.util.List,double) -> getBestSourceForSize
com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult -> com.facebook.react.views.imagehelper.MultiSourceHelper$MultiSourceResult:
    18:18:void <init>(com.facebook.react.views.imagehelper.ImageSource,com.facebook.react.views.imagehelper.ImageSource,com.facebook.react.views.imagehelper.MultiSourceHelper$1) -> <init>
    23:25:void <init>(com.facebook.react.views.imagehelper.ImageSource,com.facebook.react.views.imagehelper.ImageSource) -> <init>
    33:33:com.facebook.react.views.imagehelper.ImageSource getBestResult() -> getBestResult
    42:42:com.facebook.react.views.imagehelper.ImageSource getBestResultInCache() -> getBestResultInCache
com.facebook.react.views.imagehelper.ResourceDrawableIdHelper -> com.facebook.react.views.imagehelper.ResourceDrawableIdHelper:
    27:28:void <init>() -> <init>
    43:44:void clear() -> clear
    32:39:com.facebook.react.views.imagehelper.ResourceDrawableIdHelper getInstance() -> getInstance
    70:71:android.graphics.drawable.Drawable getResourceDrawable(android.content.Context,java.lang.String) -> getResourceDrawable
    47:66:int getResourceDrawableId(android.content.Context,java.lang.String) -> getResourceDrawableId
    75:77:android.net.Uri getResourceDrawableUri(android.content.Context,java.lang.String) -> getResourceDrawableUri
com.facebook.react.views.modal.ModalHostHelper -> com.facebook.react.views.modal.ModalHostHelper:
    21:23:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    34:60:android.graphics.Point getModalHostSize(android.content.Context) -> getModalHostSize
com.facebook.react.views.modal.ModalHostShadowNode -> com.facebook.react.views.modal.ModalHostShadowNode:
    24:24:void <init>() -> <init>
    22:22:void addChildAt(com.facebook.react.uimanager.ReactShadowNode,int) -> addChildAt
    32:35:void addChildAt(com.facebook.react.uimanager.ReactShadowNodeImpl,int) -> addChildAt
com.facebook.react.views.modal.ReactModalHostManager -> com.facebook.react.views.modal.ReactModalHostManager:
    38:39:void <init>() -> <init>
    30:30:void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View) -> addEventEmitters
    108:117:void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.modal.ReactModalHostView) -> addEventEmitters
    30:30:com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    54:54:com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    30:30:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    49:49:com.facebook.react.views.modal.ReactModalHostView createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    151:151:com.facebook.react.uimanager.ViewManagerDelegate getDelegate() -> getDelegate
    128:131:java.util.Map getExportedCustomDirectEventTypeConstants() -> getExportedCustomDirectEventTypeConstants
    59:59:java.lang.Class getShadowNodeClass() -> getShadowNodeClass
    30:30:void onAfterUpdateTransaction(android.view.View) -> onAfterUpdateTransaction
    136:137:void onAfterUpdateTransaction(com.facebook.react.views.modal.ReactModalHostView) -> onAfterUpdateTransaction
    30:30:void onDropViewInstance(android.view.View) -> onDropViewInstance
    64:65:void onDropViewInstance(com.facebook.react.views.modal.ReactModalHostView) -> onDropViewInstance
    30:30:void setAnimated(android.view.View,boolean) -> setAnimated
    30:30:void setAnimationType(android.view.View,java.lang.String) -> setAnimationType
    72:72:void setAnimationType(com.facebook.react.views.modal.ReactModalHostView,java.lang.String) -> setAnimationType
    30:30:void setHardwareAccelerated(android.view.View,boolean) -> setHardwareAccelerated
    91:91:void setHardwareAccelerated(com.facebook.react.views.modal.ReactModalHostView,boolean) -> setHardwareAccelerated
    30:30:void setIdentifier(android.view.View,int) -> setIdentifier
    30:30:void setPresentationStyle(android.view.View,java.lang.String) -> setPresentationStyle
    30:30:void setStatusBarTranslucent(android.view.View,boolean) -> setStatusBarTranslucent
    85:85:void setStatusBarTranslucent(com.facebook.react.views.modal.ReactModalHostView,boolean) -> setStatusBarTranslucent
    30:30:void setSupportedOrientations(android.view.View,com.facebook.react.bridge.ReadableArray) -> setSupportedOrientations
    30:30:void setTransparent(android.view.View,boolean) -> setTransparent
    79:79:void setTransparent(com.facebook.react.views.modal.ReactModalHostView,boolean) -> setTransparent
    30:30:java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper) -> updateState
    144:145:java.lang.Object updateState(com.facebook.react.views.modal.ReactModalHostView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper) -> updateState
com.facebook.react.views.modal.ReactModalHostManager$1 -> com.facebook.react.views.modal.ReactModalHostManager$1:
    111:111:void <init>(com.facebook.react.views.modal.ReactModalHostManager,com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.views.modal.ReactModalHostView) -> <init>
    114:114:void onRequestClose(android.content.DialogInterface) -> onRequestClose
com.facebook.react.views.modal.ReactModalHostManager$2 -> com.facebook.react.views.modal.ReactModalHostManager$2:
    118:118:void <init>(com.facebook.react.views.modal.ReactModalHostManager,com.facebook.react.uimanager.events.EventDispatcher,com.facebook.react.views.modal.ReactModalHostView) -> <init>
    121:121:void onShow(android.content.DialogInterface) -> onShow
com.facebook.react.views.modal.ReactModalHostView -> com.facebook.react.views.modal.ReactModalHostView:
    82:85:void <init>(android.content.Context) -> <init>
    59:59:com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener access$000(com.facebook.react.views.modal.ReactModalHostView) -> access$000
    107:109:void addView(android.view.View,int) -> addView
    156:171:void dismiss() -> dismiss
    91:91:void dispatchProvideStructure(android.view.ViewStructure) -> dispatchProvideStructure
    119:119:android.view.View getChildAt(int) -> getChildAt
    114:114:int getChildCount() -> getChildCount
    331:336:android.view.View getContentView() -> getContentView
    225:225:android.app.Activity getCurrentActivity() -> getCurrentActivity
    221:221:android.app.Dialog getDialog() -> getDialog
    101:102:void onDetachedFromWindow() -> onDetachedFromWindow
    151:152:void onDropInstance() -> onDropInstance
    216:216:void onHostDestroy() -> onHostDestroy
    205:205:void onHostResume() -> onHostResume
    124:126:void removeView(android.view.View) -> removeView
    131:134:void removeViewAt(int) -> removeViewAt
    193:194:void setAnimationType(java.lang.String) -> setAnimationType
    198:199:void setHardwareAccelerated(boolean) -> setHardwareAccelerated
    176:176:void setOnRequestCloseListener(com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener) -> setOnRequestCloseListener
    180:180:void setOnShowListener(android.content.DialogInterface$OnShowListener) -> setOnShowListener
    188:189:void setStatusBarTranslucent(boolean) -> setStatusBarTranslucent
    184:184:void setTransparent(boolean) -> setTransparent
    235:315:void showOrUpdate() -> showOrUpdate
    347:365:void updateProperties() -> updateProperties
    321:321:void updateState(com.facebook.react.uimanager.StateWrapper,int,int) -> updateState
com.facebook.react.views.modal.ReactModalHostView$1 -> com.facebook.react.views.modal.ReactModalHostView$1:
    270:270:void <init>(com.facebook.react.views.modal.ReactModalHostView) -> <init>
    273:294:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup -> com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup:
    392:389:void <init>(android.content.Context) -> <init>
    382:382:int access$100(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup) -> access$100
    382:382:int access$200(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup) -> access$200
    382:382:com.facebook.react.bridge.ReactContext access$300(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup) -> access$300
    439:441:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    481:482:com.facebook.react.uimanager.events.EventDispatcher getEventDispatcher() -> getEventDispatcher
    451:451:com.facebook.react.bridge.ReactContext getReactContext() -> getReactContext
    447:447:void handleException(java.lang.Throwable) -> handleException
    471:471:void onChildStartedNativeGesture(android.view.MotionEvent) -> onChildStartedNativeGesture
    456:457:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    397:400:void onSizeChanged(int,int,int,int) -> onSizeChanged
    462:463:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    404:424:void updateFirstChildView() -> updateFirstChildView
    430:434:void updateState(com.facebook.react.uimanager.StateWrapper,int,int) -> updateState
com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup$1 -> com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup$1:
    414:414:void <init>(com.facebook.react.views.modal.ReactModalHostView$DialogRootViewGroup,com.facebook.react.bridge.ReactContext,int) -> <init>
    417:419:void runGuarded() -> runGuarded
com.facebook.react.views.modal.RequestCloseEvent -> com.facebook.react.views.modal.RequestCloseEvent:
    19:19:void <init>(int) -> <init>
    29:29:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
com.facebook.react.views.modal.ShowEvent -> com.facebook.react.views.modal.ShowEvent:
    19:19:void <init>(int) -> <init>
    29:29:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
com.facebook.react.views.picker.ReactDialogPickerManager -> com.facebook.react.views.picker.ReactDialogPickerManager:
    26:27:void <init>() -> <init>
    18:18:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    37:37:com.facebook.react.views.picker.ReactPicker createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    42:42:com.facebook.react.uimanager.ViewManagerDelegate getDelegate() -> getDelegate
    18:18:void setColor(android.view.View,java.lang.Integer) -> setColor
    18:18:void setEnabled(android.view.View,boolean) -> setEnabled
    18:18:void setItems(android.view.View,com.facebook.react.bridge.ReadableArray) -> setItems
    18:18:void setPrompt(android.view.View,java.lang.String) -> setPrompt
    18:18:void setSelected(android.view.View,int) -> setSelected
com.facebook.react.views.picker.ReactDropdownPickerManager -> com.facebook.react.views.picker.ReactDropdownPickerManager:
    26:27:void <init>() -> <init>
    18:18:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    37:37:com.facebook.react.views.picker.ReactPicker createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    42:42:com.facebook.react.uimanager.ViewManagerDelegate getDelegate() -> getDelegate
    18:18:void setColor(android.view.View,java.lang.Integer) -> setColor
    18:18:void setEnabled(android.view.View,boolean) -> setEnabled
    18:18:void setItems(android.view.View,com.facebook.react.bridge.ReadableArray) -> setItems
    18:18:void setPrompt(android.view.View,java.lang.String) -> setPrompt
    18:18:void setSelected(android.view.View,int) -> setSelected
com.facebook.react.views.picker.ReactPicker -> com.facebook.react.views.picker.ReactPicker:
    56:57:void <init>(android.content.Context,int) -> <init>
    20:20:com.facebook.react.views.picker.ReactPicker$OnSelectListener access$000(com.facebook.react.views.picker.ReactPicker) -> access$000
    145:174:void commitStagedData() -> commitStagedData
    179:179:int getMode() -> getMode
    112:112:com.facebook.react.views.picker.ReactPicker$OnSelectListener getOnSelectListener() -> getOnSelectListener
    97:103:void onLayout(boolean,int,int,int,int) -> onLayout
    86:92:void requestLayout() -> requestLayout
    128:131:void setImmediateSelection(int) -> setImmediateSelection
    107:107:void setOnSelectListener(com.facebook.react.views.picker.ReactPicker$OnSelectListener) -> setOnSelectListener
    116:116:void setStagedItems(java.util.List) -> setStagedItems
    136:136:void setStagedPrimaryTextColor(java.lang.Integer) -> setStagedPrimaryTextColor
    123:123:void setStagedSelection(int) -> setStagedSelection
com.facebook.react.views.picker.ReactPicker$1 -> com.facebook.react.views.picker.ReactPicker$1:
    30:30:void <init>(com.facebook.react.views.picker.ReactPicker) -> <init>
    33:34:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    40:41:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.facebook.react.views.picker.ReactPicker$2 -> com.facebook.react.views.picker.ReactPicker$2:
    74:74:void <init>(com.facebook.react.views.picker.ReactPicker) -> <init>
    77:80:void run() -> run
com.facebook.react.views.picker.ReactPickerAdapter -> com.facebook.react.views.picker.ReactPickerAdapter:
    28:32:void <init>(android.content.Context,java.util.List) -> <init>
    42:42:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    74:74:java.lang.Integer getPrimaryTextColor() -> getPrimaryTextColor
    37:37:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    46:67:android.view.View getView(int,android.view.View,android.view.ViewGroup,boolean) -> getView
    78:79:void setPrimaryTextColor(java.lang.Integer) -> setPrimaryTextColor
com.facebook.react.views.picker.ReactPickerItem -> com.facebook.react.views.picker.ReactPickerItem:
    21:27:void <init>(com.facebook.react.bridge.ReadableMap) -> <init>
    37:39:java.util.List createFromJsArrayMap(com.facebook.react.bridge.ReadableArray) -> createFromJsArrayMap
com.facebook.react.views.picker.ReactPickerManager -> com.facebook.react.views.picker.ReactPickerManager:
    29:29:void <init>() -> <init>
    29:29:void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View) -> addEventEmitters
    65:65:void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.picker.ReactPicker) -> addEventEmitters
    29:29:void onAfterUpdateTransaction(android.view.View) -> onAfterUpdateTransaction
    59:60:void onAfterUpdateTransaction(com.facebook.react.views.picker.ReactPicker) -> onAfterUpdateTransaction
    29:29:void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    73:76:void receiveCommand(com.facebook.react.views.picker.ReactPicker,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    39:39:void setColor(com.facebook.react.views.picker.ReactPicker,java.lang.Integer) -> setColor
    49:49:void setEnabled(com.facebook.react.views.picker.ReactPicker,boolean) -> setEnabled
    33:34:void setItems(com.facebook.react.views.picker.ReactPicker,com.facebook.react.bridge.ReadableArray) -> setItems
    44:44:void setPrompt(com.facebook.react.views.picker.ReactPicker,java.lang.String) -> setPrompt
    54:54:void setSelected(com.facebook.react.views.picker.ReactPicker,int) -> setSelected
com.facebook.react.views.picker.ReactPickerManager$PickerEventEmitter -> com.facebook.react.views.picker.ReactPickerManager$PickerEventEmitter:
    87:89:void <init>(com.facebook.react.views.picker.ReactPicker,com.facebook.react.uimanager.events.EventDispatcher) -> <init>
    94:94:void onItemSelected(int) -> onItemSelected
com.facebook.react.views.picker.events.PickerItemSelectEvent -> com.facebook.react.views.picker.events.PickerItemSelectEvent:
    21:22:void <init>(int,int) -> <init>
    32:32:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    36:37:com.facebook.react.bridge.WritableMap serializeEventData() -> serializeEventData
com.facebook.react.views.progressbar.ProgressBarContainerView -> com.facebook.react.views.progressbar.ProgressBarContainerView:
    34:29:void <init>(android.content.Context) -> <init>
    65:66:void apply() -> apply
    61:61:void setAnimating(boolean) -> setAnimating
    49:49:void setColor(java.lang.Integer) -> setColor
    81:94:void setColor(android.widget.ProgressBar) -> setColor
    53:53:void setIndeterminate(boolean) -> setIndeterminate
    57:57:void setProgress(double) -> setProgress
    38:42:void setStyle(java.lang.String) -> setStyle
com.facebook.react.views.progressbar.ProgressBarShadowNode -> com.facebook.react.views.progressbar.ProgressBarShadowNode:
    37:41:void <init>() -> <init>
    49:49:java.lang.String getStyle() -> getStyle
    45:45:void initMeasureFunction() -> initMeasureFunction
    64:77:long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode) -> measure
    54:54:void setStyle(java.lang.String) -> setStyle
com.facebook.react.views.progressbar.ReactProgressBarViewManager -> com.facebook.react.views.progressbar.ReactProgressBarViewManager:
    43:43:void <clinit>() -> <clinit>
    58:59:void <init>() -> <init>
    53:55:android.widget.ProgressBar createProgressBar(android.content.Context,int) -> createProgressBar
    29:29:com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    112:112:com.facebook.react.views.progressbar.ProgressBarShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    29:29:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    69:69:com.facebook.react.views.progressbar.ProgressBarContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    132:132:com.facebook.react.uimanager.ViewManagerDelegate getDelegate() -> getDelegate
    117:117:java.lang.Class getShadowNodeClass() -> getShadowNodeClass
    139:137:int getStyleFromString(java.lang.String) -> getStyleFromString
    29:29:void onAfterUpdateTransaction(android.view.View) -> onAfterUpdateTransaction
    127:127:void onAfterUpdateTransaction(com.facebook.react.views.progressbar.ProgressBarContainerView) -> onAfterUpdateTransaction
    29:29:void setAnimating(android.view.View,boolean) -> setAnimating
    99:99:void setAnimating(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean) -> setAnimating
    29:29:void setColor(android.view.View,java.lang.Integer) -> setColor
    81:81:void setColor(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.Integer) -> setColor
    29:29:void setIndeterminate(android.view.View,boolean) -> setIndeterminate
    87:87:void setIndeterminate(com.facebook.react.views.progressbar.ProgressBarContainerView,boolean) -> setIndeterminate
    29:29:void setProgress(android.view.View,double) -> setProgress
    93:93:void setProgress(com.facebook.react.views.progressbar.ProgressBarContainerView,double) -> setProgress
    29:29:void setStyleAttr(android.view.View,java.lang.String) -> setStyleAttr
    75:75:void setStyleAttr(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String) -> setStyleAttr
    29:29:void setTestID(android.view.View,java.lang.String) -> setTestID
    104:104:void setTestID(com.facebook.react.views.progressbar.ProgressBarContainerView,java.lang.String) -> setTestID
    29:29:void setTypeAttr(android.view.View,java.lang.String) -> setTypeAttr
    29:29:void updateExtraData(android.view.View,java.lang.Object) -> updateExtraData
com.facebook.react.views.scroll.OnScrollDispatchHelper -> com.facebook.react.views.scroll.OnScrollDispatchHelper:
    17:26:void <init>() -> <init>
    50:50:float getXFlingVelocity() -> getXFlingVelocity
    54:54:float getYFlingVelocity() -> getYFlingVelocity
    33:44:boolean onScrollChanged(int,int) -> onScrollChanged
com.facebook.react.views.scroll.ReactHorizontalScrollContainerView -> com.facebook.react.views.scroll.ReactHorizontalScrollContainerView:
    23:28:void <init>(android.content.Context) -> <init>
    33:48:void onLayout(boolean,int,int,int,int) -> onLayout
com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager -> com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager:
    21:21:void <init>() -> <init>
    15:15:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    30:30:com.facebook.react.views.scroll.ReactHorizontalScrollContainerView createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
com.facebook.react.views.scroll.ReactHorizontalScrollView -> com.facebook.react.views.scroll.ReactHorizontalScrollView:
    81:85:void <init>(android.content.Context,com.facebook.react.views.scroll.FpsListener) -> <init>
    41:41:boolean access$000(com.facebook.react.views.scroll.ReactHorizontalScrollView) -> access$000
    41:41:boolean access$002(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean) -> access$002
    41:41:boolean access$100(com.facebook.react.views.scroll.ReactHorizontalScrollView) -> access$100
    41:41:void access$200(com.facebook.react.views.scroll.ReactHorizontalScrollView,int) -> access$200
    41:41:boolean access$300(com.facebook.react.views.scroll.ReactHorizontalScrollView) -> access$300
    41:41:java.lang.Runnable access$402(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.Runnable) -> access$402
    41:41:void access$500(com.facebook.react.views.scroll.ReactHorizontalScrollView) -> access$500
    240:255:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    350:371:boolean arrowScroll(int) -> arrowScroll
    549:552:void disableFpsListener() -> disableFpsListener
    562:569:void draw(android.graphics.Canvas) -> draw
    541:544:void enableFpsListener() -> enableFpsListener
    400:406:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    186:186:void flashScrollIndicators() -> flashScrollIndicators
    420:457:void fling(int) -> fling
    706:837:void flingAndSnap(int) -> flingAndSnap
    498:500:boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point) -> getChildVisibleRect
    493:493:void getClippingRect(android.graphics.Rect) -> getClippingRect
    92:118:android.widget.OverScroller getOverScrollerFromParent() -> getOverScrollerFromParent
    142:142:boolean getRemoveClippedSubviews() -> getRemoveClippedSubviews
    261:263:int getScrollDelta(android.view.View) -> getScrollDelta
    504:507:int getSnapInterval() -> getSnapInterval
    580:626:void handlePostTouchScrolling(int,int) -> handlePostTouchScrolling
    280:282:boolean isMostlyScrolledInView(android.view.View) -> isMostlyScrolledInView
    273:275:boolean isPartiallyScrolledInView(android.view.View) -> isPartiallyScrolledInView
    557:557:boolean isScrollPerfLoggingEnabled() -> isScrollPerfLoggingEnabled
    268:268:boolean isScrolledInView(android.view.View) -> isScrolledInView
    470:472:void onAttachedToWindow() -> onAttachedToWindow
    196:206:void onDraw(android.graphics.Canvas) -> onDraw
    313:329:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    220:220:void onLayout(boolean,int,int,int,int) -> onLayout
    211:213:void onMeasure(int,int) -> onMeasure
    519:537:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    295:304:void onScrollChanged(int,int,int,int) -> onScrollChanged
    462:464:void onSizeChanged(int,int,int,int) -> onSizeChanged
    379:395:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    337:340:boolean pageScroll(int) -> pageScroll
    634:652:int predictFinalScrollPosition(int) -> predictFinalScrollPosition
    232:235:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    286:289:void scrollToChild(android.view.View) -> scrollToChild
    866:866:void setBackgroundColor(int) -> setBackgroundColor
    874:874:void setBorderColor(int,float,float) -> setBorderColor
    878:878:void setBorderRadius(float) -> setBorderRadius
    882:882:void setBorderRadius(float,int) -> setBorderRadius
    886:886:void setBorderStyle(java.lang.String) -> setBorderStyle
    870:870:void setBorderWidth(int,float) -> setBorderWidth
    162:165:void setDecelerationRate(float) -> setDecelerationRate
    146:146:void setDisableIntervalMomentum(boolean) -> setDisableIntervalMomentum
    511:513:void setEndFillColor(int) -> setEndFillColor
    190:191:void setOverflow(java.lang.String) -> setOverflow
    158:158:void setPagingEnabled(boolean) -> setPagingEnabled
    133:137:void setRemoveClippedSubviews(boolean) -> setRemoveClippedSubviews
    154:154:void setScrollEnabled(boolean) -> setScrollEnabled
    128:128:void setScrollPerfTag(java.lang.String) -> setScrollPerfTag
    150:150:void setSendMomentumEvents(boolean) -> setSendMomentumEvents
    170:170:void setSnapInterval(int) -> setSnapInterval
    174:174:void setSnapOffsets(java.util.List) -> setSnapOffsets
    182:182:void setSnapToEnd(boolean) -> setSnapToEnd
    178:178:void setSnapToStart(boolean) -> setSnapToStart
    661:701:void smoothScrollAndSnap(int) -> smoothScrollAndSnap
    842:861:void smoothScrollToNextPage(int) -> smoothScrollToNextPage
    478:487:void updateClippingRect() -> updateClippingRect
com.facebook.react.views.scroll.ReactHorizontalScrollView$1 -> com.facebook.react.views.scroll.ReactHorizontalScrollView$1:
    596:598:void <init>(com.facebook.react.views.scroll.ReactHorizontalScrollView) -> <init>
    602:621:void run() -> run
com.facebook.react.views.scroll.ReactHorizontalScrollViewManager -> com.facebook.react.views.scroll.ReactHorizontalScrollViewManager:
    41:41:void <clinit>() -> <clinit>
    48:48:void <init>() -> <init>
    51:52:void <init>(com.facebook.react.views.scroll.FpsListener) -> <init>
    35:35:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    62:62:com.facebook.react.views.scroll.ReactHorizontalScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    35:35:void flashScrollIndicators(java.lang.Object) -> flashScrollIndicators
    175:175:void flashScrollIndicators(com.facebook.react.views.scroll.ReactHorizontalScrollView) -> flashScrollIndicators
    35:35:void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    35:35:void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    164:164:void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    170:170:void receiveCommand(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    35:35:void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData) -> scrollTo
    181:184:void scrollTo(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData) -> scrollTo
    35:35:void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData) -> scrollToEnd
    193:197:void scrollToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData) -> scrollToEnd
    266:268:void setBorderColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,java.lang.Integer) -> setBorderColor
    223:230:void setBorderRadius(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float) -> setBorderRadius
    236:236:void setBorderStyle(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String) -> setBorderStyle
    249:252:void setBorderWidth(com.facebook.react.views.scroll.ReactHorizontalScrollView,int,float) -> setBorderWidth
    210:210:void setBottomFillColor(com.facebook.react.views.scroll.ReactHorizontalScrollView,int) -> setBottomFillColor
    77:77:void setDecelerationRate(com.facebook.react.views.scroll.ReactHorizontalScrollView,float) -> setDecelerationRate
    83:83:void setDisableIntervalMomentum(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean) -> setDisableIntervalMomentum
    284:288:void setFadingEdgeLength(com.facebook.react.views.scroll.ReactHorizontalScrollView,int) -> setFadingEdgeLength
    158:158:void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean) -> setNestedScrollEnabled
    153:153:void setOverScrollMode(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String) -> setOverScrollMode
    273:273:void setOverflow(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String) -> setOverflow
    147:147:void setPagingEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean) -> setPagingEnabled
    278:278:void setPersistentScrollbar(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean) -> setPersistentScrollbar
    117:117:void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean) -> setRemoveClippedSubviews
    67:67:void setScrollEnabled(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean) -> setScrollEnabled
    142:142:void setScrollPerfTag(com.facebook.react.views.scroll.ReactHorizontalScrollView,java.lang.String) -> setScrollPerfTag
    130:130:void setSendMomentumEvents(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean) -> setSendMomentumEvents
    72:72:void setShowsHorizontalScrollIndicator(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean) -> setShowsHorizontalScrollIndicator
    111:111:void setSnapToEnd(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean) -> setSnapToEnd
    89:90:void setSnapToInterval(com.facebook.react.views.scroll.ReactHorizontalScrollView,float) -> setSnapToInterval
    96:101:void setSnapToOffsets(com.facebook.react.views.scroll.ReactHorizontalScrollView,com.facebook.react.bridge.ReadableArray) -> setSnapToOffsets
    106:106:void setSnapToStart(com.facebook.react.views.scroll.ReactHorizontalScrollView,boolean) -> setSnapToStart
com.facebook.react.views.scroll.ReactScrollView -> com.facebook.react.views.scroll.ReactScrollView:
    83:89:void <init>(com.facebook.react.bridge.ReactContext,com.facebook.react.views.scroll.FpsListener) -> <init>
    44:44:boolean access$000(com.facebook.react.views.scroll.ReactScrollView) -> access$000
    44:44:boolean access$002(com.facebook.react.views.scroll.ReactScrollView,boolean) -> access$002
    44:44:boolean access$100(com.facebook.react.views.scroll.ReactScrollView) -> access$100
    44:44:void access$200(com.facebook.react.views.scroll.ReactScrollView,int) -> access$200
    44:44:boolean access$300(com.facebook.react.views.scroll.ReactScrollView) -> access$300
    44:44:java.lang.Runnable access$402(com.facebook.react.views.scroll.ReactScrollView,java.lang.Runnable) -> access$402
    44:44:void access$500(com.facebook.react.views.scroll.ReactScrollView) -> access$500
    415:418:void disableFpsListener() -> disableFpsListener
    434:451:void draw(android.graphics.Canvas) -> draw
    407:410:void enableFpsListener() -> enableFpsListener
    304:310:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    172:172:void flashScrollIndicators() -> flashScrollIndicators
    363:403:void fling(int) -> fling
    589:698:void flingAndSnap(int) -> flingAndSnap
    349:351:boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point) -> getChildVisibleRect
    344:344:void getClippingRect(android.graphics.Rect) -> getClippingRect
    427:429:int getMaxScrollY() -> getMaxScrollY
    96:122:android.widget.OverScroller getOverScrollerFromParent() -> getOverScrollerFromParent
    324:324:boolean getRemoveClippedSubviews() -> getRemoveClippedSubviews
    703:706:int getSnapInterval() -> getSnapInterval
    462:509:void handlePostTouchScrolling(int,int) -> handlePostTouchScrolling
    423:423:boolean isScrollPerfLoggingEnabled() -> isScrollPerfLoggingEnabled
    204:206:void onAttachedToWindow() -> onAttachedToWindow
    741:742:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    747:748:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
    259:275:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    191:191:void onLayout(boolean,int,int,int,int) -> onLayout
    767:774:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
    182:184:void onMeasure(int,int) -> onMeasure
    718:736:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    241:250:void onScrollChanged(int,int,int,int) -> onScrollChanged
    196:198:void onSizeChanged(int,int,int,int) -> onSizeChanged
    283:299:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    517:535:int predictFinalScrollPosition(int) -> predictFinalScrollPosition
    220:222:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    226:235:void scrollToChild(android.view.View) -> scrollToChild
    780:780:void setBackgroundColor(int) -> setBackgroundColor
    788:788:void setBorderColor(int,float,float) -> setBorderColor
    792:792:void setBorderRadius(float) -> setBorderRadius
    796:796:void setBorderRadius(float,int) -> setBorderRadius
    800:800:void setBorderStyle(java.lang.String) -> setBorderStyle
    784:784:void setBorderWidth(int,float) -> setBorderWidth
    148:151:void setDecelerationRate(float) -> setDecelerationRate
    710:712:void setEndFillColor(int) -> setEndFillColor
    176:177:void setOverflow(java.lang.String) -> setOverflow
    144:144:void setPagingEnabled(boolean) -> setPagingEnabled
    315:319:void setRemoveClippedSubviews(boolean) -> setRemoveClippedSubviews
    140:140:void setScrollEnabled(boolean) -> setScrollEnabled
    136:136:void setScrollPerfTag(java.lang.String) -> setScrollPerfTag
    132:132:void setSendMomentumEvents(boolean) -> setSendMomentumEvents
    156:156:void setSnapInterval(int) -> setSnapInterval
    160:160:void setSnapOffsets(java.util.List) -> setSnapOffsets
    168:168:void setSnapToEnd(boolean) -> setSnapToEnd
    164:164:void setSnapToStart(boolean) -> setSnapToStart
    544:584:void smoothScrollAndSnap(int) -> smoothScrollAndSnap
    329:338:void updateClippingRect() -> updateClippingRect
com.facebook.react.views.scroll.ReactScrollView$1 -> com.facebook.react.views.scroll.ReactScrollView$1:
    479:481:void <init>(com.facebook.react.views.scroll.ReactScrollView) -> <init>
    485:504:void run() -> run
com.facebook.react.views.scroll.ReactScrollViewCommandHelper -> com.facebook.react.views.scroll.ReactScrollViewCommandHelper:
    21:21:void <init>() -> <init>
    59:57:java.util.Map getCommandsMap() -> getCommandsMap
    71:77:void receiveCommand(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,int,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    102:108:void receiveCommand(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    130:133:void scrollTo(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,com.facebook.react.bridge.ReadableArray) -> scrollTo
    138:139:void scrollToEnd(com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler,java.lang.Object,com.facebook.react.bridge.ReadableArray) -> scrollToEnd
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData -> com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData:
    40:43:void <init>(int,int,boolean) -> <init>
com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData -> com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData:
    51:52:void <init>(boolean) -> <init>
com.facebook.react.views.scroll.ReactScrollViewHelper -> com.facebook.react.views.scroll.ReactScrollViewHelper:
    17:17:void <init>() -> <init>
    30:30:void emitScrollBeginDragEvent(android.view.ViewGroup) -> emitScrollBeginDragEvent
    35:35:void emitScrollEndDragEvent(android.view.ViewGroup,float,float) -> emitScrollEndDragEvent
    26:26:void emitScrollEvent(android.view.ViewGroup,float,float) -> emitScrollEvent
    48:48:void emitScrollEvent(android.view.ViewGroup,com.facebook.react.views.scroll.ScrollEventType) -> emitScrollEvent
    53:63:void emitScrollEvent(android.view.ViewGroup,com.facebook.react.views.scroll.ScrollEventType,float,float) -> emitScrollEvent
    40:40:void emitScrollMomentumBeginEvent(android.view.ViewGroup,int,int) -> emitScrollMomentumBeginEvent
    44:44:void emitScrollMomentumEndEvent(android.view.ViewGroup) -> emitScrollMomentumEndEvent
    78:85:int parseOverScrollMode(java.lang.String) -> parseOverScrollMode
com.facebook.react.views.scroll.ReactScrollViewManager -> com.facebook.react.views.scroll.ReactScrollViewManager:
    43:43:void <clinit>() -> <clinit>
    50:50:void <init>() -> <init>
    53:54:void <init>(com.facebook.react.views.scroll.FpsListener) -> <init>
    299:315:java.util.Map createExportedCustomDirectEventTypeConstants() -> createExportedCustomDirectEventTypeConstants
    37:37:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    64:64:com.facebook.react.views.scroll.ReactScrollView createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    37:37:void flashScrollIndicators(java.lang.Object) -> flashScrollIndicators
    190:190:void flashScrollIndicators(com.facebook.react.views.scroll.ReactScrollView) -> flashScrollIndicators
    173:173:java.util.Map getCommandsMap() -> getCommandsMap
    295:295:java.util.Map getExportedCustomDirectEventTypeConstants() -> getExportedCustomDirectEventTypeConstants
    37:37:void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    37:37:void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    179:179:void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,int,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    185:185:void receiveCommand(com.facebook.react.views.scroll.ReactScrollView,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    37:37:void scrollTo(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData) -> scrollTo
    196:199:void scrollTo(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToCommandData) -> scrollTo
    37:37:void scrollToEnd(java.lang.Object,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData) -> scrollToEnd
    269:273:void scrollToEnd(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollToEndCommandData) -> scrollToEnd
    255:257:void setBorderColor(com.facebook.react.views.scroll.ReactScrollView,int,java.lang.Integer) -> setBorderColor
    213:220:void setBorderRadius(com.facebook.react.views.scroll.ReactScrollView,int,float) -> setBorderRadius
    226:226:void setBorderStyle(com.facebook.react.views.scroll.ReactScrollView,java.lang.String) -> setBorderStyle
    239:242:void setBorderWidth(com.facebook.react.views.scroll.ReactScrollView,int,float) -> setBorderWidth
    157:157:void setBottomFillColor(com.facebook.react.views.scroll.ReactScrollView,int) -> setBottomFillColor
    83:83:void setDecelerationRate(com.facebook.react.views.scroll.ReactScrollView,float) -> setDecelerationRate
    285:289:void setFadingEdgeLength(com.facebook.react.views.scroll.ReactScrollView,int) -> setFadingEdgeLength
    168:168:void setNestedScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean) -> setNestedScrollEnabled
    163:163:void setOverScrollMode(com.facebook.react.views.scroll.ReactScrollView,java.lang.String) -> setOverScrollMode
    262:262:void setOverflow(com.facebook.react.views.scroll.ReactScrollView,java.lang.String) -> setOverflow
    145:145:void setPagingEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean) -> setPagingEnabled
    279:279:void setPersistentScrollbar(com.facebook.react.views.scroll.ReactScrollView,boolean) -> setPersistentScrollbar
    115:115:void setRemoveClippedSubviews(com.facebook.react.views.scroll.ReactScrollView,boolean) -> setRemoveClippedSubviews
    69:73:void setScrollEnabled(com.facebook.react.views.scroll.ReactScrollView,boolean) -> setScrollEnabled
    140:140:void setScrollPerfTag(com.facebook.react.views.scroll.ReactScrollView,java.lang.String) -> setScrollPerfTag
    128:128:void setSendMomentumEvents(com.facebook.react.views.scroll.ReactScrollView,boolean) -> setSendMomentumEvents
    78:78:void setShowsVerticalScrollIndicator(com.facebook.react.views.scroll.ReactScrollView,boolean) -> setShowsVerticalScrollIndicator
    110:110:void setSnapToEnd(com.facebook.react.views.scroll.ReactScrollView,boolean) -> setSnapToEnd
    89:90:void setSnapToInterval(com.facebook.react.views.scroll.ReactScrollView,float) -> setSnapToInterval
    95:100:void setSnapToOffsets(com.facebook.react.views.scroll.ReactScrollView,com.facebook.react.bridge.ReadableArray) -> setSnapToOffsets
    105:105:void setSnapToStart(com.facebook.react.views.scroll.ReactScrollView,boolean) -> setSnapToStart
com.facebook.react.views.scroll.ScrollEvent -> com.facebook.react.views.scroll.ScrollEvent:
    22:22:void <clinit>() -> <clinit>
    69:69:void <init>() -> <init>
    108:108:boolean canCoalesce() -> canCoalesce
    116:116:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    96:96:java.lang.String getEventName() -> getEventName
    82:91:void init(int,com.facebook.react.views.scroll.ScrollEventType,int,int,float,float,int,int,int,int) -> init
    46:50:com.facebook.react.views.scroll.ScrollEvent obtain(int,com.facebook.react.views.scroll.ScrollEventType,int,int,float,float,int,int,int,int) -> obtain
    66:66:void onDispose() -> onDispose
    120:150:com.facebook.react.bridge.WritableMap serializeEventData() -> serializeEventData
com.facebook.react.views.scroll.ScrollEventType -> com.facebook.react.views.scroll.ScrollEventType:
    12:11:void <clinit>() -> <clinit>
    11:11:void <init>(java.lang.String,int) -> <init>
    19:31:java.lang.String getJSEventName(com.facebook.react.views.scroll.ScrollEventType) -> getJSEventName
    11:11:com.facebook.react.views.scroll.ScrollEventType valueOf(java.lang.String) -> valueOf
    11:11:com.facebook.react.views.scroll.ScrollEventType[] values() -> values
com.facebook.react.views.scroll.ScrollEventType$1 -> com.facebook.react.views.scroll.ScrollEventType$1:
    19:19:void <clinit>() -> <clinit>
com.facebook.react.views.scroll.VelocityHelper -> com.facebook.react.views.scroll.VelocityHelper:
    18:18:void <init>() -> <init>
    29:46:void calculateVelocity(android.view.MotionEvent) -> calculateVelocity
    55:55:float getXVelocity() -> getXVelocity
    60:60:float getYVelocity() -> getYVelocity
com.facebook.react.views.slider.ReactSlider -> com.facebook.react.views.slider.ReactSlider:
    52:53:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    59:61:void disableStateListAnimatorIfNeeded() -> disableStateListAnimatorIfNeeded
    114:114:double getStepValue() -> getStepValue
    110:110:int getTotalSteps() -> getTotalSteps
    66:67:void setMaxValue(double) -> setMaxValue
    71:72:void setMinValue(double) -> setMinValue
    81:82:void setStep(double) -> setStep
    76:77:void setValue(double) -> setValue
    89:92:double toRealProgress(int) -> toRealProgress
    97:101:void updateAll() -> updateAll
    106:106:void updateValue() -> updateValue
com.facebook.react.views.slider.ReactSliderEvent -> com.facebook.react.views.slider.ReactSliderEvent:
    24:26:void <init>(int,double,boolean) -> <init>
    49:49:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    30:30:double getValue() -> getValue
    34:34:boolean isFromUser() -> isFromUser
    53:56:com.facebook.react.bridge.WritableMap serializeEventData() -> serializeEventData
com.facebook.react.views.slider.ReactSliderManager -> com.facebook.react.views.slider.ReactSliderManager:
    89:290:void <clinit>() -> <clinit>
    120:121:void <init>() -> <init>
    46:46:android.widget.SeekBar$OnSeekBarChangeListener access$100() -> access$100
    46:46:void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View) -> addEventEmitters
    234:234:void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.slider.ReactSlider) -> addEventEmitters
    46:46:com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    131:131:com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    46:46:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    141:142:com.facebook.react.views.slider.ReactSlider createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    267:267:com.facebook.react.uimanager.ViewManagerDelegate getDelegate() -> getDelegate
    241:239:java.util.Map getExportedCustomDirectEventTypeConstants() -> getExportedCustomDirectEventTypeConstants
    136:136:java.lang.Class getShadowNodeClass() -> getShadowNodeClass
    254:260:long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode) -> measure
    46:46:void setDisabled(android.view.View,boolean) -> setDisabled
    46:46:void setEnabled(android.view.View,boolean) -> setEnabled
    149:149:void setEnabled(com.facebook.react.views.slider.ReactSlider,boolean) -> setEnabled
    46:46:void setMaximumTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap) -> setMaximumTrackImage
    46:46:void setMaximumTrackTintColor(android.view.View,java.lang.Integer) -> setMaximumTrackTintColor
    203:208:void setMaximumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer) -> setMaximumTrackTintColor
    46:46:void setMaximumValue(android.view.View,double) -> setMaximumValue
    169:169:void setMaximumValue(com.facebook.react.views.slider.ReactSlider,double) -> setMaximumValue
    46:46:void setMinimumTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap) -> setMinimumTrackImage
    46:46:void setMinimumTrackTintColor(android.view.View,java.lang.Integer) -> setMinimumTrackTintColor
    191:196:void setMinimumTrackTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer) -> setMinimumTrackTintColor
    46:46:void setMinimumValue(android.view.View,double) -> setMinimumValue
    163:163:void setMinimumValue(com.facebook.react.views.slider.ReactSlider,double) -> setMinimumValue
    46:46:void setStep(android.view.View,double) -> setStep
    175:175:void setStep(com.facebook.react.views.slider.ReactSlider,double) -> setStep
    46:46:void setTestID(android.view.View,java.lang.String) -> setTestID
    223:223:void setTestID(com.facebook.react.views.slider.ReactSlider,java.lang.String) -> setTestID
    46:46:void setThumbImage(android.view.View,com.facebook.react.bridge.ReadableMap) -> setThumbImage
    46:46:void setThumbTintColor(android.view.View,java.lang.Integer) -> setThumbTintColor
    182:184:void setThumbTintColor(com.facebook.react.views.slider.ReactSlider,java.lang.Integer) -> setThumbTintColor
    46:46:void setTrackImage(android.view.View,com.facebook.react.bridge.ReadableMap) -> setTrackImage
    46:46:void setValue(android.view.View,double) -> setValue
    155:157:void setValue(com.facebook.react.views.slider.ReactSlider,double) -> setValue
com.facebook.react.views.slider.ReactSliderManager$1 -> com.facebook.react.views.slider.ReactSliderManager$1:
    90:90:void <init>() -> <init>
    93:97:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    107:111:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.facebook.react.views.slider.ReactSliderManager$ReactSliderAccessibilityDelegate -> com.facebook.react.views.slider.ReactSliderManager$ReactSliderAccessibilityDelegate:
    270:270:void <init>() -> <init>
    272:274:boolean isSliderAction(int) -> isSliderAction
    279:284:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.facebook.react.views.slider.ReactSliderManager$ReactSliderShadowNode -> com.facebook.react.views.slider.ReactSliderManager$ReactSliderShadowNode:
    53:53:void <init>(com.facebook.react.views.slider.ReactSliderManager$1) -> <init>
    59:60:void <init>() -> <init>
    64:64:void initMeasureFunction() -> initMeasureFunction
    74:85:long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode) -> measure
com.facebook.react.views.slider.ReactSlidingCompleteEvent -> com.facebook.react.views.slider.ReactSlidingCompleteEvent:
    23:24:void <init>(int,double) -> <init>
    48:48:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    28:28:double getValue() -> getValue
    52:54:com.facebook.react.bridge.WritableMap serializeEventData() -> serializeEventData
com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout -> com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout:
    30:31:void <init>(com.facebook.react.bridge.ReactContext) -> <init>
    87:94:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    61:68:void onLayout(boolean,int,int,int,int) -> onLayout
    80:81:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    47:55:void setProgressViewOffset(float) -> setProgressViewOffset
    36:42:void setRefreshing(boolean) -> setRefreshing
    109:112:boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
com.facebook.react.views.swiperefresh.RefreshEvent -> com.facebook.react.views.swiperefresh.RefreshEvent:
    16:16:void <init>(int) -> <init>
    26:26:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager -> com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager:
    44:45:void <init>() -> <init>
    36:36:void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View) -> addEventEmitters
    134:134:void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout) -> addEventEmitters
    36:36:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    50:50:com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    175:175:com.facebook.react.uimanager.ViewManagerDelegate getDelegate() -> getDelegate
    168:170:java.util.Map getExportedCustomDirectEventTypeConstants() -> getExportedCustomDirectEventTypeConstants
    163:161:java.util.Map getExportedViewConstants() -> getExportedViewConstants
    36:36:void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    149:152:void receiveCommand(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    36:36:void setColors(android.view.View,com.facebook.react.bridge.ReadableArray) -> setColors
    68:74:void setColors(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.ReadableArray) -> setColors
    36:36:void setEnabled(android.view.View,boolean) -> setEnabled
    61:61:void setEnabled(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean) -> setEnabled
    36:36:void setNativeRefreshing(android.view.View,boolean) -> setNativeRefreshing
    36:36:void setProgressBackgroundColor(android.view.View,java.lang.Integer) -> setProgressBackgroundColor
    81:81:void setProgressBackgroundColor(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,java.lang.Integer) -> setProgressBackgroundColor
    36:36:void setProgressViewOffset(android.view.View,float) -> setProgressViewOffset
    123:123:void setProgressViewOffset(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,float) -> setProgressViewOffset
    36:36:void setRefreshing(android.view.View,boolean) -> setRefreshing
    117:117:void setRefreshing(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,boolean) -> setRefreshing
    36:36:void setSize(android.view.View,int) -> setSize
    87:87:void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,int) -> setSize
    95:110:void setSize(com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout,com.facebook.react.bridge.Dynamic) -> setSize
com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager$1 -> com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager$1:
    135:135:void <init>(com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout) -> <init>
    138:141:void onRefresh() -> onRefresh
com.facebook.react.views.switchview.ReactSwitch -> com.facebook.react.views.switchview.ReactSwitch:
    28:31:void <init>(android.content.Context) -> <init>
    36:44:void setChecked(boolean) -> setChecked
    50:52:void setColor(android.graphics.drawable.Drawable,java.lang.Integer) -> setColor
    66:70:void setOn(boolean) -> setOn
    61:61:void setThumbColor(java.lang.Integer) -> setThumbColor
    57:57:void setTrackColor(java.lang.Integer) -> setTrackColor
    96:100:void setTrackColor(boolean) -> setTrackColor
    85:91:void setTrackColorForFalse(java.lang.Integer) -> setTrackColorForFalse
    74:80:void setTrackColorForTrue(java.lang.Integer) -> setTrackColorForTrue
com.facebook.react.views.switchview.ReactSwitchEvent -> com.facebook.react.views.switchview.ReactSwitchEvent:
    23:24:void <init>(int,boolean) -> <init>
    44:44:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    28:28:boolean getIsChecked() -> getIsChecked
    48:50:com.facebook.react.bridge.WritableMap serializeEventData() -> serializeEventData
com.facebook.react.views.switchview.ReactSwitchManager -> com.facebook.react.views.switchview.ReactSwitchManager:
    78:78:void <clinit>() -> <clinit>
    92:93:void <init>() -> <init>
    35:35:void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View) -> addEventEmitters
    189:189:void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.switchview.ReactSwitch) -> addEventEmitters
    35:35:com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    103:103:com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    35:35:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    113:114:com.facebook.react.views.switchview.ReactSwitch createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    194:194:com.facebook.react.uimanager.ViewManagerDelegate getDelegate() -> getDelegate
    108:108:java.lang.Class getShadowNodeClass() -> getShadowNodeClass
    207:211:long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode) -> measure
    35:35:void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    180:182:void receiveCommand(com.facebook.react.views.switchview.ReactSwitch,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    35:35:void setDisabled(android.view.View,boolean) -> setDisabled
    121:121:void setDisabled(com.facebook.react.views.switchview.ReactSwitch,boolean) -> setDisabled
    35:35:void setEnabled(android.view.View,boolean) -> setEnabled
    127:127:void setEnabled(com.facebook.react.views.switchview.ReactSwitch,boolean) -> setEnabled
    35:35:void setNativeValue(android.view.View,boolean) -> setNativeValue
    35:35:void setOn(android.view.View,boolean) -> setOn
    133:133:void setOn(com.facebook.react.views.switchview.ReactSwitch,boolean) -> setOn
    35:35:void setThumbColor(android.view.View,java.lang.Integer) -> setThumbColor
    151:151:void setThumbColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer) -> setThumbColor
    35:35:void setThumbTintColor(android.view.View,java.lang.Integer) -> setThumbTintColor
    145:145:void setThumbTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer) -> setThumbTintColor
    35:35:void setTrackColorForFalse(android.view.View,java.lang.Integer) -> setTrackColorForFalse
    157:157:void setTrackColorForFalse(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer) -> setTrackColorForFalse
    35:35:void setTrackColorForTrue(android.view.View,java.lang.Integer) -> setTrackColorForTrue
    163:163:void setTrackColorForTrue(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer) -> setTrackColorForTrue
    35:35:void setTrackTintColor(android.view.View,java.lang.Integer) -> setTrackTintColor
    169:169:void setTrackTintColor(com.facebook.react.views.switchview.ReactSwitch,java.lang.Integer) -> setTrackTintColor
    35:35:void setValue(android.view.View,boolean) -> setValue
    139:139:void setValue(com.facebook.react.views.switchview.ReactSwitch,boolean) -> setValue
    219:221:void setValueInternal(com.facebook.react.views.switchview.ReactSwitch,boolean) -> setValueInternal
com.facebook.react.views.switchview.ReactSwitchManager$1 -> com.facebook.react.views.switchview.ReactSwitchManager$1:
    79:79:void <init>() -> <init>
    82:86:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode -> com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode:
    40:40:void <init>(com.facebook.react.views.switchview.ReactSwitchManager$1) -> <init>
    46:47:void <init>() -> <init>
    51:51:void initMeasureFunction() -> initMeasureFunction
    61:74:long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode) -> measure
com.facebook.react.views.text.CustomLetterSpacingSpan -> com.facebook.react.views.text.CustomLetterSpacingSpan:
    26:27:void <init>(float) -> <init>
    41:42:void apply(android.text.TextPaint) -> apply
    32:32:void updateDrawState(android.text.TextPaint) -> updateDrawState
    37:37:void updateMeasureState(android.text.TextPaint) -> updateMeasureState
com.facebook.react.views.text.CustomLineHeightSpan -> com.facebook.react.views.text.CustomLineHeightSpan:
    20:21:void <init>(float) -> <init>
    32:56:void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint$FontMetricsInt) -> chooseHeight
com.facebook.react.views.text.CustomStyleSpan -> com.facebook.react.views.text.CustomStyleSpan:
    44:49:void <init>(int,int,java.lang.String,java.lang.String,android.content.res.AssetManager) -> <init>
    85:90:void apply(android.graphics.Paint,int,int,java.lang.String,java.lang.String,android.content.res.AssetManager) -> apply
    54:54:void updateDrawState(android.text.TextPaint) -> updateDrawState
    59:59:void updateMeasureState(android.text.TextPaint) -> updateMeasureState
com.facebook.react.views.text.DefaultStyleValuesUtil -> com.facebook.react.views.text.DefaultStyleValuesUtil:
    18:19:void <init>() -> <init>
    53:63:android.content.res.ColorStateList getDefaultTextAttribute(android.content.Context,int) -> getDefaultTextAttribute
    39:39:android.content.res.ColorStateList getDefaultTextColor(android.content.Context) -> getDefaultTextColor
    49:49:int getDefaultTextColorHighlight(android.content.Context) -> getDefaultTextColorHighlight
    29:29:android.content.res.ColorStateList getDefaultTextColorHint(android.content.Context) -> getDefaultTextColorHint
com.facebook.react.views.text.FontMetricsUtil -> com.facebook.react.views.text.FontMetricsUtil:
    19:19:void <init>() -> <init>
    27:59:com.facebook.react.bridge.WritableArray getFontMetrics(java.lang.CharSequence,android.text.Layout,android.text.TextPaint,android.content.Context) -> getFontMetrics
com.facebook.react.views.text.ReactAbsoluteSizeSpan -> com.facebook.react.views.text.ReactAbsoluteSizeSpan:
    17:17:void <init>(int) -> <init>
com.facebook.react.views.text.ReactBackgroundColorSpan -> com.facebook.react.views.text.ReactBackgroundColorSpan:
    17:17:void <init>(int) -> <init>
com.facebook.react.views.text.ReactBaseTextShadowNode -> com.facebook.react.views.text.ReactBaseTextShadowNode:
    372:373:void <init>() -> <init>
    104:230:void buildSpannedFromShadowNode(com.facebook.react.views.text.ReactBaseTextShadowNode,android.text.SpannableStringBuilder,java.util.List,com.facebook.react.views.text.TextAttributes,boolean,java.util.Map,int) -> buildSpannedFromShadowNode
    612:614:void setAdjustFontSizeToFit(boolean) -> setAdjustFontSizeToFit
    409:411:void setAllowFontScaling(boolean) -> setAllowFontScaling
    471:476:void setBackgroundColor(java.lang.Integer) -> setBackgroundColor
    458:462:void setColor(java.lang.Integer) -> setColor
    482:483:void setFontFamily(java.lang.String) -> setFontFamily
    452:453:void setFontSize(float) -> setFontSize
    507:510:void setFontStyle(java.lang.String) -> setFontStyle
    497:501:void setFontVariant(com.facebook.react.bridge.ReadableArray) -> setFontVariant
    488:491:void setFontWeight(java.lang.String) -> setFontWeight
    516:516:void setIncludeFontPadding(boolean) -> setIncludeFontPadding
    403:404:void setLetterSpacing(float) -> setLetterSpacing
    397:398:void setLineHeight(float) -> setLineHeight
    417:419:void setMaxFontSizeMultiplier(float) -> setMaxFontSizeMultiplier
    620:622:void setMinimumFontScale(float) -> setMinimumFontScale
    391:392:void setNumberOfLines(int) -> setNumberOfLines
    425:447:void setTextAlign(java.lang.String) -> setTextAlign
    537:552:void setTextBreakStrategy(java.lang.String) -> setTextBreakStrategy
    521:532:void setTextDecorationLine(java.lang.String) -> setTextDecorationLine
    586:588:void setTextShadowColor(int) -> setTextShadowColor
    557:573:void setTextShadowOffset(com.facebook.react.bridge.ReadableMap) -> setTextShadowOffset
    578:580:void setTextShadowRadius(float) -> setTextShadowRadius
    595:605:void setTextTransform(java.lang.String) -> setTextTransform
    240:301:android.text.Spannable spannedFromShadowNode(com.facebook.react.views.text.ReactBaseTextShadowNode,java.lang.String,boolean,com.facebook.react.uimanager.NativeViewHierarchyOptimizer) -> spannedFromShadowNode
com.facebook.react.views.text.ReactBaseTextShadowNode$SetSpanOperation -> com.facebook.react.views.text.ReactBaseTextShadowNode$SetSpanOperation:
    72:75:void <init>(int,int,com.facebook.react.views.text.ReactSpan) -> <init>
    82:89:void execute(android.text.SpannableStringBuilder,int) -> execute
com.facebook.react.views.text.ReactFontManager -> com.facebook.react.views.text.ReactFontManager:
    31:32:void <clinit>() -> <clinit>
    40:42:void <init>() -> <init>
    120:137:android.graphics.Typeface createTypeface(java.lang.String,int,android.content.res.AssetManager) -> createTypeface
    46:49:com.facebook.react.views.text.ReactFontManager getInstance() -> getInstance
    59:77:android.graphics.Typeface getTypeface(java.lang.String,int,int,android.content.res.AssetManager) -> getTypeface
com.facebook.react.views.text.ReactFontManager$FontFamily -> com.facebook.react.views.text.ReactFontManager$FontFamily:
    140:140:void <init>(com.facebook.react.views.text.ReactFontManager$1) -> <init>
    144:145:void <init>() -> <init>
    149:149:android.graphics.Typeface getTypeface(int) -> getTypeface
    153:153:void setTypeface(int,android.graphics.Typeface) -> setTypeface
com.facebook.react.views.text.ReactForegroundColorSpan -> com.facebook.react.views.text.ReactForegroundColorSpan:
    17:17:void <init>(int) -> <init>
com.facebook.react.views.text.ReactRawTextManager -> com.facebook.react.views.text.ReactRawTextManager:
    21:21:void <init>() -> <init>
    20:20:com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    45:45:com.facebook.react.views.text.ReactRawTextShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    20:20:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    32:32:com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    40:40:java.lang.Class getShadowNodeClass() -> getShadowNodeClass
com.facebook.react.views.text.ReactRawTextShadowNode -> com.facebook.react.views.text.ReactRawTextShadowNode:
    26:24:void <init>() -> <init>
    35:35:java.lang.String getText() -> getText
    30:31:void setText(java.lang.String) -> setText
    45:45:java.lang.String toString() -> toString
com.facebook.react.views.text.ReactStrikethroughSpan -> com.facebook.react.views.text.ReactStrikethroughSpan:
    15:15:void <init>() -> <init>
com.facebook.react.views.text.ReactTagSpan -> com.facebook.react.views.text.ReactTagSpan:
    18:19:void <init>(int) -> <init>
    23:23:int getReactTag() -> getReactTag
com.facebook.react.views.text.ReactTextAnchorViewManager -> com.facebook.react.views.text.ReactTextAnchorViewManager:
    38:38:void <clinit>() -> <clinit>
    35:35:void <init>() -> <init>
    65:65:void setAdjustFontSizeToFit(com.facebook.react.views.text.ReactTextView,boolean) -> setAdjustFontSizeToFit
    152:154:void setBorderColor(com.facebook.react.views.text.ReactTextView,int,java.lang.Integer) -> setBorderColor
    109:116:void setBorderRadius(com.facebook.react.views.text.ReactTextView,int,float) -> setBorderRadius
    122:122:void setBorderStyle(com.facebook.react.views.text.ReactTextView,java.lang.String) -> setBorderStyle
    135:138:void setBorderWidth(com.facebook.react.views.text.ReactTextView,int,float) -> setBorderWidth
    169:171:void setDataDetectorType(com.facebook.react.views.text.ReactTextView,java.lang.String) -> setDataDetectorType
    164:164:void setDisabled(com.facebook.react.views.text.ReactTextView,boolean) -> setDisabled
    50:51:void setEllipsizeMode(com.facebook.react.views.text.ReactTextView,java.lang.String) -> setEllipsizeMode
    159:159:void setIncludeFontPadding(com.facebook.react.views.text.ReactTextView,boolean) -> setIncludeFontPadding
    191:191:void setNotifyOnInlineViewLayout(com.facebook.react.views.text.ReactTextView,boolean) -> setNotifyOnInlineViewLayout
    45:45:void setNumberOfLines(com.facebook.react.views.text.ReactTextView,int) -> setNumberOfLines
    86:86:void setSelectable(com.facebook.react.views.text.ReactTextView,boolean) -> setSelectable
    93:95:void setSelectionColor(com.facebook.react.views.text.ReactTextView,java.lang.Integer) -> setSelectionColor
    70:71:void setTextAlignVertical(com.facebook.react.views.text.ReactTextView,java.lang.String) -> setTextAlignVertical
com.facebook.react.views.text.ReactTextInlineImageShadowNode -> com.facebook.react.views.text.ReactTextInlineImageShadowNode:
    22:22:void <init>() -> <init>
com.facebook.react.views.text.ReactTextShadowNode -> com.facebook.react.views.text.ReactTextShadowNode:
    55:55:void <clinit>() -> <clinit>
    134:135:void <init>() -> <init>
    50:50:android.text.Spannable access$000(com.facebook.react.views.text.ReactTextShadowNode) -> access$000
    50:50:android.text.Layout access$100(com.facebook.react.views.text.ReactTextShadowNode,android.text.Spannable,float,com.facebook.yoga.YogaMeasureMode) -> access$100
    50:50:boolean access$200(com.facebook.react.views.text.ReactTextShadowNode) -> access$200
    50:50:android.text.TextPaint access$300() -> access$300
    301:316:java.lang.Iterable calculateLayoutOnChildren() -> calculateLayoutOnChildren
    229:230:int getTextAlign() -> getTextAlign
    139:140:void initMeasureFunction() -> initMeasureFunction
    266:268:void markUpdated() -> markUpdated
    146:221:android.text.Layout measureSpannedText(android.text.Spannable,float,com.facebook.yoga.YogaMeasureMode) -> measureSpannedText
    243:248:void onBeforeLayout(com.facebook.react.uimanager.NativeViewHierarchyOptimizer) -> onBeforeLayout
    273:288:void onCollectExtraUpdates(com.facebook.react.uimanager.UIViewOperationQueue) -> onCollectExtraUpdates
    294:294:void setShouldNotifyOnTextLayout(boolean) -> setShouldNotifyOnTextLayout
com.facebook.react.views.text.ReactTextShadowNode$1 -> com.facebook.react.views.text.ReactTextShadowNode$1:
    62:62:void <init>(com.facebook.react.views.text.ReactTextShadowNode) -> <init>
    70:129:long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode) -> measure
com.facebook.react.views.text.ReactTextUpdate -> com.facebook.react.views.text.ReactTextUpdate:
    78:78:void <init>(android.text.Spannable,int,boolean,float,float,float,float,int,int,int) -> <init>
    100:100:void <init>(android.text.Spannable,int,boolean,int,int,int) -> <init>
    127:139:void <init>(android.text.Spannable,int,boolean,float,float,float,float,int,int,int,int,int) -> <init>
    151:155:com.facebook.react.views.text.ReactTextUpdate buildReactTextUpdateFromState(android.text.Spannable,int,boolean,int,int,int,com.facebook.react.bridge.ReadableMap) -> buildReactTextUpdateFromState
    168:168:boolean containsImages() -> containsImages
    164:164:int getJsEventCounter() -> getJsEventCounter
    196:196:int getJustificationMode() -> getJustificationMode
    184:184:float getPaddingBottom() -> getPaddingBottom
    172:172:float getPaddingLeft() -> getPaddingLeft
    180:180:float getPaddingRight() -> getPaddingRight
    176:176:float getPaddingTop() -> getPaddingTop
    204:204:int getSelectionEnd() -> getSelectionEnd
    200:200:int getSelectionStart() -> getSelectionStart
    160:160:android.text.Spannable getText() -> getText
    188:188:int getTextAlign() -> getTextAlign
    192:192:int getTextBreakStrategy() -> getTextBreakStrategy
com.facebook.react.views.text.ReactTextView -> com.facebook.react.views.text.ReactTextView:
    45:45:void <clinit>() -> <clinit>
    62:66:void <init>(android.content.Context) -> <init>
    90:92:com.facebook.react.bridge.ReactContext getReactContext() -> getReactContext
    529:529:android.text.Spannable getSpanned() -> getSpanned
    71:84:com.facebook.react.bridge.WritableMap inlineViewJson(int,int,int,int,int,int) -> inlineViewJson
    389:398:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    427:432:void onAttachedToWindow() -> onAttachedToWindow
    403:408:void onDetachedFromWindow() -> onDetachedFromWindow
    439:444:void onFinishTemporaryDetach() -> onFinishTemporaryDetach
    99:262:void onLayout(boolean,int,int,int,int) -> onLayout
    415:420:void onStartTemporaryDetach() -> onStartTemporaryDetach
    322:347:int reactTagForTouch(float,float) -> reactTagForTouch
    479:479:void setAdjustFontSizeToFit(boolean) -> setAdjustFontSizeToFit
    501:501:void setBackgroundColor(int) -> setBackgroundColor
    509:509:void setBorderColor(int,float,float) -> setBorderColor
    513:513:void setBorderRadius(float) -> setBorderRadius
    517:517:void setBorderRadius(float,int) -> setBorderRadius
    521:521:void setBorderStyle(java.lang.String) -> setBorderStyle
    505:505:void setBorderWidth(int,float) -> setBorderWidth
    483:483:void setEllipsizeLocation(android.text.TextUtils$TruncateAt) -> setEllipsizeLocation
    456:458:void setGravityHorizontal(int) -> setGravityHorizontal
    467:469:void setGravityVertical(int) -> setGravityVertical
    533:533:void setLinkifyMask(int) -> setLinkifyMask
    487:487:void setNotifyOnInlineViewLayout(boolean) -> setNotifyOnInlineViewLayout
    473:475:void setNumberOfLines(int) -> setNumberOfLines
    525:525:void setSpanned(android.text.Spannable) -> setSpanned
    267:317:void setText(com.facebook.react.views.text.ReactTextUpdate) -> setText
    492:496:void updateView() -> updateView
    375:384:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.facebook.react.views.text.ReactTextView$1 -> com.facebook.react.views.text.ReactTextView$1:
    245:245:void <init>(com.facebook.react.views.text.ReactTextView) -> <init>
    248:250:int compare(java.lang.Object,java.lang.Object) -> compare
com.facebook.react.views.text.ReactTextViewManager -> com.facebook.react.views.text.ReactTextViewManager:
    31:31:void <init>() -> <init>
    30:30:com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    59:59:com.facebook.react.views.text.ReactTextShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    30:30:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    44:44:com.facebook.react.views.text.ReactTextView createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    127:126:java.util.Map getExportedCustomDirectEventTypeConstants() -> getExportedCustomDirectEventTypeConstants
    64:64:java.lang.Class getShadowNodeClass() -> getShadowNodeClass
    109:109:int getTextBreakStrategy(java.lang.String) -> getTextBreakStrategy
    142:142:long measure(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode) -> measure
    30:30:void onAfterUpdateTransaction(android.view.View) -> onAfterUpdateTransaction
    69:70:void onAfterUpdateTransaction(com.facebook.react.views.text.ReactTextView) -> onAfterUpdateTransaction
    30:30:void setPadding(android.view.View,int,int,int,int) -> setPadding
    148:148:void setPadding(com.facebook.react.views.text.ReactTextView,int,int,int,int) -> setPadding
    30:30:void updateExtraData(android.view.View,java.lang.Object) -> updateExtraData
    49:54:void updateExtraData(com.facebook.react.views.text.ReactTextView,java.lang.Object) -> updateExtraData
    30:30:java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper) -> updateState
    81:101:java.lang.Object updateState(com.facebook.react.views.text.ReactTextView,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper) -> updateState
com.facebook.react.views.text.ReactTypefaceUtils -> com.facebook.react.views.text.ReactTypefaceUtils:
    18:18:void <init>() -> <init>
    86:110:android.graphics.Typeface applyStyles(android.graphics.Typeface,int,int,java.lang.String,android.content.res.AssetManager) -> applyStyles
    34:36:int parseFontStyle(java.lang.String) -> parseFontStyle
    44:73:java.lang.String parseFontVariant(com.facebook.react.bridge.ReadableArray) -> parseFontVariant
    23:27:int parseFontWeight(java.lang.String) -> parseFontWeight
    120:124:int parseNumericFontWeight(java.lang.String) -> parseNumericFontWeight
com.facebook.react.views.text.ReactUnderlineSpan -> com.facebook.react.views.text.ReactUnderlineSpan:
    15:15:void <init>() -> <init>
com.facebook.react.views.text.ReactVirtualTextShadowNode -> com.facebook.react.views.text.ReactVirtualTextShadowNode:
    18:18:void <init>() -> <init>
com.facebook.react.views.text.ReactVirtualTextViewManager -> com.facebook.react.views.text.ReactVirtualTextViewManager:
    21:21:void <init>() -> <init>
    20:20:com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    45:45:com.facebook.react.views.text.ReactVirtualTextShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    32:32:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    40:40:java.lang.Class getShadowNodeClass() -> getShadowNodeClass
com.facebook.react.views.text.ShadowStyleSpan -> com.facebook.react.views.text.ShadowStyleSpan:
    17:21:void <init>(float,float,float,int) -> <init>
    26:26:void updateDrawState(android.text.TextPaint) -> updateDrawState
com.facebook.react.views.text.TextAttributeProps -> com.facebook.react.views.text.TextAttributeProps:
    106:130:void <init>(com.facebook.react.uimanager.ReactStylesDiffMap) -> <init>
    166:167:com.facebook.react.bridge.ReadableArray getArrayProp(java.lang.String) -> getArrayProp
    134:135:boolean getBooleanProp(java.lang.String,boolean) -> getBooleanProp
    176:180:float getEffectiveLineHeight() -> getEffectiveLineHeight
    158:159:float getFloatProp(java.lang.String,float) -> getFloatProp
    150:151:int getIntProp(java.lang.String,int) -> getIntProp
    435:435:com.facebook.yoga.YogaDirection getLayoutDirection() -> getLayoutDirection
    217:223:float getLetterSpacing() -> getLetterSpacing
    142:143:java.lang.String getStringProp(java.lang.String) -> getStringProp
    185:186:int getTextAlign() -> getTextAlign
    425:429:int parseNumericFontWeight(java.lang.String) -> parseNumericFontWeight
    232:236:void setAllowFontScaling(boolean) -> setAllowFontScaling
    287:289:void setBackgroundColor(java.lang.Integer) -> setBackgroundColor
    277:279:void setColor(java.lang.Integer) -> setColor
    295:295:void setFontFamily(java.lang.String) -> setFontFamily
    266:273:void setFontSize(float) -> setFontSize
    327:333:void setFontStyle(java.lang.String) -> setFontStyle
    299:299:void setFontVariant(com.facebook.react.bridge.ReadableArray) -> setFontVariant
    308:317:void setFontWeight(java.lang.String) -> setFontWeight
    213:213:void setLetterSpacing(float) -> setLetterSpacing
    201:208:void setLineHeight(float) -> setLineHeight
    241:252:void setTextAlign(java.lang.String) -> setTextAlign
    356:367:void setTextBreakStrategy(java.lang.String) -> setTextBreakStrategy
    342:349:void setTextDecorationLine(java.lang.String) -> setTextDecorationLine
    397:398:void setTextShadowColor(int) -> setTextShadowColor
    373:385:void setTextShadowOffset(com.facebook.react.bridge.ReadableMap) -> setTextShadowOffset
    391:392:void setTextShadowRadius(float) -> setTextShadowRadius
    403:404:void setTextTransform(java.lang.String) -> setTextTransform
com.facebook.react.views.text.TextAttributes -> com.facebook.react.views.text.TextAttributes:
    33:31:void <init>() -> <init>
    36:54:com.facebook.react.views.text.TextAttributes applyChild(com.facebook.react.views.text.TextAttributes) -> applyChild
    64:64:boolean getAllowFontScaling() -> getAllowFontScaling
    130:133:int getEffectiveFontSize() -> getEffectiveFontSize
    155:166:float getEffectiveLetterSpacing() -> getEffectiveLetterSpacing
    137:151:float getEffectiveLineHeight() -> getEffectiveLineHeight
    171:171:float getEffectiveMaxFontSizeMultiplier() -> getEffectiveMaxFontSizeMultiplier
    72:72:float getFontSize() -> getFontSize
    108:108:float getHeightOfTallestInlineViewOrImage() -> getHeightOfTallestInlineViewOrImage
    88:88:float getLetterSpacing() -> getLetterSpacing
    80:80:float getLineHeight() -> getLineHeight
    96:96:float getMaxFontSizeMultiplier() -> getMaxFontSizeMultiplier
    116:116:com.facebook.react.views.text.TextTransform getTextTransform() -> getTextTransform
    68:68:void setAllowFontScaling(boolean) -> setAllowFontScaling
    76:76:void setFontSize(float) -> setFontSize
    112:112:void setHeightOfTallestInlineViewOrImage(float) -> setHeightOfTallestInlineViewOrImage
    92:92:void setLetterSpacing(float) -> setLetterSpacing
    84:84:void setLineHeight(float) -> setLineHeight
    101:104:void setMaxFontSizeMultiplier(float) -> setMaxFontSizeMultiplier
    120:120:void setTextTransform(com.facebook.react.views.text.TextTransform) -> setTextTransform
    177:199:java.lang.String toString() -> toString
com.facebook.react.views.text.TextInlineImageSpan -> com.facebook.react.views.text.TextInlineImageSpan:
    18:18:void <init>() -> <init>
    29:32:void possiblyUpdateInlineImageSpans(android.text.Spannable,android.widget.TextView) -> possiblyUpdateInlineImageSpans
com.facebook.react.views.text.TextInlineViewPlaceholderSpan -> com.facebook.react.views.text.TextInlineViewPlaceholderSpan:
    23:26:void <init>(int,int,int) -> <init>
    38:38:int getHeight() -> getHeight
    30:30:int getReactTag() -> getReactTag
    46:53:int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt) -> getSize
    34:34:int getWidth() -> getWidth
com.facebook.react.views.text.TextLayoutManager -> com.facebook.react.views.text.TextLayoutManager:
    38:44:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    52:123:void buildSpannableFromFragment(android.content.Context,com.facebook.react.bridge.ReadableArray,android.text.SpannableStringBuilder,java.util.List) -> buildSpannableFromFragment
    152:167:android.text.Spannable createSpannableFromAttributedString(android.content.Context,com.facebook.react.bridge.ReadableMap) -> createSpannableFromAttributedString
    133:140:android.text.Spannable getOrCreateSpannableForText(android.content.Context,com.facebook.react.bridge.ReadableMap) -> getOrCreateSpannableForText
    184:192:long measureText(android.content.Context,com.facebook.react.bridge.ReadableMap,com.facebook.react.bridge.ReadableMap,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode) -> measureText
com.facebook.react.views.text.TextLayoutManager$SetSpanOperation -> com.facebook.react.views.text.TextLayoutManager$SetSpanOperation:
    290:293:void <init>(int,int,com.facebook.react.views.text.ReactSpan) -> <init>
    300:307:void execute(android.text.SpannableStringBuilder,int) -> execute
com.facebook.react.views.text.TextTransform -> com.facebook.react.views.text.TextTransform:
    14:13:void <clinit>() -> <clinit>
    13:13:void <init>(java.lang.String,int) -> <init>
    26:28:java.lang.String apply(java.lang.String,com.facebook.react.views.text.TextTransform) -> apply
    44:60:java.lang.String capitalize(java.lang.String) -> capitalize
    13:13:com.facebook.react.views.text.TextTransform valueOf(java.lang.String) -> valueOf
    13:13:com.facebook.react.views.text.TextTransform[] values() -> values
com.facebook.react.views.text.TextTransform$1 -> com.facebook.react.views.text.TextTransform$1:
    26:26:void <clinit>() -> <clinit>
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode -> com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode:
    39:41:void <init>(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object) -> <init>
    128:139:com.facebook.react.views.text.TextInlineImageSpan buildInlineImageSpan() -> buildInlineImageSpan
    147:147:java.lang.Object getCallerContext() -> getCallerContext
    143:143:com.facebook.drawee.controller.AbstractDraweeControllerBuilder getDraweeControllerBuilder() -> getDraweeControllerBuilder
    105:105:com.facebook.react.bridge.ReadableMap getHeaders() -> getHeaders
    110:118:android.net.Uri getResourceDrawableUri(android.content.Context,java.lang.String) -> getResourceDrawableUri
    101:101:android.net.Uri getUri() -> getUri
    71:71:void setHeaders(com.facebook.react.bridge.ReadableMap) -> setHeaders
    92:95:void setHeight(com.facebook.react.bridge.Dynamic) -> setHeight
    47:66:void setSource(com.facebook.react.bridge.ReadableArray) -> setSource
    76:76:void setTintColor(int) -> setTintColor
    82:85:void setWidth(com.facebook.react.bridge.Dynamic) -> setWidth
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan -> com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan:
    64:72:void <init>(android.content.res.Resources,int,int,int,android.net.Uri,com.facebook.react.bridge.ReadableMap,com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object) -> <init>
    129:163:void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint) -> draw
    96:96:android.graphics.drawable.Drawable getDrawable() -> getDrawable
    173:173:int getHeight() -> getHeight
    104:111:int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt) -> getSize
    88:88:void onAttachedToWindow() -> onAttachedToWindow
    80:80:void onDetachedFromWindow() -> onDetachedFromWindow
    92:92:void onFinishTemporaryDetach() -> onFinishTemporaryDetach
    84:84:void onStartTemporaryDetach() -> onStartTemporaryDetach
    115:115:void setTextView(android.widget.TextView) -> setTextView
com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager -> com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager:
    32:32:void <init>() -> <init>
    37:39:void <init>(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,java.lang.Object) -> <init>
    22:22:com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    54:57:com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    49:49:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    63:63:java.lang.Class getShadowNodeClass() -> getShadowNodeClass
com.facebook.react.views.textinput.ReactContentSizeChangedEvent -> com.facebook.react.views.textinput.ReactContentSizeChangedEvent:
    24:26:void <init>(int,float,float) -> <init>
    36:36:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    40:47:com.facebook.react.bridge.WritableMap serializeEventData() -> serializeEventData
com.facebook.react.views.textinput.ReactEditText -> com.facebook.react.views.textinput.ReactEditText:
    108:108:void <clinit>() -> <clinit>
    111:143:void <init>(android.content.Context) -> <init>
    62:62:boolean access$002(com.facebook.react.views.textinput.ReactEditText,boolean) -> access$002
    62:62:java.util.ArrayList access$200(com.facebook.react.views.textinput.ReactEditText) -> access$200
    62:62:void access$300(com.facebook.react.views.textinput.ReactEditText) -> access$300
    62:62:android.text.method.KeyListener access$400() -> access$400
    265:270:void addTextChangedListener(android.text.TextWatcher) -> addTextChangedListener
    796:801:void applyTextAttributes() -> applyTextAttributes
    238:240:void clearFocus() -> clearFocus
    446:446:void clearFocusFromJS() -> clearFocusFromJS
    371:375:void commitStagedInputType() -> commitStagedInputType
    336:341:boolean getBlurOnSubmit() -> getBlurOnSubmit
    350:350:boolean getDisableFullscreenUI() -> getDisableFullscreenUI
    359:359:java.lang.String getReturnKeyType() -> getReturnKeyType
    363:363:int getStagedInputType() -> getStagedInputType
    572:575:com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator getTextWatcherDelegator() -> getTextWatcherDelegator
    568:568:void hideSoftKeyboard() -> hideSoftKeyboard
    451:451:int incrementAndGetEventCounter() -> incrementAndGetEventCounter
    681:690:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    579:579:boolean isMultiline() -> isMultiline
    583:583:boolean isSecureText() -> isSecureText
    522:542:void manageSpans(android.text.SpannableStringBuilder) -> manageSpans
    468:510:void maybeSetText(com.facebook.react.views.text.ReactTextUpdate) -> maybeSetText
    455:457:void maybeSetTextFromJS(com.facebook.react.views.text.ReactTextUpdate) -> maybeSetTextFromJS
    462:462:void maybeSetTextFromState(com.facebook.react.views.text.ReactTextUpdate) -> maybeSetTextFromState
    426:435:void maybeUpdateTypeface() -> maybeUpdateTypeface
    719:724:void onAttachedToWindow() -> onAttachedToWindow
    589:593:void onContentSizeChange() -> onContentSizeChange
    222:231:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    695:700:void onDetachedFromWindow() -> onDetachedFromWindow
    731:736:void onFinishTemporaryDetach() -> onFinishTemporaryDetach
    317:319:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    204:208:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    172:172:void onLayout(boolean,int,int,int,int) -> onLayout
    213:216:void onScrollChanged(int,int,int,int) -> onScrollChanged
    309:311:void onSelectionChanged(int,int) -> onSelectionChanged
    707:712:void onStartTemporaryDetach() -> onStartTemporaryDetach
    177:197:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    275:280:void removeTextChangedListener(android.text.TextWatcher) -> removeTextChangedListener
    247:258:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    440:442:void requestFocusFromJS() -> requestFocusFromJS
    552:556:boolean sameTextForSpan(android.text.Editable,android.text.SpannableStringBuilder,int,int) -> sameTextForSpan
    772:774:void setAllowFontScaling(boolean) -> setAllowFontScaling
    743:743:void setBackgroundColor(int) -> setBackgroundColor
    328:328:void setBlurOnSubmit(java.lang.Boolean) -> setBlurOnSubmit
    751:751:void setBorderColor(int,float,float) -> setBorderColor
    755:755:void setBorderRadius(float) -> setBorderRadius
    759:759:void setBorderRadius(float,int) -> setBorderRadius
    763:763:void setBorderStyle(java.lang.String) -> setBorderStyle
    747:747:void setBorderWidth(int,float) -> setBorderWidth
    286:286:void setContentSizeWatcher(com.facebook.react.views.textinput.ContentSizeWatcher) -> setContentSizeWatcher
    345:346:void setDisableFullscreenUI(boolean) -> setDisableFullscreenUI
    405:406:void setFontFamily(java.lang.String) -> setFontFamily
    779:780:void setFontSize(float) -> setFontSize
    418:421:void setFontStyle(java.lang.String) -> setFontStyle
    410:413:void setFontWeight(java.lang.String) -> setFontWeight
    613:615:void setGravityHorizontal(int) -> setGravityHorizontal
    624:626:void setGravityVertical(int) -> setGravityVertical
    381:401:void setInputType(int) -> setInputType
    603:607:void setIntrinsicContentSize() -> setIntrinsicContentSize
    767:768:void setLetterSpacingPt(float) -> setLetterSpacingPt
    784:786:void setMaxFontSizeMultiplier(float) -> setMaxFontSizeMultiplier
    290:290:void setMostRecentEventCount(int) -> setMostRecentEventCount
    332:332:void setOnKeyPress(boolean) -> setOnKeyPress
    354:355:void setReturnKeyType(java.lang.String) -> setReturnKeyType
    294:294:void setScrollWatcher(com.facebook.react.views.textinput.ScrollWatcher) -> setScrollWatcher
    300:304:void setSelection(int,int) -> setSelection
    324:324:void setSelectionWatcher(com.facebook.react.views.textinput.SelectionWatcher) -> setSelectionWatcher
    367:367:void setStagedInputType(int) -> setStagedInputType
    564:564:boolean showSoftKeyboard() -> showSoftKeyboard
    632:661:void updateImeOptions() -> updateImeOptions
    667:676:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.facebook.react.views.textinput.ReactEditText$1 -> com.facebook.react.views.textinput.ReactEditText$1:
    145:145:void <init>(com.facebook.react.views.textinput.ReactEditText) -> <init>
    149:154:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.facebook.react.views.textinput.ReactEditText$InternalKeyListener -> com.facebook.react.views.textinput.ReactEditText$InternalKeyListener:
    852:850:void <init>() -> <init>
    889:889:void clearMetaKeyState(android.view.View,android.text.Editable,int) -> clearMetaKeyState
    864:864:int getInputType() -> getInputType
    874:874:boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent) -> onKeyDown
    884:884:boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent) -> onKeyOther
    879:879:boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent) -> onKeyUp
    855:855:void setInputType(int) -> setInputType
com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator -> com.facebook.react.views.textinput.ReactEditText$TextWatcherDelegator:
    810:810:void <init>(com.facebook.react.views.textinput.ReactEditText) -> <init>
    810:810:void <init>(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.views.textinput.ReactEditText$1) -> <init>
    833:835:void afterTextChanged(android.text.Editable) -> afterTextChanged
    813:815:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    822:828:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper -> com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper:
    64:66:void <init>(android.view.inputmethod.InputConnection,com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText) -> <init>
    71:72:boolean beginBatchEdit() -> beginBatchEdit
    107:116:boolean commitText(java.lang.CharSequence,int) -> commitText
    121:122:boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    150:153:void dispatchKeyEvent(java.lang.String) -> dispatchKeyEvent
    142:145:void dispatchKeyEventOrEnqueue(java.lang.String) -> dispatchKeyEventOrEnqueue
    77:82:boolean endBatchEdit() -> endBatchEdit
    131:138:boolean sendKeyEvent(android.view.KeyEvent) -> sendKeyEvent
    87:101:boolean setComposingText(java.lang.CharSequence,int) -> setComposingText
com.facebook.react.views.textinput.ReactTextChangedEvent -> com.facebook.react.views.textinput.ReactTextChangedEvent:
    27:29:void <init>(int,java.lang.String,int) -> <init>
    39:39:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    43:46:com.facebook.react.bridge.WritableMap serializeEventData() -> serializeEventData
com.facebook.react.views.textinput.ReactTextInputBlurEvent -> com.facebook.react.views.textinput.ReactTextInputBlurEvent:
    21:21:void <init>(int) -> <init>
    36:36:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    40:41:com.facebook.react.bridge.WritableMap serializeEventData() -> serializeEventData
com.facebook.react.views.textinput.ReactTextInputEndEditingEvent -> com.facebook.react.views.textinput.ReactTextInputEndEditingEvent:
    26:27:void <init>(int,java.lang.String) -> <init>
    42:42:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    46:48:com.facebook.react.bridge.WritableMap serializeEventData() -> serializeEventData
com.facebook.react.views.textinput.ReactTextInputEvent -> com.facebook.react.views.textinput.ReactTextInputEvent:
    30:34:void <init>(int,java.lang.String,java.lang.String,int,int) -> <init>
    50:50:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    54:63:com.facebook.react.bridge.WritableMap serializeEventData() -> serializeEventData
com.facebook.react.views.textinput.ReactTextInputFocusEvent -> com.facebook.react.views.textinput.ReactTextInputFocusEvent:
    21:21:void <init>(int) -> <init>
    36:36:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    40:41:com.facebook.react.bridge.WritableMap serializeEventData() -> serializeEventData
com.facebook.react.views.textinput.ReactTextInputKeyPressEvent -> com.facebook.react.views.textinput.ReactTextInputKeyPressEvent:
    23:24:void <init>(int,java.lang.String) -> <init>
    40:40:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    44:45:com.facebook.react.bridge.WritableMap serializeEventData() -> serializeEventData
com.facebook.react.views.textinput.ReactTextInputLocalData -> com.facebook.react.views.textinput.ReactTextInputLocalData:
    26:37:void <init>(android.widget.EditText) -> <init>
    42:49:void apply(android.widget.EditText) -> apply
com.facebook.react.views.textinput.ReactTextInputManager -> com.facebook.react.views.textinput.ReactTextInputManager:
    77:110:void <clinit>() -> <clinit>
    73:73:void <init>() -> <init>
    72:72:void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,android.view.View) -> addEventEmitters
    990:1008:void addEventEmitters(com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText) -> addEventEmitters
    835:838:void checkPasswordType(com.facebook.react.views.textinput.ReactEditText) -> checkPasswordType
    72:72:com.facebook.react.uimanager.ReactShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    129:129:com.facebook.react.uimanager.LayoutShadowNode createShadowNodeInstance() -> createShadowNodeInstance
    72:72:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    120:123:com.facebook.react.views.textinput.ReactEditText createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    186:186:java.util.Map getCommandsMap() -> getCommandsMap
    140:171:java.util.Map getExportedCustomBubblingEventTypeConstants() -> getExportedCustomBubblingEventTypeConstants
    177:181:java.util.Map getExportedCustomDirectEventTypeConstants() -> getExportedCustomDirectEventTypeConstants
    1177:1173:java.util.Map getExportedViewConstants() -> getExportedViewConstants
    249:252:com.facebook.react.views.text.ReactTextUpdate getReactTextUpdate(java.lang.String,int,int,int) -> getReactTextUpdate
    134:134:java.lang.Class getShadowNodeClass() -> getShadowNodeClass
    1196:1196:int getTextBreakStrategy(java.lang.String) -> getTextBreakStrategy
    72:72:void onAfterUpdateTransaction(android.view.View) -> onAfterUpdateTransaction
    828:830:void onAfterUpdateTransaction(com.facebook.react.views.textinput.ReactEditText) -> onAfterUpdateTransaction
    72:72:void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    72:72:void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    203:194:void receiveCommand(com.facebook.react.views.textinput.ReactEditText,int,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    211:214:void receiveCommand(com.facebook.react.views.textinput.ReactEditText,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    395:395:void setAllowFontScaling(com.facebook.react.views.textinput.ReactEditText,boolean) -> setAllowFontScaling
    697:713:void setAutoCapitalize(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.bridge.Dynamic) -> setAutoCapitalize
    665:661:void setAutoCorrect(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean) -> setAutoCorrect
    342:345:void setAutofillHints(com.facebook.react.views.textinput.ReactEditText,java.lang.String[]) -> setAutofillHints
    359:359:void setBlurOnSubmit(com.facebook.react.views.textinput.ReactEditText,java.lang.Boolean) -> setBlurOnSubmit
    821:823:void setBorderColor(com.facebook.react.views.textinput.ReactEditText,int,java.lang.Integer) -> setBorderColor
    773:780:void setBorderRadius(com.facebook.react.views.textinput.ReactEditText,int,float) -> setBorderRadius
    786:786:void setBorderStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String) -> setBorderStyle
    804:807:void setBorderWidth(com.facebook.react.views.textinput.ReactEditText,int,float) -> setBorderWidth
    468:468:void setCaretHidden(com.facebook.react.views.textinput.ReactEditText,boolean) -> setCaretHidden
    490:492:void setColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer) -> setColor
    474:474:void setContextMenuHidden(com.facebook.react.views.textinput.ReactEditText,boolean) -> setContextMenuHidden
    432:453:void setCursorColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer) -> setCursorColor
    753:753:void setDisableFullscreenUI(com.facebook.react.views.textinput.ReactEditText,boolean) -> setDisableFullscreenUI
    573:573:void setEditable(com.facebook.react.views.textinput.ReactEditText,boolean) -> setEditable
    294:294:void setFontFamily(com.facebook.react.views.textinput.ReactEditText,java.lang.String) -> setFontFamily
    289:289:void setFontSize(com.facebook.react.views.textinput.ReactEditText,float) -> setFontSize
    309:309:void setFontStyle(com.facebook.react.views.textinput.ReactEditText,java.lang.String) -> setFontStyle
    304:304:void setFontWeight(com.facebook.react.views.textinput.ReactEditText,java.lang.String) -> setFontWeight
    320:329:void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,java.lang.String) -> setImportantForAutofill
    334:337:void setImportantForAutofill(com.facebook.react.views.textinput.ReactEditText,int) -> setImportantForAutofill
    314:314:void setIncludeFontPadding(com.facebook.react.views.textinput.ReactEditText,boolean) -> setIncludeFontPadding
    562:563:void setInlineImageLeft(com.facebook.react.views.textinput.ReactEditText,java.lang.String) -> setInlineImageLeft
    568:568:void setInlineImagePadding(com.facebook.react.views.textinput.ReactEditText,int) -> setInlineImagePadding
    720:743:void setKeyboardType(com.facebook.react.views.textinput.ReactEditText,java.lang.String) -> setKeyboardType
    390:390:void setLetterSpacing(com.facebook.react.views.textinput.ReactEditText,float) -> setLetterSpacing
    299:299:void setMaxFontSizeMultiplier(com.facebook.react.views.textinput.ReactEditText,float) -> setMaxFontSizeMultiplier
    583:619:void setMaxLength(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer) -> setMaxLength
    463:463:void setMostRecentEventCount(com.facebook.react.views.textinput.ReactEditText,int) -> setMostRecentEventCount
    673:673:void setMultiline(com.facebook.react.views.textinput.ReactEditText,boolean) -> setMultiline
    578:578:void setNumLines(com.facebook.react.views.textinput.ReactEditText,int) -> setNumLines
    365:367:void setOnContentSizeChange(com.facebook.react.views.textinput.ReactEditText,boolean) -> setOnContentSizeChange
    382:382:void setOnKeyPress(com.facebook.react.views.textinput.ReactEditText,boolean) -> setOnKeyPress
    374:376:void setOnScroll(com.facebook.react.views.textinput.ReactEditText,boolean) -> setOnScroll
    351:353:void setOnSelectionChange(com.facebook.react.views.textinput.ReactEditText,boolean) -> setOnSelectionChange
    72:72:void setPadding(android.view.View,int,int,int,int) -> setPadding
    1188:1188:void setPadding(com.facebook.react.views.textinput.ReactEditText,int,int,int,int) -> setPadding
    400:400:void setPlaceholder(com.facebook.react.views.textinput.ReactEditText,java.lang.String) -> setPlaceholder
    406:408:void setPlaceholderTextColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer) -> setPlaceholderTextColor
    760:760:void setReturnKeyLabel(com.facebook.react.views.textinput.ReactEditText,java.lang.String) -> setReturnKeyLabel
    748:748:void setReturnKeyType(com.facebook.react.views.textinput.ReactEditText,java.lang.String) -> setReturnKeyType
    681:687:void setSecureTextEntry(com.facebook.react.views.textinput.ReactEditText,boolean) -> setSecureTextEntry
    484:484:void setSelectTextOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean) -> setSelectTextOnFocus
    416:421:void setSelectionColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer) -> setSelectionColor
    519:530:void setTextAlign(com.facebook.react.views.textinput.ReactEditText,java.lang.String) -> setTextAlign
    545:546:void setTextAlignVertical(com.facebook.react.views.textinput.ReactEditText,java.lang.String) -> setTextAlignVertical
    625:653:void setTextContentType(com.facebook.react.views.textinput.ReactEditText,java.lang.String) -> setTextContentType
    500:513:void setUnderlineColor(com.facebook.react.views.textinput.ReactEditText,java.lang.Integer) -> setUnderlineColor
    791:791:void showKeyboardOnFocus(com.facebook.react.views.textinput.ReactEditText,boolean) -> showKeyboardOnFocus
    72:72:void updateExtraData(android.view.View,java.lang.Object) -> updateExtraData
    258:283:void updateExtraData(com.facebook.react.views.textinput.ReactEditText,java.lang.Object) -> updateExtraData
    845:845:void updateStagedInputTypeFlag(com.facebook.react.views.textinput.ReactEditText,int,int) -> updateStagedInputTypeFlag
    72:72:java.lang.Object updateState(android.view.View,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper) -> updateState
    1215:1233:java.lang.Object updateState(com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ReactStylesDiffMap,com.facebook.react.uimanager.StateWrapper) -> updateState
com.facebook.react.views.textinput.ReactTextInputManager$1 -> com.facebook.react.views.textinput.ReactTextInputManager$1:
    475:475:void <init>(com.facebook.react.views.textinput.ReactTextInputManager,boolean) -> <init>
    477:477:boolean onLongClick(android.view.View) -> onLongClick
com.facebook.react.views.textinput.ReactTextInputManager$2 -> com.facebook.react.views.textinput.ReactTextInputManager$2:
    992:992:void <init>(com.facebook.react.views.textinput.ReactTextInputManager,com.facebook.react.uimanager.ThemedReactContext,com.facebook.react.views.textinput.ReactEditText) -> <init>
    994:1001:void onFocusChange(android.view.View,boolean) -> onFocusChange
com.facebook.react.views.textinput.ReactTextInputManager$3 -> com.facebook.react.views.textinput.ReactTextInputManager$3:
    1009:1009:void <init>(com.facebook.react.views.textinput.ReactTextInputManager,com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.ThemedReactContext) -> <init>
    1013:1033:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.facebook.react.views.textinput.ReactTextInputManager$ReactContentSizeWatcher -> com.facebook.react.views.textinput.ReactTextInputManager$ReactContentSizeWatcher:
    1064:1067:void <init>(com.facebook.react.views.textinput.ReactTextInputManager,com.facebook.react.views.textinput.ReactEditText) -> <init>
    1072:1091:void onLayout() -> onLayout
com.facebook.react.views.textinput.ReactTextInputManager$ReactScrollWatcher -> com.facebook.react.views.textinput.ReactTextInputManager$ReactScrollWatcher:
    1141:1144:void <init>(com.facebook.react.views.textinput.ReactTextInputManager,com.facebook.react.views.textinput.ReactEditText) -> <init>
    1149:1166:void onScrollChanged(int,int,int,int) -> onScrollChanged
com.facebook.react.views.textinput.ReactTextInputManager$ReactSelectionWatcher -> com.facebook.react.views.textinput.ReactTextInputManager$ReactSelectionWatcher:
    1107:1110:void <init>(com.facebook.react.views.textinput.ReactTextInputManager,com.facebook.react.views.textinput.ReactEditText) -> <init>
    1121:1129:void onSelectionChanged(int,int) -> onSelectionChanged
com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher -> com.facebook.react.views.textinput.ReactTextInputManager$ReactTextInputTextWatcher:
    855:858:void <init>(com.facebook.react.views.textinput.ReactTextInputManager,com.facebook.react.bridge.ReactContext,com.facebook.react.views.textinput.ReactEditText) -> <init>
    864:864:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    869:979:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.facebook.react.views.textinput.ReactTextInputSelectionEvent -> com.facebook.react.views.textinput.ReactTextInputSelectionEvent:
    24:26:void <init>(int,int,int) -> <init>
    36:36:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    40:46:com.facebook.react.bridge.WritableMap serializeEventData() -> serializeEventData
com.facebook.react.views.textinput.ReactTextInputShadowNode -> com.facebook.react.views.textinput.ReactTextInputShadowNode:
    53:59:void <init>() -> <init>
    258:258:android.widget.EditText createInternalEditText() -> createInternalEditText
    186:186:java.lang.String getPlaceholder() -> getPlaceholder
    176:176:java.lang.String getText() -> getText
    63:63:void initMeasureFunction() -> initMeasureFunction
    104:127:long measure(com.facebook.yoga.YogaNode,float,com.facebook.yoga.YogaMeasureMode,float,com.facebook.yoga.YogaMeasureMode) -> measure
    221:243:void onCollectExtraUpdates(com.facebook.react.uimanager.UIViewOperationQueue) -> onCollectExtraUpdates
    142:146:void setLocalData(java.lang.Object) -> setLocalData
    154:154:void setMostRecentEventCount(int) -> setMostRecentEventCount
    249:250:void setPadding(int,float) -> setPadding
    181:182:void setPlaceholder(java.lang.String) -> setPlaceholder
    191:197:void setSelection(com.facebook.react.bridge.ReadableMap) -> setSelection
    159:172:void setText(java.lang.String) -> setText
    203:208:void setTextBreakStrategy(java.lang.String) -> setTextBreakStrategy
    68:91:void setThemedContext(com.facebook.react.uimanager.ThemedReactContext) -> setThemedContext
com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent -> com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent:
    24:25:void <init>(int,java.lang.String) -> <init>
    40:40:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    44:46:com.facebook.react.bridge.WritableMap serializeEventData() -> serializeEventData
com.facebook.react.views.unimplementedview.ReactUnimplementedView -> com.facebook.react.views.unimplementedview.ReactUnimplementedView:
    20:31:void <init>(android.content.Context) -> <init>
    35:35:void setName(java.lang.String) -> setName
com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager -> com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager:
    23:23:void <init>() -> <init>
    22:22:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    29:29:com.facebook.react.views.unimplementedview.ReactUnimplementedView createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    39:39:void setName(com.facebook.react.views.unimplementedview.ReactUnimplementedView,java.lang.String) -> setName
com.facebook.react.views.view.ColorUtil -> com.facebook.react.views.view.ColorUtil:
    17:17:void <init>() -> <init>
com.facebook.react.views.view.MeasureUtil -> com.facebook.react.views.view.MeasureUtil:
    13:13:void <init>() -> <init>
    16:21:int getMeasureSpec(float,com.facebook.yoga.YogaMeasureMode) -> getMeasureSpec
com.facebook.react.views.view.ReactClippingViewManager -> com.facebook.react.views.view.ReactClippingViewManager:
    19:19:void <init>() -> <init>
    19:19:void addView(android.view.ViewGroup,android.view.View,int) -> addView
    32:38:void addView(com.facebook.react.views.view.ReactViewGroup,android.view.View,int) -> addView
    19:19:android.view.View getChildAt(android.view.ViewGroup,int) -> getChildAt
    54:58:android.view.View getChildAt(com.facebook.react.views.view.ReactViewGroup,int) -> getChildAt
    19:19:int getChildCount(android.view.ViewGroup) -> getChildCount
    44:48:int getChildCount(com.facebook.react.views.view.ReactViewGroup) -> getChildCount
    19:19:void removeAllViews(android.view.ViewGroup) -> removeAllViews
    80:86:void removeAllViews(com.facebook.react.views.view.ReactViewGroup) -> removeAllViews
    19:19:void removeViewAt(android.view.ViewGroup,int) -> removeViewAt
    64:74:void removeViewAt(com.facebook.react.views.view.ReactViewGroup,int) -> removeViewAt
    25:27:void setRemoveClippedSubviews(com.facebook.react.views.view.ReactViewGroup,boolean) -> setRemoveClippedSubviews
com.facebook.react.views.view.ReactDrawableHelper -> com.facebook.react.views.view.ReactDrawableHelper:
    30:30:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    35:85:android.graphics.drawable.Drawable createDrawableFromJSDescription(android.content.Context,com.facebook.react.bridge.ReadableMap) -> createDrawableFromJSDescription
com.facebook.react.views.view.ReactViewBackgroundDrawable -> com.facebook.react.views.view.ReactViewBackgroundDrawable:
    124:125:void <init>(android.content.Context) -> <init>
    130:134:void draw(android.graphics.Canvas) -> draw
    1187:1198:void drawQuadrilateral(android.graphics.Canvas,int,float,float,float,float,float,float,float,float) -> drawQuadrilateral
    1001:1167:void drawRectangularBackgroundWithBorders(android.graphics.Canvas) -> drawRectangularBackgroundWithBorders
    331:477:void drawRoundedBackgroundWithBorders(android.graphics.Canvas) -> drawRoundedBackgroundWithBorders
    170:170:int getAlpha() -> getAlpha
    1224:1227:int getBorderColor(int) -> getBorderColor
    283:283:float getBorderRadius(com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation) -> getBorderRadius
    288:294:float getBorderRadiusOrDefaultTo(float,com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation) -> getBorderRadiusOrDefaultTo
    941:947:float getBorderWidthOrDefaultTo(float,int) -> getBorderWidthOrDefaultTo
    327:327:int getColor() -> getColor
    1231:1270:android.graphics.RectF getDirectionAwareBorderInsets() -> getDirectionAwareBorderInsets
    900:936:void getEllipseIntersectionWithLine(double,double,double,double,double,double,double,double,android.graphics.PointF) -> getEllipseIntersectionWithLine
    279:279:float getFullBorderRadius() -> getFullBorderRadius
    964:965:float getFullBorderWidth() -> getFullBorderWidth
    180:180:int getOpacity() -> getOpacity
    186:196:void getOutline(android.graphics.Outline) -> getOutline
    308:308:int getResolvedLayoutDirection() -> getResolvedLayoutDirection
    139:145:boolean hasRoundedBorders() -> hasRoundedBorders
    1218:1220:boolean isBorderColorDefined(int) -> isBorderColorDefined
    156:157:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    162:164:void setAlpha(int) -> setAlpha
    238:243:void setBorderAlpha(int,float) -> setBorderAlpha
    221:222:void setBorderColor(int,float,float) -> setBorderColor
    227:232:void setBorderRGB(int,float) -> setBorderRGB
    248:253:void setBorderStyle(java.lang.String) -> setBorderStyle
    201:216:void setBorderWidth(int,float) -> setBorderWidth
    302:303:void setColor(int) -> setColor
    258:261:void setRadius(float) -> setRadius
    266:274:void setRadius(float,int) -> setRadius
    313:315:boolean setResolvedLayoutDirection(int) -> setResolvedLayoutDirection
    481:850:void updatePath() -> updatePath
    956:959:void updatePathEffect() -> updatePathEffect
com.facebook.react.views.view.ReactViewBackgroundDrawable$1 -> com.facebook.react.views.view.ReactViewBackgroundDrawable$1:
    62:62:void <clinit>() -> <clinit>
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation -> com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation:
    114:113:void <clinit>() -> <clinit>
    113:113:void <init>(java.lang.String,int) -> <init>
    113:113:com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation valueOf(java.lang.String) -> valueOf
    113:113:com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderRadiusLocation[] values() -> values
com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle -> com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle:
    57:56:void <clinit>() -> <clinit>
    56:56:void <init>(java.lang.String,int) -> <init>
    62:67:android.graphics.PathEffect getPathEffect(com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle,float) -> getPathEffect
    56:56:com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle valueOf(java.lang.String) -> valueOf
    56:56:com.facebook.react.views.view.ReactViewBackgroundDrawable$BorderStyle[] values() -> values
com.facebook.react.views.view.ReactViewBackgroundManager -> com.facebook.react.views.view.ReactViewBackgroundManager:
    23:24:void <init>(android.view.View) -> <init>
    28:42:com.facebook.react.views.view.ReactViewBackgroundDrawable getOrCreateReactViewBackground() -> getOrCreateReactViewBackground
    46:49:void setBackgroundColor(int) -> setBackgroundColor
    58:58:void setBorderColor(int,float,float) -> setBorderColor
    62:62:void setBorderRadius(float) -> setBorderRadius
    66:66:void setBorderRadius(float,int) -> setBorderRadius
    70:70:void setBorderStyle(java.lang.String) -> setBorderStyle
    54:54:void setBorderWidth(int,float) -> setBorderWidth
com.facebook.react.views.view.ReactViewGroup -> com.facebook.react.views.view.ReactViewGroup:
    65:67:void <clinit>() -> <clinit>
    128:130:void <init>(android.content.Context) -> <init>
    56:56:void access$000(com.facebook.react.views.view.ReactViewGroup,android.view.View) -> access$000
    596:618:void addInArray(android.view.View,int) -> addInArray
    462:465:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    533:533:void addViewWithSubviewClippingEnabled(android.view.View,int) -> addViewWithSubviewClippingEnabled
    538:551:void addViewWithSubviewClippingEnabled(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addViewWithSubviewClippingEnabled
    702:705:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    725:729:void dispatchOverflowDraw(android.graphics.Canvas) -> dispatchOverflowDraw
    166:168:void dispatchProvideStructure(android.view.ViewStructure) -> dispatchProvideStructure
    525:525:int getAllChildrenCount() -> getAllChildrenCount
    638:639:int getBackgroundColor() -> getBackgroundColor
    529:529:android.view.View getChildAtWithSubviewClippingEnabled(int) -> getChildAtWithSubviewClippingEnabled
    490:490:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    437:439:boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point) -> getChildVisibleRect
    335:335:void getClippingRect(android.graphics.Rect) -> getClippingRect
    672:672:android.graphics.Rect getHitSlopRect() -> getHitSlopRect
    645:667:com.facebook.react.views.view.ReactViewBackgroundDrawable getOrCreateReactViewBackground() -> getOrCreateReactViewBackground
    685:685:java.lang.String getOverflow() -> getOverflow
    511:511:com.facebook.react.uimanager.PointerEvents getPointerEvents() -> getPointerEvents
    330:330:boolean getRemoveClippedSubviews() -> getRemoveClippedSubviews
    495:496:int getZIndexMappedChildIndex(int) -> getZIndexMappedChildIndex
    240:240:boolean hasOverlappingRendering() -> hasOverlappingRendering
    585:588:int indexOfChildInAllChildren(android.view.View) -> indexOfChildInAllChildren
    452:454:void onAttachedToWindow() -> onAttachedToWindow
    209:217:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    135:137:void onMeasure(int,int) -> onMeasure
    148:150:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    444:446:void onSizeChanged(int,int,int,int) -> onSizeChanged
    223:223:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    575:581:void removeAllViewsWithSubviewClippingEnabled() -> removeAllViewsWithSubviewClippingEnabled
    624:632:void removeFromArray(int) -> removeFromArray
    470:475:void removeView(android.view.View) -> removeView
    480:485:void removeViewAt(int) -> removeViewAt
    555:571:void removeViewWithSubviewClippingEnabled(android.view.View) -> removeViewWithSubviewClippingEnabled
    883:884:void setBackfaceVisibility(java.lang.String) -> setBackfaceVisibility
    888:906:void setBackfaceVisibilityDependantOpacity() -> setBackfaceVisibilityDependantOpacity
    183:183:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    174:177:void setBackgroundColor(int) -> setBackgroundColor
    253:253:void setBorderColor(int,float,float) -> setBorderColor
    257:267:void setBorderRadius(float) -> setBorderRadius
    273:283:void setBorderRadius(float,int) -> setBorderRadius
    289:289:void setBorderStyle(java.lang.String) -> setBorderStyle
    249:249:void setBorderWidth(int,float) -> setBorderWidth
    676:676:void setHitSlopRect(android.graphics.Rect) -> setHitSlopRect
    245:245:void setNeedsOffscreenAlphaCompositing(boolean) -> setNeedsOffscreenAlphaCompositing
    204:204:void setOnInterceptTouchEventListener(com.facebook.react.touch.OnInterceptTouchEventListener) -> setOnInterceptTouchEventListener
    878:879:void setOpacityIfPossible(float) -> setOpacityIfPossible
    680:681:void setOverflow(java.lang.String) -> setOverflow
    521:521:void setPointerEvents(com.facebook.react.uimanager.PointerEvents) -> setPointerEvents
    294:324:void setRemoveClippedSubviews(boolean) -> setRemoveClippedSubviews
    192:198:void setTranslucentBackgroundDrawable(android.graphics.drawable.Drawable) -> setTranslucentBackgroundDrawable
    696:696:void updateBackgroundDrawable(android.graphics.drawable.Drawable) -> updateBackgroundDrawable
    340:348:void updateClippingRect() -> updateClippingRect
    352:356:void updateClippingToRect(android.graphics.Rect) -> updateClippingToRect
    504:506:void updateDrawingOrder() -> updateDrawingOrder
    363:398:void updateSubviewClipStatus(android.graphics.Rect,int,int) -> updateSubviewClipStatus
    405:428:void updateSubviewClipStatus(android.view.View) -> updateSubviewClipStatus
com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener -> com.facebook.react.views.view.ReactViewGroup$ChildrenLayoutChangeListener:
    77:77:void <init>(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.views.view.ReactViewGroup$1) -> <init>
    81:82:void <init>(com.facebook.react.views.view.ReactViewGroup) -> <init>
    96:97:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.facebook.react.views.view.ReactViewManager -> com.facebook.react.views.view.ReactViewManager:
    42:42:void <clinit>() -> <clinit>
    38:38:void <init>() -> <init>
    37:37:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    283:283:com.facebook.react.views.view.ReactViewGroup createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    288:288:java.util.Map getCommandsMap() -> getCommandsMap
    332:333:void handleHotspotUpdate(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray) -> handleHotspotUpdate
    324:325:void handleSetPressed(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray) -> handleSetPressed
    71:71:void nextFocusDown(com.facebook.react.views.view.ReactViewGroup,int) -> nextFocusDown
    76:76:void nextFocusForward(com.facebook.react.views.view.ReactViewGroup,int) -> nextFocusForward
    81:81:void nextFocusLeft(com.facebook.react.views.view.ReactViewGroup,int) -> nextFocusLeft
    86:86:void nextFocusRight(com.facebook.react.views.view.ReactViewGroup,int) -> nextFocusRight
    91:91:void nextFocusUp(com.facebook.react.views.view.ReactViewGroup,int) -> nextFocusUp
    37:37:void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    37:37:void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    301:296:void receiveCommand(com.facebook.react.views.view.ReactViewGroup,int,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    309:312:void receiveCommand(com.facebook.react.views.view.ReactViewGroup,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    57:57:void setAccessible(com.facebook.react.views.view.ReactViewGroup,boolean) -> setAccessible
    262:262:void setBackfaceVisibility(com.facebook.react.views.view.ReactViewGroup,java.lang.String) -> setBackfaceVisibility
    218:220:void setBorderColor(com.facebook.react.views.view.ReactViewGroup,int,java.lang.Integer) -> setBorderColor
    108:119:void setBorderRadius(com.facebook.react.views.view.ReactViewGroup,int,float) -> setBorderRadius
    125:125:void setBorderStyle(com.facebook.react.views.view.ReactViewGroup,java.lang.String) -> setBorderStyle
    194:202:void setBorderWidth(com.facebook.react.views.view.ReactViewGroup,int,float) -> setBorderWidth
    232:249:void setFocusable(com.facebook.react.views.view.ReactViewGroup,boolean) -> setFocusable
    131:133:void setHitSlop(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap) -> setHitSlop
    164:161:void setNativeBackground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap) -> setNativeBackground
    173:170:void setNativeForeground(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableMap) -> setNativeForeground
    179:179:void setNeedsOffscreenAlphaCompositing(com.facebook.react.views.view.ReactViewGroup,boolean) -> setNeedsOffscreenAlphaCompositing
    37:37:void setOpacity(android.view.View,float) -> setOpacity
    267:267:void setOpacity(com.facebook.react.views.view.ReactViewGroup,float) -> setOpacity
    257:257:void setOverflow(com.facebook.react.views.view.ReactViewGroup,java.lang.String) -> setOverflow
    151:155:void setPointerEvents(com.facebook.react.views.view.ReactViewGroup,java.lang.String) -> setPointerEvents
    63:65:void setTVPreferredFocus(com.facebook.react.views.view.ReactViewGroup,boolean) -> setTVPreferredFocus
    37:37:void setTransform(android.view.View,com.facebook.react.bridge.ReadableArray) -> setTransform
    272:273:void setTransform(com.facebook.react.views.view.ReactViewGroup,com.facebook.react.bridge.ReadableArray) -> setTransform
com.facebook.react.views.view.ReactViewManager$1 -> com.facebook.react.views.view.ReactViewManager$1:
    233:233:void <init>(com.facebook.react.views.view.ReactViewManager,com.facebook.react.views.view.ReactViewGroup) -> <init>
    236:240:void onClick(android.view.View) -> onClick
com.facebook.react.views.view.ViewGroupClickEvent -> com.facebook.react.views.view.ViewGroupClickEvent:
    19:19:void <init>(int) -> <init>
    34:34:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
com.facebook.react.views.viewpager.PageScrollEvent -> com.facebook.react.views.viewpager.PageScrollEvent:
    36:40:void <init>(int,int,float) -> <init>
    50:50:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    54:56:com.facebook.react.bridge.WritableMap serializeEventData() -> serializeEventData
com.facebook.react.views.viewpager.PageScrollStateChangedEvent -> com.facebook.react.views.viewpager.PageScrollStateChangedEvent:
    31:32:void <init>(int,java.lang.String) -> <init>
    42:42:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    46:47:com.facebook.react.bridge.WritableMap serializeEventData() -> serializeEventData
com.facebook.react.views.viewpager.PageSelectedEvent -> com.facebook.react.views.viewpager.PageSelectedEvent:
    31:32:void <init>(int,int) -> <init>
    42:42:void dispatch(com.facebook.react.uimanager.events.RCTEventEmitter) -> dispatch
    46:47:com.facebook.react.bridge.WritableMap serializeEventData() -> serializeEventData
com.facebook.react.views.viewpager.ReactViewPager -> com.facebook.react.views.viewpager.ReactViewPager:
    156:160:void <init>(com.facebook.react.bridge.ReactContext) -> <init>
    29:29:android.view.ViewGroup$LayoutParams access$000(com.facebook.react.views.viewpager.ReactViewPager) -> access$000
    29:29:com.facebook.react.uimanager.events.EventDispatcher access$100(com.facebook.react.views.viewpager.ReactViewPager) -> access$100
    29:29:boolean access$200(com.facebook.react.views.viewpager.ReactViewPager) -> access$200
    238:238:void addViewToAdapter(android.view.View,int) -> addViewToAdapter
    29:29:androidx.viewpager.widget.PagerAdapter getAdapter() -> getAdapter
    165:165:com.facebook.react.views.viewpager.ReactViewPager$Adapter getAdapter() -> getAdapter
    246:246:int getViewCountInAdapter() -> getViewCountInAdapter
    250:250:android.view.View getViewFromAdapter(int) -> getViewFromAdapter
    219:223:void onAttachedToWindow() -> onAttachedToWindow
    170:183:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    191:201:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    242:242:void removeViewFromAdapter(int) -> removeViewFromAdapter
    208:210:void setCurrentItemFromJs(int,boolean) -> setCurrentItemFromJs
    214:214:void setScrollEnabled(boolean) -> setScrollEnabled
    254:254:void setViews(java.util.List) -> setViews
com.facebook.react.views.viewpager.ReactViewPager$1 -> com.facebook.react.views.viewpager.ReactViewPager$1:
    227:227:void <init>(com.facebook.react.views.viewpager.ReactViewPager) -> <init>
    230:233:void run() -> run
com.facebook.react.views.viewpager.ReactViewPager$Adapter -> com.facebook.react.views.viewpager.ReactViewPager$Adapter:
    31:34:void <init>(com.facebook.react.views.viewpager.ReactViewPager) -> <init>
    31:31:void <init>(com.facebook.react.views.viewpager.ReactViewPager,com.facebook.react.views.viewpager.ReactViewPager$1) -> <init>
    37:47:void addView(android.view.View,int) -> addView
    108:108:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    88:88:int getCount() -> getCount
    94:96:int getItemPosition(java.lang.Object) -> getItemPosition
    83:83:android.view.View getViewAt(int) -> getViewAt
    101:102:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    51:56:void removeViewAt(int) -> removeViewAt
    61:67:void setViews(java.util.List) -> setViews
com.facebook.react.views.viewpager.ReactViewPager$PageChangeListener -> com.facebook.react.views.viewpager.ReactViewPager$PageChangeListener:
    117:117:void <init>(com.facebook.react.views.viewpager.ReactViewPager) -> <init>
    117:117:void <init>(com.facebook.react.views.viewpager.ReactViewPager,com.facebook.react.views.viewpager.ReactViewPager$1) -> <init>
    145:147:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    121:121:void onPageScrolled(int,float,int) -> onPageScrolled
    126:127:void onPageSelected(int) -> onPageSelected
com.facebook.react.views.viewpager.ReactViewPagerManager -> com.facebook.react.views.viewpager.ReactViewPagerManager:
    37:38:void <init>() -> <init>
    26:26:void addView(android.view.ViewGroup,android.view.View,int) -> addView
    125:125:void addView(com.facebook.react.views.viewpager.ReactViewPager,android.view.View,int) -> addView
    26:26:android.view.View createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    48:48:com.facebook.react.views.viewpager.ReactViewPager createViewInstance(com.facebook.react.uimanager.ThemedReactContext) -> createViewInstance
    26:26:android.view.View getChildAt(android.view.ViewGroup,int) -> getChildAt
    135:135:android.view.View getChildAt(com.facebook.react.views.viewpager.ReactViewPager,int) -> getChildAt
    26:26:int getChildCount(android.view.ViewGroup) -> getChildCount
    130:130:int getChildCount(com.facebook.react.views.viewpager.ReactViewPager) -> getChildCount
    74:73:java.util.Map getCommandsMap() -> getCommandsMap
    173:173:com.facebook.react.uimanager.ViewManagerDelegate getDelegate() -> getDelegate
    65:64:java.util.Map getExportedCustomDirectEventTypeConstants() -> getExportedCustomDirectEventTypeConstants
    26:26:void receiveCommand(android.view.View,int,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    26:26:void receiveCommand(android.view.View,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    80:85:void receiveCommand(com.facebook.react.views.viewpager.ReactViewPager,int,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    103:108:void receiveCommand(com.facebook.react.views.viewpager.ReactViewPager,java.lang.String,com.facebook.react.bridge.ReadableArray) -> receiveCommand
    26:26:void removeViewAt(android.view.ViewGroup,int) -> removeViewAt
    140:140:void removeViewAt(com.facebook.react.views.viewpager.ReactViewPager,int) -> removeViewAt
    26:26:void setInitialPage(android.view.View,int) -> setInitialPage
    26:26:void setKeyboardDismissMode(android.view.View,java.lang.String) -> setKeyboardDismissMode
    26:26:void setPage(android.view.View,int) -> setPage
    26:26:void setPageMargin(android.view.View,int) -> setPageMargin
    146:146:void setPageMargin(com.facebook.react.views.viewpager.ReactViewPager,int) -> setPageMargin
    26:26:void setPageWithoutAnimation(android.view.View,int) -> setPageWithoutAnimation
    26:26:void setPeekEnabled(android.view.View,boolean) -> setPeekEnabled
    152:152:void setPeekEnabled(com.facebook.react.views.viewpager.ReactViewPager,boolean) -> setPeekEnabled
    26:26:void setScrollEnabled(android.view.View,boolean) -> setScrollEnabled
    54:54:void setScrollEnabled(com.facebook.react.views.viewpager.ReactViewPager,boolean) -> setScrollEnabled
com.facebook.soloader.Api18TraceUtils -> com.facebook.soloader.Api18TraceUtils:
    29:29:void <init>() -> <init>
    33:38:void beginTraceSection(java.lang.String,java.lang.String,java.lang.String) -> beginTraceSection
    42:42:void endSection() -> endSection
com.facebook.soloader.ApkSoSource -> com.facebook.soloader.ApkSoSource:
    49:56:void <init>(android.content.Context,java.io.File,java.lang.String,int) -> <init>
    27:27:int access$000(com.facebook.soloader.ApkSoSource) -> access$000
    118:148:byte[] getDepsBlock() -> getDepsBlock
    61:61:com.facebook.soloader.UnpackingSoSource$Unpacker makeUnpacker() -> makeUnpacker
com.facebook.soloader.ApkSoSource$ApkUnpacker -> com.facebook.soloader.ApkSoSource$ApkUnpacker:
    69:72:void <init>(com.facebook.soloader.ApkSoSource,com.facebook.soloader.ExtractFromZipSoSource) -> <init>
    78:111:boolean shouldExtract(java.util.zip.ZipEntry,java.lang.String) -> shouldExtract
com.facebook.soloader.ApplicationSoSource -> com.facebook.soloader.ApplicationSoSource:
    34:45:void <init>(android.content.Context,int) -> <init>
    56:74:boolean checkAndMaybeUpdate() -> checkAndMaybeUpdate
    81:81:int loadLibrary(java.lang.String,int,android.os.StrictMode$ThreadPolicy) -> loadLibrary
    98:98:void prepare(int) -> prepare
    108:108:java.lang.String toString() -> toString
    93:93:java.io.File unpackLibrary(java.lang.String) -> unpackLibrary
com.facebook.soloader.DirectorySoSource -> com.facebook.soloader.DirectorySoSource:
    42:44:void <init>(java.io.File,int) -> <init>
    119:126:java.lang.String[] getDependencies(java.io.File) -> getDependencies
    103:111:void loadDependencies(java.io.File,int,android.os.StrictMode$ThreadPolicy) -> loadDependencies
    50:50:int loadLibrary(java.lang.String,int,android.os.StrictMode$ThreadPolicy) -> loadLibrary
    57:84:int loadLibraryFrom(java.lang.String,int,java.io.File,android.os.StrictMode$ThreadPolicy) -> loadLibraryFrom
    151:162:java.lang.String toString() -> toString
    134:135:java.io.File unpackLibrary(java.lang.String) -> unpackLibrary
com.facebook.soloader.Elf32_Dyn -> com.facebook.soloader.Elf32_Dyn:
    20:20:void <init>() -> <init>
com.facebook.soloader.Elf32_Ehdr -> com.facebook.soloader.Elf32_Ehdr:
    20:20:void <init>() -> <init>
com.facebook.soloader.Elf32_Phdr -> com.facebook.soloader.Elf32_Phdr:
    20:20:void <init>() -> <init>
com.facebook.soloader.Elf32_Shdr -> com.facebook.soloader.Elf32_Shdr:
    20:20:void <init>() -> <init>
com.facebook.soloader.Elf64_Dyn -> com.facebook.soloader.Elf64_Dyn:
    20:20:void <init>() -> <init>
com.facebook.soloader.Elf64_Ehdr -> com.facebook.soloader.Elf64_Ehdr:
    20:20:void <init>() -> <init>
com.facebook.soloader.Elf64_Phdr -> com.facebook.soloader.Elf64_Phdr:
    20:20:void <init>() -> <init>
com.facebook.soloader.Elf64_Shdr -> com.facebook.soloader.Elf64_Shdr:
    20:20:void <init>() -> <init>
com.facebook.soloader.ExoSoSource -> com.facebook.soloader.ExoSoSource:
    37:37:void <init>(android.content.Context,java.lang.String) -> <init>
    42:42:com.facebook.soloader.UnpackingSoSource$Unpacker makeUnpacker() -> makeUnpacker
com.facebook.soloader.ExoSoSource$ExoUnpacker -> com.facebook.soloader.ExoSoSource$ExoUnpacker:
    49:106:void <init>(com.facebook.soloader.ExoSoSource,com.facebook.soloader.UnpackingSoSource) -> <init>
    45:45:com.facebook.soloader.ExoSoSource$FileDso[] access$100(com.facebook.soloader.ExoSoSource$ExoUnpacker) -> access$100
    111:111:com.facebook.soloader.UnpackingSoSource$DsoManifest getDsoManifest() -> getDsoManifest
    116:116:com.facebook.soloader.UnpackingSoSource$InputDsoIterator openDsoIterator() -> openDsoIterator
com.facebook.soloader.ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator -> com.facebook.soloader.ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator:
    119:119:void <init>(com.facebook.soloader.ExoSoSource$ExoUnpacker) -> <init>
    119:119:void <init>(com.facebook.soloader.ExoSoSource$ExoUnpacker,com.facebook.soloader.ExoSoSource$1) -> <init>
    124:124:boolean hasNext() -> hasNext
    129:137:com.facebook.soloader.UnpackingSoSource$InputDso next() -> next
com.facebook.soloader.ExoSoSource$FileDso -> com.facebook.soloader.ExoSoSource$FileDso:
    148:149:void <init>(java.lang.String,java.lang.String,java.io.File) -> <init>
com.facebook.soloader.ExtractFromZipSoSource -> com.facebook.soloader.ExtractFromZipSoSource:
    49:51:void <init>(android.content.Context,java.lang.String,java.io.File,java.lang.String) -> <init>
    56:56:com.facebook.soloader.UnpackingSoSource$Unpacker makeUnpacker() -> makeUnpacker
com.facebook.soloader.ExtractFromZipSoSource$ZipDso -> com.facebook.soloader.ExtractFromZipSoSource$ZipDso:
    179:181:void <init>(java.lang.String,java.util.zip.ZipEntry,int) -> <init>
    192:192:int compareTo(java.lang.Object) -> compareTo
    187:185:java.lang.String makePseudoHash(java.util.zip.ZipEntry) -> makePseudoHash
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker -> com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker:
    65:67:void <init>(com.facebook.soloader.ExtractFromZipSoSource,com.facebook.soloader.UnpackingSoSource) -> <init>
    59:59:com.facebook.soloader.ExtractFromZipSoSource$ZipDso[] access$100(com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker) -> access$100
    59:59:java.util.zip.ZipFile access$200(com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker) -> access$200
    132:132:void close() -> close
    71:116:com.facebook.soloader.ExtractFromZipSoSource$ZipDso[] ensureDsos() -> ensureDsos
    137:137:com.facebook.soloader.UnpackingSoSource$DsoManifest getDsoManifest() -> getDsoManifest
    142:142:com.facebook.soloader.UnpackingSoSource$InputDsoIterator openDsoIterator() -> openDsoIterator
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator -> com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator:
    145:145:void <init>(com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker) -> <init>
    145:145:void <init>(com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker,com.facebook.soloader.ExtractFromZipSoSource$1) -> <init>
    151:152:boolean hasNext() -> hasNext
    157:166:com.facebook.soloader.UnpackingSoSource$InputDso next() -> next
com.facebook.soloader.FileLocker -> com.facebook.soloader.FileLocker:
    35:42:void <init>(java.io.File) -> <init>
    52:56:void close() -> close
    32:32:com.facebook.soloader.FileLocker lock(java.io.File) -> lock
com.facebook.soloader.MergedSoMapping -> com.facebook.soloader.MergedSoMapping:
    21:21:void <init>() -> <init>
    27:27:void invokeJniOnload(java.lang.String) -> invokeJniOnload
com.facebook.soloader.MinElf -> com.facebook.soloader.MinElf:
    33:33:void <init>() -> <init>
    67:71:java.lang.String[] extract_DT_NEEDED(java.io.File) -> extract_DT_NEEDED
    88:94:java.lang.String[] extract_DT_NEEDED(java.nio.channels.FileChannel) -> extract_DT_NEEDED
    281:282:long get64(java.nio.channels.FileChannel,java.nio.ByteBuffer,long) -> get64
    252:258:java.lang.String getSz(java.nio.channels.FileChannel,java.nio.ByteBuffer,long) -> getSz
    291:292:int getu16(java.nio.channels.FileChannel,java.nio.ByteBuffer,long) -> getu16
    286:287:long getu32(java.nio.channels.FileChannel,java.nio.ByteBuffer,long) -> getu32
    296:297:short getu8(java.nio.channels.FileChannel,java.nio.ByteBuffer,long) -> getu8
    262:274:void read(java.nio.channels.FileChannel,java.nio.ByteBuffer,int,long) -> read
com.facebook.soloader.MinElf$ElfError -> com.facebook.soloader.MinElf$ElfError:
    302:302:void <init>(java.lang.String) -> <init>
com.facebook.soloader.MinElf$ISA -> com.facebook.soloader.MinElf$ISA:
    36:35:void <clinit>() -> <clinit>
    45:46:void <init>(java.lang.String,int,java.lang.String) -> <init>
    51:51:java.lang.String toString() -> toString
    35:35:com.facebook.soloader.MinElf$ISA valueOf(java.lang.String) -> valueOf
    35:35:com.facebook.soloader.MinElf$ISA[] values() -> values
com.facebook.soloader.NativeLoaderToSoLoaderDelegate -> com.facebook.soloader.NativeLoaderToSoLoaderDelegate:
    21:21:void <init>() -> <init>
    24:24:boolean loadLibrary(java.lang.String) -> loadLibrary
com.facebook.soloader.NoopSoSource -> com.facebook.soloader.NoopSoSource:
    23:23:void <init>() -> <init>
    31:31:java.io.File unpackLibrary(java.lang.String) -> unpackLibrary
com.facebook.soloader.R -> com.facebook.soloader.R:
    10:10:void <init>() -> <init>
com.facebook.soloader.SoLoader -> com.facebook.soloader.SoLoader:
    83:171:void <clinit>() -> <clinit>
    71:71:void <init>() -> <init>
    829:835:void assertInitialized() -> assertInitialized
    445:445:boolean checkIfSystemApp(android.content.Context) -> checkIfSystemApp
    699:706:void doLoadLibraryBySoName(java.lang.String,int,android.os.StrictMode$ThreadPolicy) -> doLoadLibraryBySoName
    425:438:java.lang.reflect.Method getNativeLoadRuntimeMethod() -> getNativeLoadRuntimeMethod
    175:175:void init(android.content.Context,int) -> init
    189:198:void init(android.content.Context,int,com.facebook.soloader.SoFileLoader) -> init
    205:207:void init(android.content.Context,boolean) -> init
    344:421:void initSoLoader(com.facebook.soloader.SoFileLoader) -> initSoLoader
    213:323:void initSoSources(android.content.Context,int,com.facebook.soloader.SoFileLoader) -> initSoSources
    525:525:boolean loadLibrary(java.lang.String) -> loadLibrary
    538:563:boolean loadLibrary(java.lang.String,int) -> loadLibrary
    587:587:void loadLibraryBySoName(java.lang.String,int,android.os.StrictMode$ThreadPolicy) -> loadLibraryBySoName
    600:620:boolean loadLibraryBySoName(java.lang.String,java.lang.String,java.lang.String,int,android.os.StrictMode$ThreadPolicy) -> loadLibraryBySoName
    800:809:java.lang.String makeNonZipPath(java.lang.String) -> makeNonZipPath
    331:338:int makePrepareFlags() -> makePrepareFlags
    687:691:java.io.File unpackLibraryAndDependencies(java.lang.String) -> unpackLibraryAndDependencies
    813:822:java.io.File unpackLibraryBySoName(java.lang.String) -> unpackLibraryBySoName
com.facebook.soloader.SoLoader$1 -> com.facebook.soloader.SoLoader$1:
    358:358:void <init>(boolean,java.lang.String,java.lang.String,java.lang.Runtime,java.lang.reflect.Method) -> <init>
    401:412:java.lang.String getLibHash(java.lang.String) -> getLibHash
    362:393:void load(java.lang.String,int) -> load
com.facebook.soloader.SoLoader$Api14Utils -> com.facebook.soloader.SoLoader$Api14Utils:
    920:920:void <init>() -> <init>
    922:927:java.lang.String getClassLoaderLdLoadLibrary() -> getClassLoaderLdLoadLibrary
com.facebook.soloader.SoLoader$WrongAbiError -> com.facebook.soloader.SoLoader$WrongAbiError:
    496:497:void <init>(java.lang.Throwable) -> <init>
com.facebook.soloader.SoSource -> com.facebook.soloader.SoSource:
    25:25:void <init>() -> <init>
    125:125:java.lang.String toString() -> toString
com.facebook.soloader.SysUtil -> com.facebook.soloader.SysUtil:
    38:38:void <init>() -> <init>
    204:206:int copyBytes(java.io.RandomAccessFile,java.io.InputStream,int,byte[]) -> copyBytes
    104:116:void dumbDeleteRecursive(java.io.File) -> dumbDeleteRecursive
    89:90:void fallocateIfSupported(java.io.FileDescriptor,long) -> fallocateIfSupported
    52:53:int findAbiScore(java.lang.String[],java.lang.String) -> findAbiScore
    213:227:void fsyncRecursive(java.io.File) -> fsyncRecursive
    246:250:int getAppVersionCode(android.content.Context) -> getAppVersionCode
    75:78:java.lang.String[] getSupportedAbis() -> getSupportedAbis
    185:186:void mkdirOrThrow(java.io.File) -> mkdirOrThrow
com.facebook.soloader.SysUtil$LollipopSysdeps -> com.facebook.soloader.SysUtil$LollipopSysdeps:
    126:126:void <init>() -> <init>
    167:172:void fallocateIfSupported(java.io.FileDescriptor,long) -> fallocateIfSupported
    129:143:java.lang.String[] getSupportedAbis() -> getSupportedAbis
com.facebook.soloader.SysUtil$LollipopSysdeps$1 -> com.facebook.soloader.SysUtil$LollipopSysdeps$1:
    149:149:void <init>(java.util.ArrayList) -> <init>
    149:149:int compare(java.lang.Object,java.lang.Object) -> compare
    152:154:int compare(java.lang.String,java.lang.String) -> compare
com.facebook.soloader.UnpackingSoSource -> com.facebook.soloader.UnpackingSoSource:
    59:60:void <init>(android.content.Context,java.lang.String) -> <init>
    37:37:void access$000(java.io.File,byte) -> access$000
    183:185:void deleteUnmentionedFiles(com.facebook.soloader.UnpackingSoSource$Dso[]) -> deleteUnmentionedFiles
    213:215:void extractDso(com.facebook.soloader.UnpackingSoSource$InputDso,byte[]) -> extractDso
    391:400:byte[] getDepsBlock() -> getDepsBlock
    430:437:java.lang.Object getLibraryLock(java.lang.String) -> getLibraryLock
    69:69:java.io.File getSoStorePath(android.content.Context,java.lang.String) -> getSoStorePath
    454:459:int loadLibrary(java.lang.String,int,android.os.StrictMode$ThreadPolicy) -> loadLibrary
    409:424:void prepare(int) -> prepare
    443:448:void prepare(java.lang.String) -> prepare
    286:325:boolean refreshLocked(com.facebook.soloader.FileLocker,int,byte[]) -> refreshLocked
    248:280:void regenerate(byte,com.facebook.soloader.UnpackingSoSource$DsoManifest,com.facebook.soloader.UnpackingSoSource$InputDsoIterator) -> regenerate
    173:178:void writeState(java.io.File,byte) -> writeState
com.facebook.soloader.UnpackingSoSource$1 -> com.facebook.soloader.UnpackingSoSource$1:
    334:334:void <init>(com.facebook.soloader.UnpackingSoSource,java.io.File,byte[],com.facebook.soloader.UnpackingSoSource$DsoManifest,java.io.File,com.facebook.soloader.FileLocker) -> <init>
    339:365:void run() -> run
com.facebook.soloader.UnpackingSoSource$Dso -> com.facebook.soloader.UnpackingSoSource$Dso:
    91:93:void <init>(java.lang.String,java.lang.String) -> <init>
com.facebook.soloader.UnpackingSoSource$DsoManifest -> com.facebook.soloader.UnpackingSoSource$DsoManifest:
    101:102:void <init>(com.facebook.soloader.UnpackingSoSource$Dso[]) -> <init>
    107:109:com.facebook.soloader.UnpackingSoSource$DsoManifest read(java.io.DataInput) -> read
    125:129:void write(java.io.DataOutput) -> write
com.facebook.soloader.UnpackingSoSource$InputDso -> com.facebook.soloader.UnpackingSoSource$InputDso:
    138:140:void <init>(com.facebook.soloader.UnpackingSoSource$Dso,java.io.InputStream) -> <init>
    145:145:void close() -> close
com.facebook.soloader.UnpackingSoSource$InputDsoIterator -> com.facebook.soloader.UnpackingSoSource$InputDsoIterator:
    149:149:void <init>() -> <init>
com.facebook.soloader.UnpackingSoSource$Unpacker -> com.facebook.soloader.UnpackingSoSource$Unpacker:
    161:161:void <init>() -> <init>
com.facebook.soloader.nativeloader.NativeLoader -> com.facebook.soloader.nativeloader.NativeLoader:
    24:24:void <init>() -> <init>
    53:54:void init(com.facebook.soloader.nativeloader.NativeLoaderDelegate) -> init
    68:68:boolean isInitialized() -> isInitialized
    34:41:boolean loadLibrary(java.lang.String) -> loadLibrary
com.facebook.soloader.nativeloader.SystemDelegate -> com.facebook.soloader.nativeloader.SystemDelegate:
    19:19:void <init>() -> <init>
    22:22:boolean loadLibrary(java.lang.String) -> loadLibrary
com.facebook.systrace.Systrace -> com.facebook.systrace.Systrace:
    17:17:void <init>() -> <init>
    52:53:void beginSection(long,java.lang.String) -> beginSection
    58:59:void endSection(long) -> endSection
com.facebook.systrace.Systrace$EventScope -> com.facebook.systrace.Systrace$EventScope:
    26:25:void <clinit>() -> <clinit>
    32:32:void <init>(java.lang.String,int,char) -> <init>
    25:25:com.facebook.systrace.Systrace$EventScope valueOf(java.lang.String) -> valueOf
    25:25:com.facebook.systrace.Systrace$EventScope[] values() -> values
com.facebook.systrace.SystraceMessage -> com.facebook.systrace.SystraceMessage:
    13:13:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    16:16:com.facebook.systrace.SystraceMessage$Builder beginSection(long,java.lang.String) -> beginSection
    20:20:com.facebook.systrace.SystraceMessage$Builder endSection(long) -> endSection
com.facebook.systrace.SystraceMessage$Builder -> com.facebook.systrace.SystraceMessage$Builder:
    23:23:void <init>() -> <init>
com.facebook.systrace.SystraceMessage$NoopBuilder -> com.facebook.systrace.SystraceMessage$NoopBuilder:
    40:40:void <init>() -> <init>
    40:40:void <init>(com.facebook.systrace.SystraceMessage$1) -> <init>
com.facebook.widget.text.span.BetterImageSpan -> com.facebook.widget.text.span.BetterImageSpan:
    126:130:void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint) -> draw
    141:143:int getOffsetAboveBaseline(android.graphics.Paint$FontMetricsInt) -> getOffsetAboveBaseline
    89:112:int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt) -> getSize
    134:137:void updateBounds() -> updateBounds
com.facebook.yoga.LayoutPassReason -> com.facebook.yoga.LayoutPassReason:
    11:10:void <clinit>() -> <clinit>
    22:22:void <init>(java.lang.String,int,int) -> <init>
    10:10:com.facebook.yoga.LayoutPassReason valueOf(java.lang.String) -> valueOf
    10:10:com.facebook.yoga.LayoutPassReason[] values() -> values
com.facebook.yoga.YogaAlign -> com.facebook.yoga.YogaAlign:
    11:10:void <clinit>() -> <clinit>
    22:23:void <init>(java.lang.String,int,int) -> <init>
    27:27:int intValue() -> intValue
    10:10:com.facebook.yoga.YogaAlign valueOf(java.lang.String) -> valueOf
    10:10:com.facebook.yoga.YogaAlign[] values() -> values
com.facebook.yoga.YogaConfig -> com.facebook.yoga.YogaConfig:
    10:10:void <init>() -> <init>
com.facebook.yoga.YogaConfigFactory -> com.facebook.yoga.YogaConfigFactory:
    10:10:void <init>() -> <init>
    12:12:com.facebook.yoga.YogaConfig create() -> create
com.facebook.yoga.YogaConfigJNIBase -> com.facebook.yoga.YogaConfigJNIBase:
    15:17:void <init>(long) -> <init>
    23:23:void <init>() -> <init>
    43:43:void setPointScaleFactor(float) -> setPointScaleFactor
    52:52:void setUseLegacyStretchBehaviour(boolean) -> setUseLegacyStretchBehaviour
com.facebook.yoga.YogaConfigJNIFinalizer -> com.facebook.yoga.YogaConfigJNIFinalizer:
    12:12:void <init>() -> <init>
    18:21:void finalize() -> finalize
    25:28:void freeNatives() -> freeNatives
com.facebook.yoga.YogaConstants -> com.facebook.yoga.YogaConstants:
    10:10:void <init>() -> <init>
    15:15:boolean isUndefined(float) -> isUndefined
com.facebook.yoga.YogaDimension -> com.facebook.yoga.YogaDimension:
    11:10:void <clinit>() -> <clinit>
    16:16:void <init>(java.lang.String,int,int) -> <init>
    10:10:com.facebook.yoga.YogaDimension valueOf(java.lang.String) -> valueOf
    10:10:com.facebook.yoga.YogaDimension[] values() -> values
com.facebook.yoga.YogaDirection -> com.facebook.yoga.YogaDirection:
    11:10:void <clinit>() -> <clinit>
    17:18:void <init>(java.lang.String,int,int) -> <init>
    29:27:com.facebook.yoga.YogaDirection fromInt(int) -> fromInt
    22:22:int intValue() -> intValue
    10:10:com.facebook.yoga.YogaDirection valueOf(java.lang.String) -> valueOf
    10:10:com.facebook.yoga.YogaDirection[] values() -> values
com.facebook.yoga.YogaDisplay -> com.facebook.yoga.YogaDisplay:
    11:10:void <clinit>() -> <clinit>
    16:17:void <init>(java.lang.String,int,int) -> <init>
    21:21:int intValue() -> intValue
    10:10:com.facebook.yoga.YogaDisplay valueOf(java.lang.String) -> valueOf
    10:10:com.facebook.yoga.YogaDisplay[] values() -> values
com.facebook.yoga.YogaEdge -> com.facebook.yoga.YogaEdge:
    11:10:void <clinit>() -> <clinit>
    23:24:void <init>(java.lang.String,int,int) -> <init>
    42:33:com.facebook.yoga.YogaEdge fromInt(int) -> fromInt
    28:28:int intValue() -> intValue
    10:10:com.facebook.yoga.YogaEdge valueOf(java.lang.String) -> valueOf
    10:10:com.facebook.yoga.YogaEdge[] values() -> values
com.facebook.yoga.YogaExperimentalFeature -> com.facebook.yoga.YogaExperimentalFeature:
    11:10:void <clinit>() -> <clinit>
    15:15:void <init>(java.lang.String,int,int) -> <init>
    10:10:com.facebook.yoga.YogaExperimentalFeature valueOf(java.lang.String) -> valueOf
    10:10:com.facebook.yoga.YogaExperimentalFeature[] values() -> values
com.facebook.yoga.YogaFlexDirection -> com.facebook.yoga.YogaFlexDirection:
    11:10:void <clinit>() -> <clinit>
    18:19:void <init>(java.lang.String,int,int) -> <init>
    23:23:int intValue() -> intValue
    10:10:com.facebook.yoga.YogaFlexDirection valueOf(java.lang.String) -> valueOf
    10:10:com.facebook.yoga.YogaFlexDirection[] values() -> values
com.facebook.yoga.YogaJustify -> com.facebook.yoga.YogaJustify:
    11:10:void <clinit>() -> <clinit>
    20:21:void <init>(java.lang.String,int,int) -> <init>
    25:25:int intValue() -> intValue
    10:10:com.facebook.yoga.YogaJustify valueOf(java.lang.String) -> valueOf
    10:10:com.facebook.yoga.YogaJustify[] values() -> values
com.facebook.yoga.YogaLayoutType -> com.facebook.yoga.YogaLayoutType:
    11:10:void <clinit>() -> <clinit>
    18:18:void <init>(java.lang.String,int,int) -> <init>
    10:10:com.facebook.yoga.YogaLayoutType valueOf(java.lang.String) -> valueOf
    10:10:com.facebook.yoga.YogaLayoutType[] values() -> values
com.facebook.yoga.YogaLogLevel -> com.facebook.yoga.YogaLogLevel:
    14:12:void <clinit>() -> <clinit>
    23:23:void <init>(java.lang.String,int,int) -> <init>
    39:34:com.facebook.yoga.YogaLogLevel fromInt(int) -> fromInt
    12:12:com.facebook.yoga.YogaLogLevel valueOf(java.lang.String) -> valueOf
    12:12:com.facebook.yoga.YogaLogLevel[] values() -> values
com.facebook.yoga.YogaMeasureMode -> com.facebook.yoga.YogaMeasureMode:
    11:10:void <clinit>() -> <clinit>
    17:17:void <init>(java.lang.String,int,int) -> <init>
    29:27:com.facebook.yoga.YogaMeasureMode fromInt(int) -> fromInt
    10:10:com.facebook.yoga.YogaMeasureMode valueOf(java.lang.String) -> valueOf
    10:10:com.facebook.yoga.YogaMeasureMode[] values() -> values
com.facebook.yoga.YogaMeasureOutput -> com.facebook.yoga.YogaMeasureOutput:
    13:13:void <init>() -> <init>
    16:17:long make(float,float) -> make
    22:22:long make(int,int) -> make
com.facebook.yoga.YogaNative -> com.facebook.yoga.YogaNative:
    16:16:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
com.facebook.yoga.YogaNode -> com.facebook.yoga.YogaNode:
    12:12:void <init>() -> <init>
com.facebook.yoga.YogaNodeFactory -> com.facebook.yoga.YogaNodeFactory:
    10:10:void <init>() -> <init>
    16:16:com.facebook.yoga.YogaNode create(com.facebook.yoga.YogaConfig) -> create
com.facebook.yoga.YogaNodeJNIBase -> com.facebook.yoga.YogaNodeJNIBase:
    50:52:void <init>(long) -> <init>
    58:58:void <init>() -> <init>
    62:62:void <init>(com.facebook.yoga.YogaConfig) -> <init>
    88:90:void addChildAt(com.facebook.yoga.YogaNode,int) -> addChildAt
    490:490:float baseline(float,float) -> baseline
    168:183:void calculateLayout(float,float) -> calculateLayout
    187:187:void dirty() -> dirty
    388:388:com.facebook.yoga.YogaValue getHeight() -> getHeight
    641:641:com.facebook.yoga.YogaDirection getLayoutDirection() -> getLayoutDirection
    558:558:float getLayoutHeight() -> getLayoutHeight
    591:595:float getLayoutPadding(com.facebook.yoga.YogaEdge) -> getLayoutPadding
    553:553:float getLayoutWidth() -> getLayoutWidth
    543:543:float getLayoutX() -> getLayoutX
    548:548:float getLayoutY() -> getLayoutY
    372:372:com.facebook.yoga.YogaValue getWidth() -> getWidth
    646:649:boolean hasNewLayout() -> hasNewLayout
    195:195:boolean isDirty() -> isDirty
    494:494:boolean isMeasureDefined() -> isMeasureDefined
    655:658:void markLayoutSeen() -> markLayoutSeen
    471:472:long measure(float,int,float,int) -> measure
    15:15:com.facebook.yoga.YogaNode removeChildAt(int) -> removeChildAt
    130:131:com.facebook.yoga.YogaNodeJNIBase removeChildAt(int) -> removeChildAt
    528:529:long replaceChild(com.facebook.yoga.YogaNodeJNIBase,int) -> replaceChild
    66:73:void reset() -> reset
    248:248:void setAlignContent(com.facebook.yoga.YogaAlign) -> setAlignContent
    232:232:void setAlignItems(com.facebook.yoga.YogaAlign) -> setAlignItems
    240:240:void setAlignSelf(com.facebook.yoga.YogaAlign) -> setAlignSelf
    456:456:void setAspectRatio(float) -> setAspectRatio
    356:356:void setBorder(com.facebook.yoga.YogaEdge,float) -> setBorder
    208:208:void setDirection(com.facebook.yoga.YogaDirection) -> setDirection
    280:280:void setDisplay(com.facebook.yoga.YogaDisplay) -> setDisplay
    288:288:void setFlex(float) -> setFlex
    312:312:void setFlexBasis(float) -> setFlexBasis
    320:320:void setFlexBasisAuto() -> setFlexBasisAuto
    316:316:void setFlexBasisPercent(float) -> setFlexBasisPercent
    216:216:void setFlexDirection(com.facebook.yoga.YogaFlexDirection) -> setFlexDirection
    296:296:void setFlexGrow(float) -> setFlexGrow
    304:304:void setFlexShrink(float) -> setFlexShrink
    392:392:void setHeight(float) -> setHeight
    400:400:void setHeightAuto() -> setHeightAuto
    396:396:void setHeightPercent(float) -> setHeightPercent
    224:224:void setJustifyContent(com.facebook.yoga.YogaJustify) -> setJustifyContent
    328:328:void setMargin(com.facebook.yoga.YogaEdge,float) -> setMargin
    336:336:void setMarginAuto(com.facebook.yoga.YogaEdge) -> setMarginAuto
    332:332:void setMarginPercent(com.facebook.yoga.YogaEdge,float) -> setMarginPercent
    444:444:void setMaxHeight(float) -> setMaxHeight
    448:448:void setMaxHeightPercent(float) -> setMaxHeightPercent
    432:432:void setMaxWidth(float) -> setMaxWidth
    436:436:void setMaxWidthPercent(float) -> setMaxWidthPercent
    460:461:void setMeasureFunction(com.facebook.yoga.YogaMeasureFunction) -> setMeasureFunction
    420:420:void setMinHeight(float) -> setMinHeight
    424:424:void setMinHeightPercent(float) -> setMinHeightPercent
    408:408:void setMinWidth(float) -> setMinWidth
    412:412:void setMinWidthPercent(float) -> setMinWidthPercent
    272:272:void setOverflow(com.facebook.yoga.YogaOverflow) -> setOverflow
    344:344:void setPadding(com.facebook.yoga.YogaEdge,float) -> setPadding
    348:348:void setPaddingPercent(com.facebook.yoga.YogaEdge,float) -> setPaddingPercent
    364:364:void setPosition(com.facebook.yoga.YogaEdge,float) -> setPosition
    368:368:void setPositionPercent(com.facebook.yoga.YogaEdge,float) -> setPositionPercent
    256:256:void setPositionType(com.facebook.yoga.YogaPositionType) -> setPositionType
    376:376:void setWidth(float) -> setWidth
    384:384:void setWidthAuto() -> setWidthAuto
    380:380:void setWidthPercent(float) -> setWidthPercent
    264:264:void setWrap(com.facebook.yoga.YogaWrap) -> setWrap
    538:538:com.facebook.yoga.YogaValue valueFromLong(long) -> valueFromLong
com.facebook.yoga.YogaNodeJNIBase$1 -> com.facebook.yoga.YogaNodeJNIBase$1:
    568:568:void <clinit>() -> <clinit>
com.facebook.yoga.YogaNodeJNIFinalizer -> com.facebook.yoga.YogaNodeJNIFinalizer:
    12:12:void <init>() -> <init>
    16:16:void <init>(com.facebook.yoga.YogaConfig) -> <init>
    22:25:void finalize() -> finalize
    29:32:void freeNatives() -> freeNatives
com.facebook.yoga.YogaNodeType -> com.facebook.yoga.YogaNodeType:
    11:10:void <clinit>() -> <clinit>
    16:16:void <init>(java.lang.String,int,int) -> <init>
    10:10:com.facebook.yoga.YogaNodeType valueOf(java.lang.String) -> valueOf
    10:10:com.facebook.yoga.YogaNodeType[] values() -> values
com.facebook.yoga.YogaOverflow -> com.facebook.yoga.YogaOverflow:
    11:10:void <clinit>() -> <clinit>
    17:18:void <init>(java.lang.String,int,int) -> <init>
    22:22:int intValue() -> intValue
    10:10:com.facebook.yoga.YogaOverflow valueOf(java.lang.String) -> valueOf
    10:10:com.facebook.yoga.YogaOverflow[] values() -> values
com.facebook.yoga.YogaPositionType -> com.facebook.yoga.YogaPositionType:
    11:10:void <clinit>() -> <clinit>
    16:17:void <init>(java.lang.String,int,int) -> <init>
    21:21:int intValue() -> intValue
    10:10:com.facebook.yoga.YogaPositionType valueOf(java.lang.String) -> valueOf
    10:10:com.facebook.yoga.YogaPositionType[] values() -> values
com.facebook.yoga.YogaPrintOptions -> com.facebook.yoga.YogaPrintOptions:
    11:10:void <clinit>() -> <clinit>
    17:17:void <init>(java.lang.String,int,int) -> <init>
    10:10:com.facebook.yoga.YogaPrintOptions valueOf(java.lang.String) -> valueOf
    10:10:com.facebook.yoga.YogaPrintOptions[] values() -> values
com.facebook.yoga.YogaStyleInputs -> com.facebook.yoga.YogaStyleInputs:
    10:10:void <init>() -> <init>
com.facebook.yoga.YogaUnit -> com.facebook.yoga.YogaUnit:
    11:10:void <clinit>() -> <clinit>
    18:19:void <init>(java.lang.String,int,int) -> <init>
    31:28:com.facebook.yoga.YogaUnit fromInt(int) -> fromInt
    23:23:int intValue() -> intValue
    10:10:com.facebook.yoga.YogaUnit valueOf(java.lang.String) -> valueOf
    10:10:com.facebook.yoga.YogaUnit[] values() -> values
com.facebook.yoga.YogaValue -> com.facebook.yoga.YogaValue:
    11:13:void <clinit>() -> <clinit>
    18:20:void <init>(float,com.facebook.yoga.YogaUnit) -> <init>
    24:24:void <init>(float,int) -> <init>
    29:34:boolean equals(java.lang.Object) -> equals
    42:42:int hashCode() -> hashCode
    47:51:java.lang.String toString() -> toString
com.facebook.yoga.YogaValue$1 -> com.facebook.yoga.YogaValue$1:
    47:47:void <clinit>() -> <clinit>
com.facebook.yoga.YogaWrap -> com.facebook.yoga.YogaWrap:
    11:10:void <clinit>() -> <clinit>
    17:18:void <init>(java.lang.String,int,int) -> <init>
    22:22:int intValue() -> intValue
    10:10:com.facebook.yoga.YogaWrap valueOf(java.lang.String) -> valueOf
    10:10:com.facebook.yoga.YogaWrap[] values() -> values
javax.annotation.MatchesPattern$Checker -> javax.annotation.MatchesPattern$Checker:
    26:26:void <init>() -> <init>
javax.annotation.Nonnegative$Checker -> javax.annotation.Nonnegative$Checker:
    22:22:void <init>() -> <init>
javax.annotation.Nonnull$Checker -> javax.annotation.Nonnull$Checker:
    24:24:void <init>() -> <init>
javax.annotation.RegEx$Checker -> javax.annotation.RegEx$Checker:
    26:26:void <init>() -> <init>
javax.annotation.meta.When -> javax.annotation.meta.When:
    15:13:void <clinit>() -> <clinit>
    13:13:void <init>(java.lang.String,int) -> <init>
    13:13:javax.annotation.meta.When valueOf(java.lang.String) -> valueOf
    13:13:javax.annotation.meta.When[] values() -> values
okhttp3.Address -> okhttp3.Address:
    55:62:void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector) -> <init>
    151:151:okhttp3.CertificatePinner certificatePinner() -> certificatePinner
    120:120:java.util.List connectionSpecs() -> connectionSpecs
    98:98:okhttp3.Dns dns() -> dns
    155:157:boolean equals(java.lang.Object) -> equals
    176:185:boolean equalsNonHost(okhttp3.Address) -> equalsNonHost
    162:171:int hashCode() -> hashCode
    146:146:javax.net.ssl.HostnameVerifier hostnameVerifier() -> hostnameVerifier
    116:116:java.util.List protocols() -> protocols
    136:136:java.net.Proxy proxy() -> proxy
    108:108:okhttp3.Authenticator proxyAuthenticator() -> proxyAuthenticator
    128:128:java.net.ProxySelector proxySelector() -> proxySelector
    103:103:javax.net.SocketFactory socketFactory() -> socketFactory
    141:141:javax.net.ssl.SSLSocketFactory sslSocketFactory() -> sslSocketFactory
    189:200:java.lang.String toString() -> toString
    93:93:okhttp3.HttpUrl url() -> url
okhttp3.Authenticator -> okhttp3.Authenticator:
    100:100:void <clinit>() -> <clinit>
okhttp3.Authenticator$1 -> okhttp3.Authenticator$1:
    100:100:void <init>() -> <init>
okhttp3.Cache -> okhttp3.Cache:
    182:182:void <init>(java.io.File,long) -> <init>
    185:186:void <init>(java.io.File,long,okhttp3.internal.io.FileSystem) -> <init>
    284:284:void abortQuietly(okhttp3.internal.cache.DiskLruCache$Editor) -> abortQuietly
    395:395:void close() -> close
    310:310:void delete() -> delete
    399:399:java.io.File directory() -> directory
    318:318:void evictAll() -> evictAll
    391:391:void flush() -> flush
    194:210:okhttp3.Response get(okhttp3.Request) -> get
    427:427:int hitCount() -> hitCount
    302:302:void initialize() -> initialize
    403:403:boolean isClosed() -> isClosed
    190:190:java.lang.String key(okhttp3.HttpUrl) -> key
    387:387:long maxSize() -> maxSize
    423:423:int networkCount() -> networkCount
    225:256:okhttp3.internal.cache.CacheRequest put(okhttp3.Response) -> put
    726:733:int readInt(okio.BufferedSource) -> readInt
    262:262:void remove(okhttp3.Request) -> remove
    431:431:int requestCount() -> requestCount
    382:382:long size() -> size
    419:420:void trackConditionalCacheHit() -> trackConditionalCacheHit
    407:416:void trackResponse(okhttp3.internal.cache.CacheStrategy) -> trackResponse
    266:276:void update(okhttp3.Response,okhttp3.Response) -> update
    331:331:java.util.Iterator urls() -> urls
    374:374:int writeAbortCount() -> writeAbortCount
    378:378:int writeSuccessCount() -> writeSuccessCount
okhttp3.Cache$1 -> okhttp3.Cache$1:
    143:143:void <init>(okhttp3.Cache) -> <init>
    145:145:okhttp3.Response get(okhttp3.Request) -> get
    149:149:okhttp3.internal.cache.CacheRequest put(okhttp3.Response) -> put
    153:153:void remove(okhttp3.Request) -> remove
    161:161:void trackConditionalCacheHit() -> trackConditionalCacheHit
    165:165:void trackResponse(okhttp3.internal.cache.CacheStrategy) -> trackResponse
    157:157:void update(okhttp3.Response,okhttp3.Response) -> update
okhttp3.Cache$2 -> okhttp3.Cache$2:
    331:332:void <init>(okhttp3.Cache) -> <init>
    338:351:boolean hasNext() -> hasNext
    331:331:java.lang.Object next() -> next
    359:359:java.lang.String next() -> next
    367:367:void remove() -> remove
okhttp3.Cache$CacheRequestImpl -> okhttp3.Cache$CacheRequestImpl:
    440:443:void <init>(okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor) -> <init>
    459:465:void abort() -> abort
    474:474:okio.Sink body() -> body
okhttp3.Cache$CacheRequestImpl$1 -> okhttp3.Cache$CacheRequestImpl$1:
    443:443:void <init>(okhttp3.Cache$CacheRequestImpl,okio.Sink,okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor) -> <init>
    445:451:void close() -> close
okhttp3.Cache$CacheResponseBody -> okhttp3.Cache$CacheResponseBody:
    744:750:void <init>(okhttp3.internal.cache.DiskLruCache$Snapshot,java.lang.String,java.lang.String) -> <init>
    764:764:long contentLength() -> contentLength
    759:759:okhttp3.MediaType contentType() -> contentType
    771:771:okio.BufferedSource source() -> source
okhttp3.Cache$CacheResponseBody$1 -> okhttp3.Cache$CacheResponseBody$1:
    750:750:void <init>(okhttp3.Cache$CacheResponseBody,okio.Source,okhttp3.internal.cache.DiskLruCache$Snapshot) -> <init>
    752:753:void close() -> close
okhttp3.Cache$Entry -> okhttp3.Cache$Entry:
    480:483:void <clinit>() -> <clinit>
    544:594:void <init>(okio.Source) -> <init>
    598:608:void <init>(okhttp3.Response) -> <init>
    658:658:boolean isHttps() -> isHttps
    697:699:boolean matches(okhttp3.Request,okhttp3.Response) -> matches
    662:676:java.util.List readCertificateList(okio.BufferedSource) -> readCertificateList
    703:720:okhttp3.Response response(okhttp3.internal.cache.DiskLruCache$Snapshot) -> response
    683:692:void writeCertList(okio.BufferedSink,java.util.List) -> writeCertList
    612:654:void writeTo(okhttp3.internal.cache.DiskLruCache$Editor) -> writeTo
okhttp3.CacheControl -> okhttp3.CacheControl:
    18:28:void <clinit>() -> <clinit>
    48:61:void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String) -> <init>
    64:76:void <init>(okhttp3.CacheControl$Builder) -> <init>
    259:274:java.lang.String headerValue() -> headerValue
    145:145:boolean immutable() -> immutable
    111:111:boolean isPrivate() -> isPrivate
    115:115:boolean isPublic() -> isPublic
    99:99:int maxAgeSeconds() -> maxAgeSeconds
    123:123:int maxStaleSeconds() -> maxStaleSeconds
    127:127:int minFreshSeconds() -> minFreshSeconds
    119:119:boolean mustRevalidate() -> mustRevalidate
    87:87:boolean noCache() -> noCache
    92:92:boolean noStore() -> noStore
    141:141:boolean noTransform() -> noTransform
    137:137:boolean onlyIfCached() -> onlyIfCached
    169:248:okhttp3.CacheControl parse(okhttp3.Headers) -> parse
    107:107:int sMaxAgeSeconds() -> sMaxAgeSeconds
    254:255:java.lang.String toString() -> toString
okhttp3.CacheControl$Builder -> okhttp3.CacheControl$Builder:
    278:283:void <init>() -> <init>
    370:370:okhttp3.CacheControl build() -> build
    365:365:okhttp3.CacheControl$Builder immutable() -> immutable
    309:308:okhttp3.CacheControl$Builder maxAge(int,java.util.concurrent.TimeUnit) -> maxAge
    325:324:okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit) -> maxStale
    342:341:okhttp3.CacheControl$Builder minFresh(int,java.util.concurrent.TimeUnit) -> minFresh
    290:290:okhttp3.CacheControl$Builder noCache() -> noCache
    296:296:okhttp3.CacheControl$Builder noStore() -> noStore
    360:360:okhttp3.CacheControl$Builder noTransform() -> noTransform
    354:354:okhttp3.CacheControl$Builder onlyIfCached() -> onlyIfCached
okhttp3.CertificatePinner -> okhttp3.CertificatePinner:
    129:129:void <clinit>() -> <clinit>
    134:136:void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner) -> <init>
    162:204:void check(java.lang.String,java.util.List) -> check
    210:210:void check(java.lang.String,java.security.cert.Certificate[]) -> check
    141:143:boolean equals(java.lang.Object) -> equals
    218:222:java.util.List findMatchingPins(java.lang.String) -> findMatchingPins
    147:148:int hashCode() -> hashCode
    243:244:java.lang.String pin(java.security.cert.Certificate) -> pin
    250:250:okio.ByteString sha1(java.security.cert.X509Certificate) -> sha1
    254:254:okio.ByteString sha256(java.security.cert.X509Certificate) -> sha256
    231:233:okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner) -> withCertificateChainCleaner
okhttp3.CertificatePinner$Builder -> okhttp3.CertificatePinner$Builder:
    320:321:void <init>() -> <init>
    333:331:okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[]) -> add
    341:341:okhttp3.CertificatePinner build() -> build
okhttp3.CertificatePinner$Pin -> okhttp3.CertificatePinner$Pin:
    268:280:void <init>(java.lang.String,java.lang.String) -> <init>
    300:303:boolean equals(java.lang.Object) -> equals
    308:310:int hashCode() -> hashCode
    289:296:boolean matches(java.lang.String) -> matches
    315:315:java.lang.String toString() -> toString
okhttp3.Challenge -> okhttp3.Challenge:
    34:35:void <init>(java.lang.String,java.util.Map) -> <init>
    46:47:void <init>(java.lang.String,java.lang.String) -> <init>
    71:71:java.util.Map authParams() -> authParams
    81:88:java.nio.charset.Charset charset() -> charset
    92:94:boolean equals(java.lang.Object) -> equals
    99:100:int hashCode() -> hashCode
    76:76:java.lang.String realm() -> realm
    63:63:java.lang.String scheme() -> scheme
    105:105:java.lang.String toString() -> toString
    56:55:okhttp3.Challenge withCharset(java.nio.charset.Charset) -> withCharset
okhttp3.CipherSuite -> okhttp3.CipherSuite:
    49:403:void <clinit>() -> <clinit>
    444:446:void <init>(java.lang.String) -> <init>
    412:423:okhttp3.CipherSuite forJavaName(java.lang.String) -> forJavaName
    437:441:java.util.List forJavaNames(java.lang.String[]) -> forJavaNames
    457:458:okhttp3.CipherSuite init(java.lang.String,int) -> init
    469:469:java.lang.String javaName() -> javaName
    427:430:java.lang.String secondaryName(java.lang.String) -> secondaryName
    473:473:java.lang.String toString() -> toString
okhttp3.CipherSuite$1 -> okhttp3.CipherSuite$1:
    49:49:void <init>() -> <init>
    49:49:int compare(java.lang.Object,java.lang.Object) -> compare
    51:57:int compare(java.lang.String,java.lang.String) -> compare
okhttp3.ConnectionPool -> okhttp3.ConnectionPool:
    50:52:void <clinit>() -> <clinit>
    86:86:void <init>() -> <init>
    89:95:void <init>(int,long,java.util.concurrent.TimeUnit) -> <init>
    206:242:long cleanup(long) -> cleanup
    164:165:boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection) -> connectionBecameIdle
    115:115:int connectionCount() -> connectionCount
    139:143:java.net.Socket deduplicate(okhttp3.Address,okhttp3.internal.connection.StreamAllocation) -> deduplicate
    175:185:void evictAll() -> evictAll
    124:126:okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route) -> get
    102:105:int idleConnectionCount() -> idleConnectionCount
    257:283:int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long) -> pruneAndGetAllocationCount
    151:155:void put(okhttp3.internal.connection.RealConnection) -> put
okhttp3.ConnectionPool$1 -> okhttp3.ConnectionPool$1:
    57:57:void <init>(okhttp3.ConnectionPool) -> <init>
    60:70:void run() -> run
okhttp3.ConnectionSpec -> okhttp3.ConnectionSpec:
    44:112:void <clinit>() -> <clinit>
    119:123:void <init>(okhttp3.ConnectionSpec$Builder) -> <init>
    152:158:void apply(javax.net.ssl.SSLSocket,boolean) -> apply
    135:135:java.util.List cipherSuites() -> cipherSuites
    220:229:boolean equals(java.lang.Object) -> equals
    237:240:int hashCode() -> hashCode
    202:211:boolean isCompatible(javax.net.ssl.SSLSocket) -> isCompatible
    127:127:boolean isTls() -> isTls
    167:187:okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean) -> supportedSpec
    147:147:boolean supportsTlsExtensions() -> supportsTlsExtensions
    143:143:java.util.List tlsVersions() -> tlsVersions
    246:252:java.lang.String toString() -> toString
okhttp3.ConnectionSpec$Builder -> okhttp3.ConnectionSpec$Builder:
    265:266:void <init>(boolean) -> <init>
    269:273:void <init>(okhttp3.ConnectionSpec) -> <init>
    277:277:okhttp3.ConnectionSpec$Builder allEnabledCipherSuites() -> allEnabledCipherSuites
    304:304:okhttp3.ConnectionSpec$Builder allEnabledTlsVersions() -> allEnabledTlsVersions
    338:338:okhttp3.ConnectionSpec build() -> build
    283:283:okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[]) -> cipherSuites
    293:293:okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[]) -> cipherSuites
    332:332:okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean) -> supportsTlsExtensions
    310:310:okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[]) -> tlsVersions
    321:321:okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[]) -> tlsVersions
okhttp3.Cookie -> okhttp3.Cookie:
    48:54:void <clinit>() -> <clinit>
    68:77:void <init>(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean) -> <init>
    80:81:void <init>(okhttp3.Cookie$Builder) -> <init>
    390:390:int dateCharacterOffset(java.lang.String,int,int,boolean) -> dateCharacterOffset
    143:143:java.lang.String domain() -> domain
    186:192:boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    586:591:boolean equals(java.lang.Object) -> equals
    121:121:long expiresAt() -> expiresAt
    601:609:int hashCode() -> hashCode
    135:135:boolean hostOnly() -> hostOnly
    160:160:boolean httpOnly() -> httpOnly
    173:180:boolean matches(okhttp3.HttpUrl) -> matches
    98:98:java.lang.String name() -> name
    219:219:okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String) -> parse
    224:323:okhttp3.Cookie parse(long,okhttp3.HttpUrl,java.lang.String) -> parse
    441:453:java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers) -> parseAll
    426:427:java.lang.String parseDomain(java.lang.String) -> parseDomain
    329:365:long parseExpires(java.lang.String,int,int) -> parseExpires
    410:417:long parseMaxAge(java.lang.String) -> parseMaxAge
    152:152:java.lang.String path() -> path
    200:208:boolean pathMatch(okhttp3.HttpUrl,java.lang.String) -> pathMatch
    108:108:boolean persistent() -> persistent
    165:165:boolean secure() -> secure
    542:542:java.lang.String toString() -> toString
    551:582:java.lang.String toString(boolean) -> toString
    103:103:java.lang.String value() -> value
okhttp3.Cookie$Builder -> okhttp3.Cookie$Builder:
    460:465:void <init>() -> <init>
    537:537:okhttp3.Cookie build() -> build
    498:498:okhttp3.Cookie$Builder domain(java.lang.String) -> domain
    511:510:okhttp3.Cookie$Builder domain(java.lang.String,boolean) -> domain
    488:489:okhttp3.Cookie$Builder expiresAt(long) -> expiresAt
    506:506:okhttp3.Cookie$Builder hostOnlyDomain(java.lang.String) -> hostOnlyDomain
    532:532:okhttp3.Cookie$Builder httpOnly() -> httpOnly
    473:472:okhttp3.Cookie$Builder name(java.lang.String) -> name
    521:521:okhttp3.Cookie$Builder path(java.lang.String) -> path
    527:527:okhttp3.Cookie$Builder secure() -> secure
    480:479:okhttp3.Cookie$Builder value(java.lang.String) -> value
okhttp3.CookieJar -> okhttp3.CookieJar:
    36:36:void <clinit>() -> <clinit>
okhttp3.CookieJar$1 -> okhttp3.CookieJar$1:
    36:36:void <init>() -> <init>
    41:41:java.util.List loadForRequest(okhttp3.HttpUrl) -> loadForRequest
okhttp3.Credentials -> okhttp3.Credentials:
    25:25:void <init>() -> <init>
    30:30:java.lang.String basic(java.lang.String,java.lang.String) -> basic
    34:36:java.lang.String basic(java.lang.String,java.lang.String,java.nio.charset.Charset) -> basic
okhttp3.Dispatcher -> okhttp3.Dispatcher:
    56:57:void <init>(java.util.concurrent.ExecutorService) -> <init>
    60:54:void <init>() -> <init>
    145:156:void cancelAll() -> cancelAll
    134:136:void enqueue(okhttp3.RealCall$AsyncCall) -> enqueue
    204:205:void executed(okhttp3.RealCall) -> executed
    64:68:java.util.concurrent.ExecutorService executorService() -> executorService
    209:209:void finished(okhttp3.RealCall$AsyncCall) -> finished
    214:214:void finished(okhttp3.RealCall) -> finished
    219:222:void finished(java.util.Deque,java.lang.Object) -> finished
    89:89:int getMaxRequests() -> getMaxRequests
    114:114:int getMaxRequestsPerHost() -> getMaxRequestsPerHost
    168:182:boolean promoteAndExecute() -> promoteAndExecute
    233:237:java.util.List queuedCalls() -> queuedCalls
    251:251:int queuedCallsCount() -> queuedCallsCount
    242:247:java.util.List runningCalls() -> runningCalls
    255:255:int runningCallsCount() -> runningCallsCount
    195:197:int runningCallsForHost(okhttp3.RealCall$AsyncCall) -> runningCallsForHost
    130:131:void setIdleCallback(java.lang.Runnable) -> setIdleCallback
    82:80:void setMaxRequests(int) -> setMaxRequests
    107:105:void setMaxRequestsPerHost(int) -> setMaxRequestsPerHost
okhttp3.Dns -> okhttp3.Dns:
    36:36:void <clinit>() -> <clinit>
okhttp3.Dns$1 -> okhttp3.Dns$1:
    36:36:void <init>() -> <init>
    40:38:java.util.List lookup(java.lang.String) -> lookup
okhttp3.EventListener -> okhttp3.EventListener:
    53:53:void <clinit>() -> <clinit>
    52:52:void <init>() -> <init>
    57:57:okhttp3.EventListener$Factory factory(okhttp3.EventListener) -> factory
okhttp3.EventListener$1 -> okhttp3.EventListener$1:
    53:53:void <init>() -> <init>
okhttp3.EventListener$2 -> okhttp3.EventListener$2:
    57:57:void <init>(okhttp3.EventListener) -> <init>
    59:59:okhttp3.EventListener create(okhttp3.Call) -> create
okhttp3.FormBody -> okhttp3.FormBody:
    31:31:void <clinit>() -> <clinit>
    36:38:void <init>(java.util.List,java.util.List) -> <init>
    67:67:long contentLength() -> contentLength
    63:63:okhttp3.MediaType contentType() -> contentType
    47:47:java.lang.String encodedName(int) -> encodedName
    55:55:java.lang.String encodedValue(int) -> encodedValue
    51:51:java.lang.String name(int) -> name
    43:43:int size() -> size
    59:59:java.lang.String value(int) -> value
    85:99:long writeOrCountBytes(okio.BufferedSink,boolean) -> writeOrCountBytes
    71:71:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.FormBody$Builder -> okhttp3.FormBody$Builder:
    111:111:void <init>() -> <init>
    114:115:void <init>(java.nio.charset.Charset) -> <init>
    122:119:okhttp3.FormBody$Builder add(java.lang.String,java.lang.String) -> add
    131:128:okhttp3.FormBody$Builder addEncoded(java.lang.String,java.lang.String) -> addEncoded
    137:137:okhttp3.FormBody build() -> build
okhttp3.Handshake -> okhttp3.Handshake:
    43:47:void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List) -> <init>
    99:99:okhttp3.CipherSuite cipherSuite() -> cipherSuite
    127:132:boolean equals(java.lang.Object) -> equals
    51:52:okhttp3.Handshake get(javax.net.ssl.SSLSession) -> get
    85:83:okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List) -> get
    137:140:int hashCode() -> hashCode
    116:116:java.util.List localCertificates() -> localCertificates
    121:122:java.security.Principal localPrincipal() -> localPrincipal
    104:104:java.util.List peerCertificates() -> peerCertificates
    109:110:java.security.Principal peerPrincipal() -> peerPrincipal
    94:94:okhttp3.TlsVersion tlsVersion() -> tlsVersion
okhttp3.Headers -> okhttp3.Headers:
    53:54:void <init>(okhttp3.Headers$Builder) -> <init>
    57:58:void <init>(java.lang.String[]) -> <init>
    121:124:long byteCount() -> byteCount
    257:256:void checkName(java.lang.String) -> checkName
    269:268:void checkValue(java.lang.String,java.lang.String) -> checkValue
    163:164:boolean equals(java.lang.Object) -> equals
    63:63:java.lang.String get(java.lang.String) -> get
    194:196:java.lang.String get(java.lang.String[],java.lang.String) -> get
    71:72:java.util.Date getDate(java.lang.String) -> getDate
    168:168:int hashCode() -> hashCode
    82:82:java.lang.String name(int) -> name
    92:96:java.util.Set names() -> names
    131:132:okhttp3.Headers$Builder newBuilder() -> newBuilder
    208:207:okhttp3.Headers of(java.lang.String[]) -> of
    237:234:okhttp3.Headers of(java.util.Map) -> of
    77:77:int size() -> size
    180:188:java.util.Map toMultimap() -> toMultimap
    172:176:java.lang.String toString() -> toString
    87:87:java.lang.String value(int) -> value
    102:110:java.util.List values(java.lang.String) -> values
okhttp3.Headers$Builder -> okhttp3.Headers$Builder:
    278:279:void <init>() -> <init>
    300:302:okhttp3.Headers$Builder add(java.lang.String) -> add
    311:313:okhttp3.Headers$Builder add(java.lang.String,java.lang.String) -> add
    343:342:okhttp3.Headers$Builder add(java.lang.String,java.util.Date) -> add
    329:331:okhttp3.Headers$Builder addAll(okhttp3.Headers) -> addAll
    286:294:okhttp3.Headers$Builder addLenient(java.lang.String) -> addLenient
    362:363:okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String) -> addLenient
    321:322:okhttp3.Headers$Builder addUnsafeNonAscii(java.lang.String,java.lang.String) -> addUnsafeNonAscii
    401:401:okhttp3.Headers build() -> build
    392:394:java.lang.String get(java.lang.String) -> get
    368:371:okhttp3.Headers$Builder removeAll(java.lang.String) -> removeAll
    353:352:okhttp3.Headers$Builder set(java.lang.String,java.util.Date) -> set
    383:386:okhttp3.Headers$Builder set(java.lang.String,java.lang.String) -> set
okhttp3.HttpUrl -> okhttp3.HttpUrl:
    289:289:void <clinit>() -> <clinit>
    338:351:void <init>(okhttp3.HttpUrl$Builder) -> <init>
    1687:1704:java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> canonicalize
    1713:1712:void canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> canonicalize
    1752:1751:java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> canonicalize
    1759:1758:java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean) -> canonicalize
    510:512:int defaultPort(java.lang.String) -> defaultPort
    828:830:java.lang.String encodedFragment() -> encodedFragment
    445:448:java.lang.String encodedPassword() -> encodedPassword
    546:548:java.lang.String encodedPath() -> encodedPath
    570:576:java.util.List encodedPathSegments() -> encodedPathSegments
    613:616:java.lang.String encodedQuery() -> encodedQuery
    412:415:java.lang.String encodedUsername() -> encodedUsername
    932:932:boolean equals(java.lang.Object) -> equals
    846:846:java.lang.String fragment() -> fragment
    916:916:okhttp3.HttpUrl get(java.lang.String) -> get
    924:924:okhttp3.HttpUrl get(java.net.URL) -> get
    928:928:okhttp3.HttpUrl get(java.net.URI) -> get
    936:936:int hashCode() -> hashCode
    486:486:java.lang.String host() -> host
    397:397:boolean isHttps() -> isHttps
    620:627:void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List) -> namesAndValuesToQueryString
    872:882:okhttp3.HttpUrl$Builder newBuilder() -> newBuilder
    892:892:okhttp3.HttpUrl$Builder newBuilder(java.lang.String) -> newBuilder
    904:904:okhttp3.HttpUrl parse(java.lang.String) -> parse
    463:463:java.lang.String password() -> password
    594:594:java.util.List pathSegments() -> pathSegments
    552:554:void pathSegmentsToString(java.lang.StringBuilder,java.util.List) -> pathSegmentsToString
    531:531:int pathSize() -> pathSize
    1609:1609:java.lang.String percentDecode(java.lang.String,boolean) -> percentDecode
    1613:1619:java.util.List percentDecode(java.util.List,boolean) -> percentDecode
    1624:1635:java.lang.String percentDecode(java.lang.String,int,int,boolean) -> percentDecode
    1641:1640:void percentDecode(okio.Buffer,java.lang.String,int,int,boolean) -> percentDecode
    1660:1662:boolean percentEncoded(java.lang.String,int,int) -> percentEncoded
    502:502:int port() -> port
    673:676:java.lang.String query() -> query
    711:714:java.lang.String queryParameter(java.lang.String) -> queryParameter
    789:789:java.lang.String queryParameterName(int) -> queryParameterName
    734:739:java.util.Set queryParameterNames() -> queryParameterNames
    811:811:java.lang.String queryParameterValue(int) -> queryParameterValue
    761:768:java.util.List queryParameterValues(java.lang.String) -> queryParameterValues
    694:694:int querySize() -> querySize
    639:647:java.util.List queryStringToNamesAndValues(java.lang.String) -> queryStringToNamesAndValues
    855:859:java.lang.String redact() -> redact
    867:868:okhttp3.HttpUrl resolve(java.lang.String) -> resolve
    393:393:java.lang.String scheme() -> scheme
    940:940:java.lang.String toString() -> toString
    963:964:java.lang.String topPrivateDomain() -> topPrivateDomain
    377:386:java.net.URI uri() -> uri
    357:359:java.net.URL url() -> url
    430:430:java.lang.String username() -> username
okhttp3.HttpUrl$Builder -> okhttp3.HttpUrl$Builder:
    977:978:void <init>() -> <init>
    1061:1059:okhttp3.HttpUrl$Builder addEncodedPathSegment(java.lang.String) -> addEncodedPathSegment
    1074:1072:okhttp3.HttpUrl$Builder addEncodedPathSegments(java.lang.String) -> addEncodedPathSegments
    1162:1161:okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String) -> addEncodedQueryParameter
    1044:1043:okhttp3.HttpUrl$Builder addPathSegment(java.lang.String) -> addPathSegment
    1054:1053:okhttp3.HttpUrl$Builder addPathSegments(java.lang.String) -> addPathSegments
    1080:1084:okhttp3.HttpUrl$Builder addPathSegments(java.lang.String,boolean) -> addPathSegments
    1150:1149:okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String) -> addQueryParameter
    1254:1254:okhttp3.HttpUrl build() -> build
    1591:1592:java.lang.String canonicalizeHost(java.lang.String,int,int) -> canonicalizeHost
    1039:1039:int effectivePort() -> effectivePort
    1222:1223:okhttp3.HttpUrl$Builder encodedFragment(java.lang.String) -> encodedFragment
    1015:1014:okhttp3.HttpUrl$Builder encodedPassword(java.lang.String) -> encodedPassword
    1124:1123:okhttp3.HttpUrl$Builder encodedPath(java.lang.String) -> encodedPath
    1142:1143:okhttp3.HttpUrl$Builder encodedQuery(java.lang.String) -> encodedQuery
    1002:1001:okhttp3.HttpUrl$Builder encodedUsername(java.lang.String) -> encodedUsername
    1215:1216:okhttp3.HttpUrl$Builder fragment(java.lang.String) -> fragment
    1026:1025:okhttp3.HttpUrl$Builder host(java.lang.String) -> host
    1496:1496:boolean isDot(java.lang.String) -> isDot
    1500:1503:boolean isDotDot(java.lang.String) -> isDotDot
    1314:1333:okhttp3.HttpUrl$Builder parse(okhttp3.HttpUrl,java.lang.String) -> parse
    1598:1599:int parsePort(java.lang.String,int,int) -> parsePort
    1009:1008:okhttp3.HttpUrl$Builder password(java.lang.String) -> password
    1517:1523:void pop() -> pop
    1034:1033:okhttp3.HttpUrl$Builder port(int) -> port
    1575:1578:int portColonOffset(java.lang.String,int,int) -> portColonOffset
    1476:1491:void push(java.lang.String,int,int,boolean,boolean) -> push
    1133:1135:okhttp3.HttpUrl$Builder query(java.lang.String) -> query
    1232:1247:okhttp3.HttpUrl$Builder reencodeForUri() -> reencodeForUri
    1201:1206:void removeAllCanonicalQueryParameters(java.lang.String) -> removeAllCanonicalQueryParameters
    1194:1193:okhttp3.HttpUrl$Builder removeAllEncodedQueryParameters(java.lang.String) -> removeAllEncodedQueryParameters
    1185:1184:okhttp3.HttpUrl$Builder removeAllQueryParameters(java.lang.String) -> removeAllQueryParameters
    1115:1117:okhttp3.HttpUrl$Builder removePathSegment(int) -> removePathSegment
    1452:1467:void resolvePath(java.lang.String,int,int) -> resolvePath
    984:983:okhttp3.HttpUrl$Builder scheme(java.lang.String) -> scheme
    1534:1538:int schemeDelimiterOffset(java.lang.String,int,int) -> schemeDelimiterOffset
    1105:1102:okhttp3.HttpUrl$Builder setEncodedPathSegment(int,java.lang.String) -> setEncodedPathSegment
    1178:1179:okhttp3.HttpUrl$Builder setEncodedQueryParameter(java.lang.String,java.lang.String) -> setEncodedQueryParameter
    1091:1089:okhttp3.HttpUrl$Builder setPathSegment(int,java.lang.String) -> setPathSegment
    1172:1173:okhttp3.HttpUrl$Builder setQueryParameter(java.lang.String,java.lang.String) -> setQueryParameter
    1561:1561:int slashCount(java.lang.String,int,int) -> slashCount
    1260:1308:java.lang.String toString() -> toString
    996:995:okhttp3.HttpUrl$Builder username(java.lang.String) -> username
okhttp3.JavaNetAuthenticator -> okhttp3.JavaNetAuthenticator:
    33:33:void <init>() -> <init>
    35:63:okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response) -> authenticate
    71:73:java.net.InetAddress getConnectToInetAddress(java.net.Proxy,okhttp3.HttpUrl) -> getConnectToInetAddress
okhttp3.JavaNetCookieJar -> okhttp3.JavaNetCookieJar:
    37:38:void <init>(java.net.CookieHandler) -> <init>
    89:106:java.util.List decodeHeaderAsJavaNetCookies(okhttp3.HttpUrl,java.lang.String) -> decodeHeaderAsJavaNetCookies
    58:64:java.util.List loadForRequest(okhttp3.HttpUrl) -> loadForRequest
    42:51:void saveFromResponse(okhttp3.HttpUrl,java.util.List) -> saveFromResponse
okhttp3.MediaType -> okhttp3.MediaType:
    31:32:void <clinit>() -> <clinit>
    40:44:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    131:131:java.nio.charset.Charset charset() -> charset
    140:140:java.nio.charset.Charset charset(java.nio.charset.Charset) -> charset
    155:155:boolean equals(java.lang.Object) -> equals
    53:55:okhttp3.MediaType get(java.lang.String) -> get
    159:159:int hashCode() -> hashCode
    106:106:okhttp3.MediaType parse(java.lang.String) -> parse
    124:124:java.lang.String subtype() -> subtype
    151:151:java.lang.String toString() -> toString
    117:117:java.lang.String type() -> type
okhttp3.MultipartBody -> okhttp3.MultipartBody:
    35:66:void <clinit>() -> <clinit>
    74:78:void <init>(okio.ByteString,okhttp3.MediaType,java.util.List) -> <init>
    203:221:java.lang.StringBuilder appendQuotedString(java.lang.StringBuilder,java.lang.String) -> appendQuotedString
    86:86:java.lang.String boundary() -> boundary
    108:110:long contentLength() -> contentLength
    104:104:okhttp3.MediaType contentType() -> contentType
    99:99:okhttp3.MultipartBody$Part part(int) -> part
    95:95:java.util.List parts() -> parts
    91:91:int size() -> size
    82:82:okhttp3.MediaType type() -> type
    129:186:long writeOrCountBytes(okio.BufferedSink,boolean) -> writeOrCountBytes
    114:114:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.MultipartBody$Builder -> okhttp3.MultipartBody$Builder:
    285:285:void <init>() -> <init>
    288:289:void <init>(java.lang.String) -> <init>
    319:319:okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String) -> addFormDataPart
    324:324:okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String,okhttp3.RequestBody) -> addFormDataPart
    309:309:okhttp3.MultipartBody$Builder addPart(okhttp3.RequestBody) -> addPart
    314:314:okhttp3.MultipartBody$Builder addPart(okhttp3.Headers,okhttp3.RequestBody) -> addPart
    330:329:okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part) -> addPart
    336:337:okhttp3.MultipartBody build() -> build
    300:298:okhttp3.MultipartBody$Builder setType(okhttp3.MediaType) -> setType
okhttp3.MultipartBody$Part -> okhttp3.MultipartBody$Part:
    265:267:void <init>(okhttp3.Headers,okhttp3.RequestBody) -> <init>
    275:275:okhttp3.RequestBody body() -> body
    227:227:okhttp3.MultipartBody$Part create(okhttp3.RequestBody) -> create
    234:232:okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody) -> create
    244:244:okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String) -> createFormData
    251:249:okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody) -> createFormData
    271:271:okhttp3.Headers headers() -> headers
okhttp3.OkHttpClient -> okhttp3.OkHttpClient:
    127:134:void <clinit>() -> <clinit>
    231:231:void <init>() -> <init>
    234:283:void <init>(okhttp3.OkHttpClient$Builder) -> <init>
    366:366:okhttp3.Authenticator authenticator() -> authenticator
    338:338:okhttp3.Cache cache() -> cache
    302:302:int callTimeoutMillis() -> callTimeoutMillis
    362:362:okhttp3.CertificatePinner certificatePinner() -> certificatePinner
    307:307:int connectTimeoutMillis() -> connectTimeoutMillis
    374:374:okhttp3.ConnectionPool connectionPool() -> connectionPool
    398:398:java.util.List connectionSpecs() -> connectionSpecs
    334:334:okhttp3.CookieJar cookieJar() -> cookieJar
    390:390:okhttp3.Dispatcher dispatcher() -> dispatcher
    346:346:okhttp3.Dns dns() -> dns
    420:420:okhttp3.EventListener$Factory eventListenerFactory() -> eventListenerFactory
    382:382:boolean followRedirects() -> followRedirects
    378:378:boolean followSslRedirects() -> followSslRedirects
    358:358:javax.net.ssl.HostnameVerifier hostnameVerifier() -> hostnameVerifier
    407:407:java.util.List interceptors() -> interceptors
    342:342:okhttp3.internal.cache.InternalCache internalCache() -> internalCache
    416:416:java.util.List networkInterceptors() -> networkInterceptors
    440:440:okhttp3.OkHttpClient$Builder newBuilder() -> newBuilder
    427:427:okhttp3.Call newCall(okhttp3.Request) -> newCall
    292:296:javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager) -> newSslSocketFactory
    434:435:okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener) -> newWebSocket
    322:322:int pingIntervalMillis() -> pingIntervalMillis
    394:394:java.util.List protocols() -> protocols
    326:326:java.net.Proxy proxy() -> proxy
    370:370:okhttp3.Authenticator proxyAuthenticator() -> proxyAuthenticator
    330:330:java.net.ProxySelector proxySelector() -> proxySelector
    312:312:int readTimeoutMillis() -> readTimeoutMillis
    386:386:boolean retryOnConnectionFailure() -> retryOnConnectionFailure
    350:350:javax.net.SocketFactory socketFactory() -> socketFactory
    354:354:javax.net.ssl.SSLSocketFactory sslSocketFactory() -> sslSocketFactory
    317:317:int writeTimeoutMillis() -> writeTimeoutMillis
okhttp3.OkHttpClient$1 -> okhttp3.OkHttpClient$1:
    134:134:void <init>() -> <init>
    136:136:void addLenient(okhttp3.Headers$Builder,java.lang.String) -> addLenient
    140:140:void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String) -> addLenient
    180:180:void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean) -> apply
    175:175:int code(okhttp3.Response$Builder) -> code
    149:149:boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection) -> connectionBecameIdle
    163:163:java.net.Socket deduplicate(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation) -> deduplicate
    158:158:boolean equalsNonHost(okhttp3.Address,okhttp3.Address) -> equalsNonHost
    154:154:okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route) -> get
    184:184:boolean isInvalidHttpUrlHost(java.lang.IllegalArgumentException) -> isInvalidHttpUrlHost
    196:196:okhttp3.Call newWebSocketCall(okhttp3.OkHttpClient,okhttp3.Request) -> newWebSocketCall
    167:167:void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection) -> put
    171:171:okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool) -> routeDatabase
    144:144:void setCache(okhttp3.OkHttpClient$Builder,okhttp3.internal.cache.InternalCache) -> setCache
    188:188:okhttp3.internal.connection.StreamAllocation streamAllocation(okhttp3.Call) -> streamAllocation
    192:192:java.io.IOException timeoutExit(okhttp3.Call,java.io.IOException) -> timeoutExit
okhttp3.OkHttpClient$Builder -> okhttp3.OkHttpClient$Builder:
    473:497:void <init>() -> <init>
    500:528:void <init>(okhttp3.OkHttpClient) -> <init>
    994:993:okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor) -> addInterceptor
    1009:1008:okhttp3.OkHttpClient$Builder addNetworkInterceptor(okhttp3.Interceptor) -> addNetworkInterceptor
    842:841:okhttp3.OkHttpClient$Builder authenticator(okhttp3.Authenticator) -> authenticator
    1040:1040:okhttp3.OkHttpClient build() -> build
    726:727:okhttp3.OkHttpClient$Builder cache(okhttp3.Cache) -> cache
    540:540:okhttp3.OkHttpClient$Builder callTimeout(long,java.util.concurrent.TimeUnit) -> callTimeout
    554:554:okhttp3.OkHttpClient$Builder callTimeout(java.time.Duration) -> callTimeout
    830:829:okhttp3.OkHttpClient$Builder certificatePinner(okhttp3.CertificatePinner) -> certificatePinner
    567:567:okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit) -> connectTimeout
    581:581:okhttp3.OkHttpClient$Builder connectTimeout(java.time.Duration) -> connectTimeout
    865:864:okhttp3.OkHttpClient$Builder connectionPool(okhttp3.ConnectionPool) -> connectionPool
    979:979:okhttp3.OkHttpClient$Builder connectionSpecs(java.util.List) -> connectionSpecs
    714:713:okhttp3.OkHttpClient$Builder cookieJar(okhttp3.CookieJar) -> cookieJar
    914:913:okhttp3.OkHttpClient$Builder dispatcher(okhttp3.Dispatcher) -> dispatcher
    738:737:okhttp3.OkHttpClient$Builder dns(okhttp3.Dns) -> dns
    1021:1020:okhttp3.OkHttpClient$Builder eventListener(okhttp3.EventListener) -> eventListener
    1035:1033:okhttp3.OkHttpClient$Builder eventListenerFactory(okhttp3.EventListener$Factory) -> eventListenerFactory
    882:882:okhttp3.OkHttpClient$Builder followRedirects(boolean) -> followRedirects
    876:876:okhttp3.OkHttpClient$Builder followSslRedirects(boolean) -> followSslRedirects
    819:818:okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier) -> hostnameVerifier
    989:989:java.util.List interceptors() -> interceptors
    1004:1004:java.util.List networkInterceptors() -> networkInterceptors
    659:659:okhttp3.OkHttpClient$Builder pingInterval(long,java.util.concurrent.TimeUnit) -> pingInterval
    678:678:okhttp3.OkHttpClient$Builder pingInterval(java.time.Duration) -> pingInterval
    951:964:okhttp3.OkHttpClient$Builder protocols(java.util.List) -> protocols
    688:688:okhttp3.OkHttpClient$Builder proxy(java.net.Proxy) -> proxy
    854:853:okhttp3.OkHttpClient$Builder proxyAuthenticator(okhttp3.Authenticator) -> proxyAuthenticator
    702:701:okhttp3.OkHttpClient$Builder proxySelector(java.net.ProxySelector) -> proxySelector
    596:596:okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit) -> readTimeout
    612:612:okhttp3.OkHttpClient$Builder readTimeout(java.time.Duration) -> readTimeout
    905:905:okhttp3.OkHttpClient$Builder retryOnConnectionFailure(boolean) -> retryOnConnectionFailure
    720:721:void setInternalCache(okhttp3.internal.cache.InternalCache) -> setInternalCache
    752:751:okhttp3.OkHttpClient$Builder socketFactory(javax.net.SocketFactory) -> socketFactory
    767:766:okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory) -> sslSocketFactory
    806:804:okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager) -> sslSocketFactory
    626:626:okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit) -> writeTimeout
    641:641:okhttp3.OkHttpClient$Builder writeTimeout(java.time.Duration) -> writeTimeout
okhttp3.OkUrlFactory -> okhttp3.OkUrlFactory:
    39:40:void <init>(okhttp3.OkHttpClient) -> <init>
    44:44:okhttp3.OkHttpClient client() -> client
    34:34:java.lang.Object clone() -> clone
    61:61:okhttp3.OkUrlFactory clone() -> clone
    90:92:java.net.URLStreamHandler createURLStreamHandler(java.lang.String) -> createURLStreamHandler
    65:65:java.net.HttpURLConnection open(java.net.URL) -> open
    69:76:java.net.HttpURLConnection open(java.net.URL,java.net.Proxy) -> open
    48:48:okhttp3.OkUrlFactory setClient(okhttp3.OkHttpClient) -> setClient
    53:53:void setUrlFilter(okhttp3.internal.URLFilter) -> setUrlFilter
okhttp3.OkUrlFactory$1 -> okhttp3.OkUrlFactory$1:
    92:92:void <init>(okhttp3.OkUrlFactory,java.lang.String) -> <init>
    102:104:int getDefaultPort() -> getDefaultPort
    94:94:java.net.URLConnection openConnection(java.net.URL) -> openConnection
    98:98:java.net.URLConnection openConnection(java.net.URL,java.net.Proxy) -> openConnection
okhttp3.Protocol -> okhttp3.Protocol:
    33:29:void <clinit>() -> <clinit>
    85:86:void <init>(java.lang.String,int,java.lang.String) -> <init>
    96:102:okhttp3.Protocol get(java.lang.String) -> get
    113:113:java.lang.String toString() -> toString
    29:29:okhttp3.Protocol valueOf(java.lang.String) -> valueOf
    29:29:okhttp3.Protocol[] values() -> values
okhttp3.RealCall -> okhttp3.RealCall:
    58:68:void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean) -> <init>
    40:40:okhttp3.EventListener access$000(okhttp3.RealCall) -> access$000
    130:130:void cancel() -> cancel
    115:116:void captureCallStackTrace() -> captureCallStackTrace
    40:40:java.lang.Object clone() -> clone
    40:40:okhttp3.Call clone() -> clone
    147:147:okhttp3.RealCall clone() -> clone
    120:123:void enqueue(okhttp3.Callback) -> enqueue
    83:86:okhttp3.Response execute() -> execute
    239:254:okhttp3.Response getResponseWithInterceptorChain() -> getResponseWithInterceptorChain
    142:142:boolean isCanceled() -> isCanceled
    138:138:boolean isExecuted() -> isExecuted
    73:74:okhttp3.RealCall newRealCall(okhttp3.OkHttpClient,okhttp3.Request,boolean) -> newRealCall
    234:234:java.lang.String redactedUrl() -> redactedUrl
    79:79:okhttp3.Request request() -> request
    151:151:okhttp3.internal.connection.StreamAllocation streamAllocation() -> streamAllocation
    134:134:okio.Timeout timeout() -> timeout
    105:109:java.io.IOException timeoutExit(java.io.IOException) -> timeoutExit
    228:230:java.lang.String toLoggableString() -> toLoggableString
okhttp3.RealCall$1 -> okhttp3.RealCall$1:
    63:63:void <init>(okhttp3.RealCall) -> <init>
    65:65:void timedOut() -> timedOut
okhttp3.RealCall$AsyncCall -> okhttp3.RealCall$AsyncCall:
    154:154:void <clinit>() -> <clinit>
    157:159:void <init>(okhttp3.RealCall,okhttp3.Callback) -> <init>
    198:218:void execute() -> execute
    182:191:void executeOn(java.util.concurrent.ExecutorService) -> executeOn
    171:171:okhttp3.RealCall get() -> get
    163:163:java.lang.String host() -> host
    167:167:okhttp3.Request request() -> request
okhttp3.Request -> okhttp3.Request:
    40:45:void <init>(okhttp3.Request$Builder) -> <init>
    69:69:okhttp3.RequestBody body() -> body
    101:102:okhttp3.CacheControl cacheControl() -> cacheControl
    61:61:java.lang.String header(java.lang.String) -> header
    57:57:okhttp3.Headers headers() -> headers
    65:65:java.util.List headers(java.lang.String) -> headers
    106:106:boolean isHttps() -> isHttps
    53:53:java.lang.String method() -> method
    93:93:okhttp3.Request$Builder newBuilder() -> newBuilder
    81:81:java.lang.Object tag() -> tag
    89:89:java.lang.Object tag(java.lang.Class) -> tag
    110:110:java.lang.String toString() -> toString
    49:49:okhttp3.HttpUrl url() -> url
okhttp3.Request$Builder -> okhttp3.Request$Builder:
    128:130:void <init>() -> <init>
    133:140:void <init>(okhttp3.Request) -> <init>
    196:196:okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String) -> addHeader
    292:292:okhttp3.Request build() -> build
    218:220:okhttp3.Request$Builder cacheControl(okhttp3.CacheControl) -> cacheControl
    236:236:okhttp3.Request$Builder delete(okhttp3.RequestBody) -> delete
    240:240:okhttp3.Request$Builder delete() -> delete
    224:224:okhttp3.Request$Builder get() -> get
    228:228:okhttp3.Request$Builder head() -> head
    184:184:okhttp3.Request$Builder header(java.lang.String,java.lang.String) -> header
    208:208:okhttp3.Request$Builder headers(okhttp3.Headers) -> headers
    253:252:okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody) -> method
    248:248:okhttp3.Request$Builder patch(okhttp3.RequestBody) -> patch
    232:232:okhttp3.Request$Builder post(okhttp3.RequestBody) -> post
    244:244:okhttp3.Request$Builder put(okhttp3.RequestBody) -> put
    202:202:okhttp3.Request$Builder removeHeader(java.lang.String) -> removeHeader
    267:267:okhttp3.Request$Builder tag(java.lang.Object) -> tag
    282:279:okhttp3.Request$Builder tag(java.lang.Class,java.lang.Object) -> tag
    145:144:okhttp3.Request$Builder url(okhttp3.HttpUrl) -> url
    159:156:okhttp3.Request$Builder url(java.lang.String) -> url
    176:175:okhttp3.Request$Builder url(java.net.URL) -> url
okhttp3.RequestBody -> okhttp3.RequestBody:
    28:28:void <init>() -> <init>
    48:57:okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String) -> create
    63:63:okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString) -> create
    80:80:okhttp3.RequestBody create(okhttp3.MediaType,byte[]) -> create
    87:86:okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int) -> create
    107:105:okhttp3.RequestBody create(okhttp3.MediaType,java.io.File) -> create
okhttp3.RequestBody$1 -> okhttp3.RequestBody$1:
    63:63:void <init>(okhttp3.MediaType,okio.ByteString) -> <init>
    69:69:long contentLength() -> contentLength
    65:65:okhttp3.MediaType contentType() -> contentType
    73:73:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.RequestBody$2 -> okhttp3.RequestBody$2:
    88:88:void <init>(okhttp3.MediaType,int,byte[],int) -> <init>
    94:94:long contentLength() -> contentLength
    90:90:okhttp3.MediaType contentType() -> contentType
    98:98:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.RequestBody$3 -> okhttp3.RequestBody$3:
    107:107:void <init>(okhttp3.MediaType,java.io.File) -> <init>
    113:113:long contentLength() -> contentLength
    109:109:okhttp3.MediaType contentType() -> contentType
    119:122:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.Response -> okhttp3.Response:
    59:71:void <init>(okhttp3.Response$Builder) -> <init>
    177:177:okhttp3.ResponseBody body() -> body
    255:256:okhttp3.CacheControl cacheControl() -> cacheControl
    214:214:okhttp3.Response cacheResponse() -> cacheResponse
    240:245:java.util.List challenges() -> challenges
    285:286:void close() -> close
    98:98:int code() -> code
    119:119:okhttp3.Handshake handshake() -> handshake
    127:127:java.lang.String header(java.lang.String) -> header
    131:131:java.lang.String header(java.lang.String,java.lang.String) -> header
    123:123:java.util.List headers(java.lang.String) -> headers
    136:136:okhttp3.Headers headers() -> headers
    186:186:boolean isRedirect() -> isRedirect
    106:106:boolean isSuccessful() -> isSuccessful
    111:111:java.lang.String message() -> message
    205:205:okhttp3.Response networkResponse() -> networkResponse
    181:181:okhttp3.Response$Builder newBuilder() -> newBuilder
    151:165:okhttp3.ResponseBody peekBody(long) -> peekBody
    224:224:okhttp3.Response priorResponse() -> priorResponse
    93:93:okhttp3.Protocol protocol() -> protocol
    274:274:long receivedResponseAtMillis() -> receivedResponseAtMillis
    86:86:okhttp3.Request request() -> request
    265:265:long sentRequestAtMillis() -> sentRequestAtMillis
    292:299:java.lang.String toString() -> toString
okhttp3.Response$Builder -> okhttp3.Response$Builder:
    317:318:void <init>() -> <init>
    321:333:void <init>(okhttp3.Response) -> <init>
    375:375:okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String) -> addHeader
    391:391:okhttp3.Response$Builder body(okhttp3.ResponseBody) -> body
    442:442:okhttp3.Response build() -> build
    402:403:okhttp3.Response$Builder cacheResponse(okhttp3.Response) -> cacheResponse
    426:427:void checkPriorResponse(okhttp3.Response) -> checkPriorResponse
    408:409:void checkSupportResponse(java.lang.String,okhttp3.Response) -> checkSupportResponse
    347:347:okhttp3.Response$Builder code(int) -> code
    357:357:okhttp3.Response$Builder handshake(okhttp3.Handshake) -> handshake
    366:366:okhttp3.Response$Builder header(java.lang.String,java.lang.String) -> header
    386:386:okhttp3.Response$Builder headers(okhttp3.Headers) -> headers
    352:352:okhttp3.Response$Builder message(java.lang.String) -> message
    396:397:okhttp3.Response$Builder networkResponse(okhttp3.Response) -> networkResponse
    420:421:okhttp3.Response$Builder priorResponse(okhttp3.Response) -> priorResponse
    342:342:okhttp3.Response$Builder protocol(okhttp3.Protocol) -> protocol
    437:437:okhttp3.Response$Builder receivedResponseAtMillis(long) -> receivedResponseAtMillis
    380:380:okhttp3.Response$Builder removeHeader(java.lang.String) -> removeHeader
    337:337:okhttp3.Response$Builder request(okhttp3.Request) -> request
    432:432:okhttp3.Response$Builder sentRequestAtMillis(long) -> sentRequestAtMillis
okhttp3.ResponseBody -> okhttp3.ResponseBody:
    103:103:void <init>() -> <init>
    116:116:java.io.InputStream byteStream() -> byteStream
    129:131:byte[] bytes() -> bytes
    158:159:java.io.Reader charStream() -> charStream
    183:184:java.nio.charset.Charset charset() -> charset
    188:188:void close() -> close
    196:205:okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String) -> create
    210:211:okhttp3.ResponseBody create(okhttp3.MediaType,byte[]) -> create
    216:217:okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString) -> create
    224:223:okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource) -> create
    173:178:java.lang.String string() -> string
okhttp3.ResponseBody$1 -> okhttp3.ResponseBody$1:
    224:224:void <init>(okhttp3.MediaType,long,okio.BufferedSource) -> <init>
    230:230:long contentLength() -> contentLength
    226:226:okhttp3.MediaType contentType() -> contentType
    234:234:okio.BufferedSource source() -> source
okhttp3.ResponseBody$BomAwareReader -> okhttp3.ResponseBody$BomAwareReader:
    246:248:void <init>(okio.BufferedSource,java.nio.charset.Charset) -> <init>
    263:267:void close() -> close
    252:252:int read(char[],int,int) -> read
okhttp3.Route -> okhttp3.Route:
    42:44:void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress) -> <init>
    58:58:okhttp3.Address address() -> address
    84:87:boolean equals(java.lang.Object) -> equals
    92:94:int hashCode() -> hashCode
    68:68:java.net.Proxy proxy() -> proxy
    80:80:boolean requiresTunnel() -> requiresTunnel
    72:72:java.net.InetSocketAddress socketAddress() -> socketAddress
    99:99:java.lang.String toString() -> toString
okhttp3.TlsVersion -> okhttp3.TlsVersion:
    27:26:void <clinit>() -> <clinit>
    36:37:void <init>(java.lang.String,int,java.lang.String) -> <init>
    41:43:okhttp3.TlsVersion forJavaName(java.lang.String) -> forJavaName
    57:61:java.util.List forJavaNames(java.lang.String[]) -> forJavaNames
    65:65:java.lang.String javaName() -> javaName
    26:26:okhttp3.TlsVersion valueOf(java.lang.String) -> valueOf
    26:26:okhttp3.TlsVersion[] values() -> values
okhttp3.WebSocketListener -> okhttp3.WebSocketListener:
    21:21:void <init>() -> <init>
okhttp3.internal.Internal -> okhttp3.internal.Internal:
    40:40:void <init>() -> <init>
    44:44:void initializeInstanceForTests() -> initializeInstanceForTests
okhttp3.internal.JavaNetHeaders -> okhttp3.internal.JavaNetHeaders:
    30:30:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    52:68:java.util.Map toMultimap(okhttp3.Headers,java.lang.String) -> toMultimap
okhttp3.internal.JavaNetHeaders$1 -> okhttp3.internal.JavaNetHeaders$1:
    30:30:void <init>() -> <init>
    30:30:int compare(java.lang.Object,java.lang.Object) -> compare
    40:40:int compare(java.lang.String,java.lang.String) -> compare
okhttp3.internal.NamedRunnable -> okhttp3.internal.NamedRunnable:
    24:25:void <init>(java.lang.String,java.lang.Object[]) -> <init>
    29:34:void run() -> run
okhttp3.internal.Util -> okhttp3.internal.Util:
    59:118:void <clinit>() -> <clinit>
    121:121:void <init>() -> <init>
    100:102:void addSuppressedIfPossible(java.lang.Throwable,java.lang.Throwable) -> addSuppressedIfPossible
    504:506:java.lang.AssertionError assertionError(java.lang.String,java.lang.Exception) -> assertionError
    471:489:java.nio.charset.Charset bomAwareCharset(okio.BufferedSource,java.nio.charset.Charset) -> bomAwareCharset
    400:416:java.lang.String canonicalizeHost(java.lang.String) -> canonicalizeHost
    497:495:int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit) -> checkDuration
    126:126:void checkOffsetAndCount(long,long,long) -> checkOffsetAndCount
    142:144:void closeQuietly(java.io.Closeable) -> closeQuietly
    157:159:void closeQuietly(java.net.Socket) -> closeQuietly
    174:176:void closeQuietly(java.net.ServerSocket) -> closeQuietly
    315:317:java.lang.String[] concat(java.lang.String[],java.lang.String) -> concat
    427:438:boolean containsInvalidHostnameAsciiCodes(java.lang.String) -> containsInvalidHostnameAsciiCodes
    597:619:boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int) -> decodeIpv4Suffix
    528:587:java.net.InetAddress decodeIpv6(java.lang.String,int,int) -> decodeIpv6
    374:374:int delimiterOffset(java.lang.String,int,int,java.lang.String) -> delimiterOffset
    385:385:int delimiterOffset(java.lang.String,int,int,char) -> delimiterOffset
    189:189:boolean discard(okio.Source,int,java.util.concurrent.TimeUnit) -> discard
    132:132:boolean equal(java.lang.Object,java.lang.Object) -> equal
    467:467:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    290:294:java.lang.String hostHeader(okhttp3.HttpUrl,boolean) -> hostHeader
    224:224:java.util.List immutableList(java.util.List) -> immutableList
    236:236:java.util.List immutableList(java.lang.Object[]) -> immutableList
    229:231:java.util.Map immutableMap(java.util.Map) -> immutableMap
    308:309:int indexOf(java.util.Comparator,java.lang.String[],java.lang.String) -> indexOf
    451:452:int indexOfControlOrNonAscii(java.lang.String) -> indexOfControlOrNonAscii
    633:659:java.lang.String inet6AddressToAscii(byte[]) -> inet6AddressToAscii
    256:265:java.lang.String[] intersect(java.util.Comparator,java.lang.String[],java.lang.String[]) -> intersect
    303:304:boolean isAndroidGetsocknameError(java.lang.AssertionError) -> isAndroidGetsocknameError
    276:281:boolean nonEmptyIntersection(java.util.Comparator,java.lang.String[],java.lang.String[]) -> nonEmptyIntersection
    665:674:javax.net.ssl.X509TrustManager platformTrustManager() -> platformTrustManager
    200:217:boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit) -> skipAll
    327:327:int skipLeadingAsciiWhitespace(java.lang.String,int,int) -> skipLeadingAsciiWhitespace
    347:347:int skipTrailingAsciiWhitespace(java.lang.String,int,int) -> skipTrailingAsciiWhitespace
    240:240:java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean) -> threadFactory
    679:683:okhttp3.Headers toHeaders(java.util.List) -> toHeaders
    363:365:java.lang.String trimSubstring(java.lang.String,int,int) -> trimSubstring
    462:462:boolean verifyAsIpAddress(java.lang.String) -> verifyAsIpAddress
okhttp3.internal.Util$1 -> okhttp3.internal.Util$1:
    81:81:void <init>() -> <init>
    81:81:int compare(java.lang.Object,java.lang.Object) -> compare
    83:83:int compare(java.lang.String,java.lang.String) -> compare
okhttp3.internal.Util$2 -> okhttp3.internal.Util$2:
    240:240:void <init>(java.lang.String,boolean) -> <init>
    242:243:java.lang.Thread newThread(java.lang.Runnable) -> newThread
okhttp3.internal.Version -> okhttp3.internal.Version:
    23:23:void <init>() -> <init>
okhttp3.internal.cache.CacheInterceptor -> okhttp3.internal.cache.CacheInterceptor:
    48:49:void <init>(okhttp3.internal.cache.InternalCache) -> <init>
    162:214:okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response) -> cacheWritingResponse
    219:240:okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers) -> combine
    53:97:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
    263:265:boolean isContentSpecificHeader(java.lang.String) -> isContentSpecificHeader
    248:255:boolean isEndToEnd(java.lang.String) -> isEndToEnd
    148:149:okhttp3.Response stripBody(okhttp3.Response) -> stripBody
okhttp3.internal.cache.CacheInterceptor$1 -> okhttp3.internal.cache.CacheInterceptor$1:
    168:168:void <init>(okhttp3.internal.cache.CacheInterceptor,okio.BufferedSource,okhttp3.internal.cache.CacheRequest,okio.BufferedSink) -> <init>
    201:206:void close() -> close
    174:180:long read(okio.Buffer,long) -> read
    197:197:okio.Timeout timeout() -> timeout
okhttp3.internal.cache.CacheStrategy -> okhttp3.internal.cache.CacheStrategy:
    57:59:void <init>(okhttp3.Request,okhttp3.Response) -> <init>
    66:100:boolean isCacheable(okhttp3.Response,okhttp3.Request) -> isCacheable
okhttp3.internal.cache.CacheStrategy$Factory -> okhttp3.internal.cache.CacheStrategy$Factory:
    140:163:void <init>(long,okhttp3.Request,okhttp3.Response) -> <init>
    298:305:long cacheResponseAge() -> cacheResponseAge
    269:288:long computeFreshnessLifetime() -> computeFreshnessLifetime
    173:177:okhttp3.internal.cache.CacheStrategy get() -> get
    186:204:okhttp3.internal.cache.CacheStrategy getCandidate() -> getCandidate
    323:323:boolean hasConditions(okhttp3.Request) -> hasConditions
    314:314:boolean isFreshnessLifetimeHeuristic() -> isFreshnessLifetimeHeuristic
okhttp3.internal.cache.DiskLruCache -> okhttp3.internal.cache.DiskLruCache:
    87:94:void <clinit>() -> <clinit>
    196:205:void <init>(okhttp3.internal.io.FileSystem,java.io.File,int,int,long,java.util.concurrent.Executor) -> <init>
    650:651:void checkNotClosed() -> checkNotClosed
    666:668:void close() -> close
    535:537:void completeEdit(okhttp3.internal.cache.DiskLruCache$Editor,boolean) -> completeEdit
    269:262:okhttp3.internal.cache.DiskLruCache create(okhttp3.internal.io.FileSystem,java.io.File,int,int,long) -> create
    695:696:void delete() -> delete
    459:459:okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String) -> edit
    463:482:okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String,long) -> edit
    704:710:void evictAll() -> evictAll
    657:662:void flush() -> flush
    436:441:okhttp3.internal.cache.DiskLruCache$Snapshot get(java.lang.String) -> get
    504:504:java.io.File getDirectory() -> getDirectory
    511:511:long getMaxSize() -> getMaxSize
    211:249:void initialize() -> initialize
    646:646:boolean isClosed() -> isClosed
    600:601:boolean journalRebuildRequired() -> journalRebuildRequired
    315:322:okio.BufferedSink newJournalWriter() -> newJournalWriter
    369:382:void processJournal() -> processJournal
    276:310:void readJournal() -> readJournal
    326:328:void readJournalLine(java.lang.String) -> readJournalLine
    392:417:void rebuildJournal() -> rebuildJournal
    611:619:boolean remove(java.lang.String) -> remove
    623:638:boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry) -> removeEntry
    519:523:void setMaxSize(long) -> setMaxSize
    530:531:long size() -> size
    736:737:java.util.Iterator snapshots() -> snapshots
    683:687:void trimToSize() -> trimToSize
    713:715:void validateKey(java.lang.String) -> validateKey
okhttp3.internal.cache.DiskLruCache$1 -> okhttp3.internal.cache.DiskLruCache$1:
    169:169:void <init>(okhttp3.internal.cache.DiskLruCache) -> <init>
    171:191:void run() -> run
okhttp3.internal.cache.DiskLruCache$2 -> okhttp3.internal.cache.DiskLruCache$2:
    316:316:void <clinit>() -> <clinit>
    316:316:void <init>(okhttp3.internal.cache.DiskLruCache,okio.Sink) -> <init>
    319:319:void onException(java.io.IOException) -> onException
okhttp3.internal.cache.DiskLruCache$3 -> okhttp3.internal.cache.DiskLruCache$3:
    737:739:void <init>(okhttp3.internal.cache.DiskLruCache) -> <init>
    748:761:boolean hasNext() -> hasNext
    737:737:java.lang.Object next() -> next
    767:767:okhttp3.internal.cache.DiskLruCache$Snapshot next() -> next
    774:774:void remove() -> remove
okhttp3.internal.cache.DiskLruCache$Editor -> okhttp3.internal.cache.DiskLruCache$Editor:
    836:838:void <init>(okhttp3.internal.cache.DiskLruCache,okhttp3.internal.cache.DiskLruCache$Entry) -> <init>
    934:942:void abort() -> abort
    946:953:void abortUnlessCommitted() -> abortUnlessCommitted
    918:926:void commit() -> commit
    848:856:void detach() -> detach
    886:910:okio.Sink newSink(int) -> newSink
    865:877:okio.Source newSource(int) -> newSource
okhttp3.internal.cache.DiskLruCache$Editor$1 -> okhttp3.internal.cache.DiskLruCache$Editor$1:
    903:903:void <init>(okhttp3.internal.cache.DiskLruCache$Editor,okio.Sink) -> <init>
    905:907:void onException(java.io.IOException) -> onException
okhttp3.internal.cache.DiskLruCache$Entry -> okhttp3.internal.cache.DiskLruCache$Entry:
    974:989:void <init>(okhttp3.internal.cache.DiskLruCache,java.lang.String) -> <init>
    1016:1016:java.io.IOException invalidLengths(java.lang.String[]) -> invalidLengths
    995:996:void setLengths(java.lang.String[]) -> setLengths
    1025:1025:okhttp3.internal.cache.DiskLruCache$Snapshot snapshot() -> snapshot
    1010:1011:void writeLengths(okio.BufferedSink) -> writeLengths
okhttp3.internal.cache.DiskLruCache$Snapshot -> okhttp3.internal.cache.DiskLruCache$Snapshot:
    794:798:void <init>(okhttp3.internal.cache.DiskLruCache,java.lang.String,long,okio.Source[],long[]) -> <init>
    788:788:java.lang.String access$000(okhttp3.internal.cache.DiskLruCache$Snapshot) -> access$000
    824:825:void close() -> close
    810:810:okhttp3.internal.cache.DiskLruCache$Editor edit() -> edit
    820:820:long getLength(int) -> getLength
    815:815:okio.Source getSource(int) -> getSource
    802:802:java.lang.String key() -> key
okhttp3.internal.cache.FaultHidingSink -> okhttp3.internal.cache.FaultHidingSink:
    28:28:void <init>(okio.Sink) -> <init>
    55:60:void close() -> close
    45:50:void flush() -> flush
    32:40:void write(okio.Buffer,long) -> write
okhttp3.internal.cache2.FileOperator -> okhttp3.internal.cache2.FileOperator:
    39:40:void <init>(java.nio.channels.FileChannel) -> <init>
    63:60:void read(long,okio.Buffer,long) -> read
    45:45:void write(long,okio.Buffer,long) -> write
okhttp3.internal.cache2.Relay -> okhttp3.internal.cache2.Relay:
    45:46:void <clinit>() -> <clinit>
    107:113:void <init>(java.io.RandomAccessFile,okio.Source,long,okio.ByteString,long) -> <init>
    186:196:void commit(long) -> commit
    126:131:okhttp3.internal.cache2.Relay edit(java.io.File,okio.Source,okio.ByteString,long) -> edit
    203:203:boolean isClosed() -> isClosed
    207:207:okio.ByteString metadata() -> metadata
    216:219:okio.Source newSource() -> newSource
    144:151:okhttp3.internal.cache2.Relay read(java.io.File) -> read
    166:170:void writeHeader(okio.ByteString,long,long) -> writeHeader
    177:181:void writeMetadata(long) -> writeMetadata
okhttp3.internal.cache2.Relay$RelaySource -> okhttp3.internal.cache2.Relay$RelaySource:
    224:228:void <init>(okhttp3.internal.cache2.Relay) -> <init>
    344:354:void close() -> close
    252:252:long read(okio.Buffer,long) -> read
    340:340:okio.Timeout timeout() -> timeout
okhttp3.internal.connection.ConnectInterceptor -> okhttp3.internal.connection.ConnectInterceptor:
    31:32:void <init>(okhttp3.OkHttpClient) -> <init>
    36:45:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.connection.ConnectionSpecSelector -> okhttp3.internal.connection.ConnectionSpecSelector:
    45:47:void <init>(java.util.List) -> <init>
    58:74:okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket) -> configureSecureSocket
    93:127:boolean connectionFailed(java.io.IOException) -> connectionFailed
    138:139:boolean isFallbackPossible(javax.net.ssl.SSLSocket) -> isFallbackPossible
okhttp3.internal.connection.RealConnection -> okhttp3.internal.connection.RealConnection:
    118:120:void <init>(okhttp3.ConnectionPool,okhttp3.Route) -> <init>
    539:539:void cancel() -> cancel
    134:134:void connect(int,int,int,int,boolean,okhttp3.Call,okhttp3.EventListener) -> connect
    236:250:void connectSocket(int,int,okhttp3.Call,okhttp3.EventListener) -> connectSocket
    302:357:void connectTls(okhttp3.internal.connection.ConnectionSpecSelector) -> connectTls
    215:229:void connectTunnel(int,int,int,okhttp3.Call,okhttp3.EventListener) -> connectTunnel
    369:396:okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl) -> createTunnel
    426:446:okhttp3.Request createTunnelRequest() -> createTunnelRequest
    269:287:void establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector,int,okhttp3.Call,okhttp3.EventListener) -> establishProtocol
    591:591:okhttp3.Handshake handshake() -> handshake
    459:491:boolean isEligible(okhttp3.Address,okhttp3.Route) -> isEligible
    548:566:boolean isHealthy(boolean) -> isHealthy
    599:599:boolean isMultiplexed() -> isMultiplexed
    515:521:okhttp3.internal.http.HttpCodec newCodec(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,okhttp3.internal.connection.StreamAllocation) -> newCodec
    526:526:okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams(okhttp3.internal.connection.StreamAllocation) -> newWebSocketStreams
    585:587:void onSettings(okhttp3.internal.http2.Http2Connection) -> onSettings
    580:580:void onStream(okhttp3.internal.http2.Http2Stream) -> onStream
    603:603:okhttp3.Protocol protocol() -> protocol
    534:534:okhttp3.Route route() -> route
    543:543:java.net.Socket socket() -> socket
    292:298:void startHttp2(int) -> startHttp2
    500:506:boolean supportsUrl(okhttp3.HttpUrl) -> supportsUrl
    125:127:okhttp3.internal.connection.RealConnection testConnection(okhttp3.ConnectionPool,okhttp3.Route,java.net.Socket,long) -> testConnection
    607:614:java.lang.String toString() -> toString
okhttp3.internal.connection.RealConnection$1 -> okhttp3.internal.connection.RealConnection$1:
    526:526:void <init>(okhttp3.internal.connection.RealConnection,boolean,okio.BufferedSource,okio.BufferedSink,okhttp3.internal.connection.StreamAllocation) -> <init>
    528:528:void close() -> close
okhttp3.internal.connection.RouteDatabase -> okhttp3.internal.connection.RouteDatabase:
    28:29:void <init>() -> <init>
    38:39:void connected(okhttp3.Route) -> connected
    33:34:void failed(okhttp3.Route) -> failed
    43:43:boolean shouldPostpone(okhttp3.Route) -> shouldPostpone
okhttp3.internal.connection.RouteException -> okhttp3.internal.connection.RouteException:
    31:33:void <init>(java.io.IOException) -> <init>
    45:46:void addConnectException(java.io.IOException) -> addConnectException
    37:37:java.io.IOException getFirstConnectException() -> getFirstConnectException
    41:41:java.io.IOException getLastConnectException() -> getLastConnectException
okhttp3.internal.connection.RouteSelector -> okhttp3.internal.connection.RouteSelector:
    57:63:void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase,okhttp3.Call,okhttp3.EventListener) -> <init>
    113:119:void connectFailed(okhttp3.Route,java.io.IOException) -> connectFailed
    205:214:java.lang.String getHostString(java.net.InetSocketAddress) -> getHostString
    70:70:boolean hasNext() -> hasNext
    139:139:boolean hasNextProxy() -> hasNextProxy
    74:75:okhttp3.internal.connection.RouteSelector$Selection next() -> next
    144:145:java.net.Proxy nextProxy() -> nextProxy
    156:175:void resetNextInetSocketAddress(java.net.Proxy) -> resetNextInetSocketAddress
    126:134:void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy) -> resetNextProxy
okhttp3.internal.connection.RouteSelector$Selection -> okhttp3.internal.connection.RouteSelector$Selection:
    222:223:void <init>(java.util.List) -> <init>
    238:238:java.util.List getAll() -> getAll
    227:227:boolean hasNext() -> hasNext
    231:232:okhttp3.Route next() -> next
okhttp3.internal.connection.StreamAllocation -> okhttp3.internal.connection.StreamAllocation:
    96:102:void <init>(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.Call,okhttp3.EventListener,java.lang.Object) -> <init>
    476:476:void acquire(okhttp3.internal.connection.RealConnection,boolean) -> acquire
    415:419:void cancel() -> cancel
    329:331:okhttp3.internal.http.HttpCodec codec() -> codec
    343:343:okhttp3.internal.connection.RealConnection connection() -> connection
    388:406:java.net.Socket deallocate(boolean,boolean,boolean) -> deallocate
    167:196:okhttp3.internal.connection.RealConnection findConnection(int,int,int,int,boolean) -> findConnection
    135:143:okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,int,boolean,boolean) -> findHealthyConnection
    519:521:boolean hasMoreRoutes() -> hasMoreRoutes
    107:123:okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,boolean) -> newStream
    366:370:void noNewStreams() -> noNewStreams
    349:353:void release() -> release
    485:492:void release(okhttp3.internal.connection.RealConnection) -> release
    505:505:java.net.Socket releaseAndAcquire(okhttp3.internal.connection.RealConnection) -> releaseAndAcquire
    289:291:java.net.Socket releaseIfNoNewStreams() -> releaseIfNoNewStreams
    339:339:okhttp3.Route route() -> route
    335:335:okhttp3.internal.connection.RouteDatabase routeDatabase() -> routeDatabase
    432:462:void streamFailed(java.io.IOException) -> streamFailed
    297:313:void streamFinished(boolean,okhttp3.internal.http.HttpCodec,long,java.io.IOException) -> streamFinished
    525:526:java.lang.String toString() -> toString
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference -> okhttp3.internal.connection.StreamAllocation$StreamAllocationReference:
    537:538:void <init>(okhttp3.internal.connection.StreamAllocation,java.lang.Object) -> <init>
okhttp3.internal.http.BridgeInterceptor -> okhttp3.internal.http.BridgeInterceptor:
    43:44:void <init>(okhttp3.CookieJar) -> <init>
    118:126:java.lang.String cookieHeader(java.util.List) -> cookieHeader
    48:113:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.http.CallServerInterceptor -> okhttp3.internal.http.CallServerInterceptor:
    36:37:void <init>(boolean) -> <init>
    41:135:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.http.CallServerInterceptor$CountingSink -> okhttp3.internal.http.CallServerInterceptor$CountingSink:
    145:145:void <init>(okio.Sink) -> <init>
    149:150:void write(okio.Buffer,long) -> write
okhttp3.internal.http.HttpDate -> okhttp3.internal.http.HttpDate:
    37:71:void <clinit>() -> <clinit>
    117:117:void <init>() -> <init>
    114:114:java.lang.String format(java.util.Date) -> format
    76:108:java.util.Date parse(java.lang.String) -> parse
okhttp3.internal.http.HttpDate$1 -> okhttp3.internal.http.HttpDate$1:
    38:38:void <init>() -> <init>
    38:38:java.lang.Object initialValue() -> initialValue
    41:43:java.text.DateFormat initialValue() -> initialValue
okhttp3.internal.http.HttpHeaders -> okhttp3.internal.http.HttpHeaders:
    44:45:void <clinit>() -> <clinit>
    47:47:void <init>() -> <init>
    51:51:long contentLength(okhttp3.Response) -> contentLength
    55:55:long contentLength(okhttp3.Headers) -> contentLength
    324:338:boolean hasBody(okhttp3.Response) -> hasBody
    83:83:boolean hasVaryAll(okhttp3.Response) -> hasVaryAll
    90:90:boolean hasVaryAll(okhttp3.Headers) -> hasVaryAll
    185:232:void parseChallengeHeader(java.util.List,okio.Buffer) -> parseChallengeHeader
    169:173:java.util.List parseChallenges(okhttp3.Headers,java.lang.String) -> parseChallenges
    378:378:int parseSeconds(java.lang.String,int) -> parseSeconds
    270:270:java.lang.String readQuotedString(okio.Buffer) -> readQuotedString
    295:302:java.lang.String readToken(okio.Buffer) -> readToken
    313:318:void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers) -> receiveHeaders
    307:309:java.lang.String repeat(char,int) -> repeat
    257:259:int skipAll(okio.Buffer,byte) -> skipAll
    350:351:int skipUntil(java.lang.String,int,java.lang.String) -> skipUntil
    363:364:int skipWhitespace(java.lang.String,int) -> skipWhitespace
    241:247:boolean skipWhitespaceAndCommas(okio.Buffer) -> skipWhitespaceAndCommas
    61:61:long stringToLong(java.lang.String) -> stringToLong
    94:94:java.util.Set varyFields(okhttp3.Response) -> varyFields
    101:110:java.util.Set varyFields(okhttp3.Headers) -> varyFields
    124:126:okhttp3.Headers varyHeaders(okhttp3.Response) -> varyHeaders
    134:144:okhttp3.Headers varyHeaders(okhttp3.Headers,okhttp3.Headers) -> varyHeaders
    73:74:boolean varyMatches(okhttp3.Response,okhttp3.Headers,okhttp3.Request) -> varyMatches
okhttp3.internal.http.HttpMethod -> okhttp3.internal.http.HttpMethod:
    48:48:void <init>() -> <init>
    20:24:boolean invalidatesCache(java.lang.String) -> invalidatesCache
    36:36:boolean permitsRequestBody(java.lang.String) -> permitsRequestBody
    45:45:boolean redirectsToGet(java.lang.String) -> redirectsToGet
    40:40:boolean redirectsWithBody(java.lang.String) -> redirectsWithBody
    28:32:boolean requiresRequestBody(java.lang.String) -> requiresRequestBody
okhttp3.internal.http.RealInterceptorChain -> okhttp3.internal.http.RealInterceptorChain:
    52:63:void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection,int,okhttp3.Request,okhttp3.Call,okhttp3.EventListener,int,int,int) -> <init>
    109:109:okhttp3.Call call() -> call
    71:71:int connectTimeoutMillis() -> connectTimeoutMillis
    67:67:okhttp3.Connection connection() -> connection
    113:113:okhttp3.EventListener eventListener() -> eventListener
    105:105:okhttp3.internal.http.HttpCodec httpStream() -> httpStream
    121:121:okhttp3.Response proceed(okhttp3.Request) -> proceed
    126:126:okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection) -> proceed
    81:81:int readTimeoutMillis() -> readTimeoutMillis
    117:117:okhttp3.Request request() -> request
    101:101:okhttp3.internal.connection.StreamAllocation streamAllocation() -> streamAllocation
    75:76:okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit) -> withConnectTimeout
    85:86:okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit) -> withReadTimeout
    95:96:okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit) -> withWriteTimeout
    91:91:int writeTimeoutMillis() -> writeTimeoutMillis
okhttp3.internal.http.RealResponseBody -> okhttp3.internal.http.RealResponseBody:
    33:36:void <init>(java.lang.String,long,okio.BufferedSource) -> <init>
    44:44:long contentLength() -> contentLength
    40:40:okhttp3.MediaType contentType() -> contentType
    48:48:okio.BufferedSource source() -> source
okhttp3.internal.http.RequestLine -> okhttp3.internal.http.RequestLine:
    24:24:void <init>() -> <init>
    33:44:java.lang.String get(okhttp3.Request,java.net.Proxy$Type) -> get
    52:52:boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type) -> includeAuthorityInRequestLine
    60:62:java.lang.String requestPath(okhttp3.HttpUrl) -> requestPath
okhttp3.internal.http.RetryAndFollowUpInterceptor -> okhttp3.internal.http.RetryAndFollowUpInterceptor:
    73:75:void <init>(okhttp3.OkHttpClient,boolean) -> <init>
    88:90:void cancel() -> cancel
    202:210:okhttp3.Address createAddress(okhttp3.HttpUrl) -> createAddress
    278:277:okhttp3.Request followUpRequest(okhttp3.Response,okhttp3.Route) -> followUpRequest
    106:120:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
    94:94:boolean isCanceled() -> isCanceled
    241:260:boolean isRecoverable(java.io.IOException,boolean) -> isRecoverable
    221:233:boolean recover(java.io.IOException,okhttp3.internal.connection.StreamAllocation,boolean,okhttp3.Request) -> recover
    391:400:int retryAfter(okhttp3.Response,int) -> retryAfter
    411:414:boolean sameConnection(okhttp3.Response,okhttp3.HttpUrl) -> sameConnection
    98:98:void setCallStackTrace(java.lang.Object) -> setCallStackTrace
    102:102:okhttp3.internal.connection.StreamAllocation streamAllocation() -> streamAllocation
okhttp3.internal.http.StatusLine -> okhttp3.internal.http.StatusLine:
    34:37:void <init>(okhttp3.Protocol,int,java.lang.String) -> <init>
    41:41:okhttp3.internal.http.StatusLine get(okhttp3.Response) -> get
    51:69:okhttp3.internal.http.StatusLine parse(java.lang.String) -> parse
    97:103:java.lang.String toString() -> toString
okhttp3.internal.http1.Http1Codec -> okhttp3.internal.http1.Http1Codec:
    90:94:void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink) -> <init>
    113:114:void cancel() -> cancel
    98:108:okio.Sink createRequestBody(okhttp3.Request,long) -> createRequestBody
    268:271:void detachTimeout(okio.ForwardingTimeout) -> detachTimeout
    166:166:void finishRequest() -> finishRequest
    162:162:void flushRequest() -> flushRequest
    158:158:boolean isClosed() -> isClosed
    231:231:okio.Sink newChunkedSink() -> newChunkedSink
    249:249:okio.Source newChunkedSource(okhttp3.HttpUrl) -> newChunkedSource
    237:237:okio.Sink newFixedLengthSink(long) -> newFixedLengthSink
    243:243:okio.Source newFixedLengthSource(long) -> newFixedLengthSource
    255:255:okio.Source newUnknownLengthSource() -> newUnknownLengthSource
    134:153:okhttp3.ResponseBody openResponseBody(okhttp3.Response) -> openResponseBody
    215:216:java.lang.String readHeaderLine() -> readHeaderLine
    222:227:okhttp3.Headers readHeaders() -> readHeaders
    184:210:okhttp3.Response$Builder readResponseHeaders(boolean) -> readResponseHeaders
    171:171:void writeRequest(okhttp3.Headers,java.lang.String) -> writeRequest
    128:130:void writeRequestHeaders(okhttp3.Request) -> writeRequestHeaders
okhttp3.internal.http1.Http1Codec$AbstractSource -> okhttp3.internal.http1.Http1Codec$AbstractSource:
    352:355:void <init>(okhttp3.internal.http1.Http1Codec) -> <init>
    352:352:void <init>(okhttp3.internal.http1.Http1Codec,okhttp3.internal.http1.Http1Codec$1) -> <init>
    379:380:void endOfInput(boolean,java.io.IOException) -> endOfInput
    363:370:long read(okio.Buffer,long) -> read
    358:358:okio.Timeout timeout() -> timeout
okhttp3.internal.http1.Http1Codec$ChunkedSink -> okhttp3.internal.http1.Http1Codec$ChunkedSink:
    321:318:void <init>(okhttp3.internal.http1.Http1Codec) -> <init>
    344:349:void close() -> close
    339:341:void flush() -> flush
    325:325:okio.Timeout timeout() -> timeout
    329:329:void write(okio.Buffer,long) -> write
okhttp3.internal.http1.Http1Codec$ChunkedSource -> okhttp3.internal.http1.Http1Codec$ChunkedSource:
    439:440:void <init>(okhttp3.internal.http1.Http1Codec,okhttp3.HttpUrl) -> <init>
    486:490:void close() -> close
    445:444:long read(okio.Buffer,long) -> read
    465:476:void readChunkSize() -> readChunkSize
okhttp3.internal.http1.Http1Codec$FixedLengthSink -> okhttp3.internal.http1.Http1Codec$FixedLengthSink:
    280:281:void <init>(okhttp3.internal.http1.Http1Codec,long) -> <init>
    305:307:void close() -> close
    300:301:void flush() -> flush
    285:285:okio.Timeout timeout() -> timeout
    289:289:void write(okio.Buffer,long) -> write
okhttp3.internal.http1.Http1Codec$FixedLengthSource -> okhttp3.internal.http1.Http1Codec$FixedLengthSource:
    395:398:void <init>(okhttp3.internal.http1.Http1Codec,long) -> <init>
    422:428:void close() -> close
    404:403:long read(okio.Buffer,long) -> read
okhttp3.internal.http1.Http1Codec$UnknownLengthSource -> okhttp3.internal.http1.Http1Codec$UnknownLengthSource:
    498:498:void <init>(okhttp3.internal.http1.Http1Codec) -> <init>
    517:521:void close() -> close
    504:503:long read(okio.Buffer,long) -> read
okhttp3.internal.http2.ConnectionShutdownException -> okhttp3.internal.http2.ConnectionShutdownException:
    24:24:void <init>() -> <init>
okhttp3.internal.http2.ErrorCode -> okhttp3.internal.http2.ErrorCode:
    21:19:void <clinit>() -> <clinit>
    45:46:void <init>(java.lang.String,int,int) -> <init>
    50:51:okhttp3.internal.http2.ErrorCode fromHttp2(int) -> fromHttp2
    19:19:okhttp3.internal.http2.ErrorCode valueOf(java.lang.String) -> valueOf
    19:19:okhttp3.internal.http2.ErrorCode[] values() -> values
okhttp3.internal.http2.Header -> okhttp3.internal.http2.Header:
    25:37:void <clinit>() -> <clinit>
    48:48:void <init>(java.lang.String,java.lang.String) -> <init>
    52:52:void <init>(okio.ByteString,java.lang.String) -> <init>
    55:58:void <init>(okio.ByteString,okio.ByteString) -> <init>
    62:65:boolean equals(java.lang.Object) -> equals
    72:73:int hashCode() -> hashCode
    78:78:java.lang.String toString() -> toString
okhttp3.internal.http2.Hpack -> okhttp3.internal.http2.Hpack:
    47:354:void <clinit>() -> <clinit>
    111:111:void <init>() -> <init>
    596:599:okio.ByteString checkLowercase(okio.ByteString) -> checkLowercase
    357:363:java.util.Map nameToFirstIndex() -> nameToFirstIndex
okhttp3.internal.http2.Hpack$Reader -> okhttp3.internal.http2.Hpack$Reader:
    131:131:void <init>(int,okio.Source) -> <init>
    134:137:void <init>(int,int,okio.Source) -> <init>
    145:149:void adjustDynamicTableByteCount() -> adjustDynamicTableByteCount
    155:158:void clearDynamicTable() -> clearDynamicTable
    233:233:int dynamicTableIndex(int) -> dynamicTableIndex
    166:174:int evictToRecoverBytes(int) -> evictToRecoverBytes
    213:214:java.util.List getAndResetHeaderList() -> getAndResetHeaderList
    262:267:okio.ByteString getName(int) -> getName
    280:311:void insertIntoDynamicTable(int,okhttp3.internal.http2.Header) -> insertIntoDynamicTable
    275:275:boolean isStaticHeader(int) -> isStaticHeader
    141:141:int maxDynamicTableByteCount() -> maxDynamicTableByteCount
    315:315:int readByte() -> readByte
    342:349:okio.ByteString readByteString() -> readByteString
    184:187:void readHeaders() -> readHeaders
    219:225:void readIndexedHeader(int) -> readIndexedHeader
    328:328:int readInt(int,int) -> readInt
    250:252:void readLiteralHeaderWithIncrementalIndexingIndexedName(int) -> readLiteralHeaderWithIncrementalIndexingIndexedName
    256:258:void readLiteralHeaderWithIncrementalIndexingNewName() -> readLiteralHeaderWithIncrementalIndexingNewName
    237:239:void readLiteralHeaderWithoutIndexingIndexedName(int) -> readLiteralHeaderWithoutIndexingIndexedName
    243:245:void readLiteralHeaderWithoutIndexingNewName() -> readLiteralHeaderWithoutIndexingNewName
okhttp3.internal.http2.Hpack$Writer -> okhttp3.internal.http2.Hpack$Writer:
    397:397:void <init>(okio.Buffer) -> <init>
    400:404:void <init>(int,boolean,okio.Buffer) -> <init>
    581:585:void adjustDynamicTableByteCount() -> adjustDynamicTableByteCount
    408:411:void clearDynamicTable() -> clearDynamicTable
    419:428:int evictToRecoverBytes(int) -> evictToRecoverBytes
    434:455:void insertIntoDynamicTable(okhttp3.internal.http2.Header) -> insertIntoDynamicTable
    565:577:void setHeaderTableSizeSetting(int) -> setHeaderTableSizeSetting
    552:560:void writeByteString(okio.ByteString) -> writeByteString
    461:525:void writeHeaders(java.util.List) -> writeHeaders
    534:548:void writeInt(int,int,int) -> writeInt
okhttp3.internal.http2.Http2 -> okhttp3.internal.http2.Http2:
    25:101:void <clinit>() -> <clinit>
    105:105:void <init>() -> <init>
    158:156:java.lang.String formatFlags(byte,byte) -> formatFlags
    135:137:java.lang.String frameLog(boolean,int,int,byte,byte) -> frameLog
    109:109:java.lang.IllegalArgumentException illegalArgument(java.lang.String,java.lang.Object[]) -> illegalArgument
    113:113:java.io.IOException ioException(java.lang.String,java.lang.Object[]) -> ioException
okhttp3.internal.http2.Http2Codec -> okhttp3.internal.http2.Http2Codec:
    69:82:void <clinit>() -> <clinit>
    99:105:void <init>(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http2.Http2Connection) -> <init>
    192:192:void cancel() -> cancel
    109:109:okio.Sink createRequestBody(okhttp3.Request,long) -> createRequestBody
    127:127:void finishRequest() -> finishRequest
    123:123:void flushRequest() -> flushRequest
    140:154:java.util.List http2HeadersList(okhttp3.Request) -> http2HeadersList
    184:188:okhttp3.ResponseBody openResponseBody(okhttp3.Response) -> openResponseBody
    164:174:okhttp3.Response$Builder readHttp2HeadersList(okhttp3.Headers,okhttp3.Protocol) -> readHttp2HeadersList
    131:133:okhttp3.Response$Builder readResponseHeaders(boolean) -> readResponseHeaders
    113:119:void writeRequestHeaders(okhttp3.Request) -> writeRequestHeaders
okhttp3.internal.http2.Http2Codec$StreamFinishingSource -> okhttp3.internal.http2.Http2Codec$StreamFinishingSource:
    199:197:void <init>(okhttp3.internal.http2.Http2Codec,okio.Source) -> <init>
    217:218:void close() -> close
    222:224:void endOfInput(java.io.IOException) -> endOfInput
    205:212:long read(okio.Buffer,long) -> read
okhttp3.internal.http2.Http2Connection -> okhttp3.internal.http2.Http2Connection:
    61:83:void <clinit>() -> <clinit>
    138:175:void <init>(okhttp3.internal.http2.Http2Connection$Builder) -> <init>
    61:61:void access$000(okhttp3.internal.http2.Http2Connection) -> access$000
    61:61:java.util.concurrent.ExecutorService access$100() -> access$100
    61:61:java.util.concurrent.ScheduledExecutorService access$200(okhttp3.internal.http2.Http2Connection) -> access$200
    61:61:boolean access$302(okhttp3.internal.http2.Http2Connection,boolean) -> access$302
    407:410:void awaitPong() -> awaitPong
    442:442:void close() -> close
    449:460:void close(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode) -> close
    495:495:void failConnection() -> failConnection
    413:413:void flush() -> flush
    180:180:okhttp3.Protocol getProtocol() -> getProtocol
    191:191:okhttp3.internal.http2.Http2Stream getStream(int) -> getStream
    538:538:boolean isShutdown() -> isShutdown
    201:201:int maxConcurrentStreams() -> maxConcurrentStreams
    231:231:okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean) -> newStream
    242:265:okhttp3.internal.http2.Http2Stream newStream(int,java.util.List,boolean) -> newStream
    187:187:int openStreamCount() -> openStreamCount
    889:892:void pushDataLater(int,okio.BufferedSource,int,boolean) -> pushDataLater
    921:924:void pushExecutorExecute(okhttp3.internal.NamedRunnable) -> pushExecutorExecute
    864:864:void pushHeadersLater(int,java.util.List,boolean) -> pushHeadersLater
    834:840:void pushRequestLater(int,java.util.List) -> pushRequestLater
    910:910:void pushResetLater(int,okhttp3.internal.http2.ErrorCode) -> pushResetLater
    221:221:okhttp3.internal.http2.Http2Stream pushStream(int,java.util.List,boolean) -> pushStream
    195:197:okhttp3.internal.http2.Http2Stream removeStream(int) -> removeStream
    526:534:void setSettings(okhttp3.internal.http2.Settings) -> setSettings
    422:434:void shutdown(okhttp3.internal.http2.ErrorCode) -> shutdown
    505:505:void start() -> start
    514:521:void start(boolean) -> start
    205:210:void updateConnectionFlowControl(long) -> updateConnectionFlowControl
    294:318:void writeData(int,boolean,okio.Buffer,long) -> writeData
    382:395:void writePing(boolean,int,int) -> writePing
    401:402:void writePingAndAwaitPong() -> writePingAndAwaitPong
    276:276:void writeSynReply(int,boolean,java.util.List) -> writeSynReply
    342:342:void writeSynReset(int,okhttp3.internal.http2.ErrorCode) -> writeSynReset
    327:327:void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode) -> writeSynResetLater
    347:347:void writeWindowUpdateLater(int,long) -> writeWindowUpdateLater
okhttp3.internal.http2.Http2Connection$1 -> okhttp3.internal.http2.Http2Connection$1:
    327:327:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okhttp3.internal.http2.ErrorCode) -> <init>
    330:332:void execute() -> execute
okhttp3.internal.http2.Http2Connection$2 -> okhttp3.internal.http2.Http2Connection$2:
    348:348:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,long) -> <init>
    351:353:void execute() -> execute
okhttp3.internal.http2.Http2Connection$3 -> okhttp3.internal.http2.Http2Connection$3:
    842:842:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List) -> <init>
    844:850:void execute() -> execute
okhttp3.internal.http2.Http2Connection$4 -> okhttp3.internal.http2.Http2Connection$4:
    864:864:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List,boolean) -> <init>
    866:872:void execute() -> execute
okhttp3.internal.http2.Http2Connection$5 -> okhttp3.internal.http2.Http2Connection$5:
    893:893:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okio.Buffer,int,boolean) -> <init>
    896:901:void execute() -> execute
okhttp3.internal.http2.Http2Connection$6 -> okhttp3.internal.http2.Http2Connection$6:
    910:910:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okhttp3.internal.http2.ErrorCode) -> <init>
    912:915:void execute() -> execute
okhttp3.internal.http2.Http2Connection$Builder -> okhttp3.internal.http2.Http2Connection$Builder:
    555:556:void <init>(boolean) -> <init>
    589:589:okhttp3.internal.http2.Http2Connection build() -> build
    574:574:okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener) -> listener
    584:584:okhttp3.internal.http2.Http2Connection$Builder pingIntervalMillis(int) -> pingIntervalMillis
    579:579:okhttp3.internal.http2.Http2Connection$Builder pushObserver(okhttp3.internal.http2.PushObserver) -> pushObserver
    560:560:okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket) -> socket
    566:569:okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink) -> socket
okhttp3.internal.http2.Http2Connection$Listener -> okhttp3.internal.http2.Http2Connection$Listener:
    928:928:void <clinit>() -> <clinit>
    927:927:void <init>() -> <init>
okhttp3.internal.http2.Http2Connection$Listener$1 -> okhttp3.internal.http2.Http2Connection$Listener$1:
    928:928:void <init>() -> <init>
    930:930:void onStream(okhttp3.internal.http2.Http2Stream) -> onStream
okhttp3.internal.http2.Http2Connection$PingRunnable -> okhttp3.internal.http2.Http2Connection$PingRunnable:
    367:371:void <init>(okhttp3.internal.http2.Http2Connection,boolean,int,int) -> <init>
    375:375:void execute() -> execute
okhttp3.internal.http2.Http2Connection$ReaderRunnable -> okhttp3.internal.http2.Http2Connection$ReaderRunnable:
    600:602:void <init>(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Reader) -> <init>
    739:739:void applyAndAckSettings(okhttp3.internal.http2.Settings) -> applyAndAckSettings
    628:641:void data(boolean,int,okio.BufferedSource,int) -> data
    606:622:void execute() -> execute
    774:782:void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString) -> goAway
    647:686:void headers(boolean,int,int,java.util.List) -> headers
    759:766:void ping(boolean,int,int) -> ping
    816:816:void pushPromise(int,int,java.util.List) -> pushPromise
    694:700:void rstStream(int,okhttp3.internal.http2.ErrorCode) -> rstStream
    707:727:void settings(boolean,okhttp3.internal.http2.Settings) -> settings
    795:804:void windowUpdate(int,long) -> windowUpdate
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$1:
    671:671:void <init>(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],okhttp3.internal.http2.Http2Stream) -> <init>
    674:678:void execute() -> execute
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$2:
    722:722:void <init>(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[]) -> <init>
    724:724:void execute() -> execute
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$3:
    739:739:void <init>(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],okhttp3.internal.http2.Settings) -> <init>
    742:744:void execute() -> execute
okhttp3.internal.http2.Http2Reader -> okhttp3.internal.http2.Http2Reader:
    60:60:void <clinit>() -> <clinit>
    70:74:void <init>(okio.BufferedSource,boolean) -> <init>
    342:342:void close() -> close
    408:408:int lengthWithoutPadding(int,byte,short) -> lengthWithoutPadding
    95:113:boolean nextFrame(boolean,okhttp3.internal.http2.Http2Reader$Handler) -> nextFrame
    78:88:void readConnectionPreface(okhttp3.internal.http2.Http2Reader$Handler) -> readConnectionPreface
    211:202:void readData(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readData
    319:317:void readGoAway(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readGoAway
    189:197:java.util.List readHeaderBlock(int,short,byte,int) -> readHeaderBlock
    173:169:void readHeaders(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readHeaders
    399:401:int readMedium(okio.BufferedSource) -> readMedium
    309:307:void readPing(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readPing
    222:220:void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readPriority
    226:230:void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int) -> readPriority
    297:295:void readPushPromise(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readPushPromise
    237:235:void readRstStream(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readRstStream
    250:247:void readSettings(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readSettings
    336:335:void readWindowUpdate(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> readWindowUpdate
okhttp3.internal.http2.Http2Reader$ContinuationSource -> okhttp3.internal.http2.Http2Reader$ContinuationSource:
    359:360:void <init>(okio.BufferedSource) -> <init>
    364:374:long read(okio.Buffer,long) -> read
    386:393:void readContinuationHeader() -> readContinuationHeader
    379:379:okio.Timeout timeout() -> timeout
okhttp3.internal.http2.Http2Stream -> okhttp3.internal.http2.Http2Stream:
    82:83:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers) -> <init>
    37:37:java.util.Deque access$000(okhttp3.internal.http2.Http2Stream) -> access$000
    37:37:okhttp3.internal.http2.Header$Listener access$100(okhttp3.internal.http2.Http2Stream) -> access$100
    619:620:void addBytesToWriteWindow(long) -> addBytesToWriteWindow
    507:510:void cancelStreamIfNecessary() -> cancelStreamIfNecessary
    624:625:void checkOutNotClosed() -> checkOutNotClosed
    240:243:void close(okhttp3.internal.http2.ErrorCode) -> close
    260:269:boolean closeInternal(okhttp3.internal.http2.ErrorCode) -> closeInternal
    251:254:void closeLater(okhttp3.internal.http2.ErrorCode) -> closeLater
    138:138:okhttp3.internal.http2.Http2Connection getConnection() -> getConnection
    166:166:okhttp3.internal.http2.ErrorCode getErrorCode() -> getErrorCode
    105:105:int getId() -> getId
    227:231:okio.Sink getSink() -> getSink
    217:217:okio.Source getSource() -> getSource
    133:134:boolean isLocallyInitiated() -> isLocallyInitiated
    120:128:boolean isOpen() -> isOpen
    208:208:okio.Timeout readTimeout() -> readTimeout
    294:294:void receiveData(okio.BufferedSource,int) -> receiveData
    300:304:void receiveFin() -> receiveFin
    281:286:void receiveHeaders(java.util.List) -> receiveHeaders
    311:315:void receiveRstStream(okhttp3.internal.http2.ErrorCode) -> receiveRstStream
    318:322:void setHeadersListener(okhttp3.internal.http2.Header$Listener) -> setHeadersListener
    147:153:okhttp3.Headers takeHeaders() -> takeHeaders
    639:642:void waitForIo() -> waitForIo
    182:178:void writeHeaders(java.util.List,boolean) -> writeHeaders
    212:212:okio.Timeout writeTimeout() -> writeTimeout
okhttp3.internal.http2.Http2Stream$FramingSink -> okhttp3.internal.http2.Http2Stream$FramingSink:
    523:530:void <init>(okhttp3.internal.http2.Http2Stream) -> <init>
    593:595:void close() -> close
    553:566:void emitFrame(boolean) -> emitFrame
    578:580:void flush() -> flush
    588:588:okio.Timeout timeout() -> timeout
    541:543:void write(okio.Buffer,long) -> write
okhttp3.internal.http2.Http2Stream$FramingSource -> okhttp3.internal.http2.Http2Stream$FramingSource:
    348:349:void <init>(okhttp3.internal.http2.Http2Stream,long) -> <init>
    480:490:void close() -> close
    363:353:long read(okio.Buffer,long) -> read
    438:441:void receive(okio.BufferedSource,long) -> receive
    473:473:okio.Timeout timeout() -> timeout
    429:429:void updateConnectionFlowControl(long) -> updateConnectionFlowControl
okhttp3.internal.http2.Http2Stream$StreamTimeout -> okhttp3.internal.http2.Http2Stream$StreamTimeout:
    650:650:void <init>(okhttp3.internal.http2.Http2Stream) -> <init>
    664:664:void exitAndThrowIfTimedOut() -> exitAndThrowIfTimedOut
    656:658:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    652:652:void timedOut() -> timedOut
okhttp3.internal.http2.Http2Writer -> okhttp3.internal.http2.Http2Writer:
    47:47:void <clinit>() -> <clinit>
    57:62:void <init>(okio.BufferedSink,boolean) -> <init>
    77:77:void applyAndAckSettings(okhttp3.internal.http2.Settings) -> applyAndAckSettings
    278:280:void close() -> close
    66:66:void connectionPreface() -> connectionPreface
    170:170:void data(boolean,int,okio.Buffer,int) -> data
    178:180:void dataFrame(int,byte,okio.Buffer,int) -> dataFrame
    120:120:void flush() -> flush
    266:268:void frameHeader(int,int,byte,byte) -> frameHeader
    232:232:void goAway(int,okhttp3.internal.http2.ErrorCode,byte[]) -> goAway
    138:138:void headers(int,java.util.List) -> headers
    298:298:void headers(boolean,int,java.util.List) -> headers
    157:157:int maxDataLength() -> maxDataLength
    211:211:void ping(boolean,int,int) -> ping
    105:105:void pushPromise(int,int,java.util.List) -> pushPromise
    144:144:void rstStream(int,okhttp3.internal.http2.ErrorCode) -> rstStream
    186:186:void settings(okhttp3.internal.http2.Settings) -> settings
    132:132:void synReply(boolean,int,java.util.List) -> synReply
    126:126:void synStream(boolean,int,int,java.util.List) -> synStream
    252:252:void windowUpdate(int,long) -> windowUpdate
    290:293:void writeContinuationFrames(int,long) -> writeContinuationFrames
    283:285:void writeMedium(okio.BufferedSink,int) -> writeMedium
okhttp3.internal.http2.Huffman -> okhttp3.internal.http2.Huffman:
    37:79:void <clinit>() -> <clinit>
    87:88:void <init>() -> <init>
    173:192:void addCode(int,int,byte) -> addCode
    167:168:void buildTree() -> buildTree
    129:163:byte[] decode(byte[]) -> decode
    95:113:void encode(okio.ByteString,okio.BufferedSink) -> encode
    120:122:int encodedLength(okio.ByteString) -> encodedLength
    82:82:okhttp3.internal.http2.Huffman get() -> get
okhttp3.internal.http2.Huffman$Node -> okhttp3.internal.http2.Huffman$Node:
    208:211:void <init>() -> <init>
    220:224:void <init>(int,int) -> <init>
okhttp3.internal.http2.PushObserver -> okhttp3.internal.http2.PushObserver:
    76:76:void <clinit>() -> <clinit>
okhttp3.internal.http2.PushObserver$1 -> okhttp3.internal.http2.PushObserver$1:
    76:76:void <init>() -> <init>
    88:88:boolean onData(int,okio.BufferedSource,int,boolean) -> onData
okhttp3.internal.http2.Settings -> okhttp3.internal.http2.Settings:
    24:51:void <init>() -> <init>
    54:55:void clear() -> clear
    77:77:int get(int) -> get
    94:94:boolean getEnablePush(boolean) -> getEnablePush
    88:88:int getHeaderTableSize() -> getHeaderTableSize
    114:114:int getInitialWindowSize() -> getInitialWindowSize
    99:99:int getMaxConcurrentStreams(int) -> getMaxConcurrentStreams
    104:104:int getMaxFrameSize(int) -> getMaxFrameSize
    109:109:int getMaxHeaderListSize(int) -> getMaxHeaderListSize
    72:72:boolean isSet(int) -> isSet
    123:124:void merge(okhttp3.internal.http2.Settings) -> merge
    59:65:okhttp3.internal.http2.Settings set(int,int) -> set
    82:82:int size() -> size
okhttp3.internal.http2.StreamResetException -> okhttp3.internal.http2.StreamResetException:
    25:26:void <init>(okhttp3.internal.http2.ErrorCode) -> <init>
okhttp3.internal.huc.BufferedRequestBody -> okhttp3.internal.huc.BufferedRequestBody:
    35:36:void <init>(long) -> <init>
    40:40:long contentLength() -> contentLength
    49:56:okhttp3.Request prepareToSendRequest(okhttp3.Request) -> prepareToSendRequest
    60:60:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.internal.huc.DelegatingHttpsURLConnection -> okhttp3.internal.huc.DelegatingHttpsURLConnection:
    45:46:void <init>(java.net.HttpURLConnection) -> <init>
    192:192:void addRequestProperty(java.lang.String,java.lang.String) -> addRequestProperty
    89:90:void connect() -> connect
    94:94:void disconnect() -> disconnect
    130:130:boolean getAllowUserInteraction() -> getAllowUserInteraction
    60:61:java.lang.String getCipherSuite() -> getCipherSuite
    286:286:int getConnectTimeout() -> getConnectTimeout
    134:134:java.lang.Object getContent() -> getContent
    139:139:java.lang.Object getContent(java.lang.Class[]) -> getContent
    143:143:java.lang.String getContentEncoding() -> getContentEncoding
    147:147:int getContentLength() -> getContentLength
    152:152:long getContentLengthLong() -> getContentLengthLong
    156:156:java.lang.String getContentType() -> getContentType
    160:160:long getDate() -> getDate
    164:164:boolean getDefaultUseCaches() -> getDefaultUseCaches
    168:168:boolean getDoInput() -> getDoInput
    172:172:boolean getDoOutput() -> getDoOutput
    98:98:java.io.InputStream getErrorStream() -> getErrorStream
    176:176:long getExpiration() -> getExpiration
    180:180:java.lang.String getHeaderField(int) -> getHeaderField
    196:196:java.lang.String getHeaderField(java.lang.String) -> getHeaderField
    205:205:long getHeaderFieldDate(java.lang.String,long) -> getHeaderFieldDate
    209:209:int getHeaderFieldInt(java.lang.String,int) -> getHeaderFieldInt
    213:213:java.lang.String getHeaderFieldKey(int) -> getHeaderFieldKey
    201:201:long getHeaderFieldLong(java.lang.String,long) -> getHeaderFieldLong
    184:184:java.util.Map getHeaderFields() -> getHeaderFields
    217:217:long getIfModifiedSince() -> getIfModifiedSince
    221:221:java.io.InputStream getInputStream() -> getInputStream
    122:122:boolean getInstanceFollowRedirects() -> getInstanceFollowRedirects
    225:225:long getLastModified() -> getLastModified
    65:68:java.security.cert.Certificate[] getLocalCertificates() -> getLocalCertificates
    84:85:java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    229:229:java.io.OutputStream getOutputStream() -> getOutputStream
    79:80:java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    233:233:java.security.Permission getPermission() -> getPermission
    294:294:int getReadTimeout() -> getReadTimeout
    102:102:java.lang.String getRequestMethod() -> getRequestMethod
    188:188:java.util.Map getRequestProperties() -> getRequestProperties
    237:237:java.lang.String getRequestProperty(java.lang.String) -> getRequestProperty
    106:106:int getResponseCode() -> getResponseCode
    110:110:java.lang.String getResponseMessage() -> getResponseMessage
    72:75:java.security.cert.Certificate[] getServerCertificates() -> getServerCertificates
    241:241:java.net.URL getURL() -> getURL
    245:245:boolean getUseCaches() -> getUseCaches
    249:249:void setAllowUserInteraction(boolean) -> setAllowUserInteraction
    306:306:void setChunkedStreamingMode(int) -> setChunkedStreamingMode
    282:282:void setConnectTimeout(int) -> setConnectTimeout
    253:253:void setDefaultUseCaches(boolean) -> setDefaultUseCaches
    257:257:void setDoInput(boolean) -> setDoInput
    261:261:void setDoOutput(boolean) -> setDoOutput
    266:266:void setFixedLengthStreamingMode(long) -> setFixedLengthStreamingMode
    302:302:void setFixedLengthStreamingMode(int) -> setFixedLengthStreamingMode
    270:270:void setIfModifiedSince(long) -> setIfModifiedSince
    126:126:void setInstanceFollowRedirects(boolean) -> setInstanceFollowRedirects
    290:290:void setReadTimeout(int) -> setReadTimeout
    114:114:void setRequestMethod(java.lang.String) -> setRequestMethod
    274:274:void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
    278:278:void setUseCaches(boolean) -> setUseCaches
    298:298:java.lang.String toString() -> toString
    118:118:boolean usingProxy() -> usingProxy
okhttp3.internal.huc.OkHttpURLConnection -> okhttp3.internal.huc.OkHttpURLConnection:
    79:85:void <clinit>() -> <clinit>
    112:113:void <init>(java.net.URL,okhttp3.OkHttpClient) -> <init>
    117:118:void <init>(java.net.URL,okhttp3.OkHttpClient,okhttp3.internal.URLFilter) -> <init>
    74:74:java.lang.Object access$000(okhttp3.internal.huc.OkHttpURLConnection) -> access$000
    74:74:java.net.URL access$102(okhttp3.internal.huc.OkHttpURLConnection,java.net.URL) -> access$102
    542:543:void addRequestProperty(java.lang.String,java.lang.String) -> addRequestProperty
    332:386:okhttp3.Call buildCall() -> buildCall
    122:140:void connect() -> connect
    417:418:java.lang.String defaultUserAgent() -> defaultUserAgent
    145:148:void disconnect() -> disconnect
    318:318:int getConnectTimeout() -> getConnectTimeout
    157:159:java.io.InputStream getErrorStream() -> getErrorStream
    198:200:java.lang.String getHeaderField(int) -> getHeaderField
    213:214:java.lang.String getHeaderField(java.lang.String) -> getHeaderField
    222:224:java.lang.String getHeaderFieldKey(int) -> getHeaderFieldKey
    232:235:java.util.Map getHeaderFields() -> getHeaderFields
    168:176:okhttp3.Headers getHeaders() -> getHeaders
    249:250:java.io.InputStream getInputStream() -> getInputStream
    314:314:boolean getInstanceFollowRedirects() -> getInstanceFollowRedirects
    263:265:java.io.OutputStream getOutputStream() -> getOutputStream
    283:293:java.security.Permission getPermission() -> getPermission
    328:328:int getReadTimeout() -> getReadTimeout
    240:241:java.util.Map getRequestProperties() -> getRequestProperties
    298:298:java.lang.String getRequestProperty(java.lang.String) -> getRequestProperty
    444:450:okhttp3.Response getResponse(boolean) -> getResponse
    509:509:int getResponseCode() -> getResponseCode
    505:505:java.lang.String getResponseMessage() -> getResponseMessage
    581:584:void onFailure(okhttp3.Call,java.io.IOException) -> onFailure
    588:593:void onResponse(okhttp3.Call,okhttp3.Response) -> onResponse
    614:614:java.io.IOException propagate(java.lang.Throwable) -> propagate
    180:189:java.lang.String responseSourceHeader(okhttp3.Response) -> responseSourceHeader
    302:304:void setConnectTimeout(int) -> setConnectTimeout
    569:569:void setFixedLengthStreamingMode(int) -> setFixedLengthStreamingMode
    573:573:void setFixedLengthStreamingMode(long) -> setFixedLengthStreamingMode
    533:537:void setIfModifiedSince(long) -> setIfModifiedSince
    308:310:void setInstanceFollowRedirects(boolean) -> setInstanceFollowRedirects
    322:324:void setReadTimeout(int) -> setReadTimeout
    562:563:void setRequestMethod(java.lang.String) -> setRequestMethod
    513:514:void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
    423:434:java.lang.String toHumanReadableAscii(java.lang.String) -> toHumanReadableAscii
    499:501:boolean usingProxy() -> usingProxy
okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor -> okhttp3.internal.huc.OkHttpURLConnection$NetworkInterceptor:
    625:625:void <init>(okhttp3.internal.huc.OkHttpURLConnection) -> <init>
    637:658:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
    630:633:void proceed() -> proceed
okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException -> okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException:
    597:597:void <clinit>() -> <clinit>
    608:608:void <init>(java.lang.Throwable) -> <init>
okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException$1 -> okhttp3.internal.huc.OkHttpURLConnection$UnexpectedException$1:
    597:597:void <init>() -> <init>
    600:602:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.huc.OkHttpsURLConnection -> okhttp3.internal.huc.OkHttpsURLConnection:
    30:30:void <init>(java.net.URL,okhttp3.OkHttpClient) -> <init>
    34:34:void <init>(java.net.URL,okhttp3.OkHttpClient,okhttp3.internal.URLFilter) -> <init>
    38:39:void <init>(okhttp3.internal.huc.OkHttpURLConnection) -> <init>
    26:26:void addRequestProperty(java.lang.String,java.lang.String) -> addRequestProperty
    26:26:void connect() -> connect
    26:26:void disconnect() -> disconnect
    26:26:boolean getAllowUserInteraction() -> getAllowUserInteraction
    26:26:java.lang.String getCipherSuite() -> getCipherSuite
    26:26:int getConnectTimeout() -> getConnectTimeout
    26:26:java.lang.Object getContent() -> getContent
    26:26:java.lang.Object getContent(java.lang.Class[]) -> getContent
    26:26:java.lang.String getContentEncoding() -> getContentEncoding
    26:26:int getContentLength() -> getContentLength
    26:26:long getContentLengthLong() -> getContentLengthLong
    26:26:java.lang.String getContentType() -> getContentType
    26:26:long getDate() -> getDate
    26:26:boolean getDefaultUseCaches() -> getDefaultUseCaches
    26:26:boolean getDoInput() -> getDoInput
    26:26:boolean getDoOutput() -> getDoOutput
    26:26:java.io.InputStream getErrorStream() -> getErrorStream
    26:26:long getExpiration() -> getExpiration
    26:26:java.lang.String getHeaderField(int) -> getHeaderField
    26:26:java.lang.String getHeaderField(java.lang.String) -> getHeaderField
    26:26:long getHeaderFieldDate(java.lang.String,long) -> getHeaderFieldDate
    26:26:int getHeaderFieldInt(java.lang.String,int) -> getHeaderFieldInt
    26:26:java.lang.String getHeaderFieldKey(int) -> getHeaderFieldKey
    26:26:long getHeaderFieldLong(java.lang.String,long) -> getHeaderFieldLong
    26:26:java.util.Map getHeaderFields() -> getHeaderFields
    57:57:javax.net.ssl.HostnameVerifier getHostnameVerifier() -> getHostnameVerifier
    26:26:long getIfModifiedSince() -> getIfModifiedSince
    26:26:java.io.InputStream getInputStream() -> getInputStream
    26:26:boolean getInstanceFollowRedirects() -> getInstanceFollowRedirects
    26:26:long getLastModified() -> getLastModified
    26:26:java.security.cert.Certificate[] getLocalCertificates() -> getLocalCertificates
    26:26:java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    26:26:java.io.OutputStream getOutputStream() -> getOutputStream
    26:26:java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    26:26:java.security.Permission getPermission() -> getPermission
    26:26:int getReadTimeout() -> getReadTimeout
    26:26:java.lang.String getRequestMethod() -> getRequestMethod
    26:26:java.util.Map getRequestProperties() -> getRequestProperties
    26:26:java.lang.String getRequestProperty(java.lang.String) -> getRequestProperty
    26:26:int getResponseCode() -> getResponseCode
    26:26:java.lang.String getResponseMessage() -> getResponseMessage
    71:71:javax.net.ssl.SSLSocketFactory getSSLSocketFactory() -> getSSLSocketFactory
    26:26:java.security.cert.Certificate[] getServerCertificates() -> getServerCertificates
    26:26:java.net.URL getURL() -> getURL
    26:26:boolean getUseCaches() -> getUseCaches
    43:44:okhttp3.Handshake handshake() -> handshake
    26:26:void setAllowUserInteraction(boolean) -> setAllowUserInteraction
    26:26:void setChunkedStreamingMode(int) -> setChunkedStreamingMode
    26:26:void setConnectTimeout(int) -> setConnectTimeout
    26:26:void setDefaultUseCaches(boolean) -> setDefaultUseCaches
    26:26:void setDoInput(boolean) -> setDoInput
    26:26:void setDoOutput(boolean) -> setDoOutput
    26:26:void setFixedLengthStreamingMode(int) -> setFixedLengthStreamingMode
    26:26:void setFixedLengthStreamingMode(long) -> setFixedLengthStreamingMode
    51:53:void setHostnameVerifier(javax.net.ssl.HostnameVerifier) -> setHostnameVerifier
    26:26:void setIfModifiedSince(long) -> setIfModifiedSince
    26:26:void setInstanceFollowRedirects(boolean) -> setInstanceFollowRedirects
    26:26:void setReadTimeout(int) -> setReadTimeout
    26:26:void setRequestMethod(java.lang.String) -> setRequestMethod
    26:26:void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
    65:62:void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory) -> setSSLSocketFactory
    26:26:void setUseCaches(boolean) -> setUseCaches
    26:26:java.lang.String toString() -> toString
    26:26:boolean usingProxy() -> usingProxy
okhttp3.internal.huc.OutputStreamRequestBody -> okhttp3.internal.huc.OutputStreamRequestBody:
    35:35:void <init>() -> <init>
    101:101:long contentLength() -> contentLength
    42:47:void initOutputStream(okio.BufferedSink,long) -> initOutputStream
    97:97:boolean isClosed() -> isClosed
    89:89:java.io.OutputStream outputStream() -> outputStream
    93:93:okio.Timeout timeout() -> timeout
okhttp3.internal.huc.OutputStreamRequestBody$1 -> okhttp3.internal.huc.OutputStreamRequestBody$1:
    47:47:void <init>(okhttp3.internal.huc.OutputStreamRequestBody,long,okio.BufferedSink) -> <init>
    76:83:void close() -> close
    71:72:void flush() -> flush
    51:51:void write(int) -> write
    55:55:void write(byte[],int,int) -> write
okhttp3.internal.huc.StreamedRequestBody -> okhttp3.internal.huc.StreamedRequestBody:
    32:33:void <init>(long) -> <init>
    37:39:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.internal.io.FileSystem -> okhttp3.internal.io.FileSystem:
    42:42:void <clinit>() -> <clinit>
okhttp3.internal.io.FileSystem$1 -> okhttp3.internal.io.FileSystem$1:
    42:42:void <init>() -> <init>
    59:63:okio.Sink appendingSink(java.io.File) -> appendingSink
    69:70:void delete(java.io.File) -> delete
    90:92:void deleteContents(java.io.File) -> deleteContents
    75:75:boolean exists(java.io.File) -> exists
    83:85:void rename(java.io.File,java.io.File) -> rename
    49:53:okio.Sink sink(java.io.File) -> sink
    79:79:long size(java.io.File) -> size
    44:44:okio.Source source(java.io.File) -> source
okhttp3.internal.platform.AndroidPlatform -> okhttp3.internal.platform.AndroidPlatform:
    62:67:void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod) -> <init>
    197:200:boolean api23IsCleartextTrafficPermitted(java.lang.String,java.lang.Class,java.lang.Object) -> api23IsCleartextTrafficPermitted
    185:189:boolean api24IsCleartextTrafficPermitted(java.lang.String,java.lang.Class,java.lang.Object) -> api24IsCleartextTrafficPermitted
    223:230:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> buildCertificateChainCleaner
    239:260:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
    275:280:okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager) -> buildTrustRootIndex
    122:129:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    73:76:void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> connectSocket
    436:454:javax.net.ssl.SSLContext getSSLContext() -> getSSLContext
    134:138:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    158:158:java.lang.Object getStackTraceForCloseable(java.lang.String) -> getStackTraceForCloseable
    171:176:boolean isCleartextTrafficPermitted(java.lang.String) -> isCleartextTrafficPermitted
    143:151:void log(int,java.lang.String,java.lang.Throwable) -> log
    162:165:void logCloseableLeak(java.lang.String,java.lang.Object) -> logCloseableLeak
    210:214:boolean supportsAlpn() -> supportsAlpn
    97:115:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner -> okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner:
    293:295:void <init>(java.lang.Object,java.lang.reflect.Method) -> <init>
    302:308:java.util.List clean(java.util.List,java.lang.String) -> clean
    315:315:boolean equals(java.lang.Object) -> equals
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex -> okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex:
    395:397:void <init>(javax.net.ssl.X509TrustManager,java.lang.reflect.Method) -> <init>
    419:424:boolean equals(java.lang.Object) -> equals
    402:408:java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> findByIssuerAndSignature
    429:429:int hashCode() -> hashCode
okhttp3.internal.platform.AndroidPlatform$CloseGuard -> okhttp3.internal.platform.AndroidPlatform$CloseGuard:
    333:336:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
    340:343:java.lang.Object createAndOpen(java.lang.String) -> createAndOpen
    369:378:okhttp3.internal.platform.AndroidPlatform$CloseGuard get() -> get
    355:355:boolean warnIfOpen(java.lang.Object) -> warnIfOpen
okhttp3.internal.platform.ConscryptPlatform -> okhttp3.internal.platform.ConscryptPlatform:
    35:35:void <init>() -> <init>
    104:110:okhttp3.internal.platform.ConscryptPlatform buildIfSupported() -> buildIfSupported
    118:119:void configureSslSocketFactory(javax.net.ssl.SSLSocketFactory) -> configureSslSocketFactory
    65:76:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    39:39:java.security.Provider getProvider() -> getProvider
    90:96:javax.net.ssl.SSLContext getSSLContext() -> getSSLContext
    81:84:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    43:58:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.Jdk9Platform -> okhttp3.internal.platform.Jdk9Platform:
    37:39:void <init>(java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
    88:92:okhttp3.internal.platform.Jdk9Platform buildIfSupported() -> buildIfSupported
    46:55:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    62:72:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    81:81:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.JdkWithJettyBootPlatform -> okhttp3.internal.platform.JdkWithJettyBootPlatform:
    41:46:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class) -> <init>
    64:66:void afterHandshake(javax.net.ssl.SSLSocket) -> afterHandshake
    89:96:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
    51:58:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    72:81:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider -> okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider:
    116:117:void <init>(java.util.List) -> <init>
    121:148:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
okhttp3.internal.platform.OptionalMethod -> okhttp3.internal.platform.OptionalMethod:
    45:48:void <init>(java.lang.Class,java.lang.String,java.lang.Class[]) -> <init>
    148:152:java.lang.reflect.Method getMethod(java.lang.Class) -> getMethod
    164:165:java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getPublicMethod
    106:108:java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> invoke
    66:71:java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[]) -> invokeOptional
    86:94:java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[]) -> invokeOptionalWithoutCheckedException
    129:137:java.lang.Object invokeWithoutCheckedException(java.lang.Object,java.lang.Object[]) -> invokeWithoutCheckedException
    55:55:boolean isSupported(java.lang.Object) -> isSupported
okhttp3.internal.platform.Platform -> okhttp3.internal.platform.Platform:
    78:81:void <clinit>() -> <clinit>
    77:77:void <init>() -> <init>
    162:166:java.util.List alpnProtocolNames(java.util.List) -> alpnProtocolNames
    172:172:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> buildCertificateChainCleaner
    176:182:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.SSLSocketFactory) -> buildCertificateChainCleaner
    288:288:okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager) -> buildTrustRootIndex
    236:243:byte[] concatLengthPrefixed(java.util.List) -> concatLengthPrefixed
    129:129:void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> connectSocket
    201:228:okhttp3.internal.platform.Platform findPlatform() -> findPlatform
    84:84:okhttp3.internal.platform.Platform get() -> get
    270:283:javax.net.ssl.SSLContext getSSLContext() -> getSSLContext
    147:148:java.lang.Object getStackTraceForCloseable(java.lang.String) -> getStackTraceForCloseable
    190:196:boolean isConscryptPreferred() -> isConscryptPreferred
    133:134:void log(int,java.lang.String,java.lang.Throwable) -> log
    155:158:void logCloseableLeak(java.lang.String,java.lang.Object) -> logCloseableLeak
    247:263:java.lang.Object readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String) -> readFieldOrNull
    295:295:java.lang.String toString() -> toString
    97:100:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.proxy.NullProxySelector -> okhttp3.internal.proxy.NullProxySelector:
    29:29:void <init>() -> <init>
    34:32:java.util.List select(java.net.URI) -> select
okhttp3.internal.publicsuffix.PublicSuffixDatabase -> okhttp3.internal.publicsuffix.PublicSuffixDatabase:
    39:45:void <clinit>() -> <clinit>
    36:51:void <init>() -> <init>
    199:274:java.lang.String binarySearchBytes(byte[],byte[][],int) -> binarySearchBytes
    111:126:java.lang.String[] findMatchingRule(java.lang.String[]) -> findMatchingRule
    61:61:okhttp3.internal.publicsuffix.PublicSuffixDatabase get() -> get
    83:80:java.lang.String getEffectiveTldPlusOne(java.lang.String) -> getEffectiveTldPlusOne
    313:326:void readTheList() -> readTheList
    292:304:void readTheListUninterruptibly() -> readTheListUninterruptibly
    339:342:void setListBytes(byte[],byte[]) -> setListBytes
okhttp3.internal.tls.BasicCertificateChainCleaner -> okhttp3.internal.tls.BasicCertificateChainCleaner:
    43:44:void <init>(okhttp3.internal.tls.TrustRootIndex) -> <init>
    56:101:java.util.List clean(java.util.List,java.lang.String) -> clean
    121:122:boolean equals(java.lang.Object) -> equals
    116:116:int hashCode() -> hashCode
    106:108:boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate) -> verifySignature
okhttp3.internal.tls.BasicTrustRootIndex -> okhttp3.internal.tls.BasicTrustRootIndex:
    30:39:void <init>(java.security.cert.X509Certificate[]) -> <init>
    62:63:boolean equals(java.lang.Object) -> equals
    44:51:java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> findByIssuerAndSignature
    68:68:int hashCode() -> hashCode
okhttp3.internal.tls.CertificateChainCleaner -> okhttp3.internal.tls.CertificateChainCleaner:
    36:36:void <init>() -> <init>
    41:41:okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager) -> get
    45:45:okhttp3.internal.tls.CertificateChainCleaner get(java.security.cert.X509Certificate[]) -> get
okhttp3.internal.tls.DistinguishedNameParser -> okhttp3.internal.tls.DistinguishedNameParser:
    38:43:void <init>(javax.security.auth.x500.X500Principal) -> <init>
    187:220:java.lang.String escapedAV() -> escapedAV
    350:402:java.lang.String findMostSpecific(java.lang.String) -> findMostSpecific
    311:312:int getByte(int) -> getByte
    232:234:char getEscaped() -> getEscaped
    263:291:char getUTF8() -> getUTF8
    137:139:java.lang.String hexAV() -> hexAV
    50:66:java.lang.String nextAT() -> nextAT
    104:110:java.lang.String quotedAV() -> quotedAV
okhttp3.internal.tls.OkHostnameVerifier -> okhttp3.internal.tls.OkHostnameVerifier:
    37:37:void <clinit>() -> <clinit>
    42:42:void <init>() -> <init>
    85:89:java.util.List allSubjectAltNames(java.security.cert.X509Certificate) -> allSubjectAltNames
    94:118:java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int) -> getSubjectAltNames
    48:49:boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    56:58:boolean verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    74:77:boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate) -> verifyHostname
    132:208:boolean verifyHostname(java.lang.String,java.lang.String) -> verifyHostname
    63:65:boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate) -> verifyIpAddress
okhttp3.internal.ws.RealWebSocket -> okhttp3.internal.ws.RealWebSocket:
    57:57:void <clinit>() -> <clinit>
    143:145:void <init>(okhttp3.Request,okhttp3.WebSocketListener,java.util.Random,long) -> <init>
    296:296:void awaitTermination(int,java.util.concurrent.TimeUnit) -> awaitTermination
    177:177:void cancel() -> cancel
    227:229:void checkResponse(okhttp3.Response) -> checkResponse
    411:411:boolean close(int,java.lang.String) -> close
    415:425:boolean close(int,java.lang.String,long) -> close
    181:193:void connect(okhttp3.OkHttpClient) -> connect
    561:568:void failWebSocket(java.lang.Exception,okhttp3.Response) -> failWebSocket
    254:265:void initReaderAndWriter(java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams) -> initReaderAndWriter
    272:274:void loopReader() -> loopReader
    349:346:void onReadClose(int,java.lang.String) -> onReadClose
    323:323:void onReadMessage(java.lang.String) -> onReadMessage
    327:327:void onReadMessage(okio.ByteString) -> onReadMessage
    332:332:void onReadPing(okio.ByteString) -> onReadPing
    341:343:void onReadPong(okio.ByteString) -> onReadPong
    403:403:boolean pong(okio.ByteString) -> pong
    284:287:boolean processNextFrame() -> processNextFrame
    173:173:long queueSize() -> queueSize
    315:315:int receivedPingCount() -> receivedPingCount
    319:319:int receivedPongCount() -> receivedPongCount
    169:169:okhttp3.Request request() -> request
    439:440:void runWriter() -> runWriter
    376:375:boolean send(java.lang.String) -> send
    381:380:boolean send(okio.ByteString) -> send
    386:386:boolean send(okio.ByteString,int) -> send
    311:311:int sentPingCount() -> sentPingCount
    303:307:void tearDown() -> tearDown
    465:490:boolean writeOneFrame() -> writeOneFrame
    537:543:void writePingFrame() -> writePingFrame
okhttp3.internal.ws.RealWebSocket$1 -> okhttp3.internal.ws.RealWebSocket$1:
    156:156:void <init>(okhttp3.internal.ws.RealWebSocket) -> <init>
    159:162:void run() -> run
okhttp3.internal.ws.RealWebSocket$2 -> okhttp3.internal.ws.RealWebSocket$2:
    193:193:void <init>(okhttp3.internal.ws.RealWebSocket,okhttp3.Request) -> <init>
    221:221:void onFailure(okhttp3.Call,java.io.IOException) -> onFailure
    196:199:void onResponse(okhttp3.Call,okhttp3.Response) -> onResponse
okhttp3.internal.ws.RealWebSocket$CancelRunnable -> okhttp3.internal.ws.RealWebSocket$CancelRunnable:
    611:611:void <init>(okhttp3.internal.ws.RealWebSocket) -> <init>
    613:613:void run() -> run
okhttp3.internal.ws.RealWebSocket$Close -> okhttp3.internal.ws.RealWebSocket$Close:
    592:595:void <init>(int,okio.ByteString,long) -> <init>
okhttp3.internal.ws.RealWebSocket$Message -> okhttp3.internal.ws.RealWebSocket$Message:
    581:583:void <init>(int,okio.ByteString) -> <init>
okhttp3.internal.ws.RealWebSocket$PingRunnable -> okhttp3.internal.ws.RealWebSocket$PingRunnable:
    526:526:void <init>(okhttp3.internal.ws.RealWebSocket) -> <init>
    530:530:void run() -> run
okhttp3.internal.ws.RealWebSocket$Streams -> okhttp3.internal.ws.RealWebSocket$Streams:
    604:607:void <init>(boolean,okio.BufferedSource,okio.BufferedSink) -> <init>
okhttp3.internal.ws.WebSocketProtocol -> okhttp3.internal.ws.WebSocketProtocol:
    126:127:void <init>() -> <init>
    123:123:java.lang.String acceptHeader(java.lang.String) -> acceptHeader
    111:109:java.lang.String closeCodeExceptionMessage(int) -> closeCodeExceptionMessage
    97:104:void toggleMask(okio.Buffer$UnsafeCursor,byte[]) -> toggleMask
    118:119:void validateCloseCode(int) -> validateCloseCode
okhttp3.internal.ws.WebSocketReader -> okhttp3.internal.ws.WebSocketReader:
    78:79:void <init>(boolean,okio.BufferedSource,okhttp3.internal.ws.WebSocketReader$FrameCallback) -> <init>
    101:105:void processNextFrame() -> processNextFrame
    172:195:void readControlFrame() -> readControlFrame
    110:110:void readHeader() -> readHeader
    243:243:void readMessage() -> readMessage
    211:221:void readMessageFrame() -> readMessageFrame
    227:232:void readUntilNonControlFrame() -> readUntilNonControlFrame
okhttp3.internal.ws.WebSocketWriter -> okhttp3.internal.ws.WebSocketWriter:
    61:62:void <init>(boolean,okio.BufferedSink,java.util.Random) -> <init>
    154:155:okio.Sink newMessageSink(int,long) -> newMessageSink
    92:108:void writeClose(int,okio.ByteString) -> writeClose
    113:113:void writeControlFrame(int,okio.ByteString) -> writeControlFrame
    170:170:void writeMessageFrame(int,long,boolean,boolean) -> writeMessageFrame
    76:76:void writePing(okio.ByteString) -> writePing
    81:81:void writePong(okio.ByteString) -> writePong
okhttp3.internal.ws.WebSocketWriter$FrameSink -> okhttp3.internal.ws.WebSocketWriter$FrameSink:
    215:215:void <init>(okhttp3.internal.ws.WebSocketWriter) -> <init>
    251:251:void close() -> close
    239:239:void flush() -> flush
    246:246:okio.Timeout timeout() -> timeout
    222:222:void write(okio.Buffer,long) -> write
okio.AsyncTimeout -> okio.AsyncTimeout:
    50:51:void <clinit>() -> <clinit>
    41:41:void <init>() -> <init>
    342:367:okio.AsyncTimeout awaitTimeout() -> awaitTimeout
    128:137:boolean cancelScheduledTimeout(okio.AsyncTimeout) -> cancelScheduledTimeout
    73:73:void enter() -> enter
    120:122:boolean exit() -> exit
    274:275:void exit(boolean) -> exit
    284:285:java.io.IOException exit(java.io.IOException) -> exit
    294:296:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    145:145:long remainingNanos(long) -> remainingNanos
    86:101:void scheduleTimeout(okio.AsyncTimeout,long,boolean) -> scheduleTimeout
    160:160:okio.Sink sink(okio.Sink) -> sink
    232:232:okio.Source source(okio.Source) -> source
okio.AsyncTimeout$1 -> okio.AsyncTimeout$1:
    160:160:void <init>(okio.AsyncTimeout,okio.Sink) -> <init>
    206:213:void close() -> close
    193:200:void flush() -> flush
    218:218:okio.Timeout timeout() -> timeout
    222:222:java.lang.String toString() -> toString
    162:186:void write(okio.Buffer,long) -> write
okio.AsyncTimeout$2 -> okio.AsyncTimeout$2:
    232:232:void <init>(okio.AsyncTimeout,okio.Source) -> <init>
    250:255:void close() -> close
    235:243:long read(okio.Buffer,long) -> read
    260:260:okio.Timeout timeout() -> timeout
    264:264:java.lang.String toString() -> toString
okio.AsyncTimeout$Watchdog -> okio.AsyncTimeout$Watchdog:
    303:304:void <init>() -> <init>
    311:323:void run() -> run
okio.Base64 -> okio.Base64:
    110:110:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    31:106:byte[] decode(java.lang.String) -> decode
    125:125:java.lang.String encode(byte[]) -> encode
    133:159:java.lang.String encode(byte[],byte[]) -> encode
okio.Buffer -> okio.Buffer:
    55:55:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    922:924:void clear() -> clear
    54:54:java.lang.Object clone() -> clone
    1806:1814:okio.Buffer clone() -> clone
    267:273:long completeSegmentByteCount() -> completeSegmentByteCount
    175:174:okio.Buffer copyTo(okio.Buffer,long,long) -> copyTo
    54:54:okio.BufferedSink emitCompleteSegments() -> emitCompleteSegments
    1752:1776:boolean equals(java.lang.Object) -> equals
    105:105:boolean exhausted() -> exhausted
    302:313:byte getByte(long) -> getByte
    1784:1792:int hashCode() -> hashCode
    1405:1405:long indexOf(byte) -> indexOf
    1422:1419:long indexOf(byte,long,long) -> indexOf
    1473:1473:long indexOf(okio.ByteString) -> indexOf
    1477:1477:long indexOf(okio.ByteString,long) -> indexOf
    1532:1532:long indexOfElement(okio.ByteString) -> indexOfElement
    1544:1536:long indexOfElement(okio.ByteString,long) -> indexOfElement
    117:117:java.io.InputStream inputStream() -> inputStream
    75:75:java.io.OutputStream outputStream() -> outputStream
    1609:1609:boolean rangeEquals(long,okio.ByteString) -> rangeEquals
    1614:1622:boolean rangeEquals(long,okio.ByteString,int,int) -> rangeEquals
    1635:1646:boolean rangeEquals(okio.Segment,int,okio.ByteString,int,int) -> rangeEquals
    880:892:int read(byte[],int,int) -> read
    899:910:int read(java.nio.ByteBuffer) -> read
    1398:1396:long read(okio.Buffer,long) -> read
    675:677:long readAll(okio.Sink) -> readAll
    1853:1854:okio.Buffer$UnsafeCursor readAndWriteUnsafe(okio.Buffer$UnsafeCursor) -> readAndWriteUnsafe
    280:280:byte readByte() -> readByte
    849:851:byte[] readByteArray() -> readByteArray
    856:858:byte[] readByteArray(long) -> readByteArray
    540:540:okio.ByteString readByteString() -> readByteString
    544:544:okio.ByteString readByteString(long) -> readByteString
    426:426:long readDecimalLong() -> readDecimalLong
    667:669:void readFully(okio.Buffer,long) -> readFully
    872:874:void readFully(byte[]) -> readFully
    484:484:long readHexadecimalUnsignedLong() -> readHexadecimalUnsignedLong
    348:348:int readInt() -> readInt
    418:418:int readIntLe() -> readIntLe
    380:380:long readLong() -> readLong
    319:319:short readShort() -> readShort
    414:414:short readShortLe() -> readShortLe
    696:698:java.lang.String readString(java.nio.charset.Charset) -> readString
    703:704:java.lang.String readString(long,java.nio.charset.Charset) -> readString
    684:686:java.lang.String readUtf8() -> readUtf8
    691:691:java.lang.String readUtf8(long) -> readUtf8
    758:767:java.lang.String readUtf8Line(long) -> readUtf8Line
    739:739:java.lang.String readUtf8LineStrict() -> readUtf8LineStrict
    745:743:java.lang.String readUtf8LineStrict(long) -> readUtf8LineStrict
    113:113:boolean request(long) -> request
    109:109:void require(long) -> require
    67:67:long size() -> size
    931:931:void skip(long) -> skip
    1820:1821:okio.ByteString snapshot() -> snapshot
    1830:1831:okio.ByteString snapshot(int) -> snapshot
    1668:1668:okio.Timeout timeout() -> timeout
    1801:1801:java.lang.String toString() -> toString
    1292:1290:okio.Segment writableSegment(int) -> writableSegment
    54:54:okio.BufferedSink write(okio.ByteString) -> write
    54:54:okio.BufferedSink write(byte[]) -> write
    54:54:okio.BufferedSink write(byte[],int,int) -> write
    948:947:okio.Buffer write(okio.ByteString) -> write
    1091:1090:okio.Buffer write(byte[]) -> write
    1096:1095:okio.Buffer write(byte[],int,int) -> write
    1116:1114:int write(java.nio.ByteBuffer) -> write
    1357:1355:void write(okio.Buffer,long) -> write
    1135:1133:long writeAll(okio.Source) -> writeAll
    54:54:okio.BufferedSink writeByte(int) -> writeByte
    1151:1153:okio.Buffer writeByte(int) -> writeByte
    54:54:okio.BufferedSink writeDecimalLong(long) -> writeDecimalLong
    1213:1262:okio.Buffer writeDecimalLong(long) -> writeDecimalLong
    54:54:okio.BufferedSink writeHexadecimalUnsignedLong(long) -> writeHexadecimalUnsignedLong
    1269:1281:okio.Buffer writeHexadecimalUnsignedLong(long) -> writeHexadecimalUnsignedLong
    54:54:okio.BufferedSink writeInt(int) -> writeInt
    1173:1181:okio.Buffer writeInt(int) -> writeInt
    54:54:okio.BufferedSink writeIntLe(int) -> writeIntLe
    1186:1186:okio.Buffer writeIntLe(int) -> writeIntLe
    1190:1202:okio.Buffer writeLong(long) -> writeLong
    54:54:okio.BufferedSink writeShort(int) -> writeShort
    1158:1164:okio.Buffer writeShort(int) -> writeShort
    1069:1069:okio.Buffer writeString(java.lang.String,java.nio.charset.Charset) -> writeString
    1079:1074:okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset) -> writeString
    54:54:okio.BufferedSink writeUtf8(java.lang.String) -> writeUtf8
    953:953:okio.Buffer writeUtf8(java.lang.String) -> writeUtf8
    962:957:okio.Buffer writeUtf8(java.lang.String,int,int) -> writeUtf8
    1035:1062:okio.Buffer writeUtf8CodePoint(int) -> writeUtf8CodePoint
okio.Buffer$1 -> okio.Buffer$1:
    75:75:void <init>(okio.Buffer) -> <init>
    91:91:java.lang.String toString() -> toString
    77:77:void write(int) -> write
    81:81:void write(byte[],int,int) -> write
okio.Buffer$2 -> okio.Buffer$2:
    117:117:void <init>(okio.Buffer) -> <init>
    128:128:int available() -> available
    119:119:int read() -> read
    124:124:int read(byte[],int,int) -> read
    135:135:java.lang.String toString() -> toString
okio.Buffer$UnsafeCursor -> okio.Buffer$UnsafeCursor:
    2062:2070:void <init>() -> <init>
    2290:2291:void close() -> close
    2078:2078:int next() -> next
    2089:2091:int seek(long) -> seek
okio.ByteString -> okio.ByteString:
    53:58:void <clinit>() -> <clinit>
    64:65:void <init>(byte[]) -> <init>
    131:131:java.lang.String base64() -> base64
    513:524:int codePointIndexToCharIndex(java.lang.String,int) -> codePointIndexToCharIndex
    52:52:int compareTo(java.lang.Object) -> compareTo
    473:477:int compareTo(okio.ByteString) -> compareTo
    203:202:okio.ByteString decodeBase64(java.lang.String) -> decodeBase64
    221:220:okio.ByteString decodeHex(java.lang.String) -> decodeHex
    236:236:int decodeHexDigit(char) -> decodeHexDigit
    156:158:okio.ByteString digest(java.lang.String) -> digest
    109:107:okio.ByteString encodeString(java.lang.String,java.nio.charset.Charset) -> encodeString
    100:99:okio.ByteString encodeUtf8(java.lang.String) -> encodeUtf8
    462:464:boolean equals(java.lang.Object) -> equals
    340:340:byte getByte(int) -> getByte
    468:469:int hashCode() -> hashCode
    209:215:java.lang.String hex() -> hex
    359:359:byte[] internalArray() -> internalArray
    136:136:okio.ByteString md5() -> md5
    73:72:okio.ByteString of(byte[]) -> of
    386:386:boolean rangeEquals(int,okio.ByteString,int,int) -> rangeEquals
    395:397:boolean rangeEquals(int,byte[],int,int) -> rangeEquals
    141:141:okio.ByteString sha1() -> sha1
    146:146:okio.ByteString sha256() -> sha256
    347:347:int size() -> size
    401:401:boolean startsWith(okio.ByteString) -> startsWith
    322:321:okio.ByteString substring(int,int) -> substring
    264:277:okio.ByteString toAsciiLowercase() -> toAsciiLowercase
    354:354:byte[] toByteArray() -> toByteArray
    490:509:java.lang.String toString() -> toString
    114:116:java.lang.String utf8() -> utf8
    377:377:void write(okio.Buffer) -> write
okio.DeflaterSink -> okio.DeflaterSink:
    122:146:void close() -> close
    84:104:void deflate(boolean) -> deflate
    117:118:void finishDeflate() -> finishDeflate
    112:113:void flush() -> flush
    150:150:okio.Timeout timeout() -> timeout
    154:154:java.lang.String toString() -> toString
    60:75:void write(okio.Buffer,long) -> write
okio.ForwardingSink -> okio.ForwardingSink:
    24:25:void <init>(okio.Sink) -> <init>
    47:47:void close() -> close
    31:31:okio.Sink delegate() -> delegate
    39:39:void flush() -> flush
    43:43:okio.Timeout timeout() -> timeout
    51:51:java.lang.String toString() -> toString
    35:35:void write(okio.Buffer,long) -> write
okio.ForwardingSource -> okio.ForwardingSource:
    24:25:void <init>(okio.Source) -> <init>
    43:43:void close() -> close
    31:31:okio.Source delegate() -> delegate
    35:35:long read(okio.Buffer,long) -> read
    39:39:okio.Timeout timeout() -> timeout
    47:47:java.lang.String toString() -> toString
okio.ForwardingTimeout -> okio.ForwardingTimeout:
    25:26:void <init>(okio.Timeout) -> <init>
    66:66:okio.Timeout clearDeadline() -> clearDeadline
    62:62:okio.Timeout clearTimeout() -> clearTimeout
    54:54:long deadlineNanoTime() -> deadlineNanoTime
    58:58:okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    32:32:okio.Timeout delegate() -> delegate
    50:50:boolean hasDeadline() -> hasDeadline
    37:36:okio.ForwardingTimeout setDelegate(okio.Timeout) -> setDelegate
    70:70:void throwIfReached() -> throwIfReached
    42:42:okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
    46:46:long timeoutNanos() -> timeoutNanos
okio.GzipSink -> okio.GzipSink:
    82:110:void close() -> close
    74:74:void flush() -> flush
    78:78:okio.Timeout timeout() -> timeout
    139:139:void updateCrc(okio.Buffer,long) -> updateCrc
    69:66:void write(okio.Buffer,long) -> write
    133:134:void writeFooter() -> writeFooter
okio.GzipSource -> okio.GzipSource:
    60:61:void <init>(okio.Source) -> <init>
    205:205:void checkEqual(java.lang.String,int,int) -> checkEqual
    182:182:void close() -> close
    114:164:void consumeHeader() -> consumeHeader
    173:174:void consumeTrailer() -> consumeTrailer
    72:68:long read(okio.Buffer,long) -> read
    178:178:okio.Timeout timeout() -> timeout
    188:194:void updateCrc(okio.Buffer,long,long) -> updateCrc
okio.HashingSink -> okio.HashingSink:
    107:122:void write(okio.Buffer,long) -> write
okio.HashingSource -> okio.HashingSource:
    94:117:long read(okio.Buffer,long) -> read
okio.InflaterSource -> okio.InflaterSource:
    48:49:void <init>(okio.BufferedSource,java.util.zip.Inflater) -> <init>
    124:127:void close() -> close
    58:57:long read(okio.Buffer,long) -> read
    96:99:boolean refill() -> refill
    113:116:void releaseInflatedBytes() -> releaseInflatedBytes
    120:120:okio.Timeout timeout() -> timeout
okio.Okio -> okio.Okio:
    40:40:void <clinit>() -> <clinit>
    42:42:void <init>() -> <init>
    187:186:okio.Sink appendingSink(java.io.File) -> appendingSink
    199:199:okio.Sink blackhole() -> blackhole
    51:51:okio.BufferedSource buffer(okio.Source) -> buffer
    60:60:okio.BufferedSink buffer(okio.Sink) -> buffer
    262:263:boolean isAndroidGetsocknameError(java.lang.AssertionError) -> isAndroidGetsocknameError
    65:65:okio.Sink sink(java.io.OutputStream) -> sink
    72:69:okio.Sink sink(java.io.OutputStream,okio.Timeout) -> sink
    117:116:okio.Sink sink(java.net.Socket) -> sink
    181:180:okio.Sink sink(java.io.File) -> sink
    125:125:okio.Source source(java.io.InputStream) -> source
    132:129:okio.Source source(java.io.InputStream,okio.Timeout) -> source
    168:167:okio.Source source(java.io.File) -> source
    223:222:okio.Source source(java.net.Socket) -> source
    230:230:okio.AsyncTimeout timeout(java.net.Socket) -> timeout
okio.Okio$1 -> okio.Okio$1:
    72:72:void <init>(okio.Timeout,java.io.OutputStream) -> <init>
    97:97:void close() -> close
    93:93:void flush() -> flush
    101:101:okio.Timeout timeout() -> timeout
    105:105:java.lang.String toString() -> toString
    74:87:void write(okio.Buffer,long) -> write
okio.Okio$2 -> okio.Okio$2:
    132:132:void <init>(okio.Timeout,java.io.InputStream) -> <init>
    152:152:void close() -> close
    137:134:long read(okio.Buffer,long) -> read
    156:156:okio.Timeout timeout() -> timeout
    160:160:java.lang.String toString() -> toString
okio.Okio$3 -> okio.Okio$3:
    199:199:void <init>() -> <init>
    208:208:okio.Timeout timeout() -> timeout
    201:201:void write(okio.Buffer,long) -> write
okio.Okio$4 -> okio.Okio$4:
    230:230:void <init>(java.net.Socket) -> <init>
    232:234:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    241:243:void timedOut() -> timedOut
okio.Options -> okio.Options:
    26:26:java.lang.Object get(int) -> get
    241:241:okio.ByteString get(int) -> get
    245:245:int size() -> size
okio.Pipe -> okio.Pipe:
    44:46:void <init>(long) -> <init>
    56:56:okio.Sink sink() -> sink
    52:52:okio.Source source() -> source
okio.Pipe$PipeSink -> okio.Pipe$PipeSink:
    59:60:void <init>(okio.Pipe) -> <init>
    91:96:void close() -> close
    84:87:void flush() -> flush
    100:100:okio.Timeout timeout() -> timeout
    63:80:void write(okio.Buffer,long) -> write
okio.Pipe$PipeSource -> okio.Pipe$PipeSource:
    104:105:void <init>(okio.Pipe) -> <init>
    123:126:void close() -> close
    108:119:long read(okio.Buffer,long) -> read
    130:130:okio.Timeout timeout() -> timeout
okio.RealBufferedSink -> okio.RealBufferedSink:
    29:30:void <init>(okio.Sink) -> <init>
    35:35:okio.Buffer buffer() -> buffer
    234:254:void close() -> close
    184:184:okio.BufferedSink emit() -> emit
    177:177:okio.BufferedSink emitCompleteSegments() -> emitCompleteSegments
    222:222:void flush() -> flush
    230:230:boolean isOpen() -> isOpen
    191:191:java.io.OutputStream outputStream() -> outputStream
    258:258:okio.Timeout timeout() -> timeout
    262:262:java.lang.String toString() -> toString
    40:40:void write(okio.Buffer,long) -> write
    46:46:okio.BufferedSink write(okio.ByteString) -> write
    84:84:okio.BufferedSink write(byte[]) -> write
    90:90:okio.BufferedSink write(byte[],int,int) -> write
    96:96:int write(java.nio.ByteBuffer) -> write
    105:103:long writeAll(okio.Source) -> writeAll
    123:123:okio.BufferedSink writeByte(int) -> writeByte
    165:165:okio.BufferedSink writeDecimalLong(long) -> writeDecimalLong
    171:171:okio.BufferedSink writeHexadecimalUnsignedLong(long) -> writeHexadecimalUnsignedLong
    141:141:okio.BufferedSink writeInt(int) -> writeInt
    147:147:okio.BufferedSink writeIntLe(int) -> writeIntLe
    129:129:okio.BufferedSink writeShort(int) -> writeShort
    52:52:okio.BufferedSink writeUtf8(java.lang.String) -> writeUtf8
okio.RealBufferedSink$1 -> okio.RealBufferedSink$1:
    191:191:void <init>(okio.RealBufferedSink) -> <init>
    212:212:void close() -> close
    206:207:void flush() -> flush
    216:216:java.lang.String toString() -> toString
    193:193:void write(int) -> write
    199:199:void write(byte[],int,int) -> write
okio.RealBufferedSource -> okio.RealBufferedSource:
    32:33:void <init>(okio.Source) -> <init>
    38:38:okio.Buffer buffer() -> buffer
    466:469:void close() -> close
    56:56:boolean exhausted() -> exhausted
    333:333:long indexOf(byte) -> indexOf
    341:341:long indexOf(byte,long,long) -> indexOf
    424:424:java.io.InputStream inputStream() -> inputStream
    462:462:boolean isOpen() -> isOpen
    401:401:boolean rangeEquals(long,okio.ByteString) -> rangeEquals
    407:407:boolean rangeEquals(long,okio.ByteString,int,int) -> rangeEquals
    44:42:long read(okio.Buffer,long) -> read
    149:154:int read(java.nio.ByteBuffer) -> read
    172:169:long readAll(okio.Sink) -> readAll
    74:75:byte readByte() -> readByte
    107:108:byte[] readByteArray() -> readByteArray
    112:113:byte[] readByteArray(long) -> readByteArray
    84:85:okio.ByteString readByteString(long) -> readByteString
    285:299:long readDecimalLong() -> readDecimalLong
    122:131:void readFully(byte[]) -> readFully
    159:163:void readFully(okio.Buffer,long) -> readFully
    303:317:long readHexadecimalUnsignedLong() -> readHexadecimalUnsignedLong
    265:266:int readInt() -> readInt
    270:271:int readIntLe() -> readIntLe
    275:276:long readLong() -> readLong
    255:256:short readShort() -> readShort
    260:261:short readShortLe() -> readShortLe
    199:197:java.lang.String readString(java.nio.charset.Charset) -> readString
    187:188:java.lang.String readUtf8() -> readUtf8
    220:220:java.lang.String readUtf8LineStrict() -> readUtf8LineStrict
    226:224:java.lang.String readUtf8LineStrict(long) -> readUtf8LineStrict
    66:65:boolean request(long) -> request
    61:61:void require(long) -> require
    321:321:void skip(long) -> skip
    473:473:okio.Timeout timeout() -> timeout
    477:477:java.lang.String toString() -> toString
okio.RealBufferedSource$1 -> okio.RealBufferedSource$1:
    424:424:void <init>(okio.RealBufferedSource) -> <init>
    447:447:int available() -> available
    452:452:void close() -> close
    426:426:int read() -> read
    435:435:int read(byte[],int,int) -> read
    456:456:java.lang.String toString() -> toString
okio.Segment -> okio.Segment:
    62:65:void <init>() -> <init>
    68:73:void <init>(byte[],int,int,boolean,boolean) -> <init>
    151:151:void compact() -> compact
    96:100:okio.Segment pop() -> pop
    109:112:okio.Segment push(okio.Segment) -> push
    82:83:okio.Segment sharedCopy() -> sharedCopy
    125:125:okio.Segment split(int) -> split
    88:88:okio.Segment unsharedCopy() -> unsharedCopy
    163:163:void writeTo(okio.Segment,int) -> writeTo
okio.SegmentPool -> okio.SegmentPool:
    35:35:void <init>() -> <init>
    52:52:void recycle(okio.Segment) -> recycle
    39:47:okio.Segment take() -> take
okio.SegmentedByteString -> okio.SegmentedByteString:
    57:76:void <init>(okio.Buffer,int) -> <init>
    98:98:java.lang.String base64() -> base64
    266:268:boolean equals(java.lang.Object) -> equals
    146:150:byte getByte(int) -> getByte
    272:288:int hashCode() -> hashCode
    102:102:java.lang.String hex() -> hex
    261:261:byte[] internalArray() -> internalArray
    114:114:okio.ByteString md5() -> md5
    211:219:boolean rangeEquals(int,okio.ByteString,int,int) -> rangeEquals
    228:239:boolean rangeEquals(int,byte[],int,int) -> rangeEquals
    156:156:int segment(int) -> segment
    118:118:okio.ByteString sha1() -> sha1
    122:122:okio.ByteString sha256() -> sha256
    161:161:int size() -> size
    142:142:okio.ByteString substring(int,int) -> substring
    106:106:okio.ByteString toAsciiLowercase() -> toAsciiLowercase
    165:170:byte[] toByteArray() -> toByteArray
    257:257:okio.ByteString toByteString() -> toByteString
    292:292:java.lang.String toString() -> toString
    90:90:java.lang.String utf8() -> utf8
    194:206:void write(okio.Buffer) -> write
okio.Timeout -> okio.Timeout:
    48:48:void <clinit>() -> <clinit>
    69:69:void <init>() -> <init>
    134:134:okio.Timeout clearDeadline() -> clearDeadline
    128:128:okio.Timeout clearTimeout() -> clearTimeout
    123:121:okio.Timeout deadline(long,java.util.concurrent.TimeUnit) -> deadline
    104:104:long deadlineNanoTime() -> deadlineNanoTime
    114:115:okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    94:94:boolean hasDeadline() -> hasDeadline
    144:146:void throwIfReached() -> throwIfReached
    83:81:okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
    89:89:long timeoutNanos() -> timeoutNanos
    192:226:void waitUntilNotified(java.lang.Object) -> waitUntilNotified
okio.Timeout$1 -> okio.Timeout$1:
    48:48:void <init>() -> <init>
okio.Utf8 -> okio.Utf8:
    66:66:void <init>() -> <init>
okio.Util -> okio.Util:
    22:22:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    76:76:boolean arrayRangeEquals(byte[],int,byte[],int,int) -> arrayRangeEquals
    29:30:void checkOffsetAndCount(long,long,long) -> checkOffsetAndCount
    65:65:void sneakyRethrow(java.lang.Throwable) -> sneakyRethrow
    70:70:void sneakyThrow2(java.lang.Throwable) -> sneakyThrow2
